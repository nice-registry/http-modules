{"name":"medunham97123-superagent","version":"2.3.2","description":"elegant & feature rich browser / node HTTP with a fluent API","scripts":{"prepublish":"make all","test":"make test"},"keywords":["http","ajax","request","agent"],"license":"MIT","repository":"https://github.com/medunham/superagent","dependencies":{"qs":"^6.1.0","formidable":"^1.0.17","mime":"^1.3.4","component-emitter":"^1.2.0","methods":"^1.1.1","cookiejar":"^2.0.6","debug":"^2.2.0","extend":"^3.0.0","form-data":"1.0.0-rc4","readable-stream":"^2.0.5"},"devDependencies":{"Base64":"^0.3.0","basic-auth-connect":"^1.0.0","better-assert":"^1.0.1","body-parser":"^1.15.0","browserify":"^13.0.0","cookie-parser":"^1.4.1","express":"^4.13.4","express-session":"^1.13.0","marked":"^0.3.5","mocha":"^2.4.5","should":"^8.2.2","should-http":"^0.0.4","zuul":"^3.10.1"},"browser":{"./lib/node/index.js":"./lib/client.js","emitter":"component-emitter","./test/support/server.js":"./test/support/blank.js"},"component":{"scripts":{"superagent":"lib/client.js"}},"main":"./lib/node/index.js","engines":{"node":">= 0.10"},"gitHead":"1eaad9c2d26f60b949a059e15011d946d6299861","homepage":"https://github.com/medunham/superagent#readme","readme":"# SuperAgent\n\nSuperAgent is a small progressive __client-side__ HTTP request library, and __Node.js__ module with the same API, sporting many high-level HTTP client features. View the [docs](http://visionmedia.github.io/superagent/).\n\n![super agent](http://f.cl.ly/items/3d282n3A0h0Z0K2w0q2a/Screenshot.png)\n\n## Installation\n\nnode:\n\n```\n$ npm install superagent\n```\n\ncomponent:\n\n```\n$ component install visionmedia/superagent\n```\n\nWorks with [browserify](https://github.com/substack/node-browserify) and should work with [webpack](https://github.com/visionmedia/superagent/wiki/SuperAgent-for-Webpack)\n\n```js\nrequest\n  .post('/api/pet')\n  .send({ name: 'Manny', species: 'cat' })\n  .set('X-API-Key', 'foobar')\n  .set('Accept', 'application/json')\n  .end(function(err, res){\n    // Calling the end function will send the request\n  });\n```\n\n## Supported browsers\n\nTested browsers:\n\n- Latest Android\n- Latest Firefox\n- Latest Chrome\n- IE10 through latest. IE9 with polyfills.\n- Latest iPhone\n- Latest Safari\n\nEven though IE9 is supported, a polyfill for `window.FormData` is required for `.field()`, and `window.btoa` is needed to use basic auth.\n\n# Plugins\n\nSuperAgent is easily extended via plugins.\n\n```js\nvar nocache = require('superagent-no-cache');\nvar request = require('superagent');\nvar prefix = require('superagent-prefix')('/static');\n\nrequest\n.get('/some-url')\n.use(prefix) // Prefixes *only* this request\n.use(nocache) // Prevents caching of *only* this request\n.end(function(err, res){\n    // Do something\n});\n```\n\nExisting plugins:\n * [superagent-no-cache](https://github.com/johntron/superagent-no-cache) - prevents caching by including Cache-Control header\n * [superagent-prefix](https://github.com/johntron/superagent-prefix) - prefixes absolute URLs (useful in test environment)\n * [superagent-suffix](https://github.com/timneutkens1/superagent-suffix) - suffix URLs with a given path\n * [superagent-mock](https://github.com/M6Web/superagent-mock) - simulate HTTP calls by returning data fixtures based on the requested URL\n * [superagent-mocker](https://github.com/shuvalov-anton/superagent-mocker) — simulate REST API\n * [superagent-cache](https://github.com/jpodwys/superagent-cache) - SuperAgent with built-in, flexible caching (compatible with SuperAgent `1.x`)\n * [superagent-jsonapify](https://github.com/alex94puchades/superagent-jsonapify) - A lightweight [json-api](http://jsonapi.org/format/) client addon for superagent\n * [superagent-serializer](https://github.com/zzarcon/superagent-serializer) - Converts server payload into different cases\n * [superagent-use](https://github.com/koenpunt/superagent-use) - A client addon to apply plugins to all requests.\n * [superagent-httpbackend](https://www.npmjs.com/package/superagent-httpbackend) - stub out requests using AngularJS' $httpBackend syntax\n * [superagent-throttle](https://github.com/leviwheatcroft/superagent-throttle) - queues and intelligently throttles requests\n * [superagent-charset](https://github.com/magicdawn/superagent-charset) - add charset support for node's SuperAgent\n\nPlease prefix your plugin with `superagent-*` so that it can easily be found by others.\n\nFor SuperAgent extensions such as couchdb and oauth visit the [wiki](https://github.com/visionmedia/superagent/wiki).\n\n## Running node tests\n\nInstall dependencies:\n\n```shell\n$ npm install\n```\nRun em!\n\n```shell\n$ make test\n```\n\n## Running browser tests\n\nInstall dependencies:\n\n```shell\n$ npm install\n```\n\nStart the test runner:\n\n```shell\n$ make test-browser-local\n```\n\nVisit `http://localhost:4000/__zuul` in your browser.\n\nEdit tests and refresh your browser. You do not have to restart the test runner.\n\n\n## Packaging Notes for Developers\n\n**npm (for node)** is configured via the `package.json` file and the `.npmignore` file. Key metadata in the `package.json` file is the `version` field which should be changed according to semantic versioning and have a 1-1 correspondence with git tags. So for example, if you were to `git show v1.5.0:package.json | grep version`, you should see `\"version\": \"1.5.0\",` and this should hold true for every release. This can be handled via the `npm version` command. Be aware that when publishing, npm will presume the version being published should also be tagged in npm as `latest`, which is OK for normal incremental releases. For betas and minor/patch releases to older versions, be sure to include `--tag` appropriately to avoid an older release getting tagged as `latest`.\n\n**npm (for browser standalone)** When we publish versions to npm, we run `make superagent.js` which generates the standalone `superagent.js` file via `browserify`, and this file is included in the package published to npm (but this file is never checked into the git repository). If users want to install via npm but serve a single `.js` file directly to the browser, the `node_modules/superagent/superagent.js` is a standalone browserified file ready to go for that purpose. It is not minified.\n\n**npm (for browserify)** is handled via the `package.json` `browser` field which allows users to install SuperAgent via npm, reference it from their browser code with `require('superagent')`, and then build their own application bundle via `browserify`, which will use `lib/client.js` as the SuperAgent entrypoint.\n\n**bower** is configured via the `bower.json` file. Bower installs files directly from git/github without any transformation.\n\n**component** is configured via the `component.json` file.\n\n## License\n\nMIT\n","versions":[{"number":"2.3.0","date":"2016-09-23T16:10:53.429Z"},{"number":"2.3.1","date":"2016-09-23T17:37:52.490Z"},{"number":"2.3.2","date":"2016-09-23T17:50:56.974Z"}],"created":"2016-09-23T16:10:53.429Z","modified":"2016-09-23T17:50:56.974Z","lastPublisher":{"name":"medunham97123","email":"medunham97123@gmail.com"},"owners":[{"name":"medunham97123","email":"medunham97123@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"medunham97123-superagent","_nodeVersion":"4.2.6","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/medunham97123-superagent-2.3.2.tgz_1474653054662_0.25866288249380887"},"_npmUser":{"name":"medunham97123","email":"medunham97123@gmail.com"},"_npmVersion":"3.10.6","_rev":"1-22a696c66e17d18ae7a923d4b3b8fc26","_shasum":"f9912c03537b6407b881bdac222dd4ba9d32d929","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"bugs":{"url":"https://github.com/medunham/superagent/issues"},"contributors":[{"name":"Kornel Lesiński","email":"kornel@geekhood.net"},{"name":"Peter Lyons","email":"pete@peterlyons.com"},{"name":"Hunter Loftis","email":"hunter@hunterloftis.com"}],"directories":{},"dist-tags":{"latest":"2.3.2"},"dist":{"shasum":"f9912c03537b6407b881bdac222dd4ba9d32d929","tarball":"http://registry.npmjs.org/medunham97123-superagent/-/medunham97123-superagent-2.3.2.tgz"},"maintainers":[{"name":"medunham97123","email":"medunham97123@gmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2016-09-23T17:50:56.974Z","created":"2016-09-23T16:10:53.429Z","2.3.0":"2016-09-23T16:10:53.429Z","2.3.1":"2016-09-23T17:37:52.490Z","2.3.2":"2016-09-23T17:50:56.974Z"}}}