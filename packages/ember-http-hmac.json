{"name":"ember-http-hmac","version":"1.1.0","description":"Provides an Ember wrapper around Acquia's http-hmac-javascript library.","scripts":{"build":"ember build","start":"ember server","test":"ember try:each"},"repository":"https://github.com/acquia/ember-http-hmac","engines":{"node":">= 4"},"homepage":"https://github.com/acquia/ember-http-hmac#readme","license":"MIT","devDependencies":{"broccoli-asset-rev":"^2.4.5","ember-cli":"2.12.1","ember-cli-dependency-checker":"^1.3.0","ember-cli-eslint":"^3.0.0","ember-cli-htmlbars":"^1.1.1","ember-cli-htmlbars-inline-precompile":"^0.3.6","ember-cli-inject-live-reload":"^1.4.1","ember-cli-pretender":"1.0.1","ember-cli-qunit":"^3.1.0","ember-cli-release":"^0.2.9","ember-cli-shims":"^1.0.2","ember-cli-sri":"^2.1.0","ember-cli-uglify":"^1.2.0","ember-disable-prototype-extensions":"^1.1.0","ember-export-application-global":"^1.0.5","ember-load-initializers":"^0.6.0","ember-resolver":"^2.0.3","ember-source":"~2.12.0","eslint-plugin-ember-suave":"^1.0.0","loader.js":"^4.2.3"},"keywords":["ember-addon","http-hmac","acquia"],"dependencies":{"ember-cli-babel":"^5.1.7","crypto-js":"^3.1.6","ember-ajax":"^2.5.4","http-hmac-javascript":"0.2.4","broccoli-funnel":"^1.2.0","broccoli-merge-trees":"^2.0.0"},"ember-addon":{"configPath":"tests/dummy/config"},"gitHead":"8dd0e5286c05d431567e3ee8284d8256cbb62856","versions":[{"number":"1.0.0","date":"2017-04-24T16:18:48.661Z"},{"number":"1.1.0","date":"2017-04-28T12:59:10.600Z"}],"readme":"# Ember-http-hmac [![Build Status](https://travis-ci.com/acquia/ember-http-hmac.svg?token=xpbhY9xz7Z9aqH5aUfgP&branch=master)](https://travis-ci.com/acquia/ember-http-hmac)\n\nThis addon provides an Ember integration for working with version 2.0 of the [HTTP HMAC Specification](https://github.com/acquia/http-hmac-spec/tree/2.0).  It wraps the [http-hmac-javascript library](https://github.com/acquia/http-hmac-javascript) and exposes signing capabilites both as a mixin for [ember-data](https://github.com/emberjs/data) adapters and for signing individual [ember-ajax](https://github.com/ember-cli/ember-ajax) requests.\n\n## Configuration\nIn order to generate the authorization headers the http-hmac-javascript library needs to know the realm, public key, and secret key to use.  These values can be set either in the `config/environment.js` file or directly on the request-signer service.  Optionally, you can configure a list of headers that need to be included in the signature.  This is an array of header names that will be included if present in the request.\n\n### Setting configuration in the environment\nThe values can be set in the environment configuration by adding a section to your variables:\n\n```\nmodule.exports = function(environment) {\n  'ember-http-hmac': {\n    realm: 'your-realm',\n    publicKey: 'enter-your-public-key-here',\n    secretKey: 'enter-your-secret-key-here',\n    signedHeaders: ['header-name-1', 'header-name-2']\n  }\n};\n```\n\n### Setting configuration directly on the service\nThe same variables exist on the `request-signer` servive provided by ember-http-hmac.  Here is an example of setting the values within a component:\n\n```\nexport default Ember.Component.extend({\n  requestSigner: Ember.inject.service();\n\n  init() {\n    this._super(...arguments);\n    let signer = this.get('requestSigner');\n    signer.set('realm', 'your-realm');\n    signer.set('publicKey', 'enter-your-public-key-here');\n    signer.set('secretKey', 'enter-your-secret-key-here');\n    signer.set('signedHeader', ['header-name-1', 'header-name-2']);\n  }\n});\n```\n## Using the ember-data adapter mixin\nThis addon provides a mixin that can be used on any ember-data adapter.  Adding this mixin will automatically sign all requests made through the adapter using the configured realm and keys.  Using this mixin in your application adapter will add authentication to all ember-data requests by default.\n\n```\nimport DS from 'ember-data';\nimport HmacAdapterMixin from 'ember-http-hmac/mixins/hmac-adapter-mixin';\n\nexport default DS.RESTAdapter.extend(HmacAdapterMixin);\n\n```\n\n## Using the ember-ajax service\nThis addon also provides a service that provides automatic signing to individual AJAX requests.  The service extends the `ember-ajax` Ajax service.  To use, include the `signed-ajax` service and then use as you would the standard `ajax` service.  For example:\n\n```\nimport Ember from 'ember';\n\nexport default Ember.Route.extend({\n  signedAjax: Ember.inject.service(),\n\n  model: {\n    return this.get('signedAjax').request('/myendpoint');\n  }\n});\n```\n\n## Using the request-signer service directly\nThe basic signing functionality used by both the `signed-ajax` service and the `hmac-adapter-mixin` is available directly as the `request-signer` service to use as needed.\n\n## Installation\n\n### As an addon\nThis addon can be installed via standard ember addon installation procedures:\n* `ember install ember-http-hmac`\n\n# To Dos\n* Create a test helper to register support\n* Add configuration to disable signed headers\n\n# For Development\n\n## Installation\n\n* `git clone` this repository\n* `npm install`\n* `bower install`\n\n## Running\n\n* `ember serve`\n* Visit your app at [http://localhost:4200](http://localhost:4200).\n\n## Running Tests\n\n* `npm test` (Runs `ember try:each` to test your addon against multiple Ember versions)\n* `ember test`\n* `ember test --server`\n\n## Building\n\n* `ember build`\n\nFor more information on using ember-cli, visit [https://ember-cli.com/](https://ember-cli.com/).\n","created":"2017-04-24T16:18:48.661Z","modified":"2017-04-28T12:59:10.600Z","lastPublisher":{"name":"eshtadc","email":"lisa.haas.backer@gmail.com"},"owners":[{"name":"acquia-mpcm","email":"matthew.morley+npmjs@acquia.com"},{"name":"daveaingram","email":"dave.a.ingram@gmail.com"},{"name":"eshtadc","email":"lisa.haas.backer@gmail.com"},{"name":"ynx","email":"yuanxie@live.ca"}],"other":{"_attachments":{},"_from":".","_id":"ember-http-hmac","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ember-http-hmac-1.1.0.tgz_1493384349835_0.15511663863435388"},"_npmUser":{"name":"eshtadc","email":"lisa.haas.backer@gmail.com"},"_npmVersion":"3.10.8","_rev":"3-c6dfe9ad35de18d478fbcde7579ad01c","_shasum":"3a5d2249551ea57dc6f69c82bcfecb4a9fa1b37d","author":{"name":"Acquia Engineering","email":"engineering@acquia.com"},"bugs":{"url":"https://github.com/acquia/ember-http-hmac/issues"},"directories":{"doc":"doc","test":"tests"},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"3a5d2249551ea57dc6f69c82bcfecb4a9fa1b37d","tarball":"https://registry.npmjs.org/ember-http-hmac/-/ember-http-hmac-1.1.0.tgz"},"maintainers":[{"name":"acquia-mpcm","email":"matthew.morley+npmjs@acquia.com"},{"name":"daveaingram","email":"dave.a.ingram@gmail.com"},{"name":"eshtadc","email":"lisa.haas.backer@gmail.com"},{"name":"ynx","email":"yuanxie@live.ca"}],"readmeFilename":"README.md","time":{"modified":"2017-04-28T12:59:10.600Z","created":"2017-04-24T16:18:48.661Z","1.0.0":"2017-04-24T16:18:48.661Z","1.1.0":"2017-04-28T12:59:10.600Z"}}}