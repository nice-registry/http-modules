{"name":"http-browserify-xdr","version":"1.4.1","description":"http module compatability for browserify","main":"index.js","browserify":"index.js","scripts":{"test":"tape test/*.js"},"dependencies":{"Base64":"~0.2.0","inherits":"~2.0.1"},"devDependencies":{"ecstatic":"~0.1.6","tape":"~2.3.2"},"repository":"https://github.com/substack/http-browserify","keywords":["http","browserify","compatible","meatless","browser"],"license":"MIT/X11","gitHead":"600fade9fa6c9ae64af150c02e593492859542b3","homepage":"https://github.com/substack/http-browserify","versions":[{"number":"1.4.1","date":"2014-07-08T08:00:34.168Z"}],"readme":"# http-browserify-xdr\n\nThe\n[http](http://nodejs.org/docs/v0.4.10/api/all.html#hTTP) module from browserify,\nbut for browsers that can only do cross-origin requests with XDomainRequest (IE8 & IE9).\n\nThe out-of-the-box [http-browserify] does not work for cross-origin requests with XDomainRequest, and [an open issue](https://github.com/substack/http-browserify/pull/3) has gone unresponded to for almost 3 years.\n\nUse this in your browserify project by adding the following to your package.json:\n```json\n\"browser\": {\n    \"http\": \"http-browserify-xdr\"\n}\n```\n\nNote: XDomainRequests [cannot send cookies](http://bit.ly/ie9nocors), so 'withCredentials' options will be ignored. The way to do cross-origin requests withCredentials in these browsers is, well, you can't. You have to open an iframe serving a src on the origin you want to request, then postMessage into it, have it make the request, then postMessage the response out. See [sockjs-client](https://github.com/sockjs/sockjs-client#supported-transports-by-browser-html-served-from-http-or-https) for a referenc eimplementation of that.\n\nThe following is the original http-browserify README because the API is the same.\n\n# example\n\n``` js\nvar http = require('http');\n\nhttp.get({ host: 'anotherorigin.com', path : '/beep' }, function (res) {\n    var div = document.getElementById('result');\n    div.innerHTML += 'GET /beep<br>';\n    \n    res.on('data', function (buf) {\n        div.innerHTML += buf;\n    });\n    \n    res.on('end', function () {\n        div.innerHTML += '<br>__END__';\n    });\n});\n```\n\n# http methods\n\nvar http = require('http');\n\n## var req = http.request(opts, cb)\n\nwhere `opts` are:\n\n* `opts.method='GET'` - http method verb\n* `opts.path` - path string, example: `'/foo/bar?baz=555'`\n* `opts.headers={}` - as an object mapping key names to string or Array values\n* `opts.host=window.location.host` - http host\n* `opts.port=window.location.port` - http port\n* `opts.responseType` - response type to set on the underlying xhr object\n\nThe callback will be called with the response object.\n\n## var req = http.get(options, cb)\n\nA shortcut for\n\n``` js\noptions.method = 'GET';\nvar req = http.request(options, cb);\nreq.end();\n```\n\n# request methods\n\n## req.setHeader(key, value)\n\nSet an http header.\n\n## req.getHeader(key)\n\nGet an http header.\n\n## req.removeHeader(key)\n\nRemove an http header.\n\n## req.write(data)\n\nWrite some data to the request body.\n\n## req.end(data)\n\nClose and send the request body, optionally with additional `data` to append.\n\n# response methods\n\n## res.getHeader(key)\n\nReturn an http header, if set. `key` is case-insensitive.\n\n# response attributes\n\n* res.statusCode, the numeric http response code\n* res.headers, an object with all lowercase keys\n\n# compatibility\n\nThis module has been tested and works with:\n\n* Internet Explorer 5.5, 6, 7, 8, 9\n* Firefox 3.5\n* Chrome 7.0\n* Opera 10.6\n* Safari 5.0\n\nMultipart streaming responses are buffered in all versions of Internet Explorer\nand are somewhat buffered in Opera. In all the other browsers you get a nice\nunbuffered stream of `\"data\"` events when you send down a content-type of\n`multipart/octet-stream` or similar.\n\n# protip\n\nYou can do:\n\n````javascript\nvar bundle = browserify({\n    require : { http : 'http-browserify-xdr' }\n});\n````\n\nin order to map \"http-browserify-xdr\" over `require('http')` in your browserified\nsource.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install http-browserify-xdr\n```\n\n# license\n\nMIT\n","created":"2014-07-08T08:00:34.168Z","modified":"2014-07-08T08:00:34.168Z","lastPublisher":{"name":"gobengo","email":"bengoering@gmail.com"},"owners":[{"name":"gobengo","email":"bengoering@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-browserify-xdr","_npmUser":{"name":"gobengo","email":"bengoering@gmail.com"},"_npmVersion":"1.4.14","_rev":"1-a81df1b595e18e2115d8f6d48255ef97","_shasum":"289c3ccb740b369535c957a99f09b20551c4a354","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/http-browserify/issues"},"directories":{"lib":".","example":"example","test":"test"},"dist-tags":{"latest":"1.4.1"},"dist":{"shasum":"289c3ccb740b369535c957a99f09b20551c4a354","tarball":"http://registry.npmjs.org/http-browserify-xdr/-/http-browserify-xdr-1.4.1.tgz"},"maintainers":[{"name":"gobengo","email":"bengoering@gmail.com"}],"readmeFilename":"readme.markdown","time":{"modified":"2014-07-08T08:00:34.168Z","created":"2014-07-08T08:00:34.168Z","1.4.1":"2014-07-08T08:00:34.168Z"}}}