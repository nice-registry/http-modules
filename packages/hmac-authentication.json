{"name":"hmac-authentication","version":"1.0.0","description":"Signs and validates HTTP requests based on a shared-secret HMAC signature","main":"index.js","scripts":{"test":"gulp test"},"repository":"https://github.com/18f/hmac-authentication-npm","keywords":["HMAC","authentication"],"license":"CC0-1.0","homepage":"https://github.com/18f/hmac-authentication-npm#readme","devDependencies":{"chai":"^3.3.0","gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-mocha":"^2.1.3","jshint":"^2.8.0","mocha":"^2.3.3","node-mocks-http":"^1.4.4"},"dependencies":{"buffer-equal-constant-time":"^1.0.1"},"gitHead":"cb720ff85d1dd73d640e8b790fef5119e00f217a","versions":[{"number":"0.0.0","date":"2015-10-02T14:19:24.389Z"},{"number":"0.0.1","date":"2015-10-02T14:41:50.879Z"},{"number":"0.0.2","date":"2015-10-02T14:43:05.413Z"},{"number":"1.0.0","date":"2015-10-13T17:05:06.460Z"}],"readme":"# hmac-authentication npm\n\nSigns and authenticates HTTP requests based on a shared-secret HMAC signature.\n\nDeveloped in parallel with the following packages for other languages:\n- Go: [github.com/18F/hmacauth](https://github.com/18F/hmacauth/)\n- Ruby: [hmac_authentication](https://rubygems.org/gems/hmac_authentication)\n\n## Installation\n\n```sh\n$ npm install hmac-authentication --save\n```\n\n## Authenticating incoming requests\n\nAssuming you're using [Express](https://www.npmjs.com/package/express), during\ninitialization of your application, where `config.signatureHeader` identifies\nthe header containing the message signature, `config.headers` is a list of\nheaders factored into the signature, and `config.secretKey` is the shared\nsecret between your application and the service making the request:\n\n```js\nvar express = require('express');\nvar bodyParser = require('bodyParser');\nvar HmacAuth = require('hmac-authentication');\nvar config = require('./config.json');\n\nfunction doLaunch(config) {\n  var middlewareOptions = {\n    verify: HmacAuth.middlewareAuthenticator(\n      config.secretKey, config.signatureHeader, config.headers)\n  };\n  var server = express();\n  server.use(bodyParser.raw(middlewareOptions));\n\n  // Continue server initialization...\n}\n```\n\nIf you're not using Express, you can use something similar to the following:\n\n```js\nvar HmacAuth = require('hmac-authentication');\nvar config = require('./config.json');\n\n// When only used for authentication, it doesn't matter what the first\n// argument is, because the hash algorithm used for authentication will be\n// parsed from the incoming request signature header.\nvar auth = new HmacAuth(\n  'sha1', config.secretKey, config.signatureHeader, config.headers);\n\n// rawBody must be a string.\nfunction requestHandler(req, rawBody) {\n  var authenticationResult = auth.authenticateRequest(req, rawBody);\n\n  if (authenticationResult[0] != HmacAuth.MATCH) {\n    // Handle authentication failure...\n  }\n}\n```\n\n## Signing outgoing requests\n\nDo something similar to the following. `rawBody` must be a string.\n\n```js\nvar HmacAuth = require('hmac-authentication');\nvar config = require('./config.json');\n\nvar auth = new HmacAuth(\n  config.digestName, config.secretKey, config.signatureHeader, config.headers);\n\nfunction makeRequest(req, rawBody) {\n  // Prepare request...\n  auth.signRequest(req, rawBody);\n}\n```\n\n## Public domain\n\nThis project is in the worldwide [public domain](LICENSE.md). As stated in [CONTRIBUTING](CONTRIBUTING.md):\n\n> This project is in the public domain within the United States, and copyright and related rights in the work worldwide are waived through the [CC0 1.0 Universal public domain dedication](https://creativecommons.org/publicdomain/zero/1.0/).\n>\n> All contributions to this project will be released under the CC0\n>dedication. By submitting a pull request, you are agreeing to comply\n>with this waiver of copyright interest.\n","created":"2015-10-02T14:19:24.389Z","modified":"2016-03-04T23:37:31.147Z","lastPublisher":{"name":"mbland","email":"mbland@acm.org"},"owners":[{"name":"aidanfeldman","email":"aidan.feldman@gmail.com"},{"name":"mbland","email":"mbland@acm.org"}],"other":{"_attachments":{},"_from":".","_id":"hmac-authentication","_nodeVersion":"4.1.2","_npmUser":{"name":"mbland","email":"mbland@acm.org"},"_npmVersion":"2.14.6","_rev":"1-ce9f7c42b49078376a5b382fb48eeff7","_shasum":"524c1108d56244aed8a4b60d9d2f4a755972957f","author":{"name":"Mike Bland","email":"mbland@acm.org","url":"https://mike-bland.com/"},"bugs":{"url":"https://github.com/18f/hmac-authentication-npm/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"524c1108d56244aed8a4b60d9d2f4a755972957f","tarball":"http://registry.npmjs.org/hmac-authentication/-/hmac-authentication-1.0.0.tgz"},"maintainers":[{"name":"aidanfeldman","email":"aidan.feldman@gmail.com"},{"name":"mbland","email":"mbland@acm.org"}],"readmeFilename":"README.md","time":{"modified":"2016-03-04T23:37:31.147Z","created":"2015-10-02T14:19:24.389Z","0.0.0":"2015-10-02T14:19:24.389Z","0.0.1":"2015-10-02T14:41:50.879Z","0.0.2":"2015-10-02T14:43:05.413Z","1.0.0":"2015-10-13T17:05:06.460Z"}}}