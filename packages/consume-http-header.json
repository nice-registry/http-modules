{"name":"consume-http-header","version":"1.0.0","description":"Consume an HTTP request or response stream until all headers have been read","main":"index.js","dependencies":{"consume-until":"^1.0.0","http-headers":"^3.0.1"},"devDependencies":{"tape":"^4.5.1","standard":"^6.0.8"},"scripts":{"test":"standard && tape test.js"},"repository":"https://github.com/watson/consume-http-header","keywords":["http","header","headers","stream","socket","tcp","parse","parser"],"license":"MIT","homepage":"https://github.com/watson/consume-http-header#readme","coordinates":[55.6364184,12.6466904],"gitHead":"e8cd6afb419335dc5a53a9b3b30c6b85430a6cf5","versions":[{"number":"1.0.0","date":"2016-04-28T12:15:43.780Z"}],"readme":"# consume-http-header\n\nConsume an HTTP request or response stream until all headers have been\nread.\n\nLeaves the stream ready to be consumed from the start of the HTTP body.\n\n[![Build status](https://travis-ci.org/watson/consume-http-header.svg?branch=master)](https://travis-ci.org/watson/consume-http-header)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](https://github.com/feross/standard)\n\n## Installation\n\n```\nnpm install consume-http-header --save\n```\n\n## Usage\n\n```js\nvar net = require('net')\nvar consume = require('consume-http-header')\n\nvar socket = net.connect({ host: 'example.com', port: 80 })\n\nsocket.write('GET / HTTP/1.1\\r\\n')\nsocket.write('Host: example.com\\r\\n')\nsocket.write('\\r\\n')\n\nconsume(socket, function (err, req) {\n  if (err) throw err\n\n  console.log('New HTTP response:', req.method, req.url)\n\n  console.log('Headers:')\n  consooe.log(req.headers)\n\n  console.log('Body:')\n  socket.pipe(process.stdout)\n})\n```\n\n## API\n\n### `consume(stream, callback)`\n\nThe module exposes a single function which takes 3 arguments:\n\n- `stream` - The stream to consume\n- `callback` - The callback will be called when a complete set of HTTP\n  headers have been read from the `stream`. The headers will be given as\n  the second argument. An error is given as the first argument if the\n  `stream` either ends before all the headers have been read or if the\n  `stream` emits an error\n\n#### Consuming the HTTP body\n\nWhen the `callback` is called, continue consuming the `stream` to get\nthe body of the request. But be aware of the following gotchas:\n\n- If the `stream` is reused for multiple requests and responses, be\n  aware of when the body ends\n- If `req.headers['transfer-encoding'] === 'chunked'`, be aware that the\n  body is using Chunked Transfer Coding and you have to decode it\n  accordingly. Decoding Chunked Transfer Coding is outside the scope of\n  this module\n\n## License\n\nMIT\n","created":"2016-04-28T12:15:43.780Z","modified":"2016-04-28T12:15:43.780Z","lastPublisher":{"name":"watson","email":"w@tson.dk"},"owners":[{"name":"watson","email":"w@tson.dk"}],"other":{"_attachments":{},"_from":".","_id":"consume-http-header","_nodeVersion":"4.2.2","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/consume-http-header-1.0.0.tgz_1461845742621_0.7508551236242056"},"_npmUser":{"name":"watson","email":"w@tson.dk"},"_npmVersion":"2.14.7","_rev":"1-9275f4190b1fe2b22e5a5152b39b693c","_shasum":"95976d74f7f1b38dfb13fd9b3b68b91a0240556f","author":{"name":"Thomas Watson Steen","email":"w@tson.dk","url":"https://twitter.com/wa7son"},"bugs":{"url":"https://github.com/watson/consume-http-header/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"95976d74f7f1b38dfb13fd9b3b68b91a0240556f","tarball":"http://registry.npmjs.org/consume-http-header/-/consume-http-header-1.0.0.tgz"},"maintainers":[{"name":"watson","email":"w@tson.dk"}],"readmeFilename":"README.md","time":{"modified":"2016-04-28T12:15:43.780Z","created":"2016-04-28T12:15:43.780Z","1.0.0":"2016-04-28T12:15:43.780Z"}}}