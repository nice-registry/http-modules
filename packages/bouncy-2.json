{"name":"bouncy-2","description":"route incoming http requests to http servers","version":"3.2.2","repository":"https://github.com/substack/bouncy","main":"index.js","bin":{"bouncy":"bin/bouncy.js"},"keywords":["http","proxy","router","load","balancer"],"scripts":{"test":"tap test/*.js"},"dependencies":{"through":"~2.3.4","optimist":"~0.3.5"},"devDependencies":{"tap":"~0.4.0","websocket-server":"~1.4.04","wsclient":"~0.2.0","chunky":"~0.0.0","concat-stream":"~1.0.0","split":"~0.2.5"},"license":"MIT","homepage":"https://github.com/substack/bouncy#readme","_resolved":"file:bouncy","versions":[{"number":"3.2.2","date":"2017-06-11T18:25:08.106Z"}],"readme":"# bouncy\n\npipe raw http traffic from incoming http requests to remote endpoints\n\n[![build status](https://secure.travis-ci.org/substack/bouncy.png)](http://travis-ci.org/substack/bouncy)\n\n![trampoline](http://substack.net/images/trampoline.png)\n\n# example\n\n## route.js\n\nRoute requests based on the host field to servers on ports 8001 and 8002:\n\n``` js\nvar bouncy = require('bouncy');\n\nvar server = bouncy(function (req, res, bounce) {\n    if (req.headers.host === 'beep.example.com') {\n        bounce(8001);\n    }\n    else if (req.headers.host === 'boop.example.com') {\n        bounce(8002);\n    }\n    else {\n        res.statusCode = 404;\n        res.end('no such host');\n    }\n});\nserver.listen(8000);\n```\n\n# var server = bouncy(opts={}, cb)\n\n`bouncy(cb)` returns a new net.Server object that you can `.listen()` on.\n\nIf you specify `opts.key` and `opts.cert`, the connection will be set to secure\nmode using tls. Do this if you want to make an https router.\n\nIf the arity of `cb` is 3, you'll get the response object `res` in\n`cb(req, res, bounce)`.\nOtherwise you just get `cb(req, bounce)`.\n\nIf you are using more than one SSL cert, add `opts.SNICallback`.\nSee the example http-https-sni.js and the\n[nodejs tls page](http://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener)\nfor details.\n\n## bounce(stream, opts={})\n\nCall this function when you're ready to bounce the request to a stream.\n\nThe exact request that was received will be written to `stream` and future\nincoming data will be piped to and from it.\n\nTo send data to a different url path on the destination stream, you can specify\n`opts.path`.\n\nTo change the http verb you can set `opts.method`.\n\nYou can specify header fields to insert into the request with `opts.headers`.\n\n`bounce()` returns the stream object that it uses to connect to the remote host.\n\n## bounce(port, ...), bounce(host, port, ...), bounce(url)\n\nThese variants of `bounce()` are sugar for\n`bounce(net.connect(port))` and `bounce(net.connect(port, host))`.\n\nOptionally you can pass port and host keys to `opts` and it does the same thing.\n\nPassing `bounce()` a string that looks like a url (with or without `\"http://\"`)\nwill set the opts.host, opts.port, and opts.path accordingly.\n\n# usage\n\n```\nusage: bouncy FILE PORT\n\nCreate a routes FILE like this:\n\n  {\n    \"beep.example.com\" : 8000,\n    \"boop.example.com\" : 8001\n  }\n\nThen point the `bouncy` command at this `routes.json` file and give it\na port to listen on: \n\n  bouncy routes.json 80\n\nThe `routes.json` file should just map host names to host/port combos. Use a\ncolon-separated string to specify a host and port in a route.\n\nUse `\"\"` for the host as a default route.\n\nYou can optionally specify a listen address as the third parameter or with\n`--address`. It defaults to `0.0.0.0`. Specify `::` to listen on both IPv4 and\nIPv6 addresses.\n```\n\n# install\n\nWith [npm](http://npmjs.org), to get the library do:\n\n```\nnpm install bouncy\n```\n\nor to install the command-line tool do:\n\n```\nnpm install -g bouncy\n```\n\n# license\n\nMIT\n","created":"2017-06-11T18:25:08.106Z","modified":"2017-06-11T18:25:08.106Z","lastPublisher":{"name":"bouncy-2","email":"bouncy-2@best-apps.me"},"owners":[{"name":"bouncy-2","email":"bouncy-2@best-apps.me"}],"other":{"_attachments":{},"_from":"bouncy","_id":"bouncy-2","_nodeVersion":"6.11.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bouncy-2-3.2.2.tgz_1497205507159_0.24522391706705093"},"_npmUser":{"name":"bouncy-2","email":"bouncy-2@best-apps.me"},"_npmVersion":"3.10.10","_rev":"1-f8c8602440e72be0936595d9240107a8","_shasum":"facb6baf30d1598f827aafbe91e91e25cd4256bb","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/bouncy/issues"},"directories":{},"dist-tags":{"latest":"3.2.2"},"dist":{"shasum":"facb6baf30d1598f827aafbe91e91e25cd4256bb","tarball":"https://registry.npmjs.org/bouncy-2/-/bouncy-2-3.2.2.tgz"},"maintainers":[{"name":"bouncy-2","email":"bouncy-2@best-apps.me"}],"readmeFilename":"readme.markdown","time":{"modified":"2017-06-11T18:25:08.106Z","created":"2017-06-11T18:25:08.106Z","3.2.2":"2017-06-11T18:25:08.106Z"}}}