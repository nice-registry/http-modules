{"name":"epub-ocf","version":"0.1.0","description":"Read entries from epub containers. Supports zip, directory and http containers.","main":"index.js","scripts":{"test":"./node_modules/mocha/bin/mocha test/*.test.js"},"license":"MIT","keywords":["epub","epub3","ocf","zip"],"dependencies":{"extend":"^2.0.0"},"devDependencies":{"mocha":"^2.1.0","node-static":"^0.7.6","should":"^5.0.1"},"gitHead":"fe0c606012eb0778474fb2847d04317507258fca","versions":[{"number":"0.0.0","date":"2015-02-22T18:43:20.643Z"},{"number":"0.1.0","date":"2015-02-28T19:14:48.562Z"}],"readme":"# epub-ocf\n\n[![Build Status](https://travis-ci.org/glkz/epub-ocf.svg)](https://travis-ci.org/glkz/epub-ocf)\n\nSimple node.js library to read entries inside an epub container.\n\n\n## Installation\n```sh\n$ npm install --save epub-ocf\n```\n\n\n## API\n\n### Creating container object\n\n```javascript\nvar ocf = require('epub-ocf');\nvar container = ocf('path/to/epub.epub'); // ocf is an alias for ocf.zip\n```\n\nYou can also create a container object from extracted epub directories.\n\n```javascript\nvar container = ocf.dir('path/to/extracted/epub/directory/');\n```\n\nOr, epub directories served via http:\n\n```javascript\nvar container = ocf.http('http://my.ebooks.service.org/ebook2/');\n```\n\n\n**epub-ocf** library can also guess which container method to use by examining the given uri.\n\n```javascript\n// a Zip container\nocf.open('path/to/book.epub', function(err, container) {}); \n\n// a Directory container\nocf.open('path/to/book-dir', function(err, container) {});\n\n// a Http container\nocf.open('http://my.ebooks.service.org/ebook2/', function(err, container) {});\n```\n\nThere is also a ```sync``` version of ```open``` function.\n```javascript\nvar container = ocf.openSync('your container uri');\n```\n\n\n### Container methods\n\nAll container objects have ```readEntry```, ```createReadStream``` and ```rootfiles``` methods.\n\n#### ```container.readEntry(entryPath, cb)```\n\nReturns the contents of entry.\n\n```javascript\ncontainer.readEntry('META-INF/container.xml', function(err, content) {\n  console.log(content);\n});\n```\n\n\n#### ```container.createReadStream(entryPath)```\n\nCreates a readable stream for the entry.\n```javascript\nvar stream = container.createEntryStream('EPUB/images/cover.jpg');\nstream.pipe(process.stdout);\n```\n\n\n#### ```container.rootfiles(cb)```\n\nReturns an array of rootfiles by parsing the ```META-INF/container.xml```\n\n```javascript\ncontainer.rootfiles(function(err, files) {\n  console.log(files); // [ 'EPUB/package.opf' ]\n});\n```\n\n\n\n## Running the tests\n```sh\n$ git clone https://github.com/glkz/epub-ocf.git\n$ cd epub-ocf\n$ npm install\n$ npm test\n```\n\n\n## License\nSee the [LICENSE](./LICENSE) file.\n","created":"2015-02-22T18:43:20.643Z","modified":"2015-02-28T19:14:48.562Z","lastPublisher":{"name":"glkz","email":"gmail@mustafaaltun.com"},"owners":[{"name":"glkz","email":"gmail@mustafaaltun.com"}],"other":{"_attachments":{},"_from":".","_id":"epub-ocf","_npmUser":{"name":"glkz","email":"gmail@mustafaaltun.com"},"_npmVersion":"2.0.0","_rev":"1-aa58d48294c1e63c69e4299f2ca56948","_shasum":"645150225f3ac64f257111a660dff8d1b03407a8","author":{"name":"Mustafa Altun","email":"gmail@mustafaaltun.com"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"645150225f3ac64f257111a660dff8d1b03407a8","tarball":"http://registry.npmjs.org/epub-ocf/-/epub-ocf-0.1.0.tgz"},"maintainers":[{"name":"glkz","email":"gmail@mustafaaltun.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-28T19:14:48.562Z","created":"2015-02-22T18:43:20.643Z","0.0.0":"2015-02-22T18:43:20.643Z","0.1.0":"2015-02-28T19:14:48.562Z"}}}