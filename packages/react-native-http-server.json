{"name":"react-native-http-server","version":"0.1.2","description":"A simple http server implementation for react native Android apps","main":"httpServer.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/strainy/react-native-http-server","keywords":["react-component","react-native","android","nanohttpd"],"license":"MIT","homepage":"https://github.com/strainy/react-native-http-server#readme","gitHead":"e742f0c7ef8ece4115c9252b5f8ff56ddba1a2d9","versions":[{"number":"0.1.0","date":"2016-11-15T03:36:49.318Z"},{"number":"0.1.1","date":"2016-11-15T03:57:13.538Z"},{"number":"0.1.2","date":"2016-11-15T04:12:53.799Z"}],"readme":"# react-native-http-server\n\nHTTP Server for [React Native](https://github.com/facebook/react-native)\n\nAndroid only for now.\n\nBuilt on top of the NanoHttpd library: https://github.com/NanoHttpd/nanohttpd\n\n## Install\n\n```shell\nnpm install --save react-native-http-server\n```\n\n## Automatically link\n\n#### With React Native 0.27+\n\n```shell\nreact-native link react-native-http-server\n```\n\n#### With older versions of React Native\n\nYou need [`rnpm`](https://github.com/rnpm/rnpm) (`npm install -g rnpm`)\n\n```shell\nrnpm link react-native-http-server\n```\n\n## Manually link\n\n- in `android/app/build.gradle`:\n\n```diff\ndependencies {\n    ...\n    compile \"com.facebook.react:react-native:+\"  // From node_modules\n+   compile project(':react-native-http-server')\n}\n```\n\n- in `android/settings.gradle`:\n\n```diff\n...\ninclude ':app'\n+ include ':react-native-http-server'\n+ project(':react-native-http-server').projectDir = new File(rootProject.projectDir, '../node_modules/react-native-http-server/android')\n```\n\n#### With React Native 0.29+\n\n- in `MainApplication.java`:\n\n```diff\n+ import com.strainy.RNHttpServer.RNHttpServer;\n\n  public class MainApplication extends Application implements ReactApplication {\n    //......\n\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n+         new RNHttpServer(),\n          new MainReactPackage()\n      );\n    }\n\n    ......\n  }\n```\n\n#### With older versions of React Native:\n\n- in `MainActivity.java`:\n\n```diff\n+ import com.strainy.RNHttpServer.RNHttpServer;\n\n  public class MainActivity extends ReactActivity {\n    ......\n\n    @Override\n    protected List<ReactPackage> getPackages() {\n      return Arrays.<ReactPackage>asList(\n+       new RNHttpServer(),\n        new MainReactPackage()\n      );\n    }\n  }\n```\n\n\n## Release Notes\n\nSee [CHANGELOG.md](https://github.com/strainy/react-native-http-server/blob/master/CHANGELOG.md)\n\n## Example\n\nFirst import/require react-native-http-server:\n\n```js\n\n    var httpServer = require('react-native-http-server');\n\n```\n\n\nInitalise the server in the `componentWillMount` lifecycle method. When initalising, you'll provide an options object (only the `port` property is accepted for now) and a callback where requests will be captured and responses returned.\n\n```js\n\n    componentWillMount(){\n\n      var options = {\n        port: 1234, // note that 80 is reserved on Android - an exception will be thrown\n      };\n\n      // initalise the server (now accessible via localhost:1234)\n      httpServer.create(options, function(request, send){\n\n          // interpret the url\n          let url = request.url.split('/');\n          let ext = url[1];\n          let data = JSON.stringify({data: \"hello world!\", extension: ext});\n\n          //Build our response object (you can specify status, mime_type (type), data, and response headers)\n          let res = {};\n          res.status = \"OK\";\n          res.type = \"application/json\";\n          res.data = data;\n          res.headers = {\n            \"Access-Control-Allow-Credentials\": \"true\",\n            \"Access-Control-Allow-Headers\": \"Authorization, Content-Type, Accept, Origin, User-Agent, Cache-Control, Keep-Alive, If-Modified-Since, If-None-Match\",\n            \"Access-Control-Allow-Methods\": \"GET, HEAD\",\n            \"Access-Control-Allow-Origin\": \"*\",\n            \"Access-Control-Expose-Headers\": \"Content-Type, Cache-Control, ETag, Expires, Last-Modified, Content-Length\",\n            \"Access-Control-Max-Age\": \"3000\",\n            \"Cache-Control\": \"max-age=300\",\n            \"Connection\": \"keep-alive\",\n            \"Content-Encoding\": \"gzip\",\n            \"Content-Length\": data.length.toString(),\n            \"Date\": (new Date()).toUTCString(),\n            \"Last-Modified\": (new Date()).toUTCString(),\n            \"Server\": \"Fastly\",\n            \"Vary\": \"Accept-Encoding\"\n          };\n\n          send(res);\n\n      });\n\n    }\n\n```\n\nFinally, ensure that you disable the server when your component is being unmounted.\n\n```js\n\n  componentWillUnmount() {\n    httpServer.stop();\n  }\n\n```\n","starsCount":2,"created":"2016-11-15T03:36:49.318Z","modified":"2016-11-19T09:41:28.581Z","lastPublisher":{"name":"strainy","email":"james@strain.net.au"},"owners":[{"name":"strainy","email":"james@strain.net.au"}],"other":{"_attachments":{},"_from":".","_id":"react-native-http-server","_nodeVersion":"4.3.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-native-http-server-0.1.2.tgz_1479183173576_0.7364510709885508"},"_npmUser":{"name":"strainy","email":"james@strain.net.au"},"_npmVersion":"3.7.3","_rev":"5-f91be62c1acd0ca3d12ae2f6534cc641","_shasum":"3b947d110599b533ce281b7e3d26aa1e3c131efc","author":{"name":"James Strain"},"bugs":{"url":"https://github.com/strainy/react-native-http-server/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"3b947d110599b533ce281b7e3d26aa1e3c131efc","tarball":"http://registry.npmjs.org/react-native-http-server/-/react-native-http-server-0.1.2.tgz"},"maintainers":[{"name":"strainy","email":"james@strain.net.au"}],"readmeFilename":"README.md","time":{"modified":"2016-11-19T09:41:28.581Z","created":"2016-11-15T03:36:49.318Z","0.1.0":"2016-11-15T03:36:49.318Z","0.1.1":"2016-11-15T03:57:13.538Z","0.1.2":"2016-11-15T04:12:53.799Z"},"users":{"jsdario":true,"heineiuo":true}}}