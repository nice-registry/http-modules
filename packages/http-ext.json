{"name":"http-ext","description":"the http request client for nodejs module","version":"0.4.5","homepage":"https://github.com/liuxiong332/node-http-ext","license":"MIT","main":"dist/http-request.js","repository":"https://github.com/liuxiong332/node-http-ext","files":["dist"],"keywords":["http","https"],"dependencies":{"mixto":"^1.0.0","underscore":"^1.8.3"},"devDependencies":{"body-parser":"^1.12.2","coffee-script":"^1.9.1","coveralls":"^2.11.1","del":"^1.1.1","express":"^4.12.3","gulp":"^3.8.8","gulp-bump":"^0.1.11","gulp-coffee":"^2.3.1","gulp-coffee-istanbul":"^0.7.0","gulp-coffeelint":"^0.4.0","gulp-load-plugins":"^0.6.0","gulp-mocha":"^1.1.0","gulp-plumber":"^0.6.5","gulp-util":"^3.0.1","should":"^4.0.4","sinon":"^1.14.1"},"scripts":{"coveralls":"gulp test && cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","test":"gulp test","prepublish":"gulp dist"},"gitHead":"b99d9340f1b5650642cae7ebdcd7330a5ec3a62d","versions":[{"number":"0.1.0","date":"2015-04-05T08:02:27.384Z"},{"number":"0.1.1","date":"2015-04-05T08:08:05.712Z"},{"number":"0.2.0","date":"2015-04-08T01:55:59.076Z"},{"number":"0.2.1","date":"2015-04-08T02:11:05.653Z"},{"number":"0.2.2","date":"2015-04-08T02:13:54.826Z"},{"number":"0.2.3","date":"2015-04-08T02:24:56.780Z"},{"number":"0.2.4","date":"2015-04-08T02:43:32.452Z"},{"number":"0.2.5","date":"2015-04-08T03:48:24.335Z"},{"number":"0.2.6","date":"2015-04-08T04:48:45.702Z"},{"number":"0.2.7","date":"2015-04-08T05:05:51.214Z"},{"number":"0.2.8","date":"2015-04-08T06:04:13.339Z"},{"number":"0.2.9","date":"2015-04-08T08:53:27.584Z"},{"number":"0.2.10","date":"2015-04-09T02:21:31.926Z"},{"number":"0.2.11","date":"2015-04-09T07:43:20.404Z"},{"number":"0.2.12","date":"2015-04-09T09:16:53.169Z"},{"number":"0.2.13","date":"2015-04-09T11:32:22.418Z"},{"number":"0.2.14","date":"2015-04-16T11:53:51.424Z"},{"number":"0.2.15","date":"2015-04-17T03:18:18.521Z"},{"number":"0.2.16","date":"2015-04-29T02:55:55.900Z"},{"number":"0.3.0","date":"2015-07-15T09:15:11.535Z"},{"number":"0.4.0","date":"2015-07-29T06:01:05.452Z"},{"number":"0.4.1","date":"2015-07-29T06:17:17.593Z"},{"number":"0.4.2","date":"2015-07-29T06:21:04.472Z"},{"number":"0.4.3","date":"2015-07-29T07:05:56.324Z"},{"number":"0.4.4","date":"2015-07-29T07:16:59.816Z"},{"number":"0.4.5","date":"2015-07-29T09:51:22.028Z"}],"readme":"# http-ext\r\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage Status][coveralls-image]][coveralls-url]\r\n\r\nthe http request client for nodejs module\r\n\r\n\r\n## Install\r\n\r\nYou can install **http-ext** using the Node Package Manager (npm):\r\n\r\n```bash\r\n$ npm install --save http-ext\r\n```\r\n\r\n## Simple Usage\r\n\r\n```javascript\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.get('http://www.google.com', function (err, res){\r\n  if (err) return console.log(err);\r\n  console.log(res.body);\r\n});\r\n```\r\n\r\n## How to use\r\n\r\n* [httpExt.get(url, [options], callback)](#get)\r\n* [httpExt.post(url, [options], callback)](#post)\r\n* [httpExt.put(url, [options], callback)](#put)\r\n* [httpExt.delete(url, [options], callback)](#delete)\r\n* [Sending a custom body](#custombody)\r\n* [Using a http(s) proxy](#proxy)\r\n\r\n---------------------------------------\r\n<a name=\"get\" />\r\n### httpExt.get(url, [options], callback)\r\n\r\n__Arguments__\r\n - url: The url to connect to. Can be http or https.\r\n - options: (all are optional) The following options can be passed:\r\n    - parameters: an object of query parameters\r\n    - headers: an object of headers\r\n    - cookies: an array of cookies\r\n    - allowRedirects: (default: __true__ , only with httpExt.get() ), if true, redirects will be followed\r\n    - maxRedirects: (default: __10__ ). For example 1 redirect will allow for one normal request and 1 extra redirected request.\r\n    - timeout: (default: __none__ ). Adds a timeout to the http(s) request. Should be in milliseconds.\r\n    - proxy, if you want to pass your request through a http(s) proxy server:\r\n        - host: eg: \"192.168.0.1\"\r\n        - port: eg: 8888\r\n        - protocol: (default: __'http'__ ) can be 'http' or 'https'\r\n     - rejectUnauthorized: validate certificate for request with HTTPS. [More here](http://nodejs.org/api/https.html#https_https_request_options_callback)\r\n - callback(err, res): A callback function which is called when the request is complete. __res__ contains and response ( __res__ ) the body ( __res.body__ )\r\n\r\n__Example without options__\r\n\r\n```js\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.get('http://www.google.com', function (err, res){\r\n\tif (err) return console.log(err);\r\n\tconsole.log(res.body);\r\n});\r\n```\r\n\r\n__Example with options__\r\n\r\n```js\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.get('http://posttestserver.com/post.php', {\r\n\tparameters: {\r\n\t\tname: 'John',\r\n\t\tlastname: 'Doe'\r\n\t},\r\n\theaders:{\r\n\t\t'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:18.0) Gecko/20100101 Firefox/18.0'\r\n\t},\r\n\tcookies: [\r\n\t\t'token=DGcGUmplWQSjfqEvmu%2BZA%2Fc',\r\n\t\t'id=2'\r\n\t]\r\n}, function (err, res){\r\n\tif (err){\r\n\t\tconsole.log(err);\r\n\t}else{\r\n\t\tconsole.log(res.body);\r\n\t}\r\n});\r\n```\r\n---------------------------------------\r\n<a name=\"post\" />\r\n### httpExt.post(url, [options], callback)\r\n\r\n__Arguments__\r\n - url: The url to connect to. Can be http or https.\r\n - options: (all are optional) The following options can be passed:\r\n    - parameters: an object of post parameters (content-type is set to *application/x-www-form-urlencoded; charset=UTF-8*)\r\n    - json: if you want to send json directly (content-type is set to *application/json*)\r\n    - body: custom body content you want to send. If used, previous options will be ignored and your custom body will be sent. (content-type will not be set)\r\n    - headers: an object of headers\r\n    - cookies: an array of cookies\r\n    - allowRedirects: (default: __false__ ), if true, redirects will be followed\r\n    - maxRedirects: (default: __10__ ). For example 1 redirect will allow for one normal request and 1 extra redirected request.\r\n    - timeout: (default: none). Adds a timeout to the http(s) request. Should be in milliseconds.\r\n    - proxy, if you want to pass your request through a http(s) proxy server:\r\n        - host: eg: \"192.168.0.1\"\r\n        - port: eg: 8888\r\n        - protocol: (default: __'http'__ ) can be 'http' or 'https'\r\n    - rejectUnauthorized: validate certificate for request with HTTPS. [More here](http://nodejs.org/api/https.html#https_https_request_options_callback)\r\n - callback(err, res): A callback function which is called when the request is complete. __res__ contains the response ( __res__ ) and the body ( __res.body__ )\r\n\r\n__Example without extra options__\r\n\r\n```js\r\nvar httpExt = require('httpExt');\r\n\r\nhttpExt.post('http://posttestserver.com/post.php', {\r\n\tparameters: {\r\n\t\tname: 'John',\r\n\t\tlastname: 'Doe'\r\n\t}\r\n}, function (err, res){\r\n\tif (err){\r\n\t\tconsole.log(err);\r\n\t}else{\r\n\t\tconsole.log(res.body);\r\n\t}\r\n});\r\n```\r\n\r\n__Example with options__\r\n\r\n```js\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.post('http://posttestserver.com/post.php', {\r\n\tparameters: {\r\n\t\tname: 'John',\r\n\t\tlastname: 'Doe'\r\n\t},\r\n\theaders:{\r\n\t\t'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:18.0) Gecko/20100101 Firefox/18.0'\r\n\t},\r\n\tcookies: [\r\n\t\t'token=DGcGUmplWQSjfqEvmu%2BZA%2Fc',\r\n\t\t'id=2'\r\n\t]\r\n}, function (err, res){\r\n\tif (err){\r\n\t\tconsole.log(err);\r\n\t}else{\r\n\t\tconsole.log(res.body);\r\n\t}\r\n});\r\n```\r\n\r\n---------------------------------------\r\n<a name=\"put\" />\r\n### httpExt.put(url, [options], callback)\r\n\r\nSame options as [httpExt.post(url, [options], callback)](#post)\r\n\r\n---------------------------------------\r\n<a name=\"delete\" />\r\n### httpExt.delete(url, [options], callback)\r\n\r\nSame options as [httpExt.post(url, [options], callback)](#post)\r\n\r\n---------------------------------------\r\n<a name=\"custombody\" />\r\n### Sending a custom body\r\nUse the body option to send a custom body (eg. an xml post)\r\n\r\n__Example__\r\n\r\n```js\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.post('http://posttestserver.com/post.php',{\r\n  body: '<?xml version=\"1.0\" encoding=\"UTF-8\"?>',\r\n  headers: {\r\n    'Content-Type': 'text/xml',\r\n  }},\r\n  function (err, res) {\r\n    if (err){\r\n      console.log(err);\r\n    } else {\r\n      console.log(res.body);\r\n    }\r\n  }\r\n);\r\n```\r\n\r\n---------------------------------------\r\n<a name=\"proxy\" />\r\n### Using a http(s) proxy\r\n\r\n__Example__\r\n\r\n```js\r\nvar httpExt = require('http-ext');\r\n\r\nhttpExt.post('http://posttestserver.com/post.php', {\r\n  proxy: {\r\n    host: 'localhost',\r\n    port: 8888\r\n  }\r\n}, function (err, res){\r\n  if (err){\r\n    console.log(err);\r\n  }else{\r\n    console.log(res.body);\r\n  }\r\n});\r\n```\r\n\r\n---------------------------------------\r\n\r\n## API\r\n\r\n_(Coming soon)_\r\n\r\n\r\n## Contributing\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [gulp](http://gulpjs.com/).\r\n\r\n\r\n## License\r\n\r\nCopyright (c) 2015 liuxiong. Licensed under the MIT license.\r\n\r\n\r\n\r\n[npm-url]: https://npmjs.org/package/http-ext\r\n[npm-image]: https://badge.fury.io/js/http-ext.svg\r\n[travis-url]: https://travis-ci.org/liuxiong332/node-http-ext\r\n[travis-image]: https://travis-ci.org/liuxiong332/node-http-ext.svg?branch=master\r\n[daviddm-url]: https://david-dm.org/liuxiong332/node-http-ext\r\n[daviddm-image]: https://david-dm.org/liuxiong332/node-http-ext.svg?theme=shields.io\r\n[coveralls-url]: https://coveralls.io/r/liuxiong332/node-http-ext\r\n[coveralls-image]: https://coveralls.io/repos/liuxiong332/node-http-ext/badge.png\r\n","starsCount":2,"created":"2015-04-05T08:02:27.384Z","modified":"2015-07-29T09:51:22.028Z","lastPublisher":{"name":"liuxiong332","email":"liuxiong332@163.com"},"owners":[{"name":"liuxiong332","email":"liuxiong332@163.com"}],"other":{"_attachments":{},"_from":".","_id":"http-ext","_nodeVersion":"0.12.6","_npmUser":{"name":"liuxiong332","email":"liuxiong332@163.com"},"_npmVersion":"2.11.2","_rev":"1-6a5b6a1cc05c88a0c021f8be1c498540","_shasum":"18d5a803ad05deebe4320a42a0307797e0c1736e","author":{"name":"liuxiong","email":"liuxiong332@163.com"},"bugs":{"url":"https://github.com/liuxiong332/node-http-request/issues"},"directories":{},"dist-tags":{"latest":"0.4.5"},"dist":{"shasum":"18d5a803ad05deebe4320a42a0307797e0c1736e","tarball":"http://registry.npmjs.org/http-ext/-/http-ext-0.4.5.tgz"},"maintainers":[{"name":"liuxiong332","email":"liuxiong332@163.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-29T09:51:22.028Z","created":"2015-04-05T08:02:27.384Z","0.1.0":"2015-04-05T08:02:27.384Z","0.1.1":"2015-04-05T08:08:05.712Z","0.2.0":"2015-04-08T01:55:59.076Z","0.2.1":"2015-04-08T02:11:05.653Z","0.2.2":"2015-04-08T02:13:54.826Z","0.2.3":"2015-04-08T02:24:56.780Z","0.2.4":"2015-04-08T02:43:32.452Z","0.2.5":"2015-04-08T03:48:24.335Z","0.2.6":"2015-04-08T04:48:45.702Z","0.2.7":"2015-04-08T05:05:51.214Z","0.2.8":"2015-04-08T06:04:13.339Z","0.2.9":"2015-04-08T08:53:27.584Z","0.2.10":"2015-04-09T02:21:31.926Z","0.2.11":"2015-04-09T07:43:20.404Z","0.2.12":"2015-04-09T09:16:53.169Z","0.2.13":"2015-04-09T11:32:22.418Z","0.2.14":"2015-04-16T11:53:51.424Z","0.2.15":"2015-04-17T03:18:18.521Z","0.2.16":"2015-04-29T02:55:55.900Z","0.3.0":"2015-07-15T09:15:11.535Z","0.4.0":"2015-07-29T06:01:05.452Z","0.4.1":"2015-07-29T06:17:17.593Z","0.4.2":"2015-07-29T06:21:04.472Z","0.4.3":"2015-07-29T07:05:56.324Z","0.4.4":"2015-07-29T07:16:59.816Z","0.4.5":"2015-07-29T09:51:22.028Z"},"users":{"sbrajesh":true,"prjioz":true}}}