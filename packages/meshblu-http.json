{"name":"meshblu-http","version":"10.0.4","description":"Meshblu HTTP API","main":"dist/index.js","scripts":{"test":"mocha","coverage":"nyc npm test","mocha:json":"env NPM_ENV=test mocha --reporter json > coverage/mocha.json","test:watch":"mocha -w -R mocha-multi --reporter-options spec=-,mocha-osx-reporter=-","build":"coffee --compile --output dist/ --map src/*.coffee"},"repository":"https://github.com/octoblu/node-meshblu-http","keywords":["meshblu","http"],"license":"MIT","homepage":"https://github.com/octoblu/node-meshblu-http","devDependencies":{"chai":"^4.0.1","coffee-script":"^1.12.6","mocha":"^3.4.2","mocha-multi":"^0.11.0","mocha-osx-reporter":"^0.1.2","nyc":"^11.0.1","sinon":"^2.3.2","sinon-chai":"^2.10.0"},"dependencies":{"debug":"^2.6.8","json-stable-stringify":"^1.0.0","lodash":"^4.13.1","node-rsa":"^0.4.2","request":"^2.81.0","srv-failover":"^2.0.0"},"nyc":{"cache":true,"reporter":["text-summary","lcov","json"],"extension":[".coffee"]},"gitHead":"5aad47f8e4f1583a44e547ae37b082169a884492","versions":[{"number":"1.0.0","date":"2015-04-15T06:05:56.261Z"},{"number":"1.0.1","date":"2015-04-15T06:17:01.017Z"},{"number":"1.1.0","date":"2015-04-25T04:56:38.625Z"},{"number":"2.0.0","date":"2015-04-25T19:44:13.960Z"},{"number":"2.0.1","date":"2015-04-30T21:51:48.157Z"},{"number":"2.0.2","date":"2015-04-30T22:06:02.363Z"},{"number":"2.0.4","date":"2015-05-06T18:56:57.578Z"},{"number":"2.0.5","date":"2015-05-06T20:35:23.337Z"},{"number":"2.1.0","date":"2015-05-20T06:39:40.106Z"},{"number":"2.2.0","date":"2015-05-22T18:08:49.262Z"},{"number":"2.3.0","date":"2015-05-22T18:21:12.843Z"},{"number":"2.4.0","date":"2015-06-03T04:49:13.063Z"},{"number":"2.5.0","date":"2015-06-03T16:08:07.520Z"},{"number":"2.6.0","date":"2015-06-10T21:18:32.218Z"},{"number":"2.7.0","date":"2015-06-11T22:30:13.082Z"},{"number":"2.8.0","date":"2015-06-11T22:52:37.095Z"},{"number":"3.0.0","date":"2015-06-23T00:08:41.685Z"},{"number":"3.1.0","date":"2015-06-23T00:51:53.234Z"},{"number":"3.2.1","date":"2015-06-23T01:43:09.860Z"},{"number":"3.3.0","date":"2015-06-25T21:55:47.689Z"},{"number":"3.4.0","date":"2015-06-26T16:37:04.254Z"},{"number":"3.4.1","date":"2015-07-11T22:50:54.175Z"},{"number":"3.5.0","date":"2015-09-28T21:00:06.659Z"},{"number":"3.5.1","date":"2015-09-28T21:32:09.996Z"},{"number":"3.5.2","date":"2015-09-28T21:39:56.028Z"},{"number":"3.5.3","date":"2015-09-28T21:47:22.831Z"},{"number":"3.5.4","date":"2015-09-28T21:53:41.893Z"},{"number":"3.5.5","date":"2015-10-16T22:25:26.542Z"},{"number":"3.5.6","date":"2015-10-23T23:47:07.339Z"},{"number":"3.5.7","date":"2015-10-26T16:30:53.985Z"},{"number":"3.5.8","date":"2015-10-26T16:45:47.536Z"},{"number":"3.5.9","date":"2015-10-26T17:35:54.351Z"},{"number":"3.5.10","date":"2015-10-26T17:50:39.295Z"},{"number":"3.5.11","date":"2015-11-23T18:49:50.963Z"},{"number":"3.6.0","date":"2015-12-02T22:35:10.284Z"},{"number":"3.7.0","date":"2015-12-28T16:28:41.984Z"},{"number":"3.8.0","date":"2015-12-28T22:47:44.545Z"},{"number":"3.9.0","date":"2016-01-06T23:55:10.618Z"},{"number":"3.10.0","date":"2016-01-07T00:09:17.514Z"},{"number":"3.10.1","date":"2016-01-07T00:20:47.209Z"},{"number":"3.10.2","date":"2016-01-07T18:31:47.283Z"},{"number":"3.10.3","date":"2016-01-07T23:56:31.788Z"},{"number":"4.0.0","date":"2016-01-11T21:38:55.903Z"},{"number":"4.0.1","date":"2016-01-12T18:32:13.216Z"},{"number":"4.0.2","date":"2016-01-12T18:37:52.709Z"},{"number":"4.0.3","date":"2016-01-12T20:07:31.770Z"},{"number":"4.0.4","date":"2016-01-14T17:58:54.115Z"},{"number":"4.1.0","date":"2016-01-15T12:15:58.457Z"},{"number":"4.2.0","date":"2016-01-15T19:15:33.137Z"},{"number":"4.2.1","date":"2016-01-18T19:26:58.392Z"},{"number":"5.0.1","date":"2016-01-20T17:46:53.239Z"},{"number":"5.0.2","date":"2016-01-20T22:59:05.485Z"},{"number":"5.1.0","date":"2016-02-11T19:57:15.785Z"},{"number":"5.2.0","date":"2016-04-12T18:53:34.185Z"},{"number":"5.3.0","date":"2016-04-13T18:11:17.631Z"},{"number":"5.3.1","date":"2016-04-15T22:08:42.625Z"},{"number":"5.3.2","date":"2016-04-26T23:29:58.524Z"},{"number":"5.1.1","date":"2016-04-26T23:29:58.814Z"},{"number":"5.3.3","date":"2016-04-28T20:33:16.170Z"},{"number":"5.4.0","date":"2016-05-05T01:07:44.087Z"},{"number":"5.5.0","date":"2016-06-03T18:05:31.538Z"},{"number":"6.0.2","date":"2016-06-21T17:45:39.298Z"},{"number":"6.0.3","date":"2016-06-21T19:26:43.464Z"},{"number":"7.0.0","date":"2016-06-22T19:54:11.007Z"},{"number":"7.1.0","date":"2016-07-25T23:56:11.445Z"},{"number":"7.2.0","date":"2016-08-22T22:00:29.027Z"},{"number":"7.2.1","date":"2016-09-20T21:22:01.973Z"},{"number":"7.3.0","date":"2016-10-19T01:23:20.586Z"},{"number":"7.4.0","date":"2016-10-19T01:37:05.701Z"},{"number":"8.0.0","date":"2016-10-24T17:04:18.353Z"},{"number":"8.1.0","date":"2016-10-25T18:31:14.626Z"},{"number":"9.0.0","date":"2016-10-26T16:14:55.600Z"},{"number":"9.1.0","date":"2016-10-26T17:04:46.615Z"},{"number":"9.2.0","date":"2017-01-03T18:22:47.440Z"},{"number":"9.3.0","date":"2017-01-03T18:30:03.171Z"},{"number":"9.3.1","date":"2017-01-26T19:45:27.818Z"},{"number":"9.3.2","date":"2017-01-26T19:50:17.341Z"},{"number":"9.3.3","date":"2017-01-26T20:15:08.578Z"},{"number":"9.3.4","date":"2017-01-26T20:21:48.510Z"},{"number":"9.4.0","date":"2017-02-03T17:09:14.712Z"},{"number":"9.4.1","date":"2017-02-03T21:44:32.451Z"},{"number":"9.4.2","date":"2017-02-03T21:57:26.514Z"},{"number":"9.4.3","date":"2017-02-03T22:34:05.575Z"},{"number":"9.5.0","date":"2017-02-09T20:21:34.363Z"},{"number":"9.6.0","date":"2017-03-01T15:15:54.332Z"},{"number":"9.7.0","date":"2017-03-01T15:21:11.919Z"},{"number":"9.7.1","date":"2017-03-01T15:44:08.553Z"},{"number":"9.7.2","date":"2017-03-01T18:22:57.163Z"},{"number":"9.7.3","date":"2017-03-02T18:28:34.343Z"},{"number":"9.8.0","date":"2017-03-06T19:36:32.213Z"},{"number":"9.9.0","date":"2017-04-18T23:57:09.947Z"},{"number":"10.0.0","date":"2017-06-02T16:36:59.895Z"},{"number":"10.0.1","date":"2017-06-02T16:43:56.491Z"},{"number":"10.0.2","date":"2017-06-02T16:50:51.183Z"},{"number":"10.0.3","date":"2017-06-02T16:52:40.426Z"},{"number":"10.0.4","date":"2017-06-02T17:06:14.479Z"}],"readme":"# Meshblu HTTP\nA node package to use the Meshblu HTTP API...\n\n[![Build Status](https://travis-ci.org/octoblu/node-meshblu-http.svg?branch=master)](https://travis-ci.org/octoblu/node-meshblu-http)\n[![Code Climate](https://codeclimate.com/github/octoblu/node-meshblu-http/badges/gpa.svg)](https://codeclimate.com/github/octoblu/node-meshblu-http)\n[![Test Coverage](https://codeclimate.com/github/octoblu/node-meshblu-http/badges/coverage.svg)](https://codeclimate.com/github/octoblu/node-meshblu-http)\n[![npm version](https://badge.fury.io/js/meshblu-http.svg)](http://badge.fury.io/js/meshblu-http)\n[![Gitter](https://badges.gitter.im/octoblu/help.svg)](https://gitter.im/octoblu/help)\n\n# Usage\n### Install:\n```\nnpm install --save meshblu-http\n```\n\n### Use:\n```\nvar MeshbluHttp = require('meshblu-http');\n\nvar meshbluHttp = new MeshbluHttp();\n\nmeshbluHttp.register({}, function(error, response) {\n  // code goes here\n})\n```\n\n# Functions\n### Constructor\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| options   | object | no      | can contain any of these keys: uuid, token, hostname, port, protocol, domain, service, secure, resolveSrv, auth |\n------------------------------------------\n```\nvar meshbluHttp = new MeshbluHttp({uuid: 'fancy_uuid', token: 'fancy_token'})\n```\n\n### Authenticate\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.authenticate(function(error, response) {\n  // code goes here\n})\n```\n\n### Create Hook\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid         |\n| type      | string | yes     | a string containing the type         |\n| url       | string | yes     | a string containing the url          |\n| callback  |function| yes     | a function that returns error          |\n------------------------------------------\n```\nmeshbluHttp.createHook('fancy_uuid', 'fancy_token', 'fancy_url', function(error) {\n  // code goes here\n})\n```\n\n### Create Subscription\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| options   | object | yes     | an object containing three keys: subscriberUuid, emitterUuid, and type |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.createSubscription(\n  {\n    subscriberUuid: 'fancy_uuid',\n    emitterUuid: 'another_fancy_uuid',\n    type: 'fancy_type'\n  },\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Delete Subscription\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| options   | object | yes     | an object containing three keys: subscriberUuid, emitterUuid, and type |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.deleteSubscription(\n  {\n    subscriberUuid: 'fancy_uuid',\n    emitterUuid: 'another_fancy_uuid',\n    type: 'fancy_type'\n  },\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Device\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.device('fancy_uuid', {as: 'another_user_uuid'}, function(error, response){\n  // code goes here\n})\n```\n\n### Devices\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| query     | object | no      | an object containing the keys you want to search for |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.devices({type: 'drone'}, {as: 'another_user_uuid'}, function(error, response){\n  // code goes here\n})\n```\n\n### Find And Update\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| params    | object | yes     | an object containing the new changes to the device |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.findAndUpdate('fancy_uuid', {type: 'new-type'}, function(error, response){\n  // code goes here\n})\n```\n\n### Generate And Store Token\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.generateAndStoreToken('fancy_uuid', function(error, response){\n  // code goes here\n})\n```\n\n### Generate And Store Token With Options\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| options   | object | no      | an object containing the options for the token |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.generateAndStoreTokenWithOptions('fancy_uuid', {expiresOn: '1485452874'},\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Generate Key Pair\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| none      |  |      |          |\n------------------------------------------\n```\nmeshbluHttp.generateKeyPair()\n```\n\n### Health Check\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| callback  |function| yes     | a function that returns error, healthy, and code |\n------------------------------------------\n```\nmeshbluHttp.healthcheck(function(error, healthy, code){\n  // code goes here\n})\n```\n\n### Message\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| message   | object | yes     | an object containing the message to send |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.message({data: 'hello_message'}, function(error, response){\n  // code goes here\n})\n```\n\n### My Devices\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| query     | object | no      | an object containing your query      |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.mydevices({type: 'drone'}, function(error, response){\n  // code goes here\n})\n```\n\n### Public Key\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.publicKey('fancy_uuid', function(error, response){\n  // code goes here\n})\n```\n\n### Register\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| options   | object | yes     | an object containing properties that you would like your device to have. Can be empty object|\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.register({color: 'blue'}, function(error, response){\n  // code goes here\n})\n```\n\n### Reset Token\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.resetToken('fancy_uuid', function(error, response){\n  // code goes here\n})\n```\n\n### Revoke Token\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| token     | string | yes     | a string containing the token of the device |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.revokeToken('fancy_uuid', 'fancy_token', function(error, response){\n  // code goes here\n})\n```\n\n### Revoke Token By Query\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| query     | object | yes     | an object containing your query      |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.revokeTokenByQuery('fancy_uuid', {expiresOn: '1485452874'},\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Search\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| query     | object | yes     | an object containing your query      |\n| metadata  | object | yes     | an object containing metadata information. Can be left empty |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.search({type: 'drone'}, {as: 'another_uuid'},\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Search Tokens\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| query     | object | yes     | an object containing your query      |\n| metadata  | object | yes     | an object containing metadata information. Can be left empty |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.searchTokens({expiresOn: '1485452874'}, {as: 'another_uuid'},\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Set Private Key\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| privateKey| string/object | yes     | a string or object containing your privateKey  |\n------------------------------------------\n```\nmeshbluHttp.setPrivateKey(privateKey)\n```\n\n### Sign\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| data      | object | yes     | an object containing the data you want to sign your privateKey with |\n------------------------------------------\n```\nmeshbluHttp.sign(data)\n```\n\n### Subscriptions\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid of the device |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.subscriptions('fancy_uuid', {as: 'another_uuid'},\n  function(error, response){\n    // code goes here\n  }\n)\n```\n\n### Unregister\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| device    | object | yes     | an object containing the device credentials |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.unregister({uuid: 'abc', token: 'asd'}, function(error, response){\n  // code goes here\n})\n```\n\n### Update\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| uuid      | string | yes     | a string containing the uuid         |\n| params    | object | yes     | an object containing the new changes to the device |\n| metadata  | object | no      | an object containing metadata information |\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.update('fancy_uuid', {color: 'green'}, function(error, response){\n  // code goes here\n})\n```\n\n### Verify\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| message   | string/object | yes     | data for encrypting                  |\n| signature | string | yes     | this can be obtained from sign()     |\n------------------------------------------\n```\nmeshbluHttp.verify(message, signature)\n```\n\n### Whoami\n| Parameter | Type   | Required| Description                          |\n| ----------| -------| --------| -------------------------------------|\n| callback  |function| yes     | a function that returns error and response |\n------------------------------------------\n```\nmeshbluHttp.whoami(function(error, response){\n  // code goes here\n})\n```\n","created":"2015-04-15T06:05:56.261Z","modified":"2017-06-02T17:06:14.479Z","lastPublisher":{"name":"octoblu","email":"serveradmin@octoblu.com"},"owners":[{"name":"octoblu","email":"serveradmin@octoblu.com"}],"other":{"_attachments":{},"_from":".","_id":"meshblu-http","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/meshblu-http-10.0.4.tgz_1496423173356_0.7088910383172333"},"_npmUser":{"name":"octoblu","email":"serveradmin@octoblu.com"},"_npmVersion":"4.2.0","_rev":"28-0150e93007b4ce6a37f9290aef1282c9","_shasum":"9d4c1072605768b4e1c1f610af882bb5b1854561","author":{"name":"Octoblu","email":"dev@octoblu.com"},"bugs":{"url":"https://github.com/octoblu/node-meshblu-http/issues"},"directories":{},"dist-tags":{"latest":"10.0.4"},"dist":{"shasum":"9d4c1072605768b4e1c1f610af882bb5b1854561","tarball":"https://registry.npmjs.org/meshblu-http/-/meshblu-http-10.0.4.tgz"},"maintainers":[{"name":"octoblu","email":"serveradmin@octoblu.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T17:06:14.479Z","created":"2015-04-15T06:05:56.261Z","1.0.0":"2015-04-15T06:05:56.261Z","1.0.1":"2015-04-15T06:17:01.017Z","1.1.0":"2015-04-25T04:56:38.625Z","2.0.0":"2015-04-25T19:44:13.960Z","2.0.1":"2015-04-30T21:51:48.157Z","2.0.2":"2015-04-30T22:06:02.363Z","2.0.4":"2015-05-06T18:56:57.578Z","2.0.5":"2015-05-06T20:35:23.337Z","2.1.0":"2015-05-20T06:39:40.106Z","2.2.0":"2015-05-22T18:08:49.262Z","2.3.0":"2015-05-22T18:21:12.843Z","2.4.0":"2015-06-03T04:49:13.063Z","2.5.0":"2015-06-03T16:08:07.520Z","2.6.0":"2015-06-10T21:18:32.218Z","2.7.0":"2015-06-11T22:30:13.082Z","2.8.0":"2015-06-11T22:52:37.095Z","3.0.0":"2015-06-23T00:08:41.685Z","3.1.0":"2015-06-23T00:51:53.234Z","3.2.1":"2015-06-23T01:43:09.860Z","3.3.0":"2015-06-25T21:55:47.689Z","3.4.0":"2015-06-26T16:37:04.254Z","3.4.1":"2015-07-11T22:50:54.175Z","3.5.0":"2015-09-28T21:00:06.659Z","3.5.1":"2015-09-28T21:32:09.996Z","3.5.2":"2015-09-28T21:39:56.028Z","3.5.3":"2015-09-28T21:47:22.831Z","3.5.4":"2015-09-28T21:53:41.893Z","3.5.5":"2015-10-16T22:25:26.542Z","3.5.6":"2015-10-23T23:47:07.339Z","3.5.7":"2015-10-26T16:30:53.985Z","3.5.8":"2015-10-26T16:45:47.536Z","3.5.9":"2015-10-26T17:35:54.351Z","3.5.10":"2015-10-26T17:50:39.295Z","3.5.11":"2015-11-23T18:49:50.963Z","3.6.0":"2015-12-02T22:35:10.284Z","3.7.0":"2015-12-28T16:28:41.984Z","3.8.0":"2015-12-28T22:47:44.545Z","3.9.0":"2016-01-06T23:55:10.618Z","3.10.0":"2016-01-07T00:09:17.514Z","3.10.1":"2016-01-07T00:20:47.209Z","3.10.2":"2016-01-07T18:31:47.283Z","3.10.3":"2016-01-07T23:56:31.788Z","4.0.0":"2016-01-11T21:38:55.903Z","4.0.1":"2016-01-12T18:32:13.216Z","4.0.2":"2016-01-12T18:37:52.709Z","4.0.3":"2016-01-12T20:07:31.770Z","4.0.4":"2016-01-14T17:58:54.115Z","4.1.0":"2016-01-15T12:15:58.457Z","4.2.0":"2016-01-15T19:15:33.137Z","4.2.1":"2016-01-18T19:26:58.392Z","5.0.1":"2016-01-20T17:46:53.239Z","5.0.2":"2016-01-20T22:59:05.485Z","5.1.0":"2016-02-11T19:57:15.785Z","5.2.0":"2016-04-12T18:53:34.185Z","5.3.0":"2016-04-13T18:11:17.631Z","5.3.1":"2016-04-15T22:08:42.625Z","5.3.2":"2016-04-26T23:29:58.524Z","5.1.1":"2016-04-26T23:29:58.814Z","5.3.3":"2016-04-28T20:33:16.170Z","5.4.0":"2016-05-05T01:07:44.087Z","5.5.0":"2016-06-03T18:05:31.538Z","6.0.2":"2016-06-21T17:45:39.298Z","6.0.3":"2016-06-21T19:26:43.464Z","7.0.0":"2016-06-22T19:54:11.007Z","7.1.0":"2016-07-25T23:56:11.445Z","7.2.0":"2016-08-22T22:00:29.027Z","7.2.1":"2016-09-20T21:22:01.973Z","7.3.0":"2016-10-19T01:23:20.586Z","7.4.0":"2016-10-19T01:37:05.701Z","8.0.0":"2016-10-24T17:04:18.353Z","8.1.0":"2016-10-25T18:31:14.626Z","9.0.0":"2016-10-26T16:14:55.600Z","9.1.0":"2016-10-26T17:04:46.615Z","9.2.0":"2017-01-03T18:22:47.440Z","9.3.0":"2017-01-03T18:30:03.171Z","9.3.1":"2017-01-26T19:45:27.818Z","9.3.2":"2017-01-26T19:50:17.341Z","9.3.3":"2017-01-26T20:15:08.578Z","9.3.4":"2017-01-26T20:21:48.510Z","9.4.0":"2017-02-03T17:09:14.712Z","9.4.1":"2017-02-03T21:44:32.451Z","9.4.2":"2017-02-03T21:57:26.514Z","9.4.3":"2017-02-03T22:34:05.575Z","9.5.0":"2017-02-09T20:21:34.363Z","9.6.0":"2017-03-01T15:15:54.332Z","9.7.0":"2017-03-01T15:21:11.919Z","9.7.1":"2017-03-01T15:44:08.553Z","9.7.2":"2017-03-01T18:22:57.163Z","9.7.3":"2017-03-02T18:28:34.343Z","9.8.0":"2017-03-06T19:36:32.213Z","9.9.0":"2017-04-18T23:57:09.947Z","10.0.0":"2017-06-02T16:36:59.895Z","10.0.1":"2017-06-02T16:43:56.491Z","10.0.2":"2017-06-02T16:50:51.183Z","10.0.3":"2017-06-02T16:52:40.426Z","10.0.4":"2017-06-02T17:06:14.479Z"}}}