{"name":"inward","version":"0.1.4","description":"HTTP server, using promises and immutable objects.","main":"src/index.js","scripts":{"test":"node ./node_modules/mocha/bin/mocha test --recursive"},"keywords":["immutable","http","server","promise"],"license":"MIT","dependencies":{"es6-promise-polyfill":"1.0.0","escape-regexp":"0.0.1","immutable":"3.7.2","ramda":"0.13.0"},"devDependencies":{"chai":"2.3.0","jsverify":"0.6.0-alpha.5","mocha":"2.2.4","request-promise":"0.4.2","sinon":"1.14.1"},"gitHead":"789d2546a09b50083d2c41edb009dc8ff8e2a40b","versions":[{"number":"0.1.0","date":"2015-05-04T15:55:54.348Z"},{"number":"0.1.1","date":"2015-05-04T16:04:00.736Z"},{"number":"0.1.2","date":"2015-05-04T16:19:32.421Z"},{"number":"0.1.3","date":"2015-05-05T09:30:32.742Z"},{"number":"0.1.4","date":"2015-05-05T10:19:11.349Z"}],"readme":"# Inward\n\nGrowing node-based apps can be difficult.  Even if your service is just medium sized, weird bugs and hard-to-think-about concurrency can be all too common. \n\n`Inward` is about leveraging new node.js tech to make your life easier, even as your app grows.\n\n### What Tech?\n\n`Inward` uses two main ideas - that immutable data (provided by facebook's [immutable](https://github.com/facebook/immutable-js) library) makes hard-to-find bugs hard-to-write, and promises make node.js' asynchronous IO less painful for you to use.\n \n### So this is new, cutting edge, risky stuff?\n\nPromises have become so popular, they've [been penciled in as an official part of the next JavaScript spec](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise).  [Immutable](https://www.npmjs.com/package/immutable) has facebook's stamp of approval, hundreds of thousands of monthly downloads, and is based on the same techniques that form the core of clojure's datastructures.  \n\nUsing promises and immutable data together in a http server is *also* nothing new - we're just borrowing a leaf out of the playbook of [major frameworks from other languages](https://www.playframework.com/) - frameworks I've used in anger with plenty of success.\n\nNow is the right time.\n\n\n## Hello World\n\n```javascript\nvar Inward = require('inward');\nvar Response = Inward.Response;\nvar Route = Inward.Route;\n\nvar helloWorldHandler = function(request){\n    var params = request.get('params');\n    return Response.OK('hi, ' + params.get('name'));\n};\n\nvar route404 = function(){\n    return Response.NotFound(\"ain't nothing to see here\");\n};\n\nvar server = Inward.Server({\n    routes: [\n        Route.Get('/hello/:name', helloWorldHandler),\n        Route.Any('*', route404)\n    ]\n});\n\nInward.runHttp(server, 3000);\n```\n\n## Quick-Start Guide\n\nTo get up and running quickly, see [the Quick-Start Guide](https://github.com/hughfdjackson/inward/wiki/QuickStart-Guide);\n\n## API Documentation\n\nFor in-depth info for every function, see the [API Documentation](https://github.com/hughfdjackson/inward/wiki/API-Documentation).\n","created":"2015-05-04T15:55:54.348Z","modified":"2017-05-08T12:05:42.040Z","lastPublisher":{"name":"hughfdjackson","email":"hughfdjackson@googlemail.com"},"owners":[],"other":{"_attachments":{},"_from":".","_id":"inward","_nodeVersion":"0.12.0","_npmUser":{"name":"hughfdjackson","email":"hughfdjackson@googlemail.com"},"_npmVersion":"2.5.1","_rev":"2-09e07df8c048f855b067129338c63cd3","_shasum":"85e2704d917ec58a38d985828208148fb26242d2","author":{"name":"hughfdjackson"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"85e2704d917ec58a38d985828208148fb26242d2","tarball":"http://registry.npmjs.org/inward/-/inward-0.1.4.tgz"},"maintainers":[],"readmeFilename":"README.md","time":{"modified":"2017-05-08T12:05:42.040Z","created":"2015-05-04T15:55:54.348Z","0.1.0":"2015-05-04T15:55:54.348Z","0.1.1":"2015-05-04T16:04:00.736Z","0.1.2":"2015-05-04T16:19:32.421Z","0.1.3":"2015-05-05T09:30:32.742Z","0.1.4":"2015-05-05T10:19:11.349Z"}}}