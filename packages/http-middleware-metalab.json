{"name":"http-middleware-metalab","version":"0.3.3","license":"CC0-1.0","repository":"https://github.com/metalabdesign/http-middleware-metalab","main":"index.js","scripts":{"prepublish":"babel -s inline -d . ./src --source-maps true","test":"npm run lint && npm run spec","spec":"NODE_ENV=test ./test/script/spec.sh","lint":"eslint ."},"dependencies":{"compression":"^1.6.0","cookies":"^0.5.1","http-proxy":"^1.12.1","lodash":"^4.0.0","morgan":"^1.6.1","negotiator":"^0.6.0","node-uuid":"^1.4.7","on-finished":"^2.3.0","on-headers":"^1.0.1","parseurl":"^1.3.1","path-to-regexp":"^1.2.1","qs":"^6.0.2","send":"^0.13.1","useragent":"^2.1.8","webpack-assets":"^0.2.0","yamlparser":"0.0.2"},"devDependencies":{"adana-cli":"^0.1.1","adana-dump":"^0.1.0","adana-format-lcov":"^0.1.1","babel-cli":"^6.3.17","babel-core":"^6.3.26","babel-preset-metalab":"^0.1.4","bl":"^1.0.1","chai":"^3.4.1","chai-http":"^1.0.0","eslint":"^1.10.3","eslint-config-metalab":"^1.0.0-rc.4","eslint-plugin-filenames":"^0.2.0","eslint-plugin-import":"^0.11.0","eslint-plugin-react":"^3.11.2","express":"^4.13.4","hapi":"^12.1.0","mocha":"^2.3.4","sinon":"^1.17.2","sinon-chai":"^2.8.0"},"gitHead":"ed883df02bb448bf64e04694f31399381694d06e","description":"Minimalist, composable http middleware pack for [http]/[express]/[hapi].","homepage":"https://github.com/metalabdesign/http-middleware-metalab#readme","versions":[{"number":"0.1.0","date":"2016-01-20T23:14:10.421Z"},{"number":"0.1.1","date":"2016-01-20T23:36:14.233Z"},{"number":"0.1.2","date":"2016-01-21T01:34:23.869Z"},{"number":"0.1.3","date":"2016-01-21T06:59:03.272Z"},{"number":"0.2.0","date":"2016-01-22T04:57:44.401Z"},{"number":"0.2.1","date":"2016-01-22T05:49:16.980Z"},{"number":"0.2.2","date":"2016-01-22T08:56:00.265Z"},{"number":"0.2.3","date":"2016-01-24T08:19:02.587Z"},{"number":"0.2.4","date":"2016-01-27T02:44:35.495Z"},{"number":"0.2.5","date":"2016-02-02T08:29:11.208Z"},{"number":"0.3.0","date":"2016-02-02T11:40:45.540Z"},{"number":"0.2.6","date":"2016-02-05T22:31:43.192Z"},{"number":"0.3.1","date":"2016-05-20T07:07:58.006Z"},{"number":"0.3.2","date":"2016-10-15T09:49:21.959Z"},{"number":"0.3.3","date":"2016-10-30T23:47:28.112Z"}],"readme":"# http-middleware-metalab\n\nMinimalist, composable http middleware pack for [http]/[express]/[hapi].\n\n![build status](http://img.shields.io/travis/metalabdesign/http-middleware-metalab/master.svg?style=flat)\n![coverage](http://img.shields.io/coveralls/metalabdesign/http-middleware-metalab/master.svg?style=flat)\n![license](http://img.shields.io/npm/l/http-middleware-metalab.svg?style=flat)\n![version](http://img.shields.io/npm/v/http-middleware-metalab.svg?style=flat)\n![downloads](http://img.shields.io/npm/dm/http-middleware-metalab.svg?style=flat)\n\n## Packs\n\n * base - Some sensible defaults.\n * webpack - For serving assets from [webpack]-based projects.\n * react - Server-side rendering with [react] and [redux].\n\n## Usage\n\nInstall `http-middleware-metalab` and add it to your `package.json` file:\n\n```sh\nnpm install --save http-middleware-metalab\n```\n\nThese middleware components are NOT the same as express middleware; they are conceptually designed in a manner more similar to redux stores. Every middleware is an object with properties corresponding to events on an `http.Server` object; e.g. `request`, `error`, `upgrade`, etc. Each middleware function takes an existing middleware object and composes it.\n\nFor example, adding a `req.message` field:\n\n```javascript\nfunction addMessage(message) {\n  // Take in the existing middleware here\n  return (middleware) => {\n    const { request } = middleware;\n    // Return a new middleware here.\n    return {\n      ...middleware,\n      request(req, res) {\n        req.message = message;\n        // Composition!\n        request(req, res);\n      },\n    };\n  };\n}\n\n// Create the composed middleware.\nconst app = addMessage('hello')({\n  // Your \"base\" middleware.\n  request(req, res) {\n    res.statusCode = 200;\n    res.end(`Message: ${req.message}`);\n  }\n});\n\n// Create the server and use the appropriate methods on the middleware object.\nconst server = http.createServer();\nserver.on('request', app.request);\nserver.listen();\n```\n\nIn that sense http middleware is even less opinionated than [express] middleware. It is merely a composition mechanism for a previously non-composable set of functions (http server events).\n\n### With `http`\n\n```javascript\nimport http from 'http';\nimport connect from 'http-middleware-metalab/adapter/http';\nimport base from 'http-middleware-metalab/base';\n\nconst server = http.createServer();\nconst createApp = base();\nconst app = createApp({\n  request(req, res) {\n    res.statusCode = 200;\n    res.end(`Hello ${req.id}`);\n  },\n  error(err) {\n    console.log('GOT ERROR', err);\n  },\n});\n\nconnect(app, server).listen(8080);\n```\n\n### With `express`\n\n```javascript\nimport express from 'express';\nimport connector from 'http-middleware-metalab/adapter/express';\nimport base from 'http-middleware-metalab/base';\n\nconst createMiddleware = base();\nconst app = express();\n\napp.use(connector(createMiddleware));\napp.listen(8080);\n```\n\n### With `hapi`\n\n```javascript\nimport { Server } from 'hapi';\nimport connector from 'http-middleware-metalab/adapter/hapi';\nimport base from 'http-middleware-metalab/base';\n\nconst createMiddleware = base();\nconst server = new Server();\n\nserver.connection({ port: 8080 });\nserver.ext(connector(createMiddleware));\nserver.start();\n```\n\n[http]: https://nodejs.org/api/http.html\n[hapi]: http://hapijs.com/\n[express]: http://expressjs.com/\n[react]: https://facebook.github.io/react/\n[redux]: https://github.com/rackt/redux\n[webpack]: https://webpack.github.io/\n","created":"2016-01-20T23:14:10.421Z","modified":"2016-10-30T23:47:28.112Z","lastPublisher":{"name":"izaakschroeder","email":"izaak.schroeder@gmail.com"},"owners":[{"name":"izaakschroeder","email":"izaak.schroeder@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-middleware-metalab","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/http-middleware-metalab-0.3.3.tgz_1477871246064_0.26773042674176395"},"_npmUser":{"name":"izaakschroeder","email":"izaak.schroeder@gmail.com"},"_npmVersion":"3.10.3","_rev":"2-238f1e12684efecc96e3b89cbca21c30","_shasum":"f4f7fa12f03af0480d8c630cab7dc3608ab57c08","author":{"name":"Izaak Schroeder","email":"izaak.schroeder@gmail.com"},"bugs":{"url":"https://github.com/metalabdesign/http-middleware-metalab/issues"},"directories":{},"dist-tags":{"latest":"0.3.3"},"dist":{"shasum":"f4f7fa12f03af0480d8c630cab7dc3608ab57c08","tarball":"http://registry.npmjs.org/http-middleware-metalab/-/http-middleware-metalab-0.3.3.tgz"},"maintainers":[{"name":"izaakschroeder","email":"izaak.schroeder@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-30T23:47:28.112Z","created":"2016-01-20T23:14:10.421Z","0.1.0":"2016-01-20T23:14:10.421Z","0.1.1":"2016-01-20T23:36:14.233Z","0.1.2":"2016-01-21T01:34:23.869Z","0.1.3":"2016-01-21T06:59:03.272Z","0.2.0":"2016-01-22T04:57:44.401Z","0.2.1":"2016-01-22T05:49:16.980Z","0.2.2":"2016-01-22T08:56:00.265Z","0.2.3":"2016-01-24T08:19:02.587Z","0.2.4":"2016-01-27T02:44:35.495Z","0.2.5":"2016-02-02T08:29:11.208Z","0.3.0":"2016-02-02T11:40:45.540Z","0.2.6":"2016-02-05T22:31:43.192Z","0.3.1":"2016-05-20T07:07:58.006Z","0.3.2":"2016-10-15T09:49:21.959Z","0.3.3":"2016-10-30T23:47:28.112Z"}}}