{"name":"token-manager-server","version":"0.2.2","description":"HTTP Server to handle authorization tokens","main":"server.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","start":"node server.js"},"keywords":["token","token-manager","server","authorization"],"bin":{"token-manager-server":"./bin/runserver"},"repository":"https://github.com/jsanchesleao/token-manager-server","license":"ISC","dependencies":{"token-manager":"0.2.0","restify":"~2.6.1"},"homepage":"https://github.com/jsanchesleao/token-manager-server","versions":[{"number":"0.1.0","date":"2014-02-06T21:28:05.276Z"},{"number":"0.1.1","date":"2014-02-07T10:36:01.934Z"},{"number":"0.1.2","date":"2014-02-10T12:43:18.235Z"},{"number":"0.2.0","date":"2014-02-11T11:28:49.573Z"},{"number":"0.2.1","date":"2014-02-20T15:17:52.861Z"},{"number":"0.2.2","date":"2014-02-20T15:24:40.198Z"}],"readme":"Token Manager Server\n====================\n\nToken Manager Server is a server based on Restify created to manage authorization tokens.\n\nInstallation\n------------\n\n```bash\nnpm install token-manager-server\n```\n\nQuickStart\n----------\n\n```javascript\nvar TokenManagerServer = require('./server').TokenManagerServer,\n    server = new TokenManagerServer().listen(8000);  //starts a server in port 8000\n\n```\n\nYou can also embed the service in you own restify app like this:\n\n```javascript\n\nvar restify = require('restify'),\n    tokenManagerServer = require('token-manager-server'),\n    server = restify.createServer();\n\n    /* bodyParser and queryParser are required */\n    server.use( restify.bodyParser() );\n    server.use( restify.queryParser() );\n\n    tokenManagerServer.use( server, '/myTokenEndpoint' ); // register get and post /myTokenEndpoint\n```\n\n\nAPI\n---\n\n### GET /token?tokenString=<STRING>\n\nReturns a json containing a token data. The format is like this:\n\n* Status code 200:\n```javascript\n{\n    \"clientId\": \"someclientid\",\n    \"tokenString\": \"sometokenstring\",\n    \"roles\": []\n}\n```\n\n* Status code 404:\n```\n{\n    \"code\": \"ResourceNotFound\",\n    \"message\": \"Some error message here\"\n}\n```\n\n\n\n### POST /token\n\nThe client should send an application/json data containing the following:\n\n```javascript\n{\n    \"clientId\": \"someclientid\",\n    \"tokenString\": \"sometokenstring\",\n    \"expiration\": 60000,\n    \"roles\": [\"client\", \"admin\"]\n}\n```\n\nThe expiration time should be set in milliseconds.\nThe server returns like this:\n\n* Status code 200:\n\n```javascript\n{\n    \"clientId\": \"someclientid\",\n    \"tokenString\": \"sometokenstring\"\n}\n```\n\n* Status code 400:\n```javascript\n{\n    \"code\": \"InvalidContent\",\n    \"message\": \"Some error message here\"\n}\n```\n\n\nStandalone Server\n-----------------\n\n```bash\nbash >$ sudo npm install -g token-manager-server\n```\n\nThe installation of the module gives you an path executable called token-manager-server, that simply bootstraps a server, running in a specified port.\n\n```bash\nbash >$ token-manager-server 8080\n```\n\nThis command will start a server in port 8000. If no port is specified, port 3000 will be used.\n","created":"2014-02-06T21:28:05.276Z","modified":"2014-02-20T15:24:40.198Z","lastPublisher":{"name":"jsanchesleao","email":"jsanchesleao@gmail.com"},"owners":[{"name":"jsanchesleao","email":"jsanchesleao@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"token-manager-server","_npmUser":{"name":"jsanchesleao","email":"jsanchesleao@gmail.com"},"_npmVersion":"1.3.14","_rev":"1-3ab76452c9e1c7e21466244f1146f97d","author":{"name":"Jeferson Sanches"},"bugs":{"url":"https://github.com/jsanchesleao/token-manager-server/issues"},"directories":{},"dist-tags":{"latest":"0.2.2"},"dist":{"shasum":"8b22c1e6efadbd96efecf79d0ba203f7c865a5c6","tarball":"http://registry.npmjs.org/token-manager-server/-/token-manager-server-0.2.2.tgz"},"maintainers":[{"name":"jsanchesleao","email":"jsanchesleao@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-02-20T15:24:40.198Z","created":"2014-02-06T21:28:05.276Z","0.1.0":"2014-02-06T21:28:05.276Z","0.1.1":"2014-02-07T10:36:01.934Z","0.1.2":"2014-02-10T12:43:18.235Z","0.2.0":"2014-02-11T11:28:49.573Z","0.2.1":"2014-02-20T15:17:52.861Z","0.2.2":"2014-02-20T15:24:40.198Z"}}}