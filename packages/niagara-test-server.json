{"name":"niagara-test-server","version":"0.1.11","description":"HTTP server for testing Niagara web applications","repository":"https://github.com/tridium/niagara-test-server","main":"lib/server","dependencies":{"niagara-moduledev":"^0.1.2"},"devDependencies":{"grunt":"~0.4.4","grunt-contrib-watch":"~0.6.1","grunt-contrib-jshint":"~0.10.0"},"gitHead":"9d487f87e92e4370f8ecbb939c032a5ce74f4bea","homepage":"https://github.com/tridium/niagara-test-server","scripts":{},"versions":[{"number":"0.1.9","date":"2014-09-07T18:40:29.996Z"},{"number":"0.1.10","date":"2015-04-09T18:04:44.702Z"},{"number":"0.1.11","date":"2015-04-10T16:06:10.109Z"}],"readme":"niagara-test-server\r\n===================\r\n\r\nA tiny little HTTP server for use in Niagara unit testing. It knows how to do\r\na couple things.\r\n\r\nmoduledev\r\n---------\r\n\r\nIt can read your `moduledev.properties` file, receive web requests\r\nfor Niagara module assets, and retrieve those files from their corresponding\r\n`moduledev` locations. In most cases this won't be needed, since a test station\r\nwill be running in `moduledev` mode. In the case that your unit tests can't\r\nstart a station, but still need to reference Javascript files in other modules,\r\nuse `moduledev`.\r\n\r\nTo make use of this, proxy requests for `myStation:stationPort/module/` through\r\nto `myServer:testServerPort/module/`.\r\n\r\ntest globals\r\n------------\r\n\r\nAdd some globals in the server config:\r\n\r\n    globals: {\r\n      hello: 'world',\r\n      foo: 'bar'\r\n    }\r\n\r\nThen require `niagara-test-server/globals` via RequireJS. It will give you a\r\nglobal `testGlobals` object:\r\n\r\n    console.log(window.testGlobals.hello); //'world'\r\n    console.log(window.testGlobals.foo); //'bar'\r\n\r\nMostly useful when adding these to your Grunt config. When requiring\r\n`niagara-test-server/public/karmaUtils` you'll magically get some special\r\nbehavior when you pass in certain globals:\r\n\r\n* `testOnly` - a regex string. Only specs that match this will be run.\r\n* `testNever` - a regex string. Specs that match this will never be run.\r\n\r\nstatic files\r\n------------\r\n\r\nIt can also serve up files that are located inside the module itself. Put them\r\nin the `/public/` folder. Standard test utility files like logging into the\r\nstation should go here.\r\n\r\nFor instance, `/public/browserLogin.js` is accessible at \r\n`myServer:testServerPort/public/browserLogin.js`.\r\n\r\nIf you need it to do something else, you can pass it a ghetto-middleware\r\nlistener to receive other web requests as well.\r\n\r\nIt's useful for unit testing Niagara web apps.\r\n\r\nExample\r\n-------\r\n\r\n    var config = {\r\n      moduleDevFilePath: 'd:/niagara/r40/niagara_home/etc/moduledev.properties',\r\n      host: '127.0.0.1',\r\n      port: 8091,\r\n      globals: {\r\n        testOnly: '^myModule'\r\n      }\r\n    };\r\n    \r\n    var server = require('niagara-test-server');\r\n    \r\n    server.start(config, function (err, server) {\r\n      if (err) {\r\n        return;\r\n      }\r\n      \r\n      // server is http.Server\r\n      console.log('server started');\r\n    });\r\n","created":"2014-09-07T18:40:29.996Z","modified":"2015-04-10T16:06:10.109Z","lastPublisher":{"name":"tridium","email":"lbyam@tridium.com"},"owners":[{"name":"tridium","email":"lbyam@tridium.com"}],"other":{"_attachments":{},"_from":".","_id":"niagara-test-server","_nodeVersion":"0.12.2","_npmUser":{"name":"tridium","email":"lbyam@tridium.com"},"_npmVersion":"2.7.4","_rev":"1-54ff6e52a0ef3482ab4861c6871cdd76","_shasum":"59e41207f40b20612deb3b2940005ae30b15b9ed","author":{"name":"Logan Byam","email":"lbyam@tridium.com"},"bugs":{"email":"lbyam@tridium.com"},"directories":{},"dist-tags":{"latest":"0.1.11"},"dist":{"shasum":"59e41207f40b20612deb3b2940005ae30b15b9ed","tarball":"http://registry.npmjs.org/niagara-test-server/-/niagara-test-server-0.1.11.tgz"},"maintainers":[{"name":"tridium","email":"lbyam@tridium.com"}],"readmeFilename":"README.md","time":{"modified":"2015-04-10T16:06:10.109Z","created":"2014-09-07T18:40:29.996Z","0.1.9":"2014-09-07T18:40:29.996Z","0.1.10":"2015-04-09T18:04:44.702Z","0.1.11":"2015-04-10T16:06:10.109Z"}}}