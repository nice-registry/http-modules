{"name":"httpntlm","description":"httpntlm is a Node.js library to do HTTP NTLM authentication","version":"1.7.5","dependencies":{"httpreq":">=0.4.22","underscore":"~1.7.0"},"engines":{"node":">=0.8.0"},"repository":"https://github.com/SamDecrock/node-http-ntlm","main":"./httpntlm","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"scripts":{"jshint":"jshint *.js"},"gitHead":"19d07477c4220320e7db6279b36618da16c64553","homepage":"https://github.com/SamDecrock/node-http-ntlm#readme","versions":[{"number":"0.0.1","date":"2013-08-14T01:06:22.861Z"},{"number":"1.0.0","date":"2013-08-14T01:07:49.987Z"},{"number":"1.0.1","date":"2013-08-14T08:52:38.212Z"},{"number":"1.0.2","date":"2014-04-12T13:53:12.683Z"},{"number":"1.1.0","date":"2014-04-12T13:56:38.447Z"},{"number":"1.2.0","date":"2014-05-15T14:19:27.230Z"},{"number":"1.3.0","date":"2014-07-11T08:02:15.728Z"},{"number":"1.4.0","date":"2014-11-12T13:25:09.687Z"},{"number":"1.4.1","date":"2014-12-24T09:32:34.065Z"},{"number":"1.5.0","date":"2014-12-30T09:11:27.175Z"},{"number":"1.5.1","date":"2015-02-13T15:04:15.625Z"},{"number":"1.5.2","date":"2015-02-24T15:23:02.497Z"},{"number":"1.5.3","date":"2016-02-18T13:00:42.883Z"},{"number":"1.6.1","date":"2016-05-02T11:51:07.958Z"},{"number":"1.7.0","date":"2016-10-26T19:27:41.323Z"},{"number":"1.7.1","date":"2016-10-29T08:29:40.800Z"},{"number":"1.7.3","date":"2016-11-18T15:54:48.577Z"},{"number":"1.7.4","date":"2017-02-19T21:47:03.848Z"},{"number":"1.7.5","date":"2017-03-13T12:22:05.361Z"}],"readme":"# httpntlm\n\n__httpntlm__ is a Node.js library to do HTTP NTLM authentication\n\nIt's a port from the Python libary [python-ntml](https://code.google.com/p/python-ntlm/)\n\n## Install\n\nYou can install __httpntlm__ using the Node Package Manager (npm):\n\n    npm install httpntlm\n\n## How to use\n\n```js\nvar httpntlm = require('httpntlm');\n\nhttpntlm.get({\n    url: \"https://someurl.com\",\n    username: 'm$',\n    password: 'stinks',\n    workstation: 'choose.something',\n    domain: ''\n}, function (err, res){\n    if(err) return err;\n\n    console.log(res.headers);\n    console.log(res.body);\n});\n```\n\nIt supports __http__ and __https__.\n\n## pre-encrypt the password\n```js\n\nvar httpntlm = require('httpntlm');\nvar ntlm = httpntlm.ntlm;\nvar lm = ntlm.create_LM_hashed_password('Azx123456');\nvar nt = ntlm.create_NT_hashed_password('Azx123456');\nconsole.log(lm);\nconsole.log(Array.prototype.slice.call(lm, 0));\nlm = new Buffer([ 183, 180, 19, 95, 163, 5, 118, 130, 30, 146, 159, 252, 1, 57, 81, 39 ]);\nconsole.log(lm);\n\nconsole.log(nt);\nconsole.log(Array.prototype.slice.call(nt, 0));\nnt = new Buffer([150, 27, 7, 219, 220, 207, 134, 159, 42, 60, 153, 28, 131, 148, 14, 1]);\nconsole.log(nt);\n\n\nhttpntlm.get({\n    url: \"https://someurl.com\",\n    username: 'm$',\n    lm_password: lm,\n    nt_password: nt,\n    workstation: 'choose.something',\n    domain: ''\n}, function (err, res){\n    if(err) return err;\n\n    console.log(res.headers);\n    console.log(res.body);\n});\n\n/* you can save the array into your code and use it when you need it\n\n<Buffer b7 b4 13 5f a3 05 76 82 1e 92 9f fc 01 39 51 27>// before convert to array\n[ 183, 180, 19, 95, 163, 5, 118, 130, 30, 146, 159, 252, 1, 57, 81, 39 ]// convert to array\n<Buffer b7 b4 13 5f a3 05 76 82 1e 92 9f fc 01 39 51 27>//convert back to buffer\n\n<Buffer 96 1b 07 db dc cf 86 9f 2a 3c 99 1c 83 94 0e 01>\n[ 150, 27, 7, 219, 220, 207, 134, 159, 42, 60, 153, 28, 131, 148, 14, 1 ]\n<Buffer 96 1b 07 db dc cf 86 9f 2a 3c 99 1c 83 94 0e 01>\n*/\n\n```\n\n\n## Options\n\n- `url:`      _{String}_   URL to connect. (Required)\n- `username:` _{String}_   Username. (Required)\n- `password:` _{String}_   Password. (Required)\n- `workstation:` _{String}_ Name of workstation or `''`.\n- `domain:`   _{String}_   Name of domain or `''`.\n\nif you already got the encrypted password,you should use this two param to replace the 'password' param.\n\n- `lm_password` _{Buffer}_ encrypted lm password.(Required)\n- `nt_password` _{Buffer}_ encrypted nt password. (Required)\n\nYou can also pass along all other options of [httpreq](https://github.com/SamDecrock/node-httpreq), including custom headers, cookies, body data, ... and use POST, PUT or DELETE instead of GET.\n\n\n\n\n## Advanced\n\nIf you want to use the NTLM-functions yourself, you can access the ntlm-library like this (https example):\n\n```js\nvar ntlm = require('httpntlm').ntlm;\nvar async = require('async');\nvar httpreq = require('httpreq');\nvar HttpsAgent = require('agentkeepalive').HttpsAgent;\nvar keepaliveAgent = new HttpsAgent();\n\nvar options = {\n    url: \"https://someurl.com\",\n    username: 'm$',\n    password: 'stinks',\n    workstation: 'choose.something',\n    domain: ''\n};\n\nasync.waterfall([\n    function (callback){\n        var type1msg = ntlm.createType1Message(options);\n\n        httpreq.get(options.url, {\n            headers:{\n                'Connection' : 'keep-alive',\n                'Authorization': type1msg\n            },\n            agent: keepaliveAgent\n        }, callback);\n    },\n\n    function (res, callback){\n        if(!res.headers['www-authenticate'])\n            return callback(new Error('www-authenticate not found on response of second request'));\n\n        var type2msg = ntlm.parseType2Message(res.headers['www-authenticate']);\n        var type3msg = ntlm.createType3Message(type2msg, options);\n\n        setImmediate(function() {\n            httpreq.get(options.url, {\n                headers:{\n                    'Connection' : 'Close',\n                    'Authorization': type3msg\n                },\n                allowRedirects: false,\n                agent: keepaliveAgent\n            }, callback);\n        });\n    }\n], function (err, res) {\n    if(err) return console.log(err);\n\n    console.log(res.headers);\n    console.log(res.body);\n});\n```\n\n## Download binary files\n\n```javascript\nhttpntlm.get({\n    url: \"https://someurl.com/file.xls\",\n    username: 'm$',\n    password: 'stinks',\n    workstation: 'choose.something',\n    domain: '',\n    binary: true\n}, function (err, response) {\n    if(err) return console.log(err);\n    fs.writeFile(\"file.xls\", response.body, function (err) {\n        if(err) return console.log(\"error writing file\");\n        console.log(\"file.xls saved!\");\n    });\n});\n```\n\n## More information\n\n* [python-ntlm](https://code.google.com/p/python-ntlm/)\n* [NTLM Authentication Scheme for HTTP](http://www.innovation.ch/personal/ronald/ntlm.html)\n* [LM hash on Wikipedia](http://en.wikipedia.org/wiki/LM_hash)\n\n## Donate\n\nIf you like this module or you want me to update it faster, feel free to donate. It helps increasing my dedication to fixing bugs :-)\n\n[![](https://www.paypalobjects.com/en_US/i/btn/btn_donate_LG.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=LPYD83FGC7XPW)\n\n\n## License (MIT)\n\nCopyright (c) Sam Decrock <https://github.com/SamDecrock/>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","starsCount":1,"created":"2013-08-14T01:06:19.948Z","modified":"2017-03-13T12:22:05.361Z","lastPublisher":{"name":"samdecrock","email":"sam.decrock@gmail.com"},"owners":[{"name":"samdecrock","email":"sam.decrock@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"httpntlm","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/httpntlm-1.7.5.tgz_1489407724671_0.38321744999848306"},"_npmUser":{"name":"samdecrock","email":"sam.decrock@gmail.com"},"_npmVersion":"3.10.10","_rev":"6-70684751f2d782c725fdd4cd241be4b1","_shasum":"cd1558ed93125418ece5bf824c1335675feedecc","author":{"name":"Sam Decrock","url":"https://github.com/SamDecrock/"},"bugs":{"url":"https://github.com/SamDecrock/node-http-ntlm/issues"},"directories":{},"dist-tags":{"latest":"1.7.5"},"dist":{"shasum":"cd1558ed93125418ece5bf824c1335675feedecc","tarball":"https://registry.npmjs.org/httpntlm/-/httpntlm-1.7.5.tgz"},"maintainers":[{"name":"samdecrock","email":"sam.decrock@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-13T12:22:05.361Z","created":"2013-08-14T01:06:19.948Z","0.0.1":"2013-08-14T01:06:22.861Z","1.0.0":"2013-08-14T01:07:49.987Z","1.0.1":"2013-08-14T08:52:38.212Z","1.0.2":"2014-04-12T13:53:12.683Z","1.1.0":"2014-04-12T13:56:38.447Z","1.2.0":"2014-05-15T14:19:27.230Z","1.3.0":"2014-07-11T08:02:15.728Z","1.4.0":"2014-11-12T13:25:09.687Z","1.4.1":"2014-12-24T09:32:34.065Z","1.5.0":"2014-12-30T09:11:27.175Z","1.5.1":"2015-02-13T15:04:15.625Z","1.5.2":"2015-02-24T15:23:02.497Z","1.5.3":"2016-02-18T13:00:42.883Z","1.6.1":"2016-05-02T11:51:07.958Z","1.7.0":"2016-10-26T19:27:41.323Z","1.7.1":"2016-10-29T08:29:40.800Z","1.7.3":"2016-11-18T15:54:48.577Z","1.7.4":"2017-02-19T21:47:03.848Z","1.7.5":"2017-03-13T12:22:05.361Z"},"users":{"muxa":true}}}