{"name":"arrowbreaker-sup","description":"An Express.js application that pings your urls and warns you about HTTP status code changes by email","version":"1.2.1","keywords":["ping","monitoring","uptime","downtime","alerts"],"dependencies":{"emailjs":"~0.3.4","express":"~3.1.0","stylus":"~0.32.1","nib":"~0.9.1","socket.io":"~0.9.13","arrr":"~0.2.0","async":"~0.2.6","jade":"~0.28.2","request":"~2.16.6"},"devDependencies":{},"readme":"# Arrowbreaker: Sup\n\nSup is an easy to setup web application for Node.js that will ping your urls and warn by email if their HTTP status code changes.\n\n- link to demo.\n- link arrowbreaker\n\n## License\n\nThis module is open source but not free. More info soon (link to arrowbreaker)\n\n## Installation\n\n```shell\nnpm install arrowbreaker-sup\n```\n\n## Usage\n\n### Initialize\n\n```js\nvar settings = {\n\n  // Gmail example\n  \n  email_server: {\n    user: 'yourgmail@gmail.com',\n    password: 'yourpassword',\n    host: 'smtp.gmail.com',\n    ssl: true\n  },\n\n  from: 'Sup <yourgmail@gmail.com>',        // <optional> Defaults: Sup <sup@arrowbreaker.com>\n  interval: 5000,                           // <optional> Defaults: 10000\n  data_file: __dirname + '/data.json',      // <optional> Defaults: __dirname/data.json\n\n};\n\nvar sup = require('arrowbreaker-sup')(settings); // Initialize sup\n\n``` \n\n- We use the wonderful [emailjs](https://github.com/eleith/emailjs) module. The **email_server** option gets passed directly into email.server.connect method. So check their documentation to for more options. The email server is optional but you wont get an email warnings without it.\n- The **interval** option is the amount of time between each ping. \n- The **data_file** option should point to a file on disk where sup will store your settings in a json format. If the doesn't exist it will be create.\n\n### Basic (examples/app.js)\n\n```js\nvar http = require('http');\n\nvar server = http.createServer(sup.app());  // This returns an Express.js app and creates an http server;\nsup.socket(server);                         // Socket IO needs an http server\n```\n\n### As an Express.js sub-app (examples/app_sub.js)\n\n```js\nvar http = require('http');\nvar base = express();\n\nbase.use('/sup', sup.app());                // Attach sup to your base app\nvar server = http.createServer(base);       // Create the server;\nsup.socket(server);                         // Socket IO needs an http server\n```\n\n### Attach your own socket.io instance (examples/socket.js)\n\nUse this if you are already using socket.io in your application.\n\n```js\nvar http = require('http');\nvar socketio = require('socket.io');\n\nvar server = http.createServer(sup.app());  // Create the server;\nvar io = socketio.listen(server);           // Socket.io needs an http server\nio.set('log level', 3);                     // Custom socket.io settings\nsup.attachSocket(io);                       // Attach socket.io\n```\n\nIf you have suggestions, bugs or need help don't be shy and open an issue.\n","versions":[{"number":"1.0.0","date":"2013-03-25T19:43:48.214Z"},{"number":"1.1.0","date":"2013-03-31T17:09:00.282Z"},{"number":"1.2.0","date":"2013-04-01T14:50:39.993Z"},{"number":"1.2.1","date":"2013-04-12T15:31:30.966Z"}],"created":"2013-03-25T19:43:46.239Z","modified":"2013-04-12T15:31:30.966Z","lastPublisher":{"name":"enome","email":"geert.pasteels@gmail.com"},"owners":[{"name":"enome","email":"geert.pasteels@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"arrowbreaker-sup","_npmUser":{"name":"enome","email":"geert.pasteels@gmail.com"},"_npmVersion":"1.2.15","_rev":"1-d1227e1602a06089e07b61518c792815","author":{"name":"Geert Pasteels","email":"geert.pasteels@gmail.com"},"directories":{},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"d8436de8f653159ab7dc90f9d2eaf350f4fbee48","tarball":"http://registry.npmjs.org/arrowbreaker-sup/-/arrowbreaker-sup-1.2.1.tgz"},"maintainers":[{"name":"enome","email":"geert.pasteels@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2013-04-12T15:31:30.966Z","created":"2013-03-25T19:43:46.239Z","1.0.0":"2013-03-25T19:43:48.214Z","1.1.0":"2013-03-31T17:09:00.282Z","1.2.0":"2013-04-01T14:50:39.993Z","1.2.1":"2013-04-12T15:31:30.966Z"}}}