{"name":"modified","version":"2.1.13","description":"Modified is a simple request client to deal with http local caches.","main":"index.js","scripts":{"test":"make test"},"repository":"https://github.com/kaelzhang/node-modified","keywords":["modified","http","client","request","last-modified","if-modified-since","etag","if-none-match","304"],"engines":{"node":">=0.8.0"},"license":"MIT","devDependencies":{"mocha":"~1.13.0","chai":"~1.8.0","fs-sync":"~0.2.4"},"dependencies":{"async":"~0.2.9","mkdirp":"~0.3.5","request":"~2.34.0"},"homepage":"https://github.com/kaelzhang/node-modified","versions":[{"number":"0.0.0","date":"2013-11-13T06:26:45.956Z"},{"number":"0.1.2","date":"2013-11-15T09:33:48.769Z"},{"number":"1.0.2","date":"2013-11-15T14:03:42.131Z"},{"number":"1.0.3","date":"2013-11-17T06:43:52.811Z"},{"number":"1.0.4","date":"2013-12-05T10:10:13.994Z"},{"number":"1.0.5","date":"2013-12-08T05:30:08.186Z"},{"number":"1.0.6","date":"2013-12-08T05:32:14.248Z"},{"number":"1.2.0","date":"2014-01-19T13:52:02.590Z"},{"number":"1.2.1","date":"2014-01-19T13:57:08.255Z"},{"number":"2.0.0","date":"2014-01-19T15:41:03.453Z"},{"number":"2.1.0","date":"2014-01-19T16:52:14.394Z"},{"number":"2.1.1","date":"2014-01-19T17:30:06.072Z"},{"number":"2.1.2","date":"2014-01-19T18:01:01.486Z"},{"number":"2.1.3","date":"2014-01-19T18:46:42.983Z"},{"number":"2.1.4","date":"2014-01-20T07:50:34.555Z"},{"number":"2.1.5","date":"2014-01-22T13:28:56.492Z"},{"number":"2.1.6","date":"2014-01-22T14:28:14.978Z"},{"number":"2.1.7","date":"2014-01-22T14:40:59.696Z"},{"number":"2.1.8","date":"2014-01-22T14:44:33.431Z"},{"number":"2.1.9","date":"2014-01-22T15:48:34.134Z"},{"number":"2.1.11","date":"2014-02-19T09:15:25.203Z"},{"number":"2.1.12","date":"2014-02-20T13:26:06.956Z"},{"number":"2.1.13","date":"2014-03-18T06:34:03.668Z"}],"readme":"# modified [![NPM version](https://badge.fury.io/js/modified.png)](http://badge.fury.io/js/modified) [![Build Status](https://travis-ci.org/kaelzhang/node-modified.png?branch=master)](https://travis-ci.org/kaelzhang/node-modified) [![Dependency Status](https://gemnasium.com/kaelzhang/node-modified.png)](https://gemnasium.com/kaelzhang/node-modified)\n\nModified is a simple request client to deal with http local cache. \n\nModified implemented `last-modified`, `if-modified-since`, `etag`, `if-none-match` of HTTP specifications.\n\t\n## Synopsis\n\nModified is built upon [request](https://npmjs.org/package/request) and flavors it with cache support, so if you are familiar with request, you are almost ready to use modified.\n\n```js\nvar modified = require('modified');\nvar request = modified(options); // Then use it almost the same as request\n\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'));\n```\n\n## Usage\n\nIf your server supports etag, or checks the `if-modified-since` header, `modified` will manage the local cache for you.\n\n### Specify the cache routing\n\nIf `options.cacheMapper` is not specified, caches will be saved into `'~/.node_modified/'` directory by default.\n\nBut you can do it yourself for better control.\n\n```js\nvar request = modified({\n\tcacheMapper: function(options, callback){\n\t\t// your code...\n\t\tcallback(\n\t\t\tnull, \n\t\t\tpath.join(\n\t\t\t\tpathToSaveNpmCache,\n\t\t\t\turl.parse(options.uri).pathname,\n\t\t\t\t'couchdb-document.json'\n\t\t\t)\n\t\t);\n\t}\n});\n\nrequest({\n\tmethod: 'GET',\n\turl: 'http://registry.npmjs.org/modified'\n\t\n}, function(err, res, body){\n\t// ...\n})\n```\n\n#### cache_file\n\n`String` \n\nThe file path of the local cache to save response body according to a specific request. (Response headers will be saved into `cache_file + '.modified-headers.json'`)\n\nIf you don't want modified to cache for a certain request, `cache_file` should be set to `null`\n\n```js\n{\n\tcacheMapper: function(options, callback){\n\t\tvar path = url.parse(options.url).pathname;\n\t\t\n\t\tif (path) {\n\t\t\t// 'http://xxx.com/abc/' -> '/abc'\n\t\t\tpath = path.replace(/\\/$/, '');\n\t\t\t\n\t\t\tcallback(\n\t\t\t\tnull, \n\t\t\t\t// Where the cache should be saved.\n\t\t\t\tpath.join(__dirname, 'cache', path)\n\t\t\t);\n\t\t\n\t\t} else {\n\t\t\tcallback(null, null);\n\t\t}\n\t}\n}\n```\n\nWith `options.cacheMapper`, you could specify the paths where the cache will be saved.\n\n\n## Programmatical APIs\n\n```\nvar request = modified(options);\n```\n\n- options `Object`\n\t- cacheMapper `function()` Which is described above\n\n### request(options, callback)\n\n`modified(options)` returns a function which acts nearly the same as [`request`](https://npmjs.org/package/request);\n\n#### Returns\n\n`request(options, callback)` returns an instance of `modified.Modified` which is a sub-class of [Readable Stream](http://nodejs.org/api/stream.html#stream_class_stream_readable). \n\nA instance of `Modified` is an [EventEmitter](http://nodejs.org/api/events.html#events_class_events_eventemitter) with the following extra event(s):\n\n\n#### Event: 'complete'\n\n- response [`http.ServerResponse`](http://nodejs.org/api/http.html#http_class_http_serverresponse) The response object\n- body `String` The response body\n\nEmitted when all the request process is complete, after the execution of user callback (the one of `request(options, callback)`).\n\n\n## Release History\n\n* 2.0.0 - Completely redesigned.\n\n* 1.1.0 - Modified instances are streams now. You can use modified to fetch binary files.\n\n* 1.0.0 - Initial release\n\n\n\n\n\n","created":"2013-11-13T06:26:39.810Z","modified":"2014-03-18T06:34:03.668Z","lastPublisher":{"name":"kael","email":"i@kael.me"},"owners":[{"name":"kael","email":"i@kael.me"}],"other":{"_attachments":{},"_from":".","_id":"modified","_npmUser":{"name":"kael","email":"i@kael.me"},"_npmVersion":"1.3.25","_rev":"1-6cbd4adf3379f2ed88461cff1c186af7","author":{"name":"kael"},"bugs":{"url":"https://github.com/kaelzhang/node-modified/issues"},"directories":{},"dist-tags":{"latest":"2.1.13"},"dist":{"shasum":"68301c5f3327de646d49bcf437ccdadf325026c9","tarball":"http://registry.npmjs.org/modified/-/modified-2.1.13.tgz"},"maintainers":[{"name":"kael","email":"i@kael.me"}],"readmeFilename":"README.md","time":{"modified":"2014-03-18T06:34:03.668Z","created":"2013-11-13T06:26:39.810Z","0.0.0":"2013-11-13T06:26:45.956Z","0.1.2":"2013-11-15T09:33:48.769Z","1.0.2":"2013-11-15T14:03:42.131Z","1.0.3":"2013-11-17T06:43:52.811Z","1.0.4":"2013-12-05T10:10:13.994Z","1.0.5":"2013-12-08T05:30:08.186Z","1.0.6":"2013-12-08T05:32:14.248Z","1.2.0":"2014-01-19T13:52:02.590Z","1.2.1":"2014-01-19T13:57:08.255Z","2.0.0":"2014-01-19T15:41:03.453Z","2.1.0":"2014-01-19T16:52:14.394Z","2.1.1":"2014-01-19T17:30:06.072Z","2.1.2":"2014-01-19T18:01:01.486Z","2.1.3":"2014-01-19T18:46:42.983Z","2.1.4":"2014-01-20T07:50:34.555Z","2.1.5":"2014-01-22T13:28:56.492Z","2.1.6":"2014-01-22T14:28:14.978Z","2.1.7":"2014-01-22T14:40:59.696Z","2.1.8":"2014-01-22T14:44:33.431Z","2.1.9":"2014-01-22T15:48:34.134Z","2.1.11":"2014-02-19T09:15:25.203Z","2.1.12":"2014-02-20T13:26:06.956Z","2.1.13":"2014-03-18T06:34:03.668Z"}}}