{"name":"torrent-http-bridge","private":false,"description":"Torrent <-> http bridge","main":"./lib","scripts":{"lint":"eslint ./src ./test","build":"babel ./src --out-dir ./lib --copy-files","clean":"rm -rf ./lib","pretest":"npm run lint","test":"rm -rf /tmp/webtorrent && babel-node test/*.js","test:watch":"npm run test -- -w","preversion":"npm test","version:auto":"npm version $(conventional-recommended-bump --preset=angular)","postversion":"git push --tags && git push","publish:auto":"npm run version:auto && npm publish","prepublish":"npm run build"},"czConfig":{"path":"node_modules/cz-conventional-changelog"},"keywords":[],"license":"MIT","homepage":"","dependencies":{"addr-to-ip-port":"^1.4.2","bitfield":"^1.1.2","bittorrent-dht":"^4.0.3","bittorrent-protocol":"^1.5.12","bittorrent-swarm":"^5.1.2","convict":"^1.0.1","create-torrent":"^3.15.1","debug":"^2.2.0","hat":"0.0.3","magnet-uri":"^5.0.0","nconf":"^0.8.2","parallel":"^0.2.1","parse-torrent":"^5.4.0","random-iterate":"^1.0.1","re-emitter":"^1.1.1","run-parallel":"^1.1.4","simple-get":"^1.4.3","torrent-discovery":"^3.3.1","torrent-piece":"^1.0.0","uniq":"^1.0.1","ut_metadata":"^2.7.4","ut_pex":"^1.0.3","xtend":"^4.0.0","zero-fill":"^2.2.1"},"devDependencies":{"babel":"^5.8.23","babel-eslint":"^4.1.3","bittorrent-tracker":"^6.0.6","conventional-recommended-bump":"^0.0.3","cz-conventional-changelog":"1.1.2","eslint":"^1.6.0","eslint-config-airbnb":"^0.1.0","finalhandler":"^0.4.0","parse-torrent":"^5.4.0","run-auto":"^1.1.3","serve-static":"^1.10.0","tape":"^4.2.2","webtorrent":"^0.62.3"},"version":"0.1.2","gitHead":"cd8641488fefe4c9ba7711571c5b69516652f380","versions":[{"number":"0.1.0","date":"2015-10-27T12:01:03.537Z"},{"number":"0.1.1","date":"2015-10-30T11:08:39.437Z"},{"number":"0.1.2","date":"2015-10-30T12:39:42.156Z"}],"readme":"# torrent-http-bridge\n\nWork in progress.\n\nExpose any URL over the bittorrent network.\n\n[WebTorrent](https://github.com/feross/webtorrent) based server that\nseeds files not located on the local filesystem but on remote URLs (the\nremote HTTP server must support [byte\nrange](https://en.wikipedia.org/wiki/Byte_serving) requests).\n\nThe server, also known as a torrent to http \"bridge\", announces the\ntorrent's infohash on BitTorrent's\n[DHT](https://en.wikipedia.org/wiki/Mainline_DHT) and whenever a peer\ntries downloading a file it knows about, it respond to requests by\nfetching parts of the remote URL using byte range requests and forward\nthose responses to the peer using the Bittorrent protocol.\n\n\n```\n                     +-------------------------+\n                     |       http server       |\n                     |                         |\n                     | http://domain/file.webm |\n                     +-^-----------------------+\n                       |\n                       |     (1) seed http://domain/file.webm\n     (7) byte range    |         with torrent file file.torrent\n         requests      |      +  and infohash XYZ\n                       |      |\n                     +-v------v-+                    +-----+\n                     |  bridge  +--------------------> DHT |\n                     +-^------^-+   (2) i have XYZ   +-----+\n                       |      |                         ^  |\n     (6) request file  |      |(5) torrent metadata     |  |\n         pieces        |      |                         |  |\n                     +-v------v-+     (3) who has XYZ   |  |\n                     |   peer   +-----------------------+  |\n                     +----------+                          |\n                           ^-------------------------------+\n                                   (4) bridge has XYZ\n```\n\n## install\n\n```bash\nnpm install --save torrent-http-bridge\n```\n\n## usage\n\n```js\nconst bridge = new HTTPBridge();\n\nbridge.on('ready', () => {\n  console.log('torrent port', bridge.torrentPort);\n  console.log('node id', bridge.nodeIdHex);\n  console.log('peer id', bridge.peerIdHex);\n\n  // url: url to seed\n  // parsedTorrent: torrent of the file to seed\n  // see parse-torrent module\n  bridge.seed(url, parsedTorrent, (err, torrent) => {\n    if (err) exit(err);\n    console.log('seeding', parsedTorrent.infoHash);\n    torrent.on('dhtAnnounce', () => {\n      console.log('dhtAnnounce');\n    });\n  });\n});\n```\n\n## test\n\n```\nnpm test\n```\n\n```\n./integration-test.sh\n```\n","created":"2015-10-27T12:01:03.537Z","modified":"2015-10-30T12:39:42.156Z","lastPublisher":{"name":"olalonde","email":"olalonde@gmail.com"},"owners":[{"name":"olalonde","email":"olalonde@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"torrent-http-bridge","_nodeVersion":"4.1.2","_npmUser":{"name":"olalonde","email":"olalonde@gmail.com"},"_npmVersion":"2.14.4","_rev":"1-937cb84e8c4028f9ae9a8ec2e88d887f","_shasum":"184034c0f6c0175aa9ef76f5c661d0b3ce2c7b47","author":{"name":"Olivier Lalonde","email":"olalonde@gmail.com"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"184034c0f6c0175aa9ef76f5c661d0b3ce2c7b47","tarball":"http://registry.npmjs.org/torrent-http-bridge/-/torrent-http-bridge-0.1.2.tgz"},"maintainers":[{"name":"olalonde","email":"olalonde@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-10-30T12:39:42.156Z","created":"2015-10-27T12:01:03.537Z","0.1.0":"2015-10-27T12:01:03.537Z","0.1.1":"2015-10-30T11:08:39.437Z","0.1.2":"2015-10-30T12:39:42.156Z"}}}