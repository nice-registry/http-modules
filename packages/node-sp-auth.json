{"version":"1.3.3","name":"node-sp-auth","description":"Unattended SharePoint http authentication with nodejs","main":"./lib/src/index.js","typings":"./lib/src/index","engines":{"node":">=4.0.0"},"keywords":["sharepoint","authentication","nodejs","saml","oauth","adfs"],"homepage":"https://github.com/s-KaiNet/node-sp-auth","scripts":{"build":"npm install && gulp tsc","dev":"gulp live-dev","test-int":"gulp test-int"},"repository":"https://github.com/s-KaiNet/node-sp-auth","devDependencies":{"@types/chai":"^3.4.34","@types/mocha":"^2.2.32","chai":"^3.5.0","del":"^2.2.2","gulp":"^3.9.1","gulp-debug":"^2.1.2","gulp-load-plugins":"^1.3.0","gulp-mocha":"^3.0.1","gulp-plumber":"^1.1.0","gulp-sourcemaps":"^2.0.0-alpha","gulp-tslint":"^6.1.2","gulp-typescript":"^3.0.1","merge-stream":"^1.0.0","run-sequence":"^1.2.2","tslint":"^3.15.1","typescript":"^2.0.3","yargs":"^5.0.0"},"dependencies":{"@types/bluebird":"^3.0.35","@types/cookie":"^0.1.29","@types/core-js":"^0.9.34","@types/jsonwebtoken":"^7.1.33","@types/lodash":"^4.14.37","@types/node":"^6.0.45","@types/request":"0.0.31","@types/request-promise":"^3.0.32","bluebird":"^3.4.6","cookie":"^0.3.1","httpntlm":"^1.6.1","jsonwebtoken":"^7.1.9","lodash":"^4.16.2","request":"^2.75.0","request-promise":"^4.1.1","xmldoc":"^0.5.1"},"gitHead":"aa28a14387c5b64e23bc81a94040d32dcfc1f1fa","versions":[{"number":"1.0.0","date":"2016-10-04T20:32:39.811Z"},{"number":"1.0.1","date":"2016-10-04T20:44:54.181Z"},{"number":"1.0.2","date":"2016-10-04T21:11:05.091Z"},{"number":"1.0.3","date":"2016-10-05T18:31:08.536Z"},{"number":"1.0.4","date":"2016-10-05T19:54:09.521Z"},{"number":"1.0.5","date":"2016-10-05T21:17:37.482Z"},{"number":"1.0.6","date":"2016-10-08T11:28:37.513Z"},{"number":"1.1.0","date":"2016-10-08T19:50:01.783Z"},{"number":"1.1.1","date":"2016-10-11T20:27:36.199Z"},{"number":"1.1.2","date":"2016-10-11T21:23:10.911Z"},{"number":"1.1.3","date":"2016-10-14T15:03:22.933Z"},{"number":"1.2.0","date":"2016-10-29T09:34:01.939Z"},{"number":"1.2.1","date":"2016-12-11T07:53:19.165Z"},{"number":"1.2.2","date":"2016-12-14T22:09:59.751Z"},{"number":"1.2.3","date":"2017-01-15T08:36:00.707Z"},{"number":"1.3.0","date":"2017-02-25T07:59:39.452Z"},{"number":"1.3.1","date":"2017-02-27T06:10:34.408Z"},{"number":"1.3.2","date":"2017-02-27T15:58:02.031Z"},{"number":"1.3.3","date":"2017-04-25T10:50:20.859Z"},{"number":"2.0.0","date":"2017-06-24T18:10:04.009Z"}],"readme":"# node-sp-auth - nodejs to SharePoint unattended http authentication [![analytics](http://www.google-analytics.com/collect?v=1&t=pageview&tid=UA-87971440-4&cid=8ca0a7b7-186f-4010-8c15-02a66bf95cbc&dl=https%3A%2F%2Fgithub.com%2Fs-KaiNet%2Fnode-sp-auth)]()\r\n[![NPM](https://nodei.co/npm/node-sp-auth.png?mini=true)](https://nodei.co/npm/node-sp-auth/)\r\n\r\n[![npm version](https://badge.fury.io/js/node-sp-auth.svg)](https://badge.fury.io/js/node-sp-auth)\r\n\r\n`node-sp-auth` allows you to perform SharePoint unattended (without user interaction) http authentication with nodejs using different authentication techniques. `node-sp-auth` also takes care about caching authentication data for performance (no need for you to think about how long authentication will be available, that's a task for `node-sp-auth`, as soon as authentication will be expired, `node-sp-auth` will renew it internally).  \r\nVersions supported:\r\n * SharePoint 2013, 2016\r\n * SharePoint Online\r\n\r\nAuthentication options:\r\n * SharePoint 2013, 2016:\r\n   * Addin only permissions\r\n   * User credentials through the http ntlm handshake\r\n   * Form-based authentication (FBA)\r\n * SharePoint Online:\r\n   * Addin only permissions\r\n   * SAML based with user credentials\r\n * ADFS user credentials (works with both SharePoint on-premise and Online)\r\n\r\n[Wiki](https://github.com/s-KaiNet/node-sp-auth/wiki) contains detailed steps you need to perform in order to use any of authentication options as well as sample using. \r\n\r\n---\r\n\r\n### How to use:\r\n#### Install:\r\n```bash\r\nnpm install node-sp-auth --save-dev\r\n```\r\n#### Create authentication headers and perform http request:\r\n\r\n```javascript\r\nvar spauth = require('node-sp-auth');\r\nvar request = require('request-promise');\r\n\r\n//get auth options\r\nspauth.getAuth(url, credentialOptions)\r\n  .then(function(options){\r\n\r\n    //perform request with any http-enabled library (request-promise in a sample below):\r\n    var headers = options.headers;\r\n    headers['Accept'] = 'application/json;odata=verbose';\r\n\r\n    request.get({\r\n      url: 'https://[your tenant].sharepoint.com/sites/dev/_api/web',\r\n      headers: headers\r\n    }).then(function(response){\r\n      //process data\r\n    });\r\n  });\r\n```\r\n\r\n## API:\r\n### getAuth(url, credentialOptions)\r\n#### return value:\r\nPromise resolving into object with following properties:\r\n - `headers` - http headers (normally contain `Authorization` header, may contain any other heraders as well)\r\n - `options` - any additional options you may need to include for succesful request. For example, in case of on premise user credentials authentication, you need to set `agent` property on corresponding http client\r\n\r\n#### params:\r\n - `url` - string, url to SharePoint site, `https://sp2013/sites/dev/` or `https:/[your tenant].sharepoint.com/sites/dev/`\r\n - `credentialOptions` - object in a form of key-value. Each authentication option requires predefined credential object, depending on authentication type. Based on credentials provided, `node-sp-auth` automatically determines which authentication strategy to use (strategies listed in the top of the readme file).  \r\n \r\nPossible values for `credentialOptions` (depending on authentication strategy):\r\n\r\n - SharePoint on premise (2013, 2016):\r\n    - [Addin only permissions:](https://github.com/s-KaiNet/node-sp-auth/wiki/SharePoint%20on-premise%20addin%20only%20authentication)  \r\n      `clientId`, `issuerId`, `realm`, `rsaPrivateKeyPath`, `shaThumbprint`\r\n    - [User credentials through the http ntlm handshake:](https://github.com/s-KaiNet/node-sp-auth/wiki/SharePoint%20on-premise%20user%20credentials%20authentication)  \r\n      `username`, `password`, `domain`, `workstation`\r\n    - [User credentials for form-based authentication (FBA):](https://github.com/s-KaiNet/node-sp-auth/wiki/SharePoint%20on-premise%20FBA%20authentication)  \r\n      `username`, `password`, `fba` = true\r\n\r\n - SharePoint Online: \r\n   - [Addin only permissions:](https://github.com/s-KaiNet/node-sp-auth/wiki/SharePoint%20Online%20addin%20only%20authentication)  \r\n     `clientId`, `clientSecret`\r\n   - [SAML based with user credentials](https://github.com/s-KaiNet/node-sp-auth/wiki/SharePoint%20Online%20user%20credentials%20authentication)  \r\n     `username` , `password`\r\n\r\n - [ADFS user credentials:](https://github.com/s-KaiNet/node-sp-auth/wiki/ADFS%20user%20credentials%20authentication)  \r\n   `username`, `password`, `relyingParty`, `adfsUrl`, `adfsCookie`\r\n\r\nPlease, use [Wiki](https://github.com/s-KaiNet/node-sp-auth/wiki) to see how you can configure your environment in order to use any of this authentication options.\r\n\r\n## Development:\r\nI recommend using VS Code for development. Repository already contains some settings for VS Code editor.\r\n\r\nBefore creating Pull Request you need to create an appropriate issue and reference it from PR.\r\n\r\n1. `git clone https://github.com/s-KaiNet/node-sp-auth.git`\r\n2. `npm run build` - restores dependencies and runs typescript compilation\r\n3. `gulp live-dev` - setup watchers and automatically runs typescript compilation, tslint and tests when you save files\r\n\r\n## Integration testing:\r\n1. Rename file `/test/integration/config.sample.ts` to `config.ts`.\r\n2. Update information in `config.ts` with appropriate values (urls, credentials).\r\n3. Run `gulp test-int`.","starsCount":3,"created":"2016-10-04T20:32:39.811Z","modified":"2017-06-24T18:10:04.009Z","lastPublisher":{"name":"s-kainet","email":"sergeev.srg@gmail.com"},"owners":[{"name":"s-kainet","email":"sergeev.srg@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-sp-auth","_nodeVersion":"6.10.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/node-sp-auth-1.3.3.tgz_1493117420224_0.1337728698272258"},"_npmUser":{"name":"s-kainet","email":"sergeev.srg@gmail.com"},"_npmVersion":"4.4.4","_rev":"13-e02e92d92b2c1b3b8048610234c065e5","_shasum":"bbcd50aab688170a54b011789bc6dd07428c5759","author":{"name":"Sergei Sergeev","email":"sergeev.srg@gmail.com"},"bugs":{"url":"https://github.com/s-KaiNet/node-sp-auth/issues"},"directories":{},"dist-tags":{"latest":"1.3.3","beta":"2.0.0"},"dist":{"shasum":"bbcd50aab688170a54b011789bc6dd07428c5759","tarball":"https://registry.npmjs.org/node-sp-auth/-/node-sp-auth-1.3.3.tgz"},"maintainers":[{"name":"s-kainet","email":"sergeev.srg@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-24T18:10:04.009Z","created":"2016-10-04T20:32:39.811Z","1.0.0":"2016-10-04T20:32:39.811Z","1.0.1":"2016-10-04T20:44:54.181Z","1.0.2":"2016-10-04T21:11:05.091Z","1.0.3":"2016-10-05T18:31:08.536Z","1.0.4":"2016-10-05T19:54:09.521Z","1.0.5":"2016-10-05T21:17:37.482Z","1.0.6":"2016-10-08T11:28:37.513Z","1.1.0":"2016-10-08T19:50:01.783Z","1.1.1":"2016-10-11T20:27:36.199Z","1.1.2":"2016-10-11T21:23:10.911Z","1.1.3":"2016-10-14T15:03:22.933Z","1.2.0":"2016-10-29T09:34:01.939Z","1.2.1":"2016-12-11T07:53:19.165Z","1.2.2":"2016-12-14T22:09:59.751Z","1.2.3":"2017-01-15T08:36:00.707Z","1.3.0":"2017-02-25T07:59:39.452Z","1.3.1":"2017-02-27T06:10:34.408Z","1.3.2":"2017-02-27T15:58:02.031Z","1.3.3":"2017-04-25T10:50:20.859Z","2.0.0":"2017-06-24T18:10:04.009Z"},"users":{"stumpj":true,"danielgp":true,"koltyakov":true}}}