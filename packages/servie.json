{"name":"servie","version":"0.2.5","description":"Standard HTTP interfaces","main":"dist/index.js","types":"dist/index.d.ts","files":["dist/","typings.json","LICENSE","logo.svg"],"scripts":{"lint":"tslint \"src/**/*.ts\" --type-check --project tsconfig.json","build":"rm -rf dist/ && tsc","specs":"jest --coverage","test":"npm run -s lint && npm run -s build && npm run -s specs","prepublish":"typings install && npm run build"},"repository":"https://github.com/serviejs/servie","keywords":["request","response","http","interface","req","res","server"],"license":"Apache-2.0","homepage":"https://github.com/serviejs/servie","devDependencies":{"jest":"^19.0.0","rimraf":"^2.5.4","tslint":"^5.0.0","tslint-config-standard":"^5.0.2","typescript":"^2.2.1","typings":"^2.1.0"},"dependencies":{"make-error-cause":"^1.2.2"},"gitHead":"7d5b59a626b9316d65c3efb9682588fe59bc58a9","versions":[{"number":"0.0.1","date":"2017-01-19T06:06:01.104Z"},{"number":"0.0.2","date":"2017-01-19T21:03:27.800Z"},{"number":"0.0.3","date":"2017-01-20T20:51:29.838Z"},{"number":"0.0.4","date":"2017-01-20T21:57:33.293Z"},{"number":"0.0.5","date":"2017-01-20T22:08:33.972Z"},{"number":"0.0.6","date":"2017-01-20T22:39:08.076Z"},{"number":"0.1.0","date":"2017-01-23T05:49:26.463Z"},{"number":"0.1.1","date":"2017-01-23T18:15:42.110Z"},{"number":"0.1.2","date":"2017-01-24T05:49:39.678Z"},{"number":"0.2.0","date":"2017-01-25T05:18:21.557Z"},{"number":"0.2.1","date":"2017-03-15T02:40:25.021Z"},{"number":"0.2.2","date":"2017-04-21T00:29:52.436Z"},{"number":"0.2.3","date":"2017-05-05T16:31:53.124Z"},{"number":"0.2.4","date":"2017-05-05T16:48:06.062Z"},{"number":"0.2.5","date":"2017-05-08T20:43:09.478Z"}],"readme":"# ![Servie](https://cdn.rawgit.com/serviejs/servie/master/logo.svg)\n\n[![NPM version](https://img.shields.io/npm/v/servie.svg?style=flat)](https://npmjs.org/package/servie)\n[![NPM downloads](https://img.shields.io/npm/dm/servie.svg?style=flat)](https://npmjs.org/package/servie)\n[![Build status](https://img.shields.io/travis/serviejs/servie.svg?style=flat)](https://travis-ci.org/serviejs/servie)\n[![Test coverage](https://img.shields.io/coveralls/serviejs/servie.svg?style=flat)](https://coveralls.io/r/serviejs/servie?branch=master)\n\n> **Servie** provides standard, framework-agnostic HTTP interfaces for servers and clients.\n\n## Installation\n\n```\nnpm install servie --save\n```\n\n## Usage\n\n* [`throwback`](https://github.com/serviejs/throwback) Compose middleware functions into a single function\n* [`servie-lambda`](https://github.com/serviejs/servie-lambda) Servie transport layer for AWS Lambda\n* [`servie-http`](https://github.com/serviejs/servie-http) Servie transport layer for node.js HTTP\n* [`busboy`](https://www.npmjs.com/package/busboy) A streaming parser for HTML form data\n* [`qs`](https://github.com/ljharb/qs) and [`querystring`](https://nodejs.org/api/querystring.html) Parse the HTTP query string to an object\n* [`consolidate`](https://github.com/tj/consolidate.js) Template rendering\n* [`get-body`](https://github.com/serviejs/get-body) General body parser for forms, JSON and text\n* [`servie-cors`](https://github.com/serviejs/servie-cors) CORS middleware for Servie\n* [`servie-route`](https://github.com/serviejs/servie-route) Routing middleware for Servie\n* [`servie-mount`](https://github.com/serviejs/servie-mount) Mount Servie middleware on a path prefix\n* [`servie-compat-http`](https://github.com/serviejs/servie-compat-http) Mimic node.js HTTP using Servie\n* [`servie-redirect`](https://github.com/serviejs/servie-redirect) Create response objects for redirection\n* [`servie-cookie-store`](https://github.com/serviejs/servie-cookie-store) API for managing client-side cookies\n* [`servie-errorhandler`](https://github.com/serviejs/servie-errorhandler) Standard error handler for transport layers\n* [`servie-finalhandler`](https://github.com/serviejs/servie-finalhandler) Standard final handler for transport layers\n\n### `Common`\n\n> Base HTTP class for common request and response logic.\n\n```ts\nimport { Common } from 'servie'\n```\n\n#### Options\n\n* `headers?` HTTP headers (`Headers | HeadersObject | string[]`)\n* `trailers?` HTTP trailers (`Headers | HeadersObject | string[]`)\n* `events?` An event emitter object (`EventEmitter`)\n* `body?` Allowed HTTP bodies (`string | Buffer | Readable | object`)\n\n#### Properties\n\n* `events` An event emitter for listening to the request and response lifecycles\n* `headers` The headers as a `Headers` instance\n* `trailers` The trailers as a `Headers` instance\n* `body` The request or response payload\n* `bodyUsed` A boolean indicating whether the body has been read\n* `bodyBuffered` A boolean indicating whether the body is buffered (e.g. string or buffer, not a stream)\n* `type` A shorthand property for reading and writing the `Content-Type` header\n* `length` A shorthand property for reading and writing `Content-Length` as a number\n* `started` Boolean indicating if a request/response has started\n* `finished` Boolean indicating if a request/response has finished\n* `bytesTransferred` The number of bytes sent in the HTTP request/response\n\n#### Methods\n\n* `buffer(maxBufferSize): Promise<Buffer>` Read the body into a `Buffer` object\n* `text(maxBufferSize): Promise<string>` Read the body as a `string`\n* `stream(): Readable` Read the body as a `Readable` stream\n\n#### Events\n\n* `headers` Emitted when the `headers` object is available\n* `trailers` Emitted when the `trailers` object is available\n* `started` Emitted when `started === true`\n* `finished` Emitted when `finished === true`\n* `progress` Emitted when `bytesTransferred` is incremented\n\n### `Request`\n\n> HTTP class for encapsulating a `Request`, extends `Common`.\n\n```ts\nimport { Request } from 'servie'\n```\n\n#### Options\n\n```ts\nconst request = new Request({\n  url: '/',\n  method: 'GET'\n})\n```\n\n> Extends `Common` options.\n\n* `url` The HTTP request url (`string`)\n* `method?` The HTTP request method (`string`, default: `GET`)\n* `connection?` Connection information (`{ remoteAddress?: string, remotePort?: number, localAddress?: string, localPort?: number, encrypted?: boolean }`)\n\n#### Properties\n\n* `url` The HTTP request url (`string`)\n* `method` The HTTP request method upper-cased (`string`)\n* `Url` The HTTP request url as a read-only parsed object (`object`)\n* `connection` Connection information (`{}`)\n\n#### Methods\n\n* `abort(): boolean` Emit an abort event\n* `error(message, code, status?, original?): HttpError` Create a HTTP error instance\n\n#### Events\n\n* `abort` Emitted when the request is aborted and MUST be handled by transport\n* `error` Emitted when an out-of-band error occurs (e.g. abort) and MUST be handled by the transport\n* `response` Emitted when the response object is being handled\n\n### `Response`\n\n> HTTP class for encapsulating a `Response`, extends `Common`.\n\n```ts\nimport { Response } from 'servie'\n```\n\n#### Options\n\n```ts\nconst response = new Response({})\n```\n\n> Extends `Common` options.\n\n* `status?` The HTTP response status code (`number`)\n* `statusText?` The HTTP response status message (`string`)\n\n#### Properties\n\n* `status?` The HTTP response status code (`number`)\n* `statusText?` The HTTP response status message (`string`)\n\n### `Headers`\n\n> Used by `Common` for `Request` and `Response` objects.\n\n#### Options\n\nTake a single parameter with the headers in object, array or `Headers` format.\n\n#### Properties\n\n* `raw` The raw HTTP headers list (`string[]`)\n\n#### Methods\n\n* `object(obj?: HeadersObject | null): HeadersObject | void` A getter/setter method for reading the headers as a lower-cased object (like node.js)\n* `set(name: string, value: string | string[]): this` Set a HTTP header by overriding case-insensitive headers of the same name\n* `append(name: string, value: string | string[]): this` Append a HTTP header\n* `get(name: string): string | undefined` Retrieve a case-insensitive HTTP header\n* `getAll(name: string): string[]` Retrieve a list of matching case-insensitive HTTP headers\n* `has(name: string): boolean` Check if a case-insensitive header is already set\n* `delete(name: string): this` Delete a case-insensitive header\n\n### `HttpError`\n\n> Internally and externally triggered HTTP errors.\n\n#### Properties\n\n* `code` A unique error code (`string`)\n* `status` A HTTP status code (`number`)\n* `request` The `Request` instance that triggered the error (`Request`)\n* `message` Standard error message (`string`)\n* `cause` Specified when the HTTP error was triggered by an underlying error\n\n## Implementers\n\nIf you're building the transports for Servie, there are some life cycle events you need to be aware of and emit yourself:\n\n1. Listen to the `error` event on `Request` for out-of-band errors and respond accordingly (e.g. app-level logging)\n2. Listen to the `abort` event on `Request` to destroy the HTTP request\n3. Emit the `response` event on `Request` when handling the response\n4. Set `started === true` and `finished === true` on `Request` and `Response`, as appropriate\n5. Set `bytesTransferred` on `Request` and `Response` when monitoring HTTP transfer progress\n\n## JavaScript\n\nThis module is designed for ES5 environments, but also requires `Promise` to be available.\n\n## TypeScript\n\nThis project is written using [TypeScript](https://github.com/Microsoft/TypeScript) and publishes the definitions directly to NPM.\n\n## License\n\nApache 2.0\n","created":"2017-01-19T06:06:01.104Z","modified":"2017-05-08T20:43:09.478Z","lastPublisher":{"name":"blakeembrey","email":"hello@blakeembrey.com"},"owners":[{"name":"blakeembrey","email":"hello@blakeembrey.com"}],"other":{"_attachments":{},"_from":".","_id":"servie","_nodeVersion":"7.3.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/servie-0.2.5.tgz_1494276185067_0.7691070584114641"},"_npmUser":{"name":"blakeembrey","email":"hello@blakeembrey.com"},"_npmVersion":"3.10.10","_rev":"15-844a7d330779544cf7103f5c08f909b2","_shasum":"1f2e311021efa7ef277b3cfc54eef835ce2f3736","author":{"name":"Blake Embrey","email":"hello@blakeembrey.com","url":"http://blakeembrey.me"},"bugs":{"url":"https://github.com/serviejs/servie/issues"},"directories":{},"dist-tags":{"latest":"0.2.5"},"dist":{"shasum":"1f2e311021efa7ef277b3cfc54eef835ce2f3736","tarball":"https://registry.npmjs.org/servie/-/servie-0.2.5.tgz"},"maintainers":[{"name":"blakeembrey","email":"hello@blakeembrey.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-08T20:43:09.478Z","created":"2017-01-19T06:06:01.104Z","0.0.1":"2017-01-19T06:06:01.104Z","0.0.2":"2017-01-19T21:03:27.800Z","0.0.3":"2017-01-20T20:51:29.838Z","0.0.4":"2017-01-20T21:57:33.293Z","0.0.5":"2017-01-20T22:08:33.972Z","0.0.6":"2017-01-20T22:39:08.076Z","0.1.0":"2017-01-23T05:49:26.463Z","0.1.1":"2017-01-23T18:15:42.110Z","0.1.2":"2017-01-24T05:49:39.678Z","0.2.0":"2017-01-25T05:18:21.557Z","0.2.1":"2017-03-15T02:40:25.021Z","0.2.2":"2017-04-21T00:29:52.436Z","0.2.3":"2017-05-05T16:31:53.124Z","0.2.4":"2017-05-05T16:48:06.062Z","0.2.5":"2017-05-08T20:43:09.478Z"}}}