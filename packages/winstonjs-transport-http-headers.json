{"name":"winstonjs-transport-http-headers","version":"0.1.2","description":"A WinstonJS transport that logs to HTTP headers, useful for sending profiling data to the browser that doesn't muddle the response body.","main":"main.js","scripts":{"test":"mocha","coverage":"istanbul cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/*","coveralls":"npm run coverage && coveralls < coverage/lcov.info"},"repository":"https://github.com/aerisweather/winstonjs-transport-http-headers","keywords":["winston","logging","transport","http","headers","profiling","profile","debug"],"license":"MIT","homepage":"https://github.com/aerisweather/winstonjs-transport-http-headers#readme","dependencies":{"winston":"^2.1.1"},"devDependencies":{"coveralls":"^2.11.6","express":"^4.13.4","istanbul":"^0.4.2","mocha":"^2.4.5","mocha-lcov-reporter":"^1.0.0","nock":"^7.0.2","sinon":"^1.17.3","supertest":"^1.1.0"},"gitHead":"912a4a1c139b7f6946ae97082e9464847a03d0d8","versions":[{"number":"0.1.0","date":"2016-02-08T18:36:19.457Z"},{"number":"0.1.1","date":"2016-02-08T18:38:40.638Z"},{"number":"0.1.2","date":"2016-03-22T15:51:36.039Z"}],"readme":"WinstonJS Transport: HTTP Headers\n=================================\n\nA WinstonJS transport that logs to HTTP headers, useful for sending profiling data to the browser that doesn't muddle the response body.\n\nMaster Build Status:\n[![Build Status](https://travis-ci.org/aerisweather/winstonjs-transport-http-headers.svg?branch=master)](https://travis-ci.org/aerisweather/winstonjs-transport-http-headers)\n[![Coverage Status](https://coveralls.io/repos/aerisweather/winstonjs-transport-http-headers/badge.svg?branch=master&service=github)](https://coveralls.io/github/aerisweather/winstonjs-transport-http-headers?branch=master)\n\n__This project sponsored by:__\n\n[![AerisWeather](http://branding.aerisweather.com/logo-dark-small.png)](http://www.aerisweather.com) - Empowering the next generation, [aerisweather.com](https://www.aerisweather.com)\n\nInstallation\n------------\n\nThis project is available on npm:\n\n```sh\nnpm install --save winstonjs-transport-http-headers\n```\n\nExample\n-------\n\n**Note:** A full example can be found in `example.js` which integrates an ExpressJS HTTP Server\n\nThe logger should be added to the response, probably in middleware:\n\n```javascript\n// Middleware example to setup our logger.\napp.use(function(req, res, next) {\n    res.logger = new (winston.Logger)({\n        transports: [\n            // Here is our new logger\n            new HttpHeaderTransport({\n                setHeader: res.set.bind(res),\n                level: 'debug'\n            }),\n            // We can use the HTTP Header logger in combination with other loggers too.\n            new (winston.transports.Console)({\n                level: 'warn'\n            })\n        ],\n        //Setup Levels for this logger\n        levels:     {\n            warn: 4,\n            info: 6,\n            debug: 7\n        }\n    });\n    next();\n});\n```\n\nThen in an action, we can log something to the response:\n```javascript\n// Will log to a header: `x-logger-0-debug`\nres.logger.log('debug', 'Basic Log Message');\n\n// Will log to both a header and the console (as defined above)\nres.logger.log('warn', 'Uh oh');\n```\n\nDocs\n----\n\n### new HttpHeaders(options)\n\n| Param        | Type       | Default       | Description                                                               |\n| ------------ | ---------- | ------------- | ------------------------------------------------------------------------- |\n| setHeader    | `function` |               | A callable (key, value) that will set the header to the request. |\n| silent       | `boolean`  | `false`       | If enabled, logger will not log to HTTP Header, will not emit events. |\n| level        | `level`    | `\"debug\"`     | What level this logger should respond to, see Winston docs for more info. |\n| headerPrefix | `string`   | `\"X-Logger-\"` | A callable that provides a string that is prepended to each header. |\n| getHeaderId  | `function` | `(default)`   | A callable that gets a header ID based on passed options. |\n| cleanId      | `function` | `(default)`   | Cleans a string into a nice HTTP friendly header ID. |","created":"2016-02-08T18:36:19.457Z","modified":"2016-03-22T15:51:36.039Z","lastPublisher":{"name":"four43","email":"seth@four43.com"},"owners":[{"name":"four43","email":"seth@four43.com"}],"other":{"_attachments":{},"_from":".","_id":"winstonjs-transport-http-headers","_nodeVersion":"4.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/winstonjs-transport-http-headers-0.1.2.tgz_1458661893718_0.2645675509702414"},"_npmUser":{"name":"four43","email":"seth@four43.com"},"_npmVersion":"2.14.7","_rev":"1-08afb4bb6629712ef4666f7d32eeb27d","_shasum":"3846c0a44552c378288752c12d1c0c094c44c6bd","author":{"name":"Seth Miller","email":"smiller@aerisweather.com"},"bugs":{"url":"https://github.com/aerisweather/winstonjs-transport-http-headers/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"3846c0a44552c378288752c12d1c0c094c44c6bd","tarball":"http://registry.npmjs.org/winstonjs-transport-http-headers/-/winstonjs-transport-http-headers-0.1.2.tgz"},"maintainers":[{"name":"four43","email":"seth@four43.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-22T15:51:36.039Z","created":"2016-02-08T18:36:19.457Z","0.1.0":"2016-02-08T18:36:19.457Z","0.1.1":"2016-02-08T18:38:40.638Z","0.1.2":"2016-03-22T15:51:36.039Z"}}}