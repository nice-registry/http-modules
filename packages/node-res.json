{"name":"node-res","version":"4.0.0","description":"Nodejs http response builder","main":"index.js","scripts":{"lint":"standard","pretest":"npm run lint","posttest":"npm run coverage","test:local":"FORCE_COLOR=true node bin/index.js --local","test":"nyc npm run test:local","test:win":"set FORCE_COLOR=true && node bin/index.js --win","coverage":"nyc report --reporter=text-lcov | coveralls"},"license":"MIT","devDependencies":{"co-functional":"^0.2.1","coveralls":"^2.13.1","cz-conventional-changelog":"^2.0.0","japa":"^1.0.3","japa-cli":"^1.0.1","nyc":"^11.0.2","semver":"^5.3.0","standard":"^10.0.2","supertest":"^3.0.0"},"dependencies":{"content-disposition":"^0.5.2","content-type":"^1.0.2","etag":"^1.8.0","mime-types":"^2.1.15","send":"^0.15.3","vary":"^1.1.1"},"repository":"https://github.com/poppinss/node-res","keywords":["node-res","http","response","http-res","response","builder","res","builder"],"homepage":"https://github.com/poppinss/node-res#readme","config":{"commitizen":{"path":"./node_modules/cz-conventional-changelog"}},"nyc":{"include":["src"]},"gitHead":"ad7d3445cef71b42d8a575f583c8e5b923ba5b83","versions":[{"number":"1.0.0","date":"2015-06-05T09:27:43.128Z"},{"number":"1.0.1","date":"2015-06-05T09:29:35.494Z"},{"number":"1.0.2","date":"2015-06-14T05:12:41.452Z"},{"number":"1.0.3","date":"2015-06-15T09:00:56.169Z"},{"number":"1.0.4","date":"2015-09-05T11:37:19.863Z"},{"number":"1.0.5","date":"2015-09-23T05:37:05.341Z"},{"number":"2.0.0","date":"2015-12-29T16:12:23.316Z"},{"number":"2.0.2","date":"2016-01-19T13:24:10.287Z"},{"number":"3.0.0","date":"2016-06-25T22:30:38.943Z"},{"number":"3.0.1","date":"2016-11-08T08:25:07.983Z"},{"number":"3.0.2","date":"2017-06-12T09:19:16.675Z"},{"number":"4.0.0","date":"2017-06-16T05:18:29.109Z"}],"readme":"# Node Res\n\n> A facade over Node.js HTTP `res` object with no side-effects.\n\n[![NPM Version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Appveyor][appveyor-image]][appveyor-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n\n<a href=\"http://i1117.photobucket.com/albums/k594/thetutlage/poppins-1_zpsg867sqyl.png\">\n<img src=\"http://i1117.photobucket.com/albums/k594/thetutlage/poppins-1_zpsg867sqyl.png\" width=\"300px\" align=\"right\" vspace=\"20px\" />\n</a>\n\n`node-res` is a simple module to make HTTP response in Node.js. In offers helpers to make it easier to set `headers`, define response statuses and properly parse response type to set appropriate headers.\n\nFor example:\n\n```js\n// content-type: plain/text\nnodeRes.send(req, res, 'Hello world')\n\n// content-type: application/json\nnodeRes.send(req, res, { greeting: 'hello world' })\n    \n// content-type: text/html\nnodeRes.send(req, res, '<h2> Hello world </h2>')\n```\n\n## See also\n\n1. [node-req](https://npmjs.org/package/node-req)\n2. [node-cookie](https://npmjs.org/package/node-cookie)\n\n## Responding to requests.\n\n```javascript\nconst http = require('http')\nconst nodeRes = require('node-res')\n\nhttp.createServer(function (req, res) {\n  \n  // plain text\n  nodeRes.send(req, res, \"Hello world\")\n\n  // json\n  nodeRes.json(req, res, {time:\"now\"})\n\n  // jsonp\n  nodeRes.jsonp(req, res, {time:\"now\"}, \"callback\")\n\n}).listen(3000)\n\n```\n\nnodeRes takes http server `res` object as first argument to perform any operations.\n\n## Methods\n\n### getHeader\nReturns the value of an existing header on\nthe response object\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n\n**Returns**\nArray\n\n**Example**\n```js\nnodeRes.getHeader(res, 'Content-type')\n```\n\n----\n### header\nSets header on the response object\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n| value | String | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.header(res, 'Content-type', 'application/json')\n\n// or set an array of headers\nnodeRes.header(res, 'Link', ['<http://localhost/>', '<http://localhost:3000/>'])\n```\n\n----\n### status\nSet status on the HTTP res object\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| code | Number | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.status(200)\n```\n\n----\n### safeHeader\nSets the header on response object, only if it\ndoes not exists.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n| value | String | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.safeHeader(res, 'Content-type', 'application/json')\n```\n\n----\n### removeHeader\nremoving header using it's key\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n----\n### write\nWrite string or buffer to the response object.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| body | String|Buffer | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.write(res, 'Hello world')\n```\n\n----\n### end\nExplictly end HTTP response\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n----\n### send\nSend body as the HTTP response and end it. Also\nthis method will set the appropriate `Content-type`\nand `Content-length`.\n\nIf body is set to null, this method will end the response\nas 204.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| body | Mixed | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.send(req, res, 'Hello world')\n\n// or html\nnodeRes.send(req, res, '<h2> Hello world </h2>')\n\n// or JSON\nnodeRes.send(req, res, { greeting: 'Hello world' })\n\n// or Buffer\nnodeRes.send(req, res, Buffer.from('Hello world', 'utf-8'))\n```\n\n----\n### json\nReturns the HTTP response with `Content-type`\nset to `application/json`.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| body | Object | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.json(req, res, { name: 'virk' })\nnodeRes.json(req, res, [ 'virk', 'joe' ])\n```\n\n----\n### jsonp\nMake JSONP response with `Content-type` set to\n`text/javascript`.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| body | Object | Yes | &nbsp; |\n| callbackFn  | String | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.jsonp(req, res, { name: 'virk' }, 'callback')\n```\n\n----\n### download\nDownload file as a stream. Stream will be closed once\ndownload is finished.\n\nOptions are passed directly to [send](https://www.npmjs.com/package/send)\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| filePath | String | Yes | &nbsp; |\n| options  | Object | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.download(req, res, '/storage/data.txt')\n```\n\n----\n### attachment\nSend file as a stream with Content-Disposition of attachment\nwhich forces the download of the file.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| filePath | String | Yes | &nbsp; |\n| name  | String | No | &nbsp; |\n| disposition  | String | No | &nbsp; |\n| options | Object | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.attachment(req, res, '/storage/data.txt', 'data.txt')\n```\n\n----\n### location\nSet `Location` header on the HTTP response.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| url | String | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n----\n### redirect\nRedirect the HTTP request to the given url.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| res | Object | Yes | &nbsp; |\n| url | String | Yes | &nbsp; |\n| status  | Number | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.redirect(req, res, '/')\n```\n\n----\n### vary\nAdd vary header to the HTTP response.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| field | String | Yes | &nbsp; |\n\n**Returns**\nVoid\n\n----\n### type\nSet content type header by looking up the actual\ntype and setting charset to utf8\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| type | String | Yes | &nbsp; |\n| charset  | String | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeRes.type(res, 'html')\nnodeRes.type(res, 'json')\nnodeRes.type(res, 'application/json')\n```\n\n----\n\n\n## Descriptive methods\nNode res also has support for descriptive methods, they set the status itself without calling the `status` method.\n\n```javascript\nnodeRes.ok(req, res, 'Hello world') // will set 200 as status\nnodeRes.unauthorized(req, res, 'You must login first') // will set 401 as status\n```\n\n| method | http response status |\n|--------|-------------|\n| continue | 100 |\n| switchingProtocols | 101 |\n| ok | 200 |\n| created | 201 |\n| accepted | 202 |\n| nonAuthoritativeInformation | 203 |\n| noContent | 204 |\n| resetContent | 205 |\n| partialContent | 206 |\n| multipleChoices | 300 |\n| movedPermanently | 301 |\n| found | 302 |\n| seeOther | 303 |\n| notModified | 304 |\n| useProxy | 305 |\n| temporaryRedirect | 307 |\n| badRequest | 400 |\n| unauthorized | 401 |\n| paymentRequired | 402 |\n| forbidden | 403 |\n| notFound | 404 |\n| methodNotAllowed | 405 |\n| notAcceptable | 406 |\n| proxyAuthenticationRequired | 407 |\n| requestTimeout | 408 |\n| conflict | 409 |\n| gone | 410 |\n| lengthRequired | 411 |\n| preconditionFailed | 412 |\n| requestEntityTooLarge | 413 |\n| requestUriTooLong | 414 |\n| unsupportedMediaType | 415 |\n| requestedRangeNotSatisfiable | 416 |\n| expectationFailed | 417 |\n| unprocessableEntity | 422 |\n| tooManyRequests | 429 |\n| internalServerError | 500 |\n| notImplemented | 501 |\n| badGateway | 502 |\n| serviceUnavailable | 503 |\n| gatewayTimeout | 504 |\n| httpVersionNotSupported | 505 |\n\n\n[appveyor-image]: https://img.shields.io/appveyor/ci/thetutlage/node-res/master.svg?style=flat-square\n\n[appveyor-url]: https://ci.appveyor.com/project/thetutlage/node-res\n\n[npm-image]: https://img.shields.io/npm/v/node-res.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/node-res\n\n[travis-image]: https://img.shields.io/travis/poppinss/node-res/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/poppinss/node-res\n\n[coveralls-image]: https://img.shields.io/coveralls/poppinss/node-res/develop.svg?style=flat-square\n\n[coveralls-url]: https://coveralls.io/github/poppinss/node-res\n","created":"2015-06-05T09:27:43.128Z","modified":"2017-06-16T05:18:29.109Z","lastPublisher":{"name":"virk","email":"virk@adonisjs.com"},"owners":[{"name":"virk","email":"virk@adonisjs.com"}],"other":{"_attachments":{},"_id":"node-res","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-res-4.0.0.tgz_1497590309010_0.26078948308713734"},"_npmUser":{"name":"virk","email":"virk@adonisjs.com"},"_npmVersion":"5.0.0","_rev":"6-24a9e418da024d40ce259e69d0cb599a","author":{"name":"amanvirk"},"bugs":{"url":"https://github.com/poppinss/node-res/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"4.0.0"},"dist":{"integrity":"sha512-ESTzsWOOslFEMEUaXJ2pdnp1iRxPIoex1geQS95SnpngQrMbl941TlLu16JC4zT7/nLg20F5S2oWYu+5v5/UvA==","shasum":"da9a4b17f6b9c5768b235673cd840ca6a1152065","tarball":"https://registry.npmjs.org/node-res/-/node-res-4.0.0.tgz"},"maintainers":[{"name":"virk","email":"virk@adonisjs.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-16T05:18:29.109Z","created":"2015-06-05T09:27:43.128Z","1.0.0":"2015-06-05T09:27:43.128Z","1.0.1":"2015-06-05T09:29:35.494Z","1.0.2":"2015-06-14T05:12:41.452Z","1.0.3":"2015-06-15T09:00:56.169Z","1.0.4":"2015-09-05T11:37:19.863Z","1.0.5":"2015-09-23T05:37:05.341Z","2.0.0":"2015-12-29T16:12:23.316Z","2.0.2":"2016-01-19T13:24:10.287Z","3.0.0":"2016-06-25T22:30:38.943Z","3.0.1":"2016-11-08T08:25:07.983Z","3.0.2":"2017-06-12T09:19:16.675Z","4.0.0":"2017-06-16T05:18:29.109Z"}}}