{"name":"cockrel-middleware","version":"1.2.0","description":"Cockrel plugin for making HTTP middlewares","main":"index.js","scripts":{"test":"mocha --bail --check-leaks test/"},"repository":"https://github.com/g5095/cockrel-middleware","keywords":["cockrel","middleware","express","connect","http"],"license":"ISC","homepage":"https://github.com/g5095/cockrel-middleware#readme","peerDependencies":{"cockrel":"^1.7.3"},"dependencies":{},"devDependencies":{"cockrel":"^1.7.3","cockrel-request":"^1.2.2","express":"^4.13.4","mocha":"^2.5.3"},"gitHead":"08959cfaa3f92fd67b6da887402b5a32343bdc3d","versions":[{"number":"1.0.0","date":"2016-06-08T15:58:14.261Z"},{"number":"1.0.1","date":"2016-06-08T16:21:58.209Z"},{"number":"1.1.0","date":"2016-06-13T12:56:05.109Z"},{"number":"1.1.1","date":"2016-06-13T13:55:48.603Z"},{"number":"1.1.2","date":"2016-06-17T11:36:18.851Z"},{"number":"1.2.0","date":"2016-06-29T11:05:51.819Z"}],"readme":"# cockrel-middleware\n[Cockrel](https://github.com/g5095/cockrel) plugin for making HTTP middlewares \n\n\n## Install\n\nRequire cockrel and pass it to cockrel-middleware to load the plugin, unlike \nother plugins, keep a reference to cockrel-middleware around, you're going to\nneed it later:\n\n```javascript\nconst co = require('cockrel');\nconst mid = require('cockrel-middleware');\nmid(co); // Good to go!\n```\n\n## Usage\n\nCockrel-middleware is a plugin that provides step functions as well as a\nwrapper used to connect Cockrel chains to Express, Connect or other middleware\nbased HTTP servers.\n\nWrapper: \n\n- [middleware.begin(chain)](#begin)\n\nSteps:\n\n- [.response(opts)](#response)\n- [.next()](#next)\n\n\n\n#### begin\n\nUse the begin function of the plugin object to transform a chain into a \nmiddleware, this example uses express to create a simple JSON echo server.\n\n```javascript\nconst express = require('express');\nconst express = require('body-parser');\nconst co = require('cockrel');\nconst mid = require('cockrel-middleware');\nmid(co); \n\nconst app = express();\napp.use(bodyParser.JSON());\n\napp.post('/echo', mid.begin(co.pick({data : '!body'}).response('json')));\n```\n\nYou'll immediately notice some differences from regular cockrel chain usage, \nwe do not explicitly call chain.begin with a value, the middleware.begin wrapper\ndoes that for us, passing the framework's request object as the data to our \nchain.  In this example we use the builtin 'pick' step to create a new value \nwith the posted JSON body, which we then respond with using express' res.json\nmethod. \n\n\n#### response\n\nthe .response step for the most part wraps the response object provided to\nthe middleware by your HTTP framework of choice. This means in the case of \nexpress, you can invoke any of res.send, res.json, res.status etc.. with\n.response('method', args). You can call .response multiple times to set \nheaders, status etc.\n\nIf no args are provided, the previous chain result will be passed as the \nvalue. For example:\n\n```javascript\n\napp.get('/cat', mid.begin(\n  co.pick({species : 'cat', name : 'mittens'}).response('json')));\n```\n\nWill invoke the express response.json method like this:\n\n```javascript\nresponse.json({species : 'cat', name : 'mittens'})\n```\n\nHowever an explicit static response can be delivered with:\n\n```javascript\napp.post('/cat', mid.begin(\n  co.pick({species : 'cat', name : 'mittens'})\n    .do(saveCat)\n    .response('json', {msg: 'ok'})));\n```\n\nIt is important to note that .response is a pass-through step, it will not\nmutate the previous step's value, and it will pass it down the chain.\n\n\n#### next\n\nIn the event that you are constructing a middleware, and expect the request\nto continue to another middleware, be sure to call .next() to hand over to the\nnext middleware in the chain. \n","created":"2016-06-08T15:58:14.261Z","modified":"2016-06-29T11:05:51.819Z","lastPublisher":{"name":"g5095","email":"tim@rhema.io"},"owners":[{"name":"g5095","email":"tim@rhema.io"}],"other":{"_attachments":{},"_from":".","_id":"cockrel-middleware","_nodeVersion":"6.2.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cockrel-middleware-1.2.0.tgz_1467198349469_0.4437435830477625"},"_npmUser":{"name":"g5095","email":"tim@rhema.io"},"_npmVersion":"3.8.9","_rev":"1-3c439469a3c6271b06ee64b3d271cd63","_shasum":"0f703713e5691ad7687572834cbec4aa3b9e1a58","author":{"name":"g5095"},"bugs":{"url":"https://github.com/g5095/cockrel-middleware/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"0f703713e5691ad7687572834cbec4aa3b9e1a58","tarball":"http://registry.npmjs.org/cockrel-middleware/-/cockrel-middleware-1.2.0.tgz"},"maintainers":[{"name":"g5095","email":"tim@rhema.io"}],"readmeFilename":"README.md","time":{"modified":"2016-06-29T11:05:51.819Z","created":"2016-06-08T15:58:14.261Z","1.0.0":"2016-06-08T15:58:14.261Z","1.0.1":"2016-06-08T16:21:58.209Z","1.1.0":"2016-06-13T12:56:05.109Z","1.1.1":"2016-06-13T13:55:48.603Z","1.1.2":"2016-06-17T11:36:18.851Z","1.2.0":"2016-06-29T11:05:51.819Z"}}}