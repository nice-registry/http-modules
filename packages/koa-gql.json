{"name":"koa-gql","version":"0.1.2","description":"Create a GraphQL HTTP server with Koa.","license":"BSD-3-Clause","repository":"https://github.com/chentsulin/koa-gql","keywords":["koa","graphql","middleware","api"],"main":"dist/index.js","files":["dist","README.md","LICENSE","PATENTS"],"options":{"mocha":"--harmony --require resources/mocha-bootload src/**/__tests__/**/*.js"},"scripts":{"prepublish":". ./scripts/prepublish.sh","test":"npm run lint && npm run testonly","testonly":"mocha $npm_package_options_mocha","lint":"eslint src","check":"flow check","build":"rm -rf dist/* && babel src --ignore __tests__ --out-dir dist -b regenerator","watch":"babel --optional runtime resources/watch.js | node","cover":"babel-node node_modules/.bin/isparta cover --root src --report html node_modules/.bin/_mocha -- $npm_package_options_mocha","cover:lcov":"babel-node node_modules/.bin/isparta cover --root src --report lcovonly node_modules/.bin/_mocha -- $npm_package_options_mocha","preversion":"npm test"},"dependencies":{"bluebird":"^2.9.34","content-type":"^1.0.1","http-errors":"^1.3.1","raw-body":"^2.1.2"},"peerDependencies":{"graphql":"^0.4.2"},"devDependencies":{"babel":"^5.8.21","babel-core":"^5.8.21","babel-eslint":"^4.0.5","babel-runtime":"^5.8.20","chai":"^3.2.0","coveralls":"^2.11.3","eslint":"^1.1.0","flow-bin":"^0.14.0","graphql":"^0.4.2","isparta":"^3.0.3","koa":"^0.21.0","koa-mount":"^1.3.0","mocha":"^2.2.5","multer":"^1.0.3","sane":"^1.1.3","supertest":"^1.0.1","supertest-as-promised":"^2.0.2","thenify":"^3.1.0"},"gitHead":"20dc87b9ca0ea48b93ad0002c2e1e7dd4be0960f","homepage":"https://github.com/chentsulin/koa-gql#readme","versions":[{"number":"0.1.0","date":"2015-08-12T11:50:23.545Z"},{"number":"0.1.1","date":"2015-08-12T13:16:25.089Z"},{"number":"0.1.2","date":"2015-08-16T04:49:35.182Z"}],"readme":"# GraphQL Koa Middleware\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david_img]][david_site]\n\nCreate a GraphQL HTTP server with [Koa](http://koajs.com/).\n\nPort from [express-graphql](https://github.com/graphql/express-graphql)\n\n## Install\n\n```\nnpm install --save koa-gql\n```\n\n> NOTE: `koa-graphql` has been used by other developer. So use `koa-gql` instead.\n\n## Usage\n\n```js\nvar koa = require('koa');\nvar mount = require('koa-mount');\nvar graphqlHTTP = require('koa-gql');\n\nvar app = koa();\n\napp.use(mount('/graphql', graphqlHTTP({ schema: MyGraphQLSchema })));\n```\n\n> NOTE: Below is a copy from express-graphql's README. In this time I implemented almost same api, but it may be changed as time goes on.\n\n### HTTP Usage\n\nOnce installed at a path, `express-graphql` will accept requests with\nthe parameters:\n\n  * **`query`**: A string GraphQL document to be executed.\n\n  * **`variables`**: The runtime values to use for any GraphQL query variables\n    as a JSON object.\n\n  * **`operationName`**: If the provided `query` contains multiple named\n    operations, this specifies which operation should be executed. If not\n    provided, an 400 error will be returned if the `query` contains multiple\n    named operations.\n\nGraphQL will first look for each parameter in the URL's query-string:\n\n```\n/graphql?query=query+getUser($id:ID){user(id:$id){name}}&variables={\"id\":\"4\"}\n```\n\nIf not found in the query-string, it will look in the POST request body.\n\nIf a previous middleware has already parsed the POST body, the `request.body`\nvalue will be used. Use [`multer`][] or a similar middleware to add support\nfor `multipart/form-data` content, which may be useful for GraphQL mutations\ninvolving uploading files.\n\nIf the POST body has not yet been parsed, graphql-express will interpret it\ndepending on the provided *Content-Type* header.\n\n  * **`application/json`**: the POST body will be parsed as a JSON\n    object of parameters.\n\n  * **`application/x-www-form-urlencoded`**: this POST body will be\n    parsed as a url-encoded string of key-value pairs.\n\n  * **`application/graphql`**: The POST body will be parsed as GraphQL\n    query string, which provides the `query` parameter.\n\n\n[`graphql-js`]: https://github.com/graphql/graphql-js\n[`multer`]: https://github.com/expressjs/multer\n[npm-image]: https://img.shields.io/npm/v/koa-gql.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-gql\n[travis-image]: https://travis-ci.org/chentsulin/koa-graphql.svg\n[travis-url]: https://travis-ci.org/chentsulin/koa-graphql\n[coveralls-image]: https://coveralls.io/repos/chentsulin/koa-graphql/badge.svg?branch=master&service=github\n[coveralls-url]: https://coveralls.io/github/chentsulin/koa-graphql?branch=master\n[david_img]: https://david-dm.org/chentsulin/koa-graphql.svg\n[david_site]: https://david-dm.org/chentsulin/koa-graphql\n","created":"2015-08-12T11:50:23.545Z","modified":"2015-08-16T04:49:35.182Z","lastPublisher":{"name":"chentsulin","email":"chentsulin@gmail.com"},"owners":[{"name":"chentsulin","email":"chentsulin@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"koa-gql","_nodeVersion":"3.0.0","_npmUser":{"name":"chentsulin","email":"chentsulin@gmail.com"},"_npmVersion":"2.13.3","_rev":"1-ba9dc16776a1232783ef829d69fd416c","_shasum":"eebb17dcbb776026e960e426e14f6bcf775a9198","bugs":{"url":"https://github.com/chentsulin/koa-gql/issues"},"contributors":[{"name":"Lee Byron","email":"lee@leebyron.com","url":"http://leebyron.com/"},{"name":"Daniel Schafer","email":"dschafer@fb.com"},{"name":"C.T. Lin","email":"chentsulin@gmail.com"}],"directories":{"lib":"./dist"},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"eebb17dcbb776026e960e426e14f6bcf775a9198","tarball":"http://registry.npmjs.org/koa-gql/-/koa-gql-0.1.2.tgz"},"maintainers":[{"name":"chentsulin","email":"chentsulin@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-08-16T04:49:35.182Z","created":"2015-08-12T11:50:23.545Z","0.1.0":"2015-08-12T11:50:23.545Z","0.1.1":"2015-08-12T13:16:25.089Z","0.1.2":"2015-08-16T04:49:35.182Z"}}}