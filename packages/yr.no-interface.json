{"name":"yr.no-interface","version":"1.1.0","description":"HTTP wrapper for the yr.no/api.met.no API with support for streams","scripts":{"test":"npm run lint && npm run unit && npm run coverage","lint":"npm run eslint && npm run linelint","eslint":"eslint index.js test/*.js","linelint":"linelint -l 120 index.js test/*.js","unit":"NODE_PATH=. mocha test/","coveralls":"npm run coverage && cat coverage/lcov.info | coveralls","coverage":"NODE_PATH=. nyc mocha test/ && nyc report --reporter=lcov"},"keywords":["yr.no","api","met","weather","Meteorologisk","NRK","yr","no","met.no","api.met.no","forecast"],"dependencies":{"debug":"~2.6.8","request":"~2.81.0","verror":"~1.9.0"},"devDependencies":{"bluebird":"~3.5.0","chai":"~3.5.0","chai-truthy":"~1.0.0","coveralls":"~2.13.0","eslint":"~3.19.0","linelint":"~1.0.1","mocha":"~3.2.0","nyc":"~10.2.0","proxyquire":"~1.7.11","sinon":"~2.1.0"},"main":"./index.js","repository":"https://github.com/evanshortiss/yr.no-interface","engines":{"node":">=4.4.2"},"homepage":"https://github.com/evanshortiss/yr.no-interface#readme","license":"MIT","gitHead":"f431c90a491040a70789b0eadddd59aafffe9a9d","versions":[{"number":"0.0.2","date":"2013-11-08T17:57:52.225Z"},{"number":"0.0.3","date":"2014-05-27T09:26:24.848Z"},{"number":"0.1.0","date":"2014-06-21T11:08:48.913Z"},{"number":"0.1.1","date":"2014-09-26T14:07:19.370Z"},{"number":"1.0.0","date":"2017-04-28T00:17:50.413Z"},{"number":"1.0.1","date":"2017-05-25T00:36:39.605Z"},{"number":"1.1.0","date":"2017-05-25T00:54:16.471Z"}],"readme":"yr.no-interface\n===============\n\n![TravisCI](https://travis-ci.org/evanshortiss/yr.nno-interface.svg) [![npm version](https://badge.fury.io/js/yr.no-interface.svg)](https://badge.fury.io/js/yr.no-interface) [![Coverage Status](https://coveralls.io/repos/github/evanshortiss/yr.no-interface/badge.svg?branch=master)](https://coveralls.io/github/evanshortiss/yr.no-interface?branch=master)\n\nHTTP request wrapper for the yr.no/api.met.no weather service API with support\nfor streams.\n\n## Install\n\n```\nnpm install yr.no-interface --save\n```\n\n## Examples\n\nAll of these are in the [/examples](github.com/evanshortiss/yr.no-interface/tree/master/examples)\nfolder of this project.\n\n### Callback Example\n\n```javascript\nconst yrno = require('yr.no-interface')({\n  request: {\n    timeout: 25000\n  }\n});\n\nyrno.locationforecast({\n  query: {\n    // Get weather for Dublin, Ireland\n    lat: 53.3478,\n    lon: 6.2597\n  },\n\n  // The locationforecast API version to call\n  version: 1.9\n}, function (err, xml) {\n  if (err) {\n    // Something went wrong...\n  } else {\n    // We got an XML response!\n  }\n});\n```\n\n\n### Streaming Example\nStreams are one of the most powerful features in node.js. They allow you to\nperform I/O while using a tiny amount of memory since they pass data through the\nprocess in small \"chunks\".\n\nUsing streams is useful for certain response types such as the `radar` API since\nit returns a large GIF file that could use a large amount of the node.js process\nmemory if loaded into a callback\n\nBelow we use a stream to pipe the HTTP respone from the yr.no API to a file on\nour machine.\n\n```javascript\nconst fs = require('fs');\nconst path = require('path');\nconst yrno = require('yr.no-interface')({\n  request: {\n    timeout: 25000\n  }\n});\n\n// response data will be written to a file called res.xml in the\n// directory this script is being run from\nconst filepath = path.join(process.cwd(), 'weather.xml');\n\nyrno.locationforecast({\n  query: {\n    lat: 53.3478,\n    lon: 6.2597\n  },\n  version: 1.9\n})\n  .pipe(fs.createWriteStream(filepath));\n```\n\n### Promises Example\nThis module does not support promises by default. Here's how you could get\nPromise support:\n\n```js\nconst Promise = require('bluebird');\n\n// Now all functions will return promises. Can also use a module like \"pify\"\nconst yrno = Promise.promisifyAll(\n  require('yr.no-interface')({\n    request: {\n      timeout: 25000\n    }\n  })\n);\n\n// Note the \"Async\" added to use teh promise version\nyrno.locationforecastAsync({\n  query: {\n    lat: 53.3478,\n    lon: 6.2597\n  },\n  version: 1.9\n})\n   .then((xml) => {\n    console.log('weather xml is - ', xml);\n  })\n```\n\n## API\n\n### module\nThis module exports a single function that must be called to get an API wrapper.\n\n```js\n// Get an API wrapper instance with a default request timeout of 25 seconds\nconst yrno = require('yr.no-interface')({\n  request: {\n    // Can pass anything supported by the request module here.\n    // Passing \"qs\" or \"url\" will fail since the module will overwrite them\n    timeout: 25000\n  }\n});\n```\n\nReturns an API `instance`.\n\n## instance\n\nAn instance is an object with functions attached. The functions are listed\nbelow.\n\n## instance.FUNCTION\n\nAll functions on an `instance` contain the same signature of\n_yrno.func([params[, callback])_, e.g `yrno.locationforecast(params, callback)`.\n\n_callback_ is optional. If no callback is provided a stream is returned so you\ncan use node's stream awesomeness to pass data around. _params_ should contain\nthe querystring params as specified at the\n[yr.no docs](api.met.no/weatherapi/documentation).\n\nEach request must specify `params.version` as the met.no API requires this.\n\n## instance functions\n\n* errornotifications\n* extremeforecast\n* extremesWWC\n* forestfireindex\n* geosatellite\n* gribfiles\n* icemap\n* lightning\n* locationforecast\n* locationforecastLTS\n* metalerts\n* metgm\n* mountaineasterobservations\n* nowcast\n* oceanforecast\n* polarsatellite\n* probabilityforecast\n* radar\n* radarlightning\n* sigmets\n* spotwind\n* subjectiveforecast\n* sunrise\n* tafmetar\n* temperatureverification\n* textforecast\n* textlocation\n* tidalwater\n* turbulence\n* uvforecast\n* upperwindweather\n* verticalprofile\n* weathericon\n\n\n## Contributors\n\n* @ktrance\n* @clux\n* @Oisann\n\n\n## CHANGELOG\n\n* 1.1.0 - Updated API endpoints to match api.met.no - thanks @ktrance.\n\n* 1.0.1 - Patch for security vulnerability in `request` through `qs` module.\n\n* 1.0.0 - Initial stable release.\n","created":"2013-11-08T17:57:49.995Z","modified":"2017-05-25T00:54:16.471Z","lastPublisher":{"name":"evanshortiss","email":"evanshortiss@gmail.com"},"owners":[{"name":"evanshortiss","email":"evanshortiss@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"yr.no-interface","_nodeVersion":"4.4.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/yr.no-interface-1.1.0.tgz_1495673656054_0.870138862868771"},"_npmUser":{"name":"evanshortiss","email":"evanshortiss@gmail.com"},"_npmVersion":"4.5.0","_rev":"4-ae3bb37644088a9ca4e134b6ba7f33c1","_shasum":"e071e64c7bd5a6b5a1051467a019dcc0163d2305","author":{"name":"Evan Shortiss"},"bugs":{"url":"https://github.com/evanshortiss/yr.no-interface/issues"},"directories":{"example":"examples","test":"test"},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"e071e64c7bd5a6b5a1051467a019dcc0163d2305","tarball":"https://registry.npmjs.org/yr.no-interface/-/yr.no-interface-1.1.0.tgz"},"maintainers":[{"name":"evanshortiss","email":"evanshortiss@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-25T00:54:16.471Z","created":"2013-11-08T17:57:49.995Z","0.0.2":"2013-11-08T17:57:52.225Z","0.0.3":"2014-05-27T09:26:24.848Z","0.1.0":"2014-06-21T11:08:48.913Z","0.1.1":"2014-09-26T14:07:19.370Z","1.0.0":"2017-04-28T00:17:50.413Z","1.0.1":"2017-05-25T00:36:39.605Z","1.1.0":"2017-05-25T00:54:16.471Z"}}}