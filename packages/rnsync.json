{"name":"rnsync","version":"3.0.3","description":"Stop making http CRUD calls and instead work with a local NoSQL database that you can replicate to your remote database and keep a user's data synced across multiple devices.","main":"index.js","repository":"https://github.com/pwcremin/RNSync","keywords":["react-component","react-native","ios","android","cocoapod"],"license":"MIT","gitHead":"5724b4c49b79f036af0f3f2345d7671cfebf953b","homepage":"https://github.com/pwcremin/RNSync#readme","scripts":{},"versions":[{"number":"0.0.1","date":"2016-03-04T17:31:23.103Z"},{"number":"0.1.0","date":"2016-03-04T17:33:45.392Z"},{"number":"0.1.1","date":"2016-03-04T22:25:50.574Z"},{"number":"0.1.2","date":"2016-03-05T17:22:17.422Z"},{"number":"0.1.3","date":"2016-03-05T18:11:58.253Z"},{"number":"0.1.4","date":"2016-03-06T17:32:44.956Z"},{"number":"0.1.5","date":"2016-03-07T16:54:04.267Z"},{"number":"0.1.6","date":"2016-03-07T17:05:59.034Z"},{"number":"0.1.7","date":"2016-03-07T17:54:45.395Z"},{"number":"0.1.8","date":"2016-03-08T05:29:37.211Z"},{"number":"0.1.9","date":"2016-03-13T18:25:22.264Z"},{"number":"0.1.10","date":"2016-03-28T21:09:56.925Z"},{"number":"0.1.11","date":"2016-03-28T21:21:50.149Z"},{"number":"0.1.12","date":"2016-03-28T21:42:13.107Z"},{"number":"1.1.0","date":"2016-11-16T22:13:03.594Z"},{"number":"1.2.1","date":"2016-11-16T22:26:29.393Z"},{"number":"1.2.2","date":"2016-11-16T23:10:06.565Z"},{"number":"1.2.4","date":"2016-11-17T00:18:51.392Z"},{"number":"1.2.5","date":"2016-11-17T00:20:36.074Z"},{"number":"1.2.6","date":"2016-11-18T20:10:43.454Z"},{"number":"1.3.0","date":"2016-12-07T23:57:30.758Z"},{"number":"1.3.1","date":"2016-12-08T00:18:53.867Z"},{"number":"1.3.2","date":"2016-12-09T16:35:05.177Z"},{"number":"1.3.3","date":"2016-12-13T15:58:19.419Z"},{"number":"1.4.0","date":"2017-01-15T20:31:27.098Z"},{"number":"1.4.1","date":"2017-01-15T20:47:05.051Z"},{"number":"2.0.0","date":"2017-01-15T21:15:31.014Z"},{"number":"2.0.1","date":"2017-01-15T21:21:15.896Z"},{"number":"3.0.0","date":"2017-01-17T00:15:54.769Z"},{"number":"3.0.1","date":"2017-01-17T00:28:03.329Z"},{"number":"3.0.2","date":"2017-01-27T15:16:00.888Z"},{"number":"3.0.3","date":"2017-01-27T17:26:23.823Z"}],"readme":"# RNSync\n\n[![Join the chat at https://gitter.im/pwcremin/rnsync](https://badges.gitter.im/pwcremin/rnsync.svg)](https://gitter.im/pwcremin/rnsync?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## About\n\nRNSync is a React Native module that allows you to work with your Cloudant or CouchDB database locally (on the mobile device) and replicate to the remote database when needed.\n\nRNSync is a wrapper for [Cloudant Sync](https://github.com/cloudant/CDTDatastore), which simplifies large-scale mobile development by enabling you to create a single database for every user; you simply replicate and sync the copy of this database in Cloudant with a local copy on their phone or tablet. This can reduce round-trip database requests with the server. If thereâ€™s no network connection, the app runs off the database on the device; when the network connection is restored, Cloudant re-syncs the device and server.\n\nYou can get an instance of [Cloudant](http://bit.ly/2eH8lbY) by creating an account on [IBM Bluemix](http://bit.ly/2fYtrCz).\n\nRNSync only supports ReactNative > 0.40\n\n**New!** RNSync now works with [Redux Persist](https://github.com/rt2zz/redux-persist).  Please read the [RNSyncStorage doc](RNSyncStorage.md) for more info.  You may also prefer the simplified API.\n\n## Udates\n * 1/27 - You can now use [rnsync_key_generator](https://github.com/pwcremin/rnsync_key_generator) to easily add a route to your Express server to handle the creation of your device database and credentials\n * 1/16 - ok some changes to really get this working with 0.40.  Please read iOS installation instructions as they have changed\n * 1/15 - v2.0.0 update for 0.40 and fixed promisfy issue\n * 12/7 - \n   * Added rnsyncStorage so that RNSync can be used with redux-persist\n   * Added rnsync.replicateSync() for doing both a push and a pull \n   * Fixed ios issue with doing multiple replications at the same time (no longer an issue)\n * 11/16 - \n   * Added Android support\n   * Both pull and push replication are now supported (the replicate function has been replaced with replicatePull and replicatePush)\n   * Removed 'addAttachment' until its functionality is fully implemented\n * 3/28 - all functions now return promises\n * 3/28 - init() will no longer create the database for you.  Please refer to cloudantApiKeyGenerator/app.js for an example of how to securely create the database and get your api keys (for Cloudant)\n \n \n## Installation\n\nInstall with npm\n```ruby\nnpm install --save rnsync\n```\n\n### iOS\n\nAdd CDTDatastore to your Podfile\n\n```ruby\npod 'CDTDatastore'\n```\n\nLink and Pod install\n\n```ruby\nreact-native link rnsync\ncd ios;pod install\n```\n### Android\n\n```ruby\nreact-native link rnsync\n```\n\n\n## Usage\n\n#### Init\n\nThe below example exposes your credentials on every device, and the database must already exist, but it is fine for testing the package. \n\nTo avoid exposing credentials create a web service to authenticate users and set up databases for client devices. This web service needs to:\n\n- Handle sign in/sign up for users.\n- Create a new remote database for a new user.\n- Grant access to the new database for the new device (e.g., via [API keys on Cloudant](https://cloudant.com/for-developers/faq/auth/) or the _users database in CouchDB).\n- Return the database URL and credentials to the device.\n\nYou can use the [rnsync_key_generator](https://github.com/pwcremin/rnsync_key_generator) package with your Express server to easily handle database and credentials creation. Also refer to [cloudantApiKeyGenerator](cloudantApiKeyGenerator) for an example of adding this functionality to your Express server if you do not wish to use rnsync_key_generator.\n \n```javascript\nimport rnsync from 'rnsync';\n\n// init with your cloudant or couchDB database\nvar dbUrl = \"https://user:pass@xxxxx\";\nvar dbName = \"name_xxxx\";\n\nrnsync.init(dbUrl, dbName, function(error)\n{\n  console.log(error);\n});\n```\n\n#### Create\n\nBoth the object and the id are optional.  If you leave out the object it will create a new doc that is empty.  If you leave\nout the id that will be autogenerated for you.\n```javascript\nvar object = {x:10};\nvar id = \"whatever\";\n\nrnsync.create(object, id, function(error, doc)\n{\n  console.log(doc.id);\n});\n\nrnsync.create({name: 'jon'},  function(error, doc)\n{\n  console.log(doc.id);\n});\n\n// note: create will return an error if the id already exist\nrnsync.create('user',  function(error, doc)\n{\n  console.log(doc.id);\n});\n\n```\n\n#### Find or Create\n\nReturns the doc with the specified id.  It will create the doc if it does not already exist.\n\n```javascript\nrnsync.findOrCreate('user',  function(error, doc)\n{\n  console.log(doc.id);\n});\n```\n\n#### Retrieve\n\nReturns the doc with the specified id.\n\n```javascript\n\nvar id = \"whatever\";\n\nrnsync.retrieve(id, function(error, doc)\n{\n  console.log(JSON.stringify(doc.body));\n});\n```\n\n#### Update\n\nWhen doing an update to a doc, you must include the revision.\n\n```javascript\n\ndoc.body.somechange = \"hi mom\";\n\nrnsync.update(doc.id, doc.rev, doc.body, function(error, doc)\n{\n  console.log(JSON.stringify(doc.body));\n});\n```\n\n#### Delete\n\n```javascript\n\nrnsync.delete(doc.id, function(error)\n{\n  console.log(error);\n});\n```\n\n#### Replicate\n\nAll of the CRUD functions only affect the local database.  To push your changes to the remote server you must replicate.  For more details see the [replication docs](https://github.com/cloudant/CDTDatastore/blob/master/doc/replication.md)\n\nPush your local changes to the remote database\n```javascript\nrnsync.replicatePush( error => console.log(error) );\n```\n\nPull changes from the remote database to your local\n```javascript\nrnsync.replicatePull( error => console.log(error) );\n```\n\nDo both a push and a pull\n```javascript\nrnsync.replicateSync( error => console.log(error) );\n```\n#### Find\n\nQuery for documents.  For more details on the query semantics please see the [Cloudant query documentation](https://github.com/cloudant/CDTDatastore/blob/master/doc/query.md)\n\n```javascript\nvar query = {name: 'John', age: { '$gt': 25 }};\n\nrnsync.find(query, function(docs)\n{\n  console.log('found ' + docs.length);\n});\n```\n\n## Usage with redux-persist\n\n```javascript\nimport { createStore } from 'redux'\nimport reducer from './redux/reducers/index'\n\n\nimport {persistStore, autoRehydrate} from 'redux-persist'\nimport rnsync, {rnsyncStorage} from 'rnsync'\n\n\nlet dbUrl = \"https://xxx:xxx-bluemix.cloudant.com\";\nlet dbName = \"rnsync\";\n\nrnsync.init(dbUrl, dbName, error => console.log(error) );\n\nconst store = createStore(reducer, undefined, autoRehydrate());\n\npersistStore(store, {storage: rnsyncStorage});\n```\n\nIf you want to do replication before loading the store then:\n```javascript\nrnsync.replicateSync().then(() => persistStore(store, {storage: rnsyncStorage}));\n```\n\nIt is up to you to decide when and where to do replication.  Later I will add the ability automatically do a replication push when data changes (from a whitelist you pass to rnsyncStorage.)\n\n## Author\n\nPatrick Cremin, pwcremin@gmail.com\n\n## License\n\nRNSync is available under the MIT license. See the LICENSE file for more info.\n","created":"2016-03-04T17:31:23.103Z","modified":"2017-01-27T17:26:23.823Z","lastPublisher":{"name":"pwcremin","email":"pwcremin@gmail.com"},"owners":[{"name":"pwcremin","email":"pwcremin@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"rnsync","_nodeVersion":"5.12.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/rnsync-3.0.3.tgz_1485537983139_0.25653046113438904"},"_npmUser":{"name":"pwcremin","email":"pwcremin@gmail.com"},"_npmVersion":"3.10.8","_rev":"19-383a88dcd6931908968f00806b886ccc","_shasum":"c4f7e03c4287875f834442546b285269801c501f","author":{"name":"Patrick Cremin","email":"pwcremin@gmail.com","url":"https://github.com/pwcremin"},"bugs":{"url":"https://github.com/pwcremin/RNSync/issues"},"directories":{},"dist-tags":{"latest":"3.0.3"},"dist":{"shasum":"c4f7e03c4287875f834442546b285269801c501f","tarball":"https://registry.npmjs.org/rnsync/-/rnsync-3.0.3.tgz"},"maintainers":[{"name":"pwcremin","email":"pwcremin@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-27T17:26:23.823Z","created":"2016-03-04T17:31:23.103Z","0.0.1":"2016-03-04T17:31:23.103Z","0.1.0":"2016-03-04T17:33:45.392Z","0.1.1":"2016-03-04T22:25:50.574Z","0.1.2":"2016-03-05T17:22:17.422Z","0.1.3":"2016-03-05T18:11:58.253Z","0.1.4":"2016-03-06T17:32:44.956Z","0.1.5":"2016-03-07T16:54:04.267Z","0.1.6":"2016-03-07T17:05:59.034Z","0.1.7":"2016-03-07T17:54:45.395Z","0.1.8":"2016-03-08T05:29:37.211Z","0.1.9":"2016-03-13T18:25:22.264Z","0.1.10":"2016-03-28T21:09:56.925Z","0.1.11":"2016-03-28T21:21:50.149Z","0.1.12":"2016-03-28T21:42:13.107Z","1.1.0":"2016-11-16T22:13:03.594Z","1.2.1":"2016-11-16T22:26:29.393Z","1.2.2":"2016-11-16T23:10:06.565Z","1.2.4":"2016-11-17T00:18:51.392Z","1.2.5":"2016-11-17T00:20:36.074Z","1.2.6":"2016-11-18T20:10:43.454Z","1.3.0":"2016-12-07T23:57:30.758Z","1.3.1":"2016-12-08T00:18:53.867Z","1.3.2":"2016-12-09T16:35:05.177Z","1.3.3":"2016-12-13T15:58:19.419Z","1.4.0":"2017-01-15T20:31:27.098Z","1.4.1":"2017-01-15T20:47:05.051Z","2.0.0":"2017-01-15T21:15:31.014Z","2.0.1":"2017-01-15T21:21:15.896Z","3.0.0":"2017-01-17T00:15:54.769Z","3.0.1":"2017-01-17T00:28:03.329Z","3.0.2":"2017-01-27T15:16:00.888Z","3.0.3":"2017-01-27T17:26:23.823Z"}}}