{"name":"requshar","version":"0.1.3","description":"An HTTP client library for use in server (restler) and client side (jQuery)","main":"requshar.js","scripts":{"test":"./scripts/tests"},"repository":"https://github.com/comodinx/requshar","license":"MIT","homepage":"https://github.com/comodinx/requshar","dependencies":{"restler":"3.3.0","underscore":"1.8.3"},"devDependencies":{"chai":"3.2.0","grunt":"0.4.5","grunt-contrib-copy":"0.8.0","grunt-contrib-uglify":"0.9.1","grunt-mocha-test":"0.12.7","jquery":"1.8.3","jsdom":"3.x","json-server":"0.7.25","open":"0.0.5"},"keywords":["requshar","request","http"],"versions":[{"number":"0.1.0","date":"2015-08-12T00:05:38.858Z"},{"number":"0.1.1","date":"2015-08-12T14:55:41.431Z"},{"number":"0.1.2","date":"2015-09-23T14:05:52.624Z"},{"number":"0.1.3","date":"2015-09-23T14:33:15.447Z"}],"readme":"Requshar [![NPM Version](https://img.shields.io/npm/v/requshar.svg?style=flat)](https://www.npmjs.com/package/requshar)\n========\n\nAn HTTP client library for use in server (restler) and client side (jQuery)\n\n\nInstalling\n----------\n\n```\nnpm install requshar\n```\n\n\nRunning the tests\n-----------------\n\n```\nnpm test\n```\n\n\nFeatures\n--------\n\n* Equal API in client and server side\n* Easy interface for common operations via http.request and $.ajax\n* Simple service wrapper that allows you to easily put together REST API libraries\n\n\nAPI\n---\n\n### request(url[, options\\][, callback])\n\nBasic method to make a request of any type. The function returns a *request instance*.\n\n### get(url[, options\\][, callback])\n\nGET request.\n\n### post(url[, options\\][, callback])\n\nPOST request.\n\n### put(url[, options\\][, callback])\n\nPUT request.\n\n### patch(url[, options\\][, callback])\n\nPATCH request.\n\n### delete(url[, options\\][, callback])\n\nDELETE request.\n\n### json(url[, options\\][, callback])\n\nParse response to json.\n\n#### Options\n\n##### Options :: Shared \n\n* `method` Request method, can be get, post, put, patch and delete. Defaults to `'get'`.\n* `query` Query string variables as a javascript object, will override the querystring in the URL. Defaults to empty.\n* `data` The data to be added to the body of the request. Default to empty.\n* `headers` Request headers. Default to empty.\n* `parseJSON` Enabled parse to json responses. Default to `false`.\n* `defaultErrorCode` Error code for internal errors. Default to `598`.\n* `timeout` If set, will emit the timeout event when the response does not return within the said value (in ms).\n* `debug` Enabled debug mode. Default to `false`.\n* `logger` Debbuger. Default to `console`.\n\n##### Options :: Server\n\n* `onTimeout` Function callback for timeout responses.\n\n##### Options :: Client\n\n* `done` Function callback for success responses. Default to `_.noop`.\n* `fail` Function callback for fail responses. Default to `_.noop`.\n\nFor more option see [Restler](https://github.com/danwrong/restler) and [jQuery.ajax](http://api.jquery.com/jQuery.ajax/)\n\n#### Callback\n\n`function callback(err, response, body)`\n\n* `response` In _server side_ is the restler response Object. In _client side_ is an object with next properties `readyState`, `responseText`, `statusCode`, `statusText`, `status` and `res` (jQuery response)\n* `body` Response text. If `parseJSON` options is true, `body` is an Object.\n\n#### Request instance\n\n```javascript\nvar Requshar = require('requshar');\nvar requshar = new Requshar();\n\nvar request = requshar.get('http://www.google.com.ar', function(err, res, body) {\n  if (err instanceof Error) {\n    console.log('Error:', err.message);\n  } else {\n    console.log(body);\n  }\n});\n\nrequest.req; // Server side restler request instance.\nrequest.req; // Client side jQuery request instance.\n```\n\n\nExample usage\n-------------\n\n### Default usage\n\n```javascript\nvar Requshar = require('requshar');\nvar requshar = new Requshar();\n\nrequshar.get('http://www.google.com.ar', function(err, res, body) {\n  if (err instanceof Error) {\n    console.log('Error:', err.message);\n  } else {\n    console.log(body);\n  }\n});\n\nrequshar.post('http://yourpage.com/users', {\n  data: {\n    id: 334,\n    name: 'pepito'\n  }\n}, function(err, res, body) {\n  if (err instanceof Error) {\n    console.log('Error:', err.message);\n  } else {\n    console.log(body);\n  }\n});\n```\n\n### Usage with default options\n\n```javascript\nvar Requshar = require('requshar');\nvar requshar = new Requshar({\n  baseUrl: 'http://www.google.com.ar',\n  headers: {\n    'content-type': 'text/plain',\n    'connection': 'keep-alive',\n    'accept': '*/*'\n  }\n});\n\nrequshar.get('/', function(err, res, body) {\n  if (err instanceof Error) {\n    console.log('Error:', err.message);\n  } else {\n    console.log(body);\n  }\n});\n```\n\n### Usage in debug mode\n\n```javascript\nvar logger = require('debug')('requshar');\nvar Requshar = require('requshar');\nvar requshar = new Requshar({\n  debug: true,\n  logger: logger\n});\n\nrequshar.get('http://www.google.com.ar', function(err, res, body) {\n  if (err instanceof Error) {\n    console.log('Error:', err.message);\n  } else {\n    console.log(body);\n  }\n});\n```\n\n### Usage in client side\n\n```html\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Requshar in client side</title>\n  </head>\n  <body>\n    <script src=\"https://cdn.rawgit.com/jquery/jquery/2.1.4/dist/jquery.min.js\"></script>\n    <script src=\"https://cdn.rawgit.com/jashkenas/underscore/1.8.3/underscore.js\"></script>\n    <script src=\"https://cdn.rawgit.com/comodinx/requshar/v0.1.3/requshar.js\"></script>\n    <script>\n      var requshar = new Requshar({\n        baseUrl: 'https://api.github.com',\n        debug: true\n      });\n\n      requshar.json('/repos/comodinx/requshar', function(err, res, body) {\n        if (err instanceof Error) {\n          alert('Error:' + err.message);\n        } else {\n          alert(JSON.stringify(_.pick(body, 'id', 'name', 'full_name', 'language'), null, '  '));\n        }\n      });\n    </script>\n  </body>\n</html>\n```\n","created":"2015-08-12T00:05:38.858Z","modified":"2015-09-23T14:33:15.447Z","lastPublisher":{"name":"comodinx","email":"comodinx@gmail.com"},"owners":[{"name":"comodinx","email":"comodinx@hotmail.com"}],"other":{"_attachments":{},"_from":".","_id":"requshar","_npmUser":{"name":"comodinx","email":"comodinx@gmail.com"},"_npmVersion":"1.4.9","_rev":"1-4e9bf966d161afc29bf2de0fe39a8d44","_shasum":"00cef591f26389b33c126b4da4f6e0d1f6944444","author":"","bugs":{"url":"https://github.com/comodinx/requshar/issues"},"directories":{},"dist-tags":{"latest":"0.1.3"},"dist":{"shasum":"00cef591f26389b33c126b4da4f6e0d1f6944444","tarball":"http://registry.npmjs.org/requshar/-/requshar-0.1.3.tgz"},"maintainers":[{"name":"comodinx","email":"comodinx@hotmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-23T14:33:15.447Z","created":"2015-08-12T00:05:38.858Z","0.1.0":"2015-08-12T00:05:38.858Z","0.1.1":"2015-08-12T14:55:41.431Z","0.1.2":"2015-09-23T14:05:52.624Z","0.1.3":"2015-09-23T14:33:15.447Z"}}}