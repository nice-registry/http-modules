{"name":"redux-request-generator","version":"1.0.0-rc.1","description":"Boilerplate-free http requests for redux apps","main":"lib/fetch.js","scripts":{"build":"babel src --out-dir lib","prepublish":"rimraf lib && npm run build","test":"mocha --compilers js:babel-core/register --require should --reporter spec test/*.js"},"repository":"https://github.com/naugtur/redux-request-generator","keywords":["redux","react","request","http","fetch","sync","rest"],"license":"MIT","dependencies":{"xhr":"^2.0.5"},"devDependencies":{"babel-core":"^6.1.2","babel-plugin-add-module-exports":"^0.1.1","babel-preset-es2015":"^6.1.18","mocha":"^2.3.3","pre-commit":"^1.1.2","should":"^7.1.1","sinon":"^1.17.2"},"gitHead":"64201c068bd82d77d7eeaf2f47282a8237664433","homepage":"https://github.com/naugtur/redux-request-generator","versions":[{"number":"1.0.0-rc.1","date":"2016-01-18T20:37:09.437Z"}],"readme":"# redux-request-generator\n\n*This is not yet released. API or the way it integrates into redux might change. Feedback welcome.*\n\nOne function that creates actions and reducers for your http requests.\n\n**How is it different?**\n\n* not a middleware\n* has tests\n\n**Browser support**\n\nBy default `fetch` is used, so it has to be there (or shimmed)\n\nIf you're considering shimming fetch, use `require('redux-request-generator/xhr')` instead. It uses xhr for making http requests.\n\nNo support for IE8 or IE9, but you should be able to get it to work.\n\n## Usage\n```js\nconst defineRequests = require('redux-request-generator')\nconst {actions, reducers} = defineRequests(definitions, defaults)\n\n//use in your app\ncombineReducers({\n    ...reducers\n});\n```\n\n`definitions` is a map from state keys to request definitions:\n```js\ndefinition:= {\n    requestGenerator: (args) => (url or Request object),\n    condition: (state) => (boolean), //optional\n    mapper: (data) => (data) //optional\n}\n```\n\n`redux-thunk` middleware is required for actions creator to work\n\n## Example\n\n1. Define requests available to your app.\n```js\nconst {actions, reducers} = defineRequests({\n    books: {\n        requestGenerator: (author) => (`/api/books/by/${author}`),\n        mapper: (data, author) => ({[author]: data.results})\n    }\n}, defaults)\n```\n2. Add thunk middleware and combine defined reducers with your other reducers.\n```js\nconst createStoreWithMiddleware = applyMiddleware([thunk])(createStore)\nconst reducer = combineReducers({\n    myField: myCustomReducer,\n    ...reducers\n})\nconst store = createStoreWithMiddleware(reducer)\n```\n3. To fetch data dispatch just one action and both your helper functions will be given the arguments passed to the action.\n```js\nstore.dispatch(actions.books(\"JRRTolkien\"))\n```\n\n4. Use the key (`books`) in a component. Show loading indicator while `isFetching` is true. `state.books` will contain:\n - `isFetching` - set to true while the request is waiting for response\n - `error` - error object if there was an error fetching data `{statusCode, messages}`\n - `data` - response or whatever `mapper` returned after the response came in. *Must be an object*\n","created":"2016-01-18T20:37:09.437Z","modified":"2016-01-18T20:37:09.437Z","lastPublisher":{"name":"naugtur","email":"naugtur@gmail.com"},"owners":[{"name":"naugtur","email":"naugtur@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"redux-request-generator","_nodeVersion":"4.2.2","_npmUser":{"name":"naugtur","email":"naugtur@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-3a4ce362ee599bf4e18968aa08c24d18","_shasum":"b026ff809f5a9b404c7072a26619ff3aa85f0bd8","author":{"name":"naugtur","email":"naugtur@gmail.com"},"bugs":{"url":"https://github.com/naugtur/redux-request-generator/issues"},"directories":{},"dist-tags":{"latest":"1.0.0-rc.1"},"dist":{"shasum":"b026ff809f5a9b404c7072a26619ff3aa85f0bd8","tarball":"http://registry.npmjs.org/redux-request-generator/-/redux-request-generator-1.0.0-rc.1.tgz"},"maintainers":[{"name":"naugtur","email":"naugtur@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-18T20:37:09.437Z","created":"2016-01-18T20:37:09.437Z","1.0.0-rc.1":"2016-01-18T20:37:09.437Z"}}}