{"name":"node-fsm-http","version":"3.0.0","description":"FSM that uses remote HTTP calls to allow state transitions","main":"lib/FSM-http.js","scripts":{"test":"mocha"},"repository":"https://github.com/dolphin278/fsm-http","keywords":["finite","state","machine","http","callbacks"],"license":"MIT","dependencies":{"node-fsm":"~2.0.0","request":"~2.12.0"},"readme":"fsm-http\n========\nFSM that uses remote HTTP calls to allow state transitions.\n\n## Installation\n\n```npm install node-fsm-http```\n\n## Usage\n\nWorks as a wrapper [node-fsm](https://github.com/dolphin278/fsm) to allow fsm to use external HTTP requests to check, whether our state transition is valid. Basically, it provides default routerFunc for `node-fsm`.\n\nIn essence, you just provide your machine description the same way as for `node-fsm` but now you place optional `request` field to you edge objects:\n\n```\nvar machine = {\n    \"nodes\": [\n        â€¦\n    ],\n    \"edges\": [\n        {\n            \"name\": \"AB\",\n            \"from\": \"A\",\n            \"to\": \"B\",\n            \"request\": {\n                \"uri\": \"http://localhost:8889/ok\" // <- THIS\n            }\n        }\n    ],\n    \"currentState\": \"A\"\n}\n\n/// then, you create fsm-http instance without `routerFunc`:\nvar FSMHttp = require('node-fsm-http');\n\nvar fsm = new FSMHttp(machine);\n```\n\nnow, you use same methods as for plain [node-fsm](https://github.com/dolphin278/fsm), but when you attempt to change machine state, fsm performs http request specified by `request` field of edge object you trying to follow. If http request returns HTTP status 200, transition successfull, otherwise it fails.\n\n`node-fsm-http` uses [`request`](https://github.com/mikeal/request) module to perform HTTP request, using `request` value as `option` value for request (module), so you have many options to pass data from your fsm to external endpoints (see ['request' documentation on 'options' object](https://github.com/mikeal/request#requestoptions-callback)), for example, you could specify different HTTP verbs to perform request, or provide request payload to pass form data to external HTTP endpoint, etc.\n\nIf egge you trying to follow doesn't have `request` field, fsm decides that transition is successful by default.\n\n## TODO:\n\n* Combine fsm's `data` field with `request` field subfields like `json` or `body`.\n* Update fsm's `data` field with result of HTTP query\n* Add HTTP notifications when state changes.","versions":[{"number":"0.0.0","date":"2013-01-12T19:22:55.552Z"},{"number":"0.1.0","date":"2013-01-13T15:23:48.800Z"},{"number":"0.2.0","date":"2013-02-08T17:01:35.377Z"},{"number":"1.0.0","date":"2013-02-09T15:37:59.953Z"},{"number":"2.0.0","date":"2013-02-15T11:09:42.276Z"},{"number":"3.0.0","date":"2013-02-21T12:07:37.834Z"}],"created":"2013-01-12T19:22:53.081Z","modified":"2013-02-21T12:07:37.834Z","lastPublisher":{"name":"dolphin278","email":"dolphin278@gmail.com"},"owners":[{"name":"dolphin278","email":"dolphin278@gmail.com"}],"other":{"_attachments":{},"_id":"node-fsm-http","_npmUser":{"name":"dolphin278","email":"dolphin278@gmail.com"},"_npmVersion":"1.2.0","_rev":"1-71c3f56552bdf06cc0efca75e802e437","author":{"name":"Boris Egorov"},"directories":{},"dist-tags":{"latest":"3.0.0"},"dist":{"shasum":"b6d452496bbf8f07a0be8f3d1d8a3712dea0c620","tarball":"http://registry.npmjs.org/node-fsm-http/-/node-fsm-http-3.0.0.tgz"},"maintainers":[{"name":"dolphin278","email":"dolphin278@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2013-02-21T12:07:37.834Z","created":"2013-01-12T19:22:53.081Z","0.0.0":"2013-01-12T19:22:55.552Z","0.1.0":"2013-01-13T15:23:48.800Z","0.2.0":"2013-02-08T17:01:35.377Z","1.0.0":"2013-02-09T15:37:59.953Z","2.0.0":"2013-02-15T11:09:42.276Z","3.0.0":"2013-02-21T12:07:37.834Z"}}}