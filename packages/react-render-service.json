{"name":"react-render-service","version":"1.0.0","description":"HTTP microservice for rendering React to HTML on the server side","main":"render.js","bin":{"react-service":"render.js"},"dependencies":{"body-parser":"^1.15.2","express":"^4.14.0","morgan":"^1.7.0","react-dom":"^15.2","react":"^15.2","yargs":"^3.29.0"},"peerDependencies":{"react":"^0.14 || ^15.0","react-dom":"^0.14 || ^15.0"},"repository":"https://github.com/mic159/react-render","keywords":["react","reactjs","isomorphic","templates"],"homepage":"https://github.com/mic159/react-render","license":"MIT","gitHead":"73d831fab6a8e0407e787f2e680e486f0ea88869","scripts":{},"versions":[{"number":"0.10.1","date":"2015-03-30T01:18:15.244Z"},{"number":"0.10.2","date":"2015-03-30T23:53:31.554Z"},{"number":"0.10.3","date":"2015-04-08T05:38:32.168Z"},{"number":"0.11.0","date":"2015-04-20T01:22:30.931Z"},{"number":"0.12.0","date":"2015-11-09T04:32:19.449Z"},{"number":"0.12.1","date":"2015-11-10T00:33:23.705Z"},{"number":"0.12.2","date":"2015-11-25T06:05:00.781Z"},{"number":"0.12.3","date":"2016-01-12T00:23:14.490Z"},{"number":"0.12.4","date":"2016-01-27T08:52:13.462Z"},{"number":"0.13.1","date":"2016-06-22T01:32:52.952Z"},{"number":"1.0.0","date":"2016-07-04T23:57:46.920Z"}],"readme":"React Render\n============\n\nRender React components on the server side in Django, also called \"isomorphic React\".\nYou would do this for faster page loads, to make it friendlier to web crawlers and for SEO.\n\nExample\n-------\n\n```python\nfrom react_render.django.render import render_component\n\nprops = {\n    'foo': 'bar',\n    'woz': [1,2,3],\n}\n\nrendered = render_component('path/to/component.js', props=props)\n\nprint(rendered)\n```\n\nHow it works\n------------\n\nIt works by having a NodeJS service on the same server that can render the React components.\nThe Python just uses a simple HTTP API to send the context and the file path over to the service, and it responds with\n the rendered HTML.\n\nDocumentation\n=============\n\n- [Installation](#installation)\n- [render_component()](#render_component)\n- [RenderedComponent](#renderedcomponent)\n- [Running the tests](#running-the-tests)\n- [react-service settings](#react-service-settings)\n\nInstallation\n------------\n\n```bash\nnpm install react-render-service --save\npip install react-render-client\n```\n\n_Optional:_ Point it to the service in your settings.py\n\n```python\nREACT_SERVICE_URL = 'http://localhost:63578/render'\n```\n\nStart the node server which hosts the renderer.\n\n```bash\nreact-service --debug\n```\n\nrender_component()\n------------------\n\nRenders a component to its initial HTML.\n\nReturns a `RenderedComponent` instance, which can be passed directly into templates \nto output the component's HTML.\n\nArguments:\n\n- `path_to_source` — a path to a JS file which exports the component. If the \n  path is relative, django's static file finders will be used to find the file.\n  *NOTE* Must be compiled JS, not JSX.\n- `props` *optional* — a dictonary that will be serialised to JSON and passed to \n  the component during the renderering process.\n- `to_static_markup` *optional* — a boolean indicating that React's `renderToStaticMarkup`\n  method should be used for the rendering. Defaults to `False`, which causes React's \n  `renderToString` method to be used.\n- `json_encoder` *optional* — a class which is used to encode the JSON which is sent to the \n  renderer. Defaults to `django.core.serializers.json.DjangoJSONEncoder`.\n\n\nRenderedComponent\n-----------------\n\nThe result of rendering a component to its initial HTML. RenderedComponents can be passed\ndirectly into templates where they output the generated HTML.\n\n```python\n# Render the component\nmy_component = render_component(...)\n\n# Print the generated HTML\nprint(my_component)\n```\n```html\n<!-- Insert the generated HTML into your template -->\n{{ my_component }}\n```\n\nRenderedComponents have a helper method, `render_props`, which outputs your JSON-serialized \nprops. This allows you to reuse the encoded form of your props on the client-side.\n\n```html\n<script>\n    var myProps = {{ my_component.render_props }};\n</script>\n```\n\nreact-service settings\n----------------\n\n- `--host` Bind to a different interface, by default this is localhost.\n- `--port` Bind to a different port. By default it is `63578`\n- `--watch` Enable developer mode where it will automatically re-load the bundles if they change.\n- `--whitelist` Restrict the directory that the service can access.\n  By default, the service will attempt to load any arbitrary path it is given.\n  Can also be set via the `REACT_WHITELIST` environment variable.\n\n\nRunning the tests\n-----------------\n\n```bash\nmkvirtualenv react-render\npip install -e .\ncd tests\nnpm install\nnpm run build\ncd ..\nnode renderer.js &\npython runtests.py\n```\n","starsCount":4,"created":"2015-03-30T01:18:15.244Z","modified":"2016-07-04T23:57:46.920Z","lastPublisher":{"name":"mic159","email":"mic159@gmail.com"},"owners":[{"name":"mic159","email":"mic159@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"react-render-service","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/react-render-service-1.0.0.tgz_1467676666339_0.8250383834820241"},"_npmUser":{"name":"mic159","email":"mic159@gmail.com"},"_npmVersion":"3.9.5","_rev":"1-5d87287e285e8e24ff178e48d951fc23","_shasum":"1d257be2c79123cf21baba534623688c2f3750ca","author":{"name":"Michael Cooper"},"bugs":{"url":"https://github.com/mic159/react-render/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"1d257be2c79123cf21baba534623688c2f3750ca","tarball":"http://registry.npmjs.org/react-render-service/-/react-render-service-1.0.0.tgz"},"maintainers":[{"name":"mic159","email":"mic159@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-07-04T23:57:46.920Z","created":"2015-03-30T01:18:15.244Z","0.10.1":"2015-03-30T01:18:15.244Z","0.10.2":"2015-03-30T23:53:31.554Z","0.10.3":"2015-04-08T05:38:32.168Z","0.11.0":"2015-04-20T01:22:30.931Z","0.12.0":"2015-11-09T04:32:19.449Z","0.12.1":"2015-11-10T00:33:23.705Z","0.12.2":"2015-11-25T06:05:00.781Z","0.12.3":"2016-01-12T00:23:14.490Z","0.12.4":"2016-01-27T08:52:13.462Z","0.13.1":"2016-06-22T01:32:52.952Z","1.0.0":"2016-07-04T23:57:46.920Z"},"users":{"marakuba":true,"sebastianschilling":true,"dongguangming":true,"ptim":true}}}