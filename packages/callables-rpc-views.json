{"name":"callables-rpc-views","version":"0.0.23","private":false,"scripts":{"compile":"rimraf -rf dist/ && ./node_modules/typescript/bin/tsc"},"main":"./dist/src/main.js","typings":"./dist/src/main.d.ts","devDependencies":{"typescript":"^2.0.0","dev-env-installer":"0.0.5","rimraf":"*","mocha":"^2.2.1","typedoc":"^0.3.12","chai":"^3.5.0","@types/mocha":"*","@types/chai":"*","istanbul":"^0.4.5","webpack":"^2.5.1","raml-typesystem-light":"0.0.22","raml-1-parser":"^1.1.21","json2raml-loader":"0.0.22"},"dependencies":{"@types/node":"^6.0.55","@types/superagent":"^2.0.37","raml-typesystem-scopes":"0.0.21","raml-typesystem-shapes":"0.0.21","raml1-domain-model":"^0.0.22","superagent":"^3.5.2"},"gitHead":"4ff9fc443a00f099f6e6c65ccafe20ce3cec42e8","description":"RPC views is designed to represent RAML Api descriptions as collections of the functions. The goal of this\r representation is to allow client generators to be based on top of some unified mapping of HTTP interfaces into RPC calls,\r and as the result to si","versions":[{"number":"0.0.21","date":"2017-06-18T00:20:20.577Z"},{"number":"0.0.22","date":"2017-06-18T23:12:11.775Z"},{"number":"0.0.23","date":"2017-06-20T14:42:29.431Z"}],"readme":"# RPC Views \r\n\r\nRPC views is designed to represent RAML Api descriptions as collections of the functions. The goal of this\r\nrepresentation is to allow client generators to be based on top of some unified mapping of HTTP interfaces into RPC calls,\r\nand as the result to simplify their implementation.\r\n \r\n---\r\n\r\nThere is a ton of possible mappings of HTTP into RPC world. Some of them are very generic and designed \r\nto do not loose information, some of them are doing a lot of assumptions about what aspects of HTTP interfaces are important.\r\n\r\n*Request mapping:*\r\n\r\nWe convert uri parameters, request headers and request body into parameters of the function. \r\n\r\nCurrently In case if endpoint has multiple request bodies we assume that these bodies represent one entity.   \r\n\r\n*Response mapping:*\r\n\r\nWe map response body into return type of the function. \r\n\r\n         \r\n### Limitations\r\n         \r\nPayloads: At this moment only JSON payloads are handled.\r\nAuthentification: At this moment only basic authentification is supported.          \r\n       \r\n### Virtual Endpoints.\r\n       \r\nOne often case in badly designed or too generic APIs is situation when one HTTP endpoint\r\nrepresents several different operations        \r\n\r\n\r\n### Api imports\r\n\r\nThis feature is not supported yet\r\n\r\n### Usage\r\n\r\n\r\n```typescript\r\nimport rpc=require(\"callables-rpc-views\");\r\nlet module = main.module(api);\r\nlet type=module.functions()[0].parameters()[0].type();//get type of parameter\r\n//execute function and print title of the result in the console.\r\nmodule.functions()[0].call({id:614}).then(x=>{\r\n  console.log(x.title)\r\n});\r\n```\r\n","created":"2017-06-18T00:20:20.577Z","modified":"2017-06-20T14:42:29.431Z","lastPublisher":{"name":"onpositive","email":"pavel@onpositive.com"},"owners":[{"name":"onpositive","email":"pavel@onpositive.com"}],"other":{"_attachments":{},"_from":".","_id":"callables-rpc-views","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/callables-rpc-views-0.0.23.tgz_1497969748336_0.5766128085087985"},"_npmUser":{"name":"onpositive","email":"pavel@onpositive.com"},"_npmVersion":"2.15.9","_rev":"3-b46d6e7cdcd3159213b8f50622cc3e34","_shasum":"b21cb5aedf183905bc17da1eb0b27ac84603e633","directories":["dist"],"dist-tags":{"latest":"0.0.23"},"dist":{"shasum":"b21cb5aedf183905bc17da1eb0b27ac84603e633","tarball":"https://registry.npmjs.org/callables-rpc-views/-/callables-rpc-views-0.0.23.tgz"},"maintainers":[{"name":"onpositive","email":"pavel@onpositive.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-20T14:42:29.431Z","created":"2017-06-18T00:20:20.577Z","0.0.21":"2017-06-18T00:20:20.577Z","0.0.22":"2017-06-18T23:12:11.775Z","0.0.23":"2017-06-20T14:42:29.431Z"}}}