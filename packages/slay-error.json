{"name":"slay-error","description":"Standard, sane defaults for HTTP errors in slay apps. ","version":"1.2.0","main":"index.js","scripts":{"lint":"eslint-godaddy *.js","pretest":"npm run lint","test":"nyc mocha test.js","report":"nyc report --reporter=lcov"},"repository":{"type":"git","url":"git@github.com/godaddy/slay-error.git"},"keywords":["slay","error","middleware"],"devDependencies":{"assume":"^1.4.1","eslint":"^3.18.0","eslint-config-godaddy":"^1.0.0","eslint-plugin-json":"^1.2.0","eslint-plugin-mocha":"^4.9.0","eslint-plugin-react":"^6.10.3","istanbul":"^0.4.5","mocha":"^3.1.2","nyc":"^10.2.0"},"gitHead":"cd7203e24b003c1925c5a568c0c03b341b52afe2","versions":[{"number":"1.1.0","date":"2016-10-14T22:13:29.956Z"},{"number":"1.0.0","date":"2016-11-30T04:53:33.555Z"},{"number":"1.2.0","date":"2017-03-28T20:14:14.013Z"}],"readme":"# slay-error\nStandard, sane defaults for HTTP errors in slay apps.\n\n## Usage\n\nYou should use this within your `middlewares.js` in your Slay app\n\n**middlewares.js**\n``` js\nmodule.exports = function (app, opts, done) {\n  //\n  // All your other middlewares first (most of the time)\n  //\n\n  //\n  // Generally you want your error handling last.\n  //\n  app.use(require('slay-error')(app, { disableLog: false }));\n};\n```\nIn your application, when you pass an error to the `next(error)`\ncallback of a request handler, this middleware will handle the reporting\nand response for that error in your application.\n```\nmodule.exports = function handler(req, res, next) {\n  // if error\n  next(new Error('let the middleware handle this'));\n};\n```\n\nIf the error that you pass to this middleware has a `location` property,\n`res.location(error.location)` will be called for you.\n\nIf you don't want the error logged, you can use the option `disableLog:\ntrue` or set the `log` property of the error to `false`.\n\nYou can also control the log level of the error using the level\nproperty. So, if `level: 'info'` only `app.log.info` will be invoked\nwith the log message and metadata.\n\n### Hint\nIn your application you can use a tool like [errs](https://www.npmjs.com/package/errs) that\nwill allow you to define the structure of errors, either with\npre-defined/registered errors or by passing all of the properties of the\nerror to `errs.create`\n","created":"2016-10-14T22:13:29.956Z","modified":"2017-03-28T20:14:14.013Z","lastPublisher":{"name":"samshull","email":"sam+npm@samshull.com"},"owners":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"slay-error","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/slay-error-1.2.0.tgz_1490732053711_0.4960894437972456"},"_npmUser":{"name":"samshull","email":"sam+npm@samshull.com"},"_npmVersion":"3.10.8","_rev":"5-57ac5ed34f0307afddf3faa1c5f029dc","_shasum":"c8ff5b6be58611d5a84e75d3f579c3a404dc4ff7","author":{"name":"Charlie Robbins","email":"crobbins@godaddy.com"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"c8ff5b6be58611d5a84e75d3f579c3a404dc4ff7","tarball":"https://registry.npmjs.org/slay-error/-/slay-error-1.2.0.tgz"},"maintainers":[{"name":"indexzero","email":"charlie.robbins@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-28T20:14:14.013Z","created":"2016-10-14T22:13:29.956Z","1.1.0":"2016-10-14T22:13:29.956Z","1.0.0":"2016-11-30T04:53:33.555Z","1.2.0":"2017-03-28T20:14:14.013Z"}}}