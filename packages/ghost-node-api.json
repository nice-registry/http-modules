{"name":"ghost-node-api","version":"1.0.0","description":"Ghost server in node.js mocking RESTFUL API server, route calls to static JSON files with different HTTP methods","main":"ghostapi.js","scripts":{"start":"node server.js"},"repository":"https://github.com/maliknur/ghost-node-api","keywords":["api","server","mock","restful","node","express","json"],"license":"MIT","homepage":"https://github.com/maliknur/ghost-node-api","dependencies":{"connect-slow":"^0.2.2","cors":"^2.7.1","express":"^4.12.4","lodash-node":"^3.9.3","q":"^1.4.1"},"devDependencies":{"mocha":"^2.3.0","request-promise":"^0.4.3","node-inspector":"^0.12.5"},"gitHead":"a26767672624bd2a3212796b0380a8ac1975fd77","versions":[{"number":"0.0.1","date":"2015-12-29T20:16:29.009Z"},{"number":"1.0.0","date":"2015-12-29T20:18:37.526Z"}],"readme":"# Ghost-Node-API\nGhost server in node.js mocking RESTFUL API server, route calls to static JSON files with different HTTP methods\n\n## What does it do?\n\nGhost-Node-API was written to simulate a simple RESTFUL API. \nAPI calls are routed to static JSON files.\nAs an example if your sample directory looks like this:\n```\n+ sample-files\n  - customers.json\n  - users.json\n  + products\n    - printers.json\n```\n\nwith users.json\n```\n[\n  {id: 1, name: 'John Doe'},\n  {id: 2, name: 'Peter Sample'}\n]\n```\n\n`GET localhost:7777/api/v1/users`\n\nreturns all users inside users.json\n\n`GET localhost:7777/api/v1/users/1`\n\nreturns one user with the id == 1\n\n`GET localhost:7777/api/v1/products/printers`\n\nreturns all items from products/printers.json\n\n\n## Installation\n\n`npm install mini-mock-api`\n\n## Usage\n\n```\nvar API = require('mini-mock-api');\nvar myApi = new API({\n  basePath: '/api/v1',\n  mockPath: 'mock-files',\n  idAttribute: '_id'\n});\nmyApi.start();\n```\n\nTo run the server:\n```\ncd ghost-node-api\nnpm install\nnpm start\n\nOpen your Browser or Postman and go to `localhost:7777/api/v1/users`\n\n```\n\nTo debug the server:\n```\nnode-debug server.js\n\nOpen your browser and go to http://127.0.0.1:8080/?ws=127.0.0.1:8080&port=5858\n```\n\n## Custom Routes\n\nIf static JSON files are not sufficient you can also add custom routes by defining your own request handler functions. Custom routes are supported for GET, POST, PUT and DELETE methods:\n```\nmyApi.post('customers', function(request, response){\n  response.json({status: 'new customer created'});\n});\n```\n\n## Beautify\n\nAll API responses can be wrapped by defining a `beautify` function. The functions also gets passed the request object as the second parameter. In this example all returned collections are wrapped into `results` and a total count is added.\n\n```\nmyApi.beautify = function(data, request){\n  if(data.length){\n    return {\n      results: data,\n      count: data.length\n    };\n  }\n  return data;\n};\n```\n\n## Author:\n**[Malik Nur]**\n\n\n[Malik Nur]: https://github.com/maliknur\n","starsCount":1,"created":"2015-12-29T20:16:29.009Z","modified":"2017-02-22T10:47:55.761Z","lastPublisher":{"name":"maliknur","email":"malik.dba.pro@gmail.com"},"owners":[{"name":"maliknur","email":"malik.dba.pro@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ghost-node-api","_nodeVersion":"0.12.7","_npmUser":{"name":"maliknur","email":"malik.dba.pro@gmail.com"},"_npmVersion":"2.13.2","_rev":"2-f4dab349de977f6af50046b349ecf7e2","_shasum":"da1358cc7aacf749890c158173f342d152acf79d","author":{"name":"Malik Nur"},"bugs":{"url":"https://github.com/maliknur/ghost-node-api/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"da1358cc7aacf749890c158173f342d152acf79d","tarball":"http://registry.npmjs.org/ghost-node-api/-/ghost-node-api-1.0.0.tgz"},"maintainers":[{"name":"maliknur","email":"malik.dba.pro@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-22T10:47:55.761Z","created":"2015-12-29T20:16:29.009Z","0.0.1":"2015-12-29T20:16:29.009Z","1.0.0":"2015-12-29T20:18:37.526Z"},"users":{"franciskone":true}}}