{"name":"makestatic-http-cache","description":"Caching HTTP client","version":"1.1.8","license":"MIT","homepage":"https://makestatic.ws","repository":"https://github.com/makestatic/compiler","keywords":["makestatic-plugin","HTTP","cache","etag","filesystem"],"files":["README.md","index.js","cache/index.js"],"dependencies":{"filenamify-url":"^1.0.0","fresh":"^0.5.0","when":"^3.7.8"},"devDependencies":{"chai":"~3.5.0","istanbul":"~0.4.4","makestatic-core":"^1.0.75","mocha":"~3.2.0","standard":"^8.6.0"},"targets":["target/cache"],"specs":["test/global.js"],"scripts":{},"versions":[{"number":"1.0.0","date":"2017-03-09T12:59:11.123Z"},{"number":"1.0.1","date":"2017-03-09T13:08:25.591Z"},{"number":"1.0.2","date":"2017-03-10T03:00:35.118Z"},{"number":"1.1.0","date":"2017-03-10T03:14:40.886Z"},{"number":"1.1.1","date":"2017-03-10T03:46:35.726Z"},{"number":"1.1.2","date":"2017-03-10T03:50:09.271Z"},{"number":"1.1.3","date":"2017-03-10T03:59:07.581Z"},{"number":"1.1.4","date":"2017-03-10T04:01:00.933Z"},{"number":"1.1.5","date":"2017-03-10T04:06:31.742Z"},{"number":"1.1.6","date":"2017-03-11T23:11:53.340Z"},{"number":"1.1.7","date":"2017-03-12T08:25:04.786Z"},{"number":"1.1.8","date":"2017-03-12T08:27:08.136Z"}],"readme":"# HTTP Cache\n\n> Caches HTTP requests\n\nCaches HTTP requests to disc for faster builds.\n\n---\n\n- [Install](#install)\n- [API](#api)\n  - [HttpCache](#httpcache)\n    - [HttpCache](#httpcache-1)\n      - [Options](#options)\n    - [.request](#request)\n    - [.head](#head)\n    - [.get](#get)\n    - [.post](#post)\n- [License](#license)\n\n---\n\n## Install\n\n```\nyarn add makestatic-http-cache\n```\n\n## API\n\n### HttpCache\n\nCaches HTTP requests to disc so that plugins that make network requests\nare faster on consecutive builds.\n\n#### HttpCache\n\n```javascript\nnew HttpCache(context, options)\n```\n\nCreate an HttpCache plugin.\n\nConfigure this plugin for the `build` phase.\n\nAssigns this plugin instance to `context.agent` and does nothing\nelse until the public functions are invoked by other plugins.\n\nIf no `directory` is given files are cached in the `cache` folder within\nthis package.\n\nThis implementation will only cache responses for the 200 status code,\nyou can cache responses for other status codes using the `codes` option.\n\nTo disable caching you can set the `expires` option to zero. If the\ncontext option `cache` has been set to `false` the `expires` value is\nforced to zero and the cache is bypassed.\n\nThis implementation respects the ETag header and will only use a cached\nresource when the ETag has not changed.\n\nIf a server sends a `Cache-Control` header containing `no-store` the\nresponse is not cached.\n\nIf a server sends a `Cache-Control` header with a `max-age` value it is\nrespected and overrides the `expires` option.\n\nIf a `Cache-Control` header does not contain the `no-store` value and the\nserver response has not expired the result is served from the cache with\nno network request (optimal path).\n\nFor each request a directory is created corresponding to the request URL\nin the cache `directory`. Within each directory a `meta.json` file is\nwritten containing information about the last request, for methods other\nthan `HEAD` a `body` file is also written to the directory containing the\nresponse body buffer.\n\n* `context` Object the processing context.\n* `options` Object plugin options.\n\n##### Options\n\n* `directory` String the directory used to cache requests.\n* `expires` Number=86400 number of seconds before a cache expires.\n* `codes` Array list of HTTP status codes that are cacheable.\n\n#### .request\n\n```javascript\nHttpCache.prototype.request(url, options[, cb])\n```\n\nPerform a request and cache the result.\n\nIf a result already exists in the cache and is not stale the cached\nresult is returned.\n\nOptions are passed to the `http.request()` or `https.request()` functions\ndepending upon the URL, see the relevant nodejs documentation for more\ninformation. Options related to the URL are automatically set by calling\n`require('url').parse(url)` so you do not need to assign those options.\n\nIf the `buffer` option is set to `false` then the response body data is\nnot read which is useful if you either just want the headers for a method\nother than HEAD or if you are reading in the `body` data when consuming\nthe response (for example to calculate checksums).\n\nThe response object that the promise resolves to will contain meta\ninformation about the last request and a `body` field which is the buffer\ncontent from the last request.\n\nThe field `hit` indicates whether the result is coming from the cache or\nfrom a network request. It will be `false` when coming from the network.\n\nWhen the `cb` callback function is specified it is invoked with the server\nresponse object.\n\nReturns a promise that resolves to the downloaded or cached content.\n\n* `url` String the URL to fetch.\n* `options` Object request options.\n* `cb` Function callback function.\n\n#### .head\n\n```javascript\nHttpCache.prototype.head(url[, options][, cb])\n```\n\nPerform a HEAD request and cache the result meta data only.\n\nReturns a promise that resolves to the downloaded or cached content.\n\n* `url` String the URL to fetch.\n* `options` Object request options.\n* `cb` Function callback function.\n\n#### .get\n\n```javascript\nHttpCache.prototype.get(url[, options][, cb])\n```\n\nPerform a GET request and cache the result meta data and response buffer.\n\nReturns a promise that resolves to the downloaded or cached content.\n\n* `url` String the URL to fetch.\n* `options` Object request options.\n* `cb` Function callback function.\n\n#### .post\n\n```javascript\nHttpCache.prototype.post(url[, options][, cb])\n```\n\nPerform a POST request and cache the result meta data and response buffer.\n\nIf you add a `data` field to the `options` it is sent as the POST data.\n\nReturns a promise that resolves to the downloaded or cached content.\n\n* `url` String the URL to fetch.\n* `options` Object request options.\n* `cb` Function callback function.\n\n## License\n\nMIT\n\n---\n\nCreated by [mkdoc](https://github.com/mkdoc/mkdoc) on March 12, 2017\n\n[docs]: https://makestatic.ws/docs/ \"Documentation\"\n[standalone manual]: https://github.com/makestatic/website/blob/master/MANUAL.md \"Standalone Manual\"\n[yarn]: https://yarnpkg.com \"Yarn\"\n[webpack]: https://webpack.js.org \"Webpack\"\n[babel]: https://babeljs.io \"Babel\"\n[postcss]: http://postcss.org \"Postcss\"\n[sugarss]: https://github.com/postcss/sugarss \"Sugarss\"\n[reshape]: https://github.com/reshape/reshape \"Reshape Source Code\"\n[reshapeml]: https://reshape.ml \"Reshape\"\n[clean-css]: https://github.com/jakubpawlowicz/clean-css \"Clean CSS\"\n[html-minifier]: https://github.com/kangax/html-minifier \"Html Minifier\"\n[uglify-js]: https://github.com/mishoo/UglifyJS2 \"Uglify JS\"\n[imagemin]: https://github.com/imagemin/imagemin \"Imagemin\"\n[mkdoc]: https://github.com/mkdoc/mkdoc \"Mkdoc\"\n[browsersync]: https://www.browsersync.io \"Browsersync\"\n[yeoman]: http://yeoman.io \"Yeoman\"\n[spike]: https://www.spike.cf \"Spike\"\n[validator]: https://github.com/validator/validator \"HTML Validator\"\n[github pages]: https://pages.github.com \"Github Pages\"\n[amazon s3]: https://aws.amazon.com/s3/ \"Amazon S3\"\n[google sitemaps]: https://support.google.com/webmasters/answer/183668?hl=en&ref_topic=4581190 \"Google Sitemaps\"\n[sitemaps]: https://www.sitemaps.org/ \"Sitemaps\"\n\n","created":"2017-03-09T12:59:11.123Z","modified":"2017-03-12T08:27:08.136Z","lastPublisher":{"name":"tmpfs","email":"muji@tmpfs.org"},"owners":[{"name":"tmpfs","email":"muji@tmpfs.org"}],"other":{"_attachments":{},"_from":".","_id":"makestatic-http-cache","_nodeVersion":"6.1.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/makestatic-http-cache-1.1.8.tgz_1489307227881_0.5066548797767609"},"_npmUser":{"name":"tmpfs","email":"muji@tmpfs.org"},"_npmVersion":"4.3.0","_rev":"12-38dca25dc8261df7a1b9531257fb3d60","_shasum":"5697d0e9f9ac05af3950de44803b8960b074fe6c","author":{"name":"muji"},"bugs":{"url":"https://github.com/makestatic/compiler/issues"},"directories":{},"dist-tags":{"latest":"1.1.8"},"dist":{"shasum":"5697d0e9f9ac05af3950de44803b8960b074fe6c","tarball":"https://registry.npmjs.org/makestatic-http-cache/-/makestatic-http-cache-1.1.8.tgz"},"maintainers":[{"name":"tmpfs","email":"muji@tmpfs.org"}],"readmeFilename":"README.md","time":{"modified":"2017-03-12T08:27:08.136Z","created":"2017-03-09T12:59:11.123Z","1.0.0":"2017-03-09T12:59:11.123Z","1.0.1":"2017-03-09T13:08:25.591Z","1.0.2":"2017-03-10T03:00:35.118Z","1.1.0":"2017-03-10T03:14:40.886Z","1.1.1":"2017-03-10T03:46:35.726Z","1.1.2":"2017-03-10T03:50:09.271Z","1.1.3":"2017-03-10T03:59:07.581Z","1.1.4":"2017-03-10T04:01:00.933Z","1.1.5":"2017-03-10T04:06:31.742Z","1.1.6":"2017-03-11T23:11:53.340Z","1.1.7":"2017-03-12T08:25:04.786Z","1.1.8":"2017-03-12T08:27:08.136Z"}}}