{"name":"wtfetch","version":"1.1.0","description":"A wrapper around the fetch API to simplify making http requests","main":"dist/wtfetch.js","files":["dist","src","README.md","LICENSE"],"scripts":{"build":"WEBPACK_ENV=build webpack","dev":"WEBPACK_ENV=dev webpack --progress --colors --watch","test":" NODE_PATH=./src mocha --compilers js:babel-core/register --colors --recursive ./test/"},"repository":"https://github.com/snags88/wtfetch","keywords":["fetch","javascript","js"],"licenses":[{"type":"MIT","url":"https://github.com/snags88/wtfetch/blob/master/LICENSE"}],"homepage":"https://github.com/snags88/wtfetch#readme","devDependencies":{"babel":"6.5.x","babel-core":"6.18.x","babel-loader":"6.2.x","babel-plugin-add-module-exports":"0.2.x","babel-preset-es2015":"6.18.x","chai":"3.5.x","fetch-mock":"5.5.x","mocha":"3.1.x","sinon":"1.17.x","webpack":"1.13.x"},"dependencies":{"whatwg-fetch":"2.0.x"},"gitHead":"2725892178efdceccf6cf814cf89a738a912fa95","versions":[{"number":"1.0.0","date":"2016-11-18T21:17:33.432Z"},{"number":"1.0.1","date":"2016-11-18T21:32:53.696Z"},{"number":"1.1.0","date":"2016-11-28T23:02:46.191Z"}],"readme":"# wtfetch\nA wrapper around the fetch API to simplify making HTTP requests. Each\nHTTP method has its own function that can be imported or required into\nwherever needed.\n\n## Installation\n- `npm install --save wtfetch`\n\n## Usage\n```js\n// Import or require functions from library\nimport { get, post, patch, deleteRequest } from 'wtfetch'\n\n// Use the function to make HTTP request\nget('www.google.com', { data: {q: 'search term'}})\n```\n\n## Default Configurations\nBy default, each request will have the following configurations:\n\n```js\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n  credentials: 'same-origin' // enables cookies\n```\n\nNote that these can be overridden by passing the same key to the options\nof the request function.\n\n```js\nget('www.example.com', {\n  headers: {\n    'Accept': 'text/plain',\n    'Content-Type': 'text/plain'\n  }\n});\n```\n\n## Request Function Return Behavior\n- Each successful request will return a promise chain with the **json** of the response body.\n- Each unsuccessful request will throw an unhandled exception that must be handled outside of the library.\n\n## API\nThis library exposes 4 functions to make HTTP requests:\n- `get`\n- `post`\n- `patch`\n- `deleteRequest`\n\n### `get(url [, options])`\n- Url should not include the query strings, instead query strings should be passed in as a\n  js object in the options with the key `data`\n- In the options, use the key `data` with a js object to send parameters to the server.\n  Useful for search queries, filters, etc. Note that this supports nested objects\n- Additional option keys will be sent as is. Make sure the option provided is valid in this\n  doc: https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch#Parameters\n\n__Example__\n```js\n// with ES6 syntax\nimport { get } from 'wtfetch'\n\nget('www.example.com', {\n  data: {\n    q: 'hello world'\n  }\n}).then((bodyJSON) => {\n  console.log(bodyJSON);\n}).catch((e) => {\n  console.log('Oops there was an error', e);\n})\n\n// sends get request to www.example.com?q=hello+world\n// logs out the response or the error\n```\n\n### `post(url [, options])`\n- In the options, use the key `data` with a js object to send parameters to the server.\n- Additional option keys will be sent as is. Make sure the option provided is valid in this\n  doc: https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch#Parameters\n\n__Example__\n```js\n// with ES6 syntax\nimport { post } from 'wtfetch'\n\npost('www.example.com/api/v1/users', {\n  data: {\n    username: 'test user'\n  }\n}).then((bodyJSON) => {\n  console.log(bodyJSON);\n}).catch((e) => {\n  console.log('Oops there was an error', e);\n})\n```\n\n### `patch(url [, options])`\n- In the options, use the key `data` with a js object to send parameters to the server.\n- Additional option keys will be sent as is. Make sure the option provided is valid in this\n  doc: https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch#Parameters\n\n__Example__\n```js\n// with ES6 syntax\nimport { patch } from 'wtfetch'\n\npatch('www.example.com/api/v1/users/1', {\n  data: {\n    email: 'myNewEmail@email.com'\n  }\n}).then((bodyJSON) => {\n  console.log(bodyJSON);\n}).catch((e) => {\n  console.log('Oops there was an error', e);\n})\n```\n\n### `deleteRequest(url [, options])`\n- In the options, use the key `data` with a js object to send parameters to the server.\n- Additional option keys will be sent as is. Make sure the option provided is valid in this\n  doc: https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch#Parameters\n\n__Example__\n```js\n// with ES6 syntax\nimport { deleteRequest } from 'wtfetch'\n\ndeleteRequest('www.example.com/api/v1/users/1')\n  .then((bodyJSON) => {\n    console.log(bodyJSON);\n  }).catch((e) => {\n    console.log('Oops there was an error', e);\n  })\n```\n\n## Dependencies\n- [`whatwg-fetch` v2.0](https://github.com/github/fetch/releases/tag/v2.0.0) for `fetch` polyfill.\n\n## Testing\n- [Mocha](https://mochajs.org) as the test runner.\n- [Chai](http://chaijs.com/) as the assertion library.\n- [Sinon](http://sinonjs.org/) to spy on stuff.\n- [fetch-mock](https://github.com/wheresrhys/fetch-mock) for mocking\n  HTTP requests.\n","created":"2016-11-18T21:17:33.432Z","modified":"2016-11-28T23:02:46.191Z","lastPublisher":{"name":"snags88","email":"snaganumas@gmail.com"},"owners":[{"name":"snags88","email":"snaganumas@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"wtfetch","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/wtfetch-1.1.0.tgz_1480374165962_0.9192418889142573"},"_npmUser":{"name":"snags88","email":"snaganumas@gmail.com"},"_npmVersion":"3.8.9","_rev":"3-0517f9815c00fb8d95f66bf65ea82fbd","_shasum":"0e283b9de604d6aae2a388a7cf1c4d5f7f40f996","author":{"name":"Seiji Naganuma","email":"snaganumas@gmail.com","url":"https://snags88.github.io/"},"bugs":{"url":"https://github.com/snags88/wtfetch/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"0e283b9de604d6aae2a388a7cf1c4d5f7f40f996","tarball":"http://registry.npmjs.org/wtfetch/-/wtfetch-1.1.0.tgz"},"maintainers":[{"name":"snags88","email":"snaganumas@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-28T23:02:46.191Z","created":"2016-11-18T21:17:33.432Z","1.0.0":"2016-11-18T21:17:33.432Z","1.0.1":"2016-11-18T21:32:53.696Z","1.1.0":"2016-11-28T23:02:46.191Z"}}}