{"name":"ears","description":"messaging framework for communicating with running node.js applications over http","keywords":["http","communicate","local","listen","running","commands"],"homepage":"https://github.com/cscade/Ears","version":"0.3.1","repository":"https://github.com/cscade/Ears","main":"index","engines":{"node":"0.8.x"},"dependencies":{"portfinder":"0.2.x"},"devDependencies":{"mocha":"*","winston":"*"},"scripts":{"test":"mocha test -R spec"},"versions":[{"number":"0.1.0","date":"2011-09-15T14:07:45.514Z"},{"number":"0.1.1","date":"2011-09-15T19:23:27.322Z"},{"number":"0.1.2","date":"2011-09-15T19:54:53.526Z"},{"number":"0.1.3","date":"2011-09-22T16:39:47.698Z"},{"number":"0.1.4","date":"2011-09-22T20:29:19.388Z"},{"number":"0.2.2","date":"2012-08-23T17:12:15.360Z"},{"number":"0.3.0","date":"2012-08-29T16:44:02.155Z"},{"number":"0.3.1","date":"2012-08-29T18:03:38.815Z"}],"readme":"# Ears\n\nSimple listening plugin for node.js applications. Send messages to your running application in JSON over http.\n\n[![build status](https://secure.travis-ci.org/cscade/Ears.png)](http://travis-ci.org/cscade/Ears)\n\n## Installation\n\n\t$ npm install ears\n\n## Usage\n\nEars is very simple to use. It listens on your port of choice (or auto-detects a free port above 3999) on your address of choice (defaulting to INADDR_ANY) for incoming JSON POST requests. Ears is an EventEmitter, and will emit \"message\" on every incoming \"directive\". Your application can then respond to the event in any way it sees fit.\n\n````javascript\nvar Ears = require('ears');\n\nears = new Ears({ port: 3333 });\nears.on('testMessage', function (message) {\n\tconsole.log(message); // This is my test message!\n});\nears.listen();\n````\n\n\t$ curl localhost:3333 -H 'content-type: application/json' -d '{ \"directive\": \"testMessage\", \"message\": \"This is my test message!\" }'\n\t{\"ok\":true,\"message\":\"ok\"}\n\t$\n\n### Options\n\nOptions are passed on instance creation, i.e. `new Ears([options])`;\n\n`port: [null]`: Port to listen on, defaults to first available above 3999\n\n`verbose: [true]/false`: Talk about listening and incoming requests\n\n`messages.ok`: Response string on ok valid requests\n\n`messages.nok`: Response string on invalid requests\n\nIf you are using winston in your application, Ears can log to it rather than stdout:\n\n`winston.logger`: `winston`\n\n`winston.level`: 'info'\n\n### Methods\n\n#### listen([options], [callback])\n\n````javascript\n// Just listen\nears.listen();\n\n// Listen with a callback\nears.listen(function () {});\n\n// Listen on a specific address with a callback\nears.listen({\n\thost: '127.0.0.1' // Defaults to INADDR_ANY (all addresses on host)\n}, function () {});\n````\n\n#### muffs([callback])\n\n````javascript\n// Stop responding to requests, with an optional callback\nears.muffs();\nears.muffs(function () {});\n````\n\n### Response Codes\n\nIf you...\n\n\tsend a properly formed request with appropriate properties\t\t-> 200 OK\n\tsend a GET request\t\t\t\t\t\t\t\t\t\t\t\t-> 405 Method Not Allowed\n\tsend a POST request without application/json content type\t\t-> 400 Bad Request\n\tsend a JSON object missing the required properties\t\t\t\t-> 400 Bad Request\n\tsend malformed JSON\t\t\t\t\t\t\t\t\t\t\t\t-> 400 Bad Request\n\n## What can it do?\n\nI developed this module initially to provide a way to talk to production node.js applications from the command line\nusing cURL. By integrating Ears into applications, I can communicate graceful shutdown commands to node instances\nas part of deploy scripts, etc.\n\nSince it is not specialized to a particular purpose, it can be used anywhere it would be useful to convey messages or data\nvia JSON to a node.js application from the local host.\n\n## Test Coverage\n\nEars has a full test suite written for mocha. `npm install -g mocha` for access to the binary.\n\n## License \n\n(The MIT License)\n\nCopyright (c) 2011 Carson Christian &lt;cc@amplego.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","created":"2011-09-15T14:07:44.898Z","modified":"2014-03-20T00:34:09.453Z","lastPublisher":{"name":"cscade","email":"cc@amplego.com"},"owners":[{"name":"cscade","email":"cc@amplego.com"}],"other":{"_attachments":{},"_id":"ears","_npmUser":{"name":"cscade","email":"cc@amplego.com"},"_npmVersion":"1.1.49","_rev":"1-678a00b33bac8298519e80c3b749164c","author":{"name":"Carson S. Christian","email":"cc@amplego.com"},"directories":{},"dist-tags":{"latest":"0.3.1"},"dist":{"shasum":"3e8cb94dfe5baa7eb3da7986a82532188aeae0e7","tarball":"http://registry.npmjs.org/ears/-/ears-0.3.1.tgz"},"maintainers":[{"name":"cscade","email":"cc@amplego.com"}],"readmeFilename":"","time":{"modified":"2014-03-20T00:34:09.453Z","created":"2011-09-15T14:07:44.898Z","0.1.0":"2011-09-15T14:07:45.514Z","0.1.1":"2011-09-15T19:23:27.322Z","0.1.2":"2011-09-15T19:54:53.526Z","0.1.3":"2011-09-22T16:39:47.698Z","0.1.4":"2011-09-22T20:29:19.388Z","0.2.2":"2012-08-23T17:12:15.360Z","0.3.0":"2012-08-29T16:44:02.155Z","0.3.1":"2012-08-29T18:03:38.815Z"}}}