{"name":"csrf-meta-interceptor","version":"1.0.1","description":"A small and simple $http interceptor that reads a CSRF token from an html meta element named _csrf and sends the value as http header (name defined as html meta element named _csrf_header) when using POST, PUT or DELETE","main":"src/csrfMetaInterceptor.js","scripts":{"test":"gulp test"},"repository":"https://github.com/ckatzorke/csrf-meta-interceptor","keywords":["csrf","spring","AngluarJS"],"license":"MIT","homepage":"https://github.com/ckatzorke/csrf-meta-interceptor#readme","devDependencies":{"gulp":"^3.9.0","gulp-eslint":"^1.0.0","gulp-rimraf":"^0.2.0","gulp-uglify":"^1.4.2"},"gitHead":"b6dc6a457bfb0e74e4c605a8355ae51d22c4b888","versions":[{"number":"1.0.0","date":"2015-11-05T20:57:16.990Z"},{"number":"1.0.1","date":"2015-11-11T12:51:37.257Z"}],"readme":"# csrf-meta-interceptor\nAn AngularJS $http interceptor, sending a CSRF token from html meta elements, e.g. supported in Spring Framework.\nInspired by https://github.com/aditzel/spring-security-csrf-token-interceptor.\n\n# Usage\n\nInstall it\n```\nnpm install csrf-meta-interceptor --save\n```\nYou can find the source in _node_modules/csrf-meta-interceptor/src/csrfMetaInterceptor.js'_ and the uglified version in _node_modules/csrf-meta-interceptor/dist/csrfMetaInterceptor.js'_. Load the source into your html, e.g.\n```\n<script src=\"node_modules/csrf-meta-interceptor/dist/csrfMetaInterceptor.js\"></script>\n```\n\nAdd interceptor as dependency\n```\nvar app = angular.module('csrfDemoApp', ['csrfMetaInterceptor']);\n```\n\nThat's it, here is how to see it action\n```\napp.controller('CsrfCtrl', function ($scope, $http) {\n\t$scope.result = \"\";\n\n\t$scope.testPost = function () {\n\t\t$http.post('/api/test').then(function (result) {\n\t\t\t$scope.result = result;\n\t\t}, function (result) {\n\t\t\t$scope.result = \"Failed: \" + result.status;\n\t\t});\n\t};\n});\n```\n\n# TODO\n\nPossible enhancements include\n- tests\n- configuration of meta element names, instead of fixed values '\\_csrf' and '\\_csrf_header'\n- configuration of supported methods (currently fixed POST, PUT, DELETE)\n- optionally support for response headers, see https://github.com/aditzel/spring-security-csrf-token-interceptor especially when generating new tokens after validation\n","created":"2015-11-05T20:57:16.990Z","modified":"2015-11-11T12:51:37.257Z","lastPublisher":{"name":"ckatzorke","email":"c.katzorke@web.de"},"owners":[{"name":"ckatzorke","email":"c.katzorke@web.de"}],"other":{"_attachments":{},"_from":".","_id":"csrf-meta-interceptor","_nodeVersion":"4.2.1","_npmUser":{"name":"ckatzorke","email":"c.katzorke@web.de"},"_npmVersion":"2.14.7","_rev":"1-62455d4854345deac8264504a3bcb3f4","_shasum":"617fdce95dc7b6a97a65cf4571871361ff2e6250","author":{"name":"Christian Katzorke","email":"ckatzorke@gmail.com"},"bugs":{"url":"https://github.com/ckatzorke/csrf-meta-interceptor/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"617fdce95dc7b6a97a65cf4571871361ff2e6250","tarball":"http://registry.npmjs.org/csrf-meta-interceptor/-/csrf-meta-interceptor-1.0.1.tgz"},"maintainers":[{"name":"ckatzorke","email":"c.katzorke@web.de"}],"readmeFilename":"README.md","time":{"modified":"2015-11-11T12:51:37.257Z","created":"2015-11-05T20:57:16.990Z","1.0.0":"2015-11-05T20:57:16.990Z","1.0.1":"2015-11-11T12:51:37.257Z"}}}