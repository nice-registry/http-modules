{"name":"libird","version":"1.0.2","description":"a light bird http server","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/luckykaiyi/libird","keywords":["http","server","nodejs"],"license":"ISC","homepage":"https://github.com/luckykaiyi/libird#readme","gitHead":"ac0e87339b71d6d54b3f0644e4edde743117db35","versions":[{"number":"0.0.1","date":"2017-01-10T17:10:33.944Z"},{"number":"1.0.1","date":"2017-02-20T07:56:52.230Z"},{"number":"1.0.2","date":"2017-02-21T13:13:59.724Z"}],"readme":"# Libird \n\n<img src = 'http://7xloce.com1.z0.glb.clouddn.com/libird_logo_v1.0.png' width=\"300px\">\n\nLight Bird Server，基于 Node.js 的 web 开发框架。\n\n## 安装\n\n新建目录或直接进入已有工作目录（假设目录名为 `project` ）\n\n```\n$ mkdir project\n$ cd project\n```\n安装 libird\n\n`$ npm install libird`\n\n## 用法示例\n\n下载安装完成后，在 `project` 目录中创建 `libird.js` 文件。  \n\n### 1. 静态资源服务器\n\n```\n//引入 libird 模块\nvar libird = require('libird');\n\n//启动 http server, 默认监听本地8888端口号\nlibird.start();\n\n// 修改端口号 比如监听本地8989端口号\n// libird.start(8989);\n```\n运行 `$ node libird.js`，后台显示 `server listening at:8888`。\n浏览器打开 `http://127.0.0.1:8888` , 针对 `/` 的请求默认查找 `libird.js` 当前所在目录（即 `project` )下的 `index.html` 文件，如果未找到则显示 `404 Not Found!`。  \n\n通过 `HOST/FILEPATH` 可以访问静态资源文件。例如\n\n```\n// 访问 project 目录下的 index.css 文件\nhttp://127.0.0.1:8888/index.css  \n\n//访问 project/pages 目录下的 list.html 文件\nhttp://127.0.0.1:8888/pages/list.html \n```\n可以为静态文件指定根目录\n\n```\nvar libird = require('libird');  \nlibird.setDirPath('./app'); //设置根目录\nlibird.start();\n```\n重新运行 `$ node libird.js`。此时 `http://127.0.0.1:8888` 默认查找指定根目录（即`app`)下的 `index.html` 文件。\n\n### 2. 自定义路由\n\n路由基本结构 `router.METHOD(PATH, HANDLER)`, 暂且支持`GET/POST`。基本用法如下：\n\n### GET\n\n```\nvar libird = require('libird');\nvar router = libird.router;\nrouter.get('/', function(req, res) {\n    res.send('Hello World!');\n});\nrouter.get('/detail/:id', function(req, res) {\n    res.send('req.params.id=' + req.params.id);\n});\nlibird.start();\n```\n上述代码运行后将以 `Hello World!` 响应针对`/`的请求。  \n访问 `http://127.0.0.1:8888/detail/100`，页面显示 `req.params.id=100`。\n\n### POST\n\n目前支持的 POST 请求 Content-Type为 `json`或 `x-www-form-urlencoded`\n\n```\nvar libird = require('libird');\nvar router = libird.router;\nrouter.post('/login', function(req, res) {\n    res.setCookie('userid', '111111'); //新增 cookie\n    res.send(req.body); \n});\nrouter.post('/logout', function(req, res) {\n    res.clearCookie('userid'); // 清除 cookie\n    res.send({\"success\": true});\n});\nlibird.start();\n```\n运行 `$ node libird.js`。可以通过 Chrome 的插件 Postman 来模拟 POST 请求， 如下所示：\n\n#### 请求\n\n```\nPOST /login HTTP/1.1\nHost: 127.0.0.1:8888\nCache-Control: no-cache\nContent-Type: application/x-www-form-urlencoded\n\nusername=Lee&password=111\n```\nlibird 将 POST 请求的主体存入`req.body`\n\n#### 响应\n\n上述示例代码的响应即直接显示 `req.body`,\n\n`{\"username\":\"Lee\",\"password\":\"111\"}`\n\n#### Cookie\n\n- 当请求`/login`的时候，新增名为`userid`的 cookie\n `userid  130af17e178815982268491f088dabb3`。  \n \n- 当请求`/logout`时清除名为 `userid`的 cookie。\n \n- 可通过`req.getSession('userid')`获取原始的 userid (即111111)。比如用于判断用户的登录状态。\n  \n  ```\n   router.get('/user', function(req, res) {\n      var userid = req.getSession('userid');\n      var status = userid ? '已登录' : '未登录';\n      res.send(status);\n   });\n  ```\n--\n\n\n\n\n","created":"2017-01-10T17:10:33.944Z","modified":"2017-02-21T13:13:59.724Z","lastPublisher":{"name":"luckykaiyi","email":"kaiyi0707@163.com"},"owners":[{"name":"luckykaiyi","email":"kaiyi0707@163.com"}],"other":{"_attachments":{},"_from":".","_id":"libird","_nodeVersion":"4.2.3","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/libird-1.0.2.tgz_1487682837999_0.4839132290799171"},"_npmUser":{"name":"luckykaiyi","email":"kaiyi0707@163.com"},"_npmVersion":"3.9.2","_rev":"3-93e4397c63d24525cdc65ad3dd6e0586","_shasum":"0bd63a1b8c999cdc560bff674f5de18ddfc3070f","author":{"name":"luckykaiyi"},"bugs":{"url":"https://github.com/luckykaiyi/libird/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"0bd63a1b8c999cdc560bff674f5de18ddfc3070f","tarball":"https://registry.npmjs.org/libird/-/libird-1.0.2.tgz"},"maintainers":[{"name":"luckykaiyi","email":"kaiyi0707@163.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-21T13:13:59.724Z","created":"2017-01-10T17:10:33.944Z","0.0.1":"2017-01-10T17:10:33.944Z","1.0.1":"2017-02-20T07:56:52.230Z","1.0.2":"2017-02-21T13:13:59.724Z"}}}