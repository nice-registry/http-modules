{"name":"fast-stream","version":"2.2.2","description":"Fast Stream HTTP Server","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"bytes-stream":"~1.0.0","chunks-stream":"~1.1.0","mimehttp":"~1.0.0"},"repository":"https://github.com/RealTimeCom/fast-stream","keywords":["stream","fast","http","media","range","chunk","cache"],"license":"MIT","homepage":"https://github.com/RealTimeCom/fast-stream","versions":[{"number":"1.0.0","date":"2017-01-18T19:39:52.438Z"},{"number":"1.0.1","date":"2017-01-19T00:25:49.213Z"},{"number":"1.0.2","date":"2017-01-19T00:58:57.767Z"},{"number":"1.0.3","date":"2017-01-19T01:13:19.947Z"},{"number":"1.0.4","date":"2017-01-19T10:17:58.784Z"},{"number":"1.0.5","date":"2017-01-19T10:52:15.652Z"},{"number":"1.0.6","date":"2017-01-19T12:15:26.356Z"},{"number":"1.1.0","date":"2017-01-19T13:39:51.083Z"},{"number":"1.1.1","date":"2017-01-19T13:44:30.760Z"},{"number":"1.1.2","date":"2017-01-19T14:10:26.422Z"},{"number":"1.1.3","date":"2017-01-20T21:42:21.866Z"},{"number":"1.1.4","date":"2017-01-20T23:23:11.969Z"},{"number":"1.1.5","date":"2017-01-21T19:39:59.670Z"},{"number":"1.1.6","date":"2017-01-22T10:26:24.814Z"},{"number":"1.1.7","date":"2017-01-22T10:36:33.394Z"},{"number":"1.2.0","date":"2017-02-06T14:40:50.083Z"},{"number":"1.2.1","date":"2017-02-06T18:01:37.002Z"},{"number":"1.2.2","date":"2017-02-06T22:26:09.407Z"},{"number":"1.2.3","date":"2017-02-07T17:34:42.510Z"},{"number":"2.0.0","date":"2017-02-08T23:24:13.462Z"},{"number":"2.0.1","date":"2017-02-08T23:32:39.939Z"},{"number":"2.0.2","date":"2017-02-09T00:24:36.248Z"},{"number":"2.1.0","date":"2017-02-09T03:28:44.042Z"},{"number":"2.1.1","date":"2017-02-09T03:38:35.302Z"},{"number":"2.1.2","date":"2017-02-09T04:22:32.855Z"},{"number":"2.2.0","date":"2017-02-12T03:28:33.876Z"},{"number":"2.2.1","date":"2017-02-12T05:58:18.766Z"},{"number":"2.2.2","date":"2017-02-21T23:03:57.514Z"}],"readme":"## Fast Stream\r\n[![NPM](https://nodei.co/npm/fast-stream.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/fast-stream/)\r\n\r\n[![Build Status](https://travis-ci.org/RealTimeCom/fast-stream.svg?branch=master)](http://travis-ci.org/RealTimeCom/fast-stream)\r\n[![dependencies](https://david-dm.org/RealTimeCom/fast-stream.svg)](https://david-dm.org/RealTimeCom/fast-stream)\r\n\r\n**Fast Stream HTTP Server**\r\n\r\n```sh\r\n$ npm install fast-stream\r\n```\r\nSimple server configuration `conf`, serve all requests with `200` OK.\r\n```js\r\nconst http = require('fast-stream');\r\nconst conf = {\r\n    '*': { // host name \"*\" <for all>, \"cb\" is the callback function\r\n        404: cb => cb('<html><body><h3>Hello World!</h3></body></html>', null, 200)\r\n    }\r\n};\r\nrequire('net').createServer( // or require('tls') for HTTPS / SSL\r\n    socket => socket.pipe(new http(conf)).pipe(socket)\r\n).listen(80); // or 443 for HTTPS / SSL\r\n```\r\nCreate `conf` using <a href=\"https://github.com/RealTimeCom/fast-config\"><b>fast-config</b></a> module for static files.\r\n```js\r\nconst get = require('fast-config');\r\nconst http = require('fast-stream');\r\nconst conf = {\r\n    '*': get('/path/src') // static files directory\r\n};\r\nrequire('net').createServer(socket => socket.pipe(new http(conf)).pipe(socket)).listen(80);\r\n```\r\nSample `conf` for files or readable streams, <a href=\"https://github.com/RealTimeCom/mimehttp\"><b>mimehttp</b></a> optional.\r\n```js\r\nconst fs = require('fs');\r\nconst mime = require('mimehttp');\r\nconst conf = {\r\n    '*': {\r\n        GET: { // method GET\r\n            '/favicon.ico': cb => cb({\r\n                src: '/dir/favicon.ico' // source: file path\r\n            }, { // additional header\r\n                'Content-Type': mime.type.ico\r\n            }),\r\n            '/vid.mp4': cb => cb({\r\n                src: fs.createReadStream('/dir/vid.mp4') // source: readable Stream\r\n            }, { // additional headers\r\n                'Content-Type': mime.type['mp4'],\r\n                'Content-Disposition': 'inline', // display in browser\r\n                'Content-Duration': 171, // required for web video player\r\n                'X-Content-Duration': 171  // video duration in seconds\r\n            })\r\n        }\r\n    }\r\n};\r\n```\r\nFunction `host` arguments `cb`, `req` and `this` bind example.\r\n```js\r\nconst conf = {\r\n    'localhost:80': { // hostname \"localhost\" port \"80\"\r\n        GET: { // URL: http://localhost/\r\n            '/': cb => cb('<html><body>' + // attach small files, or remove JSON.stringify(req), see below\r\n                '<form action=\"/attach.html\" method=\"post\" enctype=\"multipart/form-data\">' +\r\n                '<input type=\"text\" name=\"t1\"><input type=\"text\" name=\"t2\"><input type=\"text\" name=\"t2\">' +\r\n                '<input type=\"file\" name=\"f1\"><input type=\"file\" name=\"f2\"><input type=\"file\" name=\"f2\">' +\r\n                '<input type=\"submit\" value=\"Submit\">' +\r\n                '</form>' +\r\n                '</body></html>')\r\n        },\r\n        POST: { // URL: http://localhost/attach.html (method POST only)\r\n            '/attach.html': function host(cb, req) {\r\n                cb('<html><body>' + // client IP address\r\n                    '<h3>' + this._readableState.pipes.remoteAddress + '</h3>' +\r\n                    '<code>' + JSON.stringify(req) + '</code>' +\r\n                    '</body></html>'); // default 'Content-Type' is 'text/html' utf8\r\n            }\r\n        }\r\n    },\r\n    '127.0.0.1:80': { // another host\r\n        GET: { // URL: http://127.0.0.1/\r\n            '/': cb => cb('Request from 127.0.0.1:80', { 'Content-Type': 'text/plain' })\r\n        }\r\n    }\r\n};\r\n```\r\n### `http (config, options)` class\r\n* `config` Object - host functions list, see the examples above\r\n* `options` Object - see below\r\n\r\n### `host (cb, req)` host function\r\n* `cb` Function - callback function, see below\r\n* `req` Object - request, see below\r\n* `this` Bind Object - this Stream\r\n\r\n### `cb (data, headers, code)` callback function\r\n* `data` String|Buffer|Object - response, for `Object` see below\r\n* `headers` Object - optional, default null\r\n* `code` Number - optional, http status, default 200\r\n\r\n### `data` Object response\r\n* `src` String|Object - `String` file path or `Object` readable stream\r\n* `length` Number - optional, data size, required for range bytes when `src` is readable stream\r\n\r\n### `req` Object request\r\n* `path` String\r\n* `query` Object - header `querystring`\r\n* `host` String\r\n* `hostname` String\r\n* `port` Number\r\n* `attach` Object - when `req.request.method` is `POST`, see below\r\n* `request` Object - { `method`: String, `uri`: String, `protocol`: String }\r\n* `header` Object - { `list`: Array, `hostname`: String, `port`: Number, `length`: Number, `connection`: String, `type`: String, `boundary`: String, `etag`: String, `modified`: String, `range`: String }\r\n\r\n### `req.attach` Object attach\r\n* when `req.header.type` is `urlencoded` - Object `querystring` from `POST` body\r\n* when `req.header.type` is `multipart` - Object { query: Object `querystring`, files: Array Object { name: String, data: Buffer } }\r\n\r\n### `options` Object http class argument\r\n* `limit` Number - anti memory overhead, request data maximum size, default `5e8` ~500MB, for big data/files, consider to increase this value\r\n* `ranges` Boolean - accept ranges request, default `true`\r\n* `error` String - custom error name event, default `httpError`\r\n* `name` String - Server name/version, default `fast-stream/2.2`, `null` - to disable\r\n* `cache` Boolean - client cache, send/verify \"Last-Modified\" and/or \"ETag\" header, default `true`\r\n* `closeOnError` Boolean - close connection on status `code` >= `400`, default `false`, don't close\r\n* `chunked` Number - if body response size is greater than this value, send \"Transfer-Encoding: chunked\", default `2e7` ~20MB, `0` - to disable\r\n\r\n--------------------------------------------------------\r\n**Fast Stream** is licensed under the MIT license. See the included `LICENSE` file for more details.\r\n","created":"2017-01-18T19:39:52.438Z","modified":"2017-02-21T23:03:57.514Z","lastPublisher":{"name":"realtimecom","email":"expertphp@gmail.com"},"owners":[{"name":"realtimecom","email":"expertphp@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fast-stream","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/fast-stream-2.2.2.tgz_1487718235466_0.7153751079458743"},"_npmUser":{"name":"realtimecom","email":"expertphp@gmail.com"},"_npmVersion":"4.1.2","_rev":"28-046a17c6c67157a1b25065f4ddbba522","_shasum":"4e7eb19c9775e55a3b2b2fcb337c544e1306c61e","author":{"name":"Tanase Laurentiu Iulian","email":"expertphp@gmail.com","url":"https://github.com/RealTimeCom"},"bugs":{"url":"https://github.com/RealTimeCom/fast-stream/issues"},"directories":{},"dist-tags":{"latest":"2.2.2"},"dist":{"shasum":"4e7eb19c9775e55a3b2b2fcb337c544e1306c61e","tarball":"https://registry.npmjs.org/fast-stream/-/fast-stream-2.2.2.tgz"},"maintainers":[{"name":"realtimecom","email":"expertphp@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-21T23:03:57.514Z","created":"2017-01-18T19:39:52.438Z","1.0.0":"2017-01-18T19:39:52.438Z","1.0.1":"2017-01-19T00:25:49.213Z","1.0.2":"2017-01-19T00:58:57.767Z","1.0.3":"2017-01-19T01:13:19.947Z","1.0.4":"2017-01-19T10:17:58.784Z","1.0.5":"2017-01-19T10:52:15.652Z","1.0.6":"2017-01-19T12:15:26.356Z","1.1.0":"2017-01-19T13:39:51.083Z","1.1.1":"2017-01-19T13:44:30.760Z","1.1.2":"2017-01-19T14:10:26.422Z","1.1.3":"2017-01-20T21:42:21.866Z","1.1.4":"2017-01-20T23:23:11.969Z","1.1.5":"2017-01-21T19:39:59.670Z","1.1.6":"2017-01-22T10:26:24.814Z","1.1.7":"2017-01-22T10:36:33.394Z","1.2.0":"2017-02-06T14:40:50.083Z","1.2.1":"2017-02-06T18:01:37.002Z","1.2.2":"2017-02-06T22:26:09.407Z","1.2.3":"2017-02-07T17:34:42.510Z","2.0.0":"2017-02-08T23:24:13.462Z","2.0.1":"2017-02-08T23:32:39.939Z","2.0.2":"2017-02-09T00:24:36.248Z","2.1.0":"2017-02-09T03:28:44.042Z","2.1.1":"2017-02-09T03:38:35.302Z","2.1.2":"2017-02-09T04:22:32.855Z","2.2.0":"2017-02-12T03:28:33.876Z","2.2.1":"2017-02-12T05:58:18.766Z","2.2.2":"2017-02-21T23:03:57.514Z"}}}