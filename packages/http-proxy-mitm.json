{"name":"http-proxy-mitm","version":"0.1.2","description":"for node-http-proxy transform the response json from the proxied server.","main":"index.js","scripts":{"test":"nyc mocha"},"repository":"https://github.com/langjt/node-http-proxy-mitm","keywords":["http-proxy","streaming","response","mitm","transform"],"license":"MIT","homepage":"https://github.com/langjt/node-http-proxy-mitm#readme","dependencies":{"bufferhelper":"^0.2.1","pump":"^1.0.2","through2":"^2.0.3"},"devDependencies":{"chai":"^3.5.0","http-proxy":"^1.16.2","mocha":"^2.5.3"},"gitHead":"427fec864748ae68e9ef87fa6cfd0caa5b094347","versions":[{"number":"0.1.1","date":"2017-01-28T01:53:49.996Z"},{"number":"0.1.2","date":"2017-01-28T02:04:18.493Z"}],"readme":"# http-proxy-mitm [![Build Status](https://travis-ci.org/zxqfox/http-proxy-mitm.svg?branch=master)](https://travis-ci.org/zxqfox/http-proxy-mitm)\n\nUse it with [http-proxy][] to transform the response from the proxied server.\n\n> Based on [node-http-proxy-json][] by [langjt][]. Thank you for your work!\n\n## Motivation\n\nThere is very hard to modify non-XML response when using [http-proxy][]. For HTML/XML document you can try [Harmon](https://github.com/No9/harmon).\n\nUsually the server will compress the data, confirm your server compression format before using this repository: `http-proxy-mitm` currently supports **gzip**„ÄÅ**deflate** and **uncompressed** content encoding.\n\nIf you need other compression format, try to pass in decoder and encoder as the first and the last transformer.\n\n## Installation\n\n```sh\nnpm i http-proxy-mitm\n```\n\n## Examples\n\n### Handling server with gzip compression\n\n```js\nconst zlib = require('zlib');\nconst http = require('http');\nconst httpProxy = require('http-proxy');\nconst httpProxyMitm = require('http-proxy-mitm');\n\n// Create a proxy server\nconst proxy = httpProxy.createProxyServer({\n    target: 'http://localhost:5001'\n});\n\n// Listen for the `proxyRes` event on `proxy`.\nproxy.on('proxyRes', httpProxyMitm([\n    {\n        condition: function(res, req) { return req.url === '/1'; },\n        bodyTransform: function (body) {\n            body = JSON.parse(body);\n            if (body) {\n                body.age = 2;\n                body.version = undefined;\n            }\n            return JSON.stringify(body);\n        }\n    },\n    {\n        condition: function(res, req) { return req.url === '/2'; },\n        transform: through2(function (chunk, enc, cb) {\n            cb(null, new Buffer(chunk.toString().replace(',\"age\":1', ',\"age\":2').replace(',\"version\":\"1.0.0\"', '')));\n        })\n    }\n]));\n\n// Create your server and then proxies the request\nconst server = http.createServer(function (req, res) {\n    proxy.web(req, res);\n}).listen(5000);\n\n// Create your target server\nconst targetServer = http.createServer(function (req, res) {\n    // Create gzipped content\n    const gzip = zlib.Gzip();\n    gzip.pipe(res);\n\n    res.writeHead(200, {'Content-Type': 'application/json', 'Content-Encoding': 'gzip'});\n    gzip.write(JSON.stringify({name: 'node-http-proxy-mitm', age: 1, version: '1.0.0'}));\n    gzip.end();\n}).listen(5001);\n```\n\n### Handling server with deflate compression\n\n```js\nconst zlib = require('zlib');\nconst http = require('http');\nconst httpProxy = require('http-proxy');\nconst httpProxyMitm = require('http-proxy-mitm');\n\n// Create a proxy server\nconst proxy = httpProxy.createProxyServer({\n    target: 'http://localhost:5001'\n});\n\n// Listen for the `proxyRes` event on `proxy`.\nproxy.on('proxyRes', httpProxyMitm([{\n    transform: through2(function (chunk, enc, cb) {\n        cb(null, new Buffer(chunk.toString().replace(',\"age\":1', ',\"age\":2').replace(',\"version\":\"1.0.0\"', '')));\n    })\n}]));\n\n// Create your server and then proxies the request\nconst server = http.createServer(function (req, res) {\n    proxy.web(req, res);\n}).listen(5000);\n\n// Create your target server\nconst targetServer = http.createServer(function (req, res) {\n    // Create deflated content\n    const deflate = zlib.Deflate();\n    deflate.pipe(res);\n\n    res.writeHead(200, {'Content-Type': 'application/json', 'Content-Encoding': 'deflate'});\n    deflate.write(JSON.stringify({name: 'node-http-proxy-mitm', age: 1, version: '1.0.0'}));\n    deflate.end();\n}).listen(5001);\n```\n\n### Handling server without compression\n\n```js\nconst http = require('http');\nconst httpProxy = require('http-proxy');\nconst modifyResponse = require('../');\n\n// Create a proxy server\nconst proxy = httpProxy.createProxyServer({\n    target: 'http://localhost:5001'\n});\n\n// Listen for the `proxyRes` event on `proxy`.\nproxy.on('proxyRes', httpProxyMitm([{\n    transform: through2(function (chunk, enc, cb) {\n        cb(null, new Buffer(chunk.toString().replace(',\"age\":1', ',\"age\":2').replace(',\"version\":\"1.0.0\"', '')));\n    })\n}]));\n\n// Create your server and then proxies the request\nconst server = http.createServer(function (req, res) {\n    proxy.web(req, res);\n}).listen(5000);\n\n// Create your target server\nconst targetServer = http.createServer(function (req, res) {\n    res.writeHead(200, {'Content-Type': 'application/json', 'Content-Encoding': 'deflate'});\n    res.write(JSON.stringify({name: 'node-http-proxy-mitm', age: 1, version: '1.0.0'}));\n    res.end();\n}).listen(5001);\n```\n\n## Tests\n\nTo run the test suite, first install the dependencies, then run `npm test`:\n\n```sh\nnpm install\nnpm test\n```\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\n\n[http-proxy]: https://github.com/nodejitsu/node-http-proxy\n[node-http-proxy-json]: https://github.com/langjt/node-http-proxy-json\n[langjt]: https://github.com/langjt\n","created":"2017-01-28T01:53:49.996Z","modified":"2017-01-28T02:04:18.493Z","lastPublisher":{"name":"qfox","email":"zxqfox@gmail.com"},"owners":[{"name":"qfox","email":"zxqfox@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-proxy-mitm","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/http-proxy-mitm-0.1.2.tgz_1485569056462_0.5110594721045345"},"_npmUser":{"name":"qfox","email":"zxqfox@gmail.com"},"_npmVersion":"2.15.11","_rev":"2-49c03c8e4954139906ab18087ff9ccb7","_shasum":"b8e71f480967dbf1d5f293e8b61446a121defb5c","author":{"name":"Alexej Yaroshevich","email":"zxqfox@gmail.com"},"bugs":{"url":"https://github.com/langjt/node-http-proxy-mitm/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"b8e71f480967dbf1d5f293e8b61446a121defb5c","tarball":"https://registry.npmjs.org/http-proxy-mitm/-/http-proxy-mitm-0.1.2.tgz"},"maintainers":[{"name":"qfox","email":"zxqfox@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-28T02:04:18.493Z","created":"2017-01-28T01:53:49.996Z","0.1.1":"2017-01-28T01:53:49.996Z","0.1.2":"2017-01-28T02:04:18.493Z"}}}