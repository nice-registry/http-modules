{"name":"fd-http-request","version":"1.1.2","description":"http request","main":"http-request.js","scripts":{},"keywords":["request","http","https","get","post"],"repository":"https://github.com/SuperPaintman/fd-http-request","license":"ISC","dependencies":{"cookie":"^0.2.0","iconv-lite":"^0.4.11","object-merge":"^2.5.1"},"gitHead":"87e00166e5a69f860d1d0d8870fd89be01634bf9","homepage":"https://github.com/SuperPaintman/fd-http-request","versions":[{"number":"0.1.0","date":"2015-09-09T09:39:58.612Z"},{"number":"0.2.0","date":"2015-09-12T00:08:33.902Z"},{"number":"0.2.1","date":"2015-09-12T00:10:46.141Z"},{"number":"0.3.0","date":"2015-09-12T01:10:42.189Z"},{"number":"0.3.1","date":"2015-09-12T01:12:27.483Z"},{"number":"0.4.0","date":"2015-09-12T02:35:55.427Z"},{"number":"0.4.1","date":"2015-09-12T02:38:53.171Z"},{"number":"0.5.0","date":"2015-09-12T03:37:09.577Z"},{"number":"0.5.1","date":"2015-09-12T03:46:04.597Z"},{"number":"0.5.2","date":"2015-09-12T03:48:40.057Z"},{"number":"1.0.0","date":"2015-09-12T05:18:22.445Z"},{"number":"1.1.0","date":"2015-09-12T23:22:23.052Z"},{"number":"1.1.1","date":"2015-09-13T00:16:01.990Z"},{"number":"1.1.2","date":"2015-09-13T00:48:38.667Z"}],"readme":"# Node.js module for POST / GET http requests\r\n\r\n## Installation\r\n```sh\r\nnpm install fd-http-request --save\r\n```\r\n\r\n## Usage Example | method GET (VK.com API)\r\n```js\r\nvar httpRequest = require('fd-http-request');\r\n\r\n// Get request\r\nhttpRequest.get('https://api.vk.com/method/users.get', function(res){\r\n    console.log( res );\r\n    /* RESPONSE:\r\n        {\r\n            status: 200,\r\n            data: '{\"response\":[{\"uid\":205387401,\"first_name\":\"Tom\",\"last_name\":\"Cruise\",\"city\":5331,\"photo_50\":\"http:\\/\\/cs402330.vk.me\\/v402330401\\/9760\\/pV6sZ5wRGxE.jpg\",\"verified\":0}]}',\r\n            headers: {\r\n                server: 'Apache',\r\n                date: 'Sat, 12 Sep 2015 02:13:31 GMT',\r\n                'content-type': 'application/json; charset=utf-8',\r\n                'content-length': 169,\r\n                connection: 'close',\r\n                'x-powered-by': 'PHP/3.17046',\r\n                'set-cookie':[\r\n                    'remixlang=0; expires=Sun, 18 Sep 2016 03:04:05 GMT; path=/; domain=.vk.com'\r\n                ],\r\n                pragma: 'no-cache',\r\n                'cache-control': 'no-store'\r\n            },\r\n            cookies: [\r\n                {\r\n                    remixlang: 0,\r\n                    expires: 'Sun, 18 Sep 2016 03:04:05 GMT',\r\n                    path: '/',\r\n                    domain: '.vk.com'\r\n                }\r\n            ],\r\n            parsedCookies: {\r\n                remixlang: 0\r\n            },\r\n            charset: 'utf-8'\r\n        }\r\n    */\r\n}, {\r\n    charset: 'utf-8',\r\n    protocol: 'https',\r\n    data: {\r\n        user_ids: 205387401,\r\n        fields: 'photo_50,city,verified',\r\n        version: 5.37\r\n    }\r\n});\r\n```\r\n\r\n## Usage Example | Request class (VK.com API)\r\n```js\r\nvar Request = require('fd-http-request').Request;\r\nvar request = new Request({\r\n    saveCookies: true,\r\n    headers: {\r\n        'x-message': 'hi, mom!'\r\n    }\r\n});\r\n\r\nrequest.get('https://api.vk.com/method/users.get', function( res ) {\r\n    console.log( res );\r\n    /* RESPONSE:\r\n        {\r\n            status: 200,\r\n            ...\r\n        }\r\n    */\r\n    \r\n    console.log( request.cookie() );\r\n    /* SAVED COOKIES:\r\n        {\r\n            remixlang: '0',\r\n            ...\r\n            domain: '.vk.com'\r\n        }\r\n    */\r\n    \r\n    console.log( request.header({\r\n        'x-studio': 'FlatDev'\r\n    }) );\r\n    /* PERMANENT HEADERS:\r\n        {\r\n            'x-message': 'hi, mom!',\r\n            'x-studio': 'FlatDev'\r\n        }\r\n    */\r\n    \r\n    console.log( request.header({\r\n        'x-message': 'hi, son!'\r\n    }) );\r\n    /* PERMANENT HEADERS:\r\n        {\r\n            'x-message': 'hi, son!',\r\n            'x-studio': 'FlatDev'\r\n        }\r\n    */\r\n    \r\n    console.log( request.clearHeader('x-message') );\r\n    /* PERMANENT HEADERS:\r\n        {\r\n            'x-studio': 'FlatDev'\r\n        }\r\n    */\r\n}, {\r\n    data: {\r\n        user_ids: 205387401,\r\n        fields: 'photo_50,city,verified',\r\n        version: 5.37\r\n    }\r\n});\r\n```\r\n\r\n------------------------------------\r\n\r\n## Methods\r\n### get(url, callback, opts)\r\n**Makes a GET request**\r\n* `string` url - the requested address\r\n* `callback` callback - **function(res)** callback function after a request\r\n    * `object` res - response from server\r\n        * `integer` status - response status\r\n        * `string` data - response text from server\r\n        * `object` headers - response headers\r\n        * `array` cookies - response cookies\r\n        * `object` parsedCookies - parsed response cookies. Valid for the request\r\n        * `string` charset - response charset\r\n* `object` opts - request options **[optional]**\r\n    * `object` data - GET data. _default: `null`_ . _example: `{user_ids: 205387401}`_\r\n    * `object` headers - request headers. _default: `null`_ . _example: `{'User-Agent': 'Mozilla/5.0'}`_\r\n    * `object` cookies - request cookies. _default: `null`_ . _example: `{foo: 'bar'}`_\r\n    * `string` charset - response encoding. _default: `autodetect from the header`_ . _example: `'cp1251'`_\r\n    * `string` protocol - request protocol . _default: `autodetect from the protocol`_ . [ _`'http'` or `'https'`_ ]\r\n\r\n------------------------------------\r\n\r\n### post(url, callback, opts)\r\n**Makes a POST request**\r\n* `string` url - the requested address\r\n* `callback` callback - **function(res)** callback function after a request\r\n    * `object` res - response from server\r\n        * `integer` status - response status\r\n        * `string` data - response text from server\r\n        * `object` headers - response headers\r\n        * `object` parsedCookies - parsed response cookies. Valid for the request\r\n        * `array` cookies - response cookies\r\n        * `string` charset - response charset\r\n* `object` opts - request options **[optional]**\r\n    * `object` data - POST data. _default: `null`_ . _example: `{user_ids: 205387401}`_\r\n    * `object` headers - request headers. _default: `null`_ . _example: `{'User-Agent': 'Mozilla/5.0'}`_\r\n    * `object` cookies - request cookies. _default: `null`_ . _example: `{foo: 'bar'}`_\r\n    * `string` charset - response encoding. _default: `autodetect from the header`_ . _example: `'cp1251'`_\r\n    * `string` protocol - request protocol . _default: `autodetect from the protocol`_ . [ _`'http'` or `'https'`_ ]\r\n\r\n------------------------------------\r\n\r\n## Classes\r\n### Request(opts)\r\n* `object` opts - class options\r\n    * `boolean` saveCookies - whether to save response cookies. _default: `true`_\r\n    * `object` headers - permanent headers. _default: `null`_ . _example: `{'User-Agent': 'Mozilla/5.0'}`_\r\n\r\n#### Request# get(url, callback, opts)\r\nFull copy of the [ `get` ]( #get-url-callback-opts ) method. If set `opts.saveCookies` merge and save `opts.cookies` and merge `opts.headers`, if they set.\r\n\r\n#### Request# post(url, callback, opts)\r\nFull copy of the [ `post` ]( #post-url-callback-opts ) method. If set `opts.saveCookies` merge and save `opts.cookies` and merge `opts.headers`, if they set.\r\n\r\n#### Request# header()\r\n**Returns current permanent headers**\r\n* return `object` - permanent headers\r\n\r\n#### Request# header( headers )\r\n**Updates permanent headers**\r\n* `object` headers - add new or change current permanent headers. _example: `{'User-Agent': 'Mozilla/5.0'}`_\r\n* return `object` - current permanent headers\r\n\r\n#### Request# clearHeader()\r\n**Removes all permanent headers**\r\n* return `object` - current permanent headers\r\n\r\n#### Request# clearHeader( name )\r\n**Removes permanent header**\r\n* `string` name - the name of removed header. _example: `'User-Agent'`_\r\n* return `object` - current permanent headers\r\n\r\n#### Request# cookie()\r\n**Returns saved cookies**\r\n* return `object` - saved cookies\r\n\r\n#### Request# cookie( cookies )\r\n**Updates saved cookies**\r\n* `object` cookies - add new or change saved cookies. _example: `{foo: 'bar'}`_\r\n* return `object` - current saved cookies\r\n\r\n#### Request# cookie( cookies, convert )\r\n**Make valid input cookies and updates saved cookies**\r\n* `object` cookies - add new or change saved cookies. _example: `{foo: 'bar'}`_\r\n* `boolean` convert - whether to convert cookies. if cookies look like `[{foo: 'bar'}, {doo: 'gar'}]` set it to `false`, if look like `{foo: 'bar', doo: 'gar'}` set it to `true`. _default: `true`_ \r\n* return `object` - current saved cookies\r\n\r\n#### Request# clearCookie()\r\n**Removes all saved cookies**\r\n* return `object` - current saved cookies\r\n\r\n#### Request# clearCookie( name )\r\n**Removes saved cookie**\r\n* `string` name - the name of removed cookie. _example: `'foo'`_\r\n* return `object` - current saved cookies\r\n\r\n------------------------------------\r\n\r\n## Changelog\r\n### 1.1.2 [ Unstable ]\r\n* `Change` - fixed stylistic errors that could lead to errors\r\n* `Bugfix` - second argument `convert` Request# cookie(). If it set, make valid first argument cookies for request style\r\n\r\n### 1.1.1 [ Unstable ]\r\n* `Add` - second argument `convert` Request# cookie(). If it set, make valid first argument cookies for request style\r\n\r\n### 1.1.0 [ Unstable ]\r\n* `Add` - response parsed cookies `res.parsedCookies` to the callback. It is valid —Åookies for the request in `opts.cookies`\r\n* `Add` - method [ `Request` ](#Request) returns class **Request(opts)** . It intelligent class based on `post` and `get` methods. It can _set permanent headers_, _save response cookies_, _get current cookies and headers_ and more.\r\n\r\n### 0.5.0 [ `Stable` ]\r\n* `Add` - dependence on the [iconv-lite](https://www.npmjs.com/package/iconv-lite)\r\n* `Add` - autodetect body charset from header `content-type` and convert it\r\n* `Add` - response charset argument `res.charset` to the callback\r\n* `Change` - rename `opts.encode` to `opts.charset`\r\n\r\n### 0.4.0 [ Unstable ]\r\n* `Add` - dependence on the [cookie](https://www.npmjs.com/package/cookie)\r\n* `Add` - custom cookie `opts.cookies`\r\n* `Change` - callback function. Now it called with `object` res argument\r\n\r\n### 0.3.0 [ Unstable ]\r\n* `Add` - dependence on the [object-merge](https://www.npmjs.com/package/object-merge)\r\n* `Add` - custom headers `opts.headers`\r\n* `Change` - moved 2-nd `data` argument to `opts.data`\r\n* `Other` - make code less\r\n\r\n### 0.2.0 [ Unstable ]\r\n* `Add` - autodetect protocol `http` or `https`\r\n* `Change` - 4-th argument from the `string` _encode_ to the `object` _opts_","starsCount":0,"created":"2015-09-09T09:39:58.612Z","modified":"2015-09-13T00:48:38.667Z","lastPublisher":{"name":"superpaintman","email":"SuperPaintmanDeveloper@gmail.com"},"owners":[{"name":"superpaintman","email":"SuperPaintmanDeveloper@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fd-http-request","_nodeVersion":"0.12.1","_npmUser":{"name":"superpaintman","email":"SuperPaintmanDeveloper@gmail.com"},"_npmVersion":"2.5.1","_rev":"1-b5e50fdf106732382a9b46379643db65","_shasum":"cf4ed1eca617e866c9b50efd2ef9038f827e3dc9","author":{"name":"superpaintman","email":"superpaintmandeveloper@gmail.com"},"bugs":{"url":"https://github.com/SuperPaintman/fd-http-request/issues"},"directories":{},"dist-tags":{"latest":"1.1.2"},"dist":{"shasum":"cf4ed1eca617e866c9b50efd2ef9038f827e3dc9","tarball":"http://registry.npmjs.org/fd-http-request/-/fd-http-request-1.1.2.tgz"},"maintainers":[{"name":"superpaintman","email":"SuperPaintmanDeveloper@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-13T00:48:38.667Z","created":"2015-09-09T09:39:58.612Z","0.1.0":"2015-09-09T09:39:58.612Z","0.2.0":"2015-09-12T00:08:33.902Z","0.2.1":"2015-09-12T00:10:46.141Z","0.3.0":"2015-09-12T01:10:42.189Z","0.3.1":"2015-09-12T01:12:27.483Z","0.4.0":"2015-09-12T02:35:55.427Z","0.4.1":"2015-09-12T02:38:53.171Z","0.5.0":"2015-09-12T03:37:09.577Z","0.5.1":"2015-09-12T03:46:04.597Z","0.5.2":"2015-09-12T03:48:40.057Z","1.0.0":"2015-09-12T05:18:22.445Z","1.1.0":"2015-09-12T23:22:23.052Z","1.1.1":"2015-09-13T00:16:01.990Z","1.1.2":"2015-09-13T00:48:38.667Z"},"users":{}}}