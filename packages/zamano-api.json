{"name":"zamano-api","version":"0.1.7","description":"zamano SMS middleware/client API for end users to communicate to HTTP API","repository":"https://github.com/nearform/zamano-api","main":"zamano-api.js","scripts":{"test":"mocha test"},"license":"MIT","devDependencies":{"chai":"~1.10.0","nock":"~0.59.1","express":"~4.11.1","request":"~2.51.0"},"dependencies":{"xml2js":"~0.4.4"},"gitHead":"a2ac488c6c6ed069cebadb0112a48704728f7ed3","homepage":"https://github.com/nearform/zamano-api","versions":[{"number":"0.1.2","date":"2014-09-25T18:22:45.419Z"},{"number":"0.1.3","date":"2014-09-26T09:04:50.130Z"},{"number":"0.1.4","date":"2014-09-26T09:05:17.099Z"},{"number":"0.1.5","date":"2014-09-26T14:05:13.503Z"},{"number":"0.1.7","date":"2015-01-31T22:32:21.078Z"}],"readme":"zamano-api\n==========\n\nNode.js API for Zamano, a mobile message aggregation service.  Allows servers to send and recieve mobile text and binary messages.\n\nVersion: 0.1.5\n\nSetup\n-----\n\nTo install the package, run:\n\n  `npm install zamano-api`\n  \nThen call `require` with your client ID and password provided by Zamano.  The id and password are required by zamano to authenticate you before sending your mobile message.\n\n```JavaScript\nvar zamano = require('zamano-api')('CLIENT_ID', 'ZAMANO_PASSWORD')\n```\n\nUsage\n-----\n\nZamano has API methods for both sending and receiving mobile messages.\n\n### zamano.sendMessage(opts, callback)\n\n`zamano.sendMessage` sends a text message to a mobile number over a specific mobile network operator. This method calls back with either a success object or error object with messages from Zamano's service.  Internally, this method sends a request to Zamano's HTTP API and parses the XML response into a JavaScript object.\n\n```JavaScript\nzamano.sendMessage({\n  sourceMsisdn:      'SHORT_CODE',\n  destinationMsisdn: 'PHONE_NUMBER',\n  messageText:       'Hello world',\n  operatorId:        'ID_NUMBER'\n}, function(err, out) {...})\n```\n\nParameters:\n  - `opts` (Object) \n    * `destinationMsisdn` - destination mobile phone number.\n    * `messageText` - text of the message.\n    * `sourceMsisdn` (optional) - short code representing the tariff amount and country.\n    * `operatorId` (optional) - The unique identifier of the Mobile Network Operator.\n    * `requestId` (optional) - a reference/tag for this message.\n    * `sourceMsisdnTag` (optional) - the label that the message will appear to come from on end users' handsets.\n    * `clientId` (optional) - an override for the Id set at initialization.\n    * `password` (optional) - an override for the password set at initialization.\n\n  - `callback` (Function) - a function with conventional node.js `function(err, out)` signature.  If the message was a success, the `out` object will have a `responseId` tracking number generated by zamano's server.\n\n\n### zamano.handleMessages(opts)\n\nExpress middleware for parsing mobile-originating (MO) SMS message requests from Zamano.  Use the function as middleware in a app.get('<URL>') function to authenticate the request from Zamano and add a `mobileMessage` property to the `request` object:\n\n```JavaScript\napp.get('/api/mo', \n  zamano.handleMessages({username: 'MO_USERNAME', password: 'MO_PASSWORD'}),\n  function(req, res) {\n    console.dir(req.mobileMessage)\n    res.end()\n})\n```\n  \nRequest authentication is done by passing the mobile-originating zamano username and password to the `handleMessages` function. **NOTE** this is a different username and password than the client id and password set at initialization.  Contact your zamano representative if you have questions about your usernames and passwords.\n\nIf the options are not passed to the `handleMessages` function, no authentication will be performed.  This means any requests will be accepted by the middleware.  Note: zamano will always make a request from the same IP, which means you can choose to manually authenticate by IP address instead of using the username and password.\n\nThe mobileMessage object that is attached to the request has the following properties:\n  - `username` - user's mobile-originating zamano id.\n  - `password` - user's mobile-originating zamano password.\n  - `from` - the originating mobile phone number.\n  - `to` - the terminating number to which the message was sent.\n  - `text` - the text of the message.\n  - `operatorId` - The unique identifier of the Mobile Network Operator.\n\nNote: Zamano's server expects a response from the mobile originating message request.  If there is no response within 2 seconds, then the transaction will be considered failed.\n\nFor Shortcodes and Operator IDs, please refer to Zamano.\n","starsCount":1,"created":"2014-09-25T18:22:45.419Z","modified":"2015-01-31T22:32:21.078Z","lastPublisher":{"name":"jrpruit1","email":"jake@jakepruitt.com"},"owners":[{"name":"jrpruit1","email":"jake@jakepruitt.com"},{"name":"rjrodger","email":"richard.rodger@nearform.com"}],"other":{"_attachments":{},"_from":".","_id":"zamano-api","_nodeVersion":"0.10.35","_npmUser":{"name":"jrpruit1","email":"jake@jakepruitt.com"},"_npmVersion":"2.2.0","_rev":"1-1b9e838f081235487d6d747b1a1f97d8","_shasum":"cf9074869a06e5189508cfa8df556da70182bf7d","author":{"name":"Jake Pruitt"},"bugs":{"url":"https://github.com/nearform/zamano-api/issues"},"directories":{},"dist-tags":{"latest":"0.1.7"},"dist":{"shasum":"cf9074869a06e5189508cfa8df556da70182bf7d","tarball":"http://registry.npmjs.org/zamano-api/-/zamano-api-0.1.7.tgz"},"maintainers":[{"name":"jrpruit1","email":"jake@jakepruitt.com"},{"name":"rjrodger","email":"richard.rodger@nearform.com"}],"readmeFilename":"README.md","time":{"modified":"2015-01-31T22:32:21.078Z","created":"2014-09-25T18:22:45.419Z","0.1.2":"2014-09-25T18:22:45.419Z","0.1.3":"2014-09-26T09:04:50.130Z","0.1.4":"2014-09-26T09:05:17.099Z","0.1.5":"2014-09-26T14:05:13.503Z","0.1.7":"2015-01-31T22:32:21.078Z"},"users":{"rjrodger":true}}}