{"name":"jasny","version":"0.1.1","description":"Jasny http web framework for nodejs","main":"src/index.js","scripts":{"test":"jasmine-node spec/"},"repository":"https://github.com/finalclass/jasny","keywords":["http","server","framework"],"license":"ISC","homepage":"https://github.com/finalclass/jasny","dependencies":{"express":"~4.2.0","body-parser":"~1.2.0"},"devDependencies":{"grunt":"~0.4.5","grunt-typescript":"~0.3.6","grunt-contrib-watch":"~0.6.1","grunt-contrib-clean":"~0.5.0","grunt-contrib-concat":"~0.4.0"},"versions":[{"number":"0.0.0","date":"2014-05-16T12:34:49.669Z"},{"number":"0.0.1","date":"2014-05-16T12:36:04.407Z"},{"number":"0.1.0","date":"2014-05-22T14:43:33.601Z"},{"number":"0.1.1","date":"2014-06-05T08:08:53.982Z"}],"readme":"jasny\n=====\n\nJasny http web framework for nodejs written and for use with TypeScript.\n\nJasny is a TypeScript framework for making websites. It's best when you use it with your TypeScript projects although you don't have to use TypeScript in order to work with it.\n\n\n## Example main file (index.ts):\n\n```ts\n/// <reference path=\"typings/jasny/jasny.d.ts\" />\n/// <reference path=\"typings/node/node.d.ts\" />\n\nimport jasny = require('jasny');\nimport path = require('path');\nimport Config = require('./Config');\n\nvar server:jasny.Server = new jasny.Server();\n\nserver.config.publicDir = path.resolve(__dirname, '..', 'public');\nserver.config.port = 4601;\nserver.config.allowCORSFromAll = false;\n\nserver.di.register('config', new Config());\n\nserver.addRoute('GET /file/:fileName', require('./actions/file/GetFile'));\n\nserver.listen();\nconsole.log('Gaad-TabUI listening on port '  + server.config.port);\nexport = server;\n\n```\n\nLet's examine the code above line by line.\n\n```ts\n/// <reference path=\"typings/jasny/jasny.d.ts\" />\n```\nIn this line we are making a reference to declaration file. This file is shipped to you with the module. You can create a symbolic link to point to node_modules/jasny/typings/jasny folder if you want to have it in your typeings directory.\n\n```ts\nvar server:jasny.Server = new jasny.Server();\n```\n\nWe are creating new instance of the Server class. This is the facade for our application.\n\n```ts\nserver.config.publicDir = path.resolve(__dirname, '..', 'public');\n```\nIf we set the publicDir property on the config then the server will start serving static files. If we don't want to serve statics then leave it blank.\n\n```ts\nserver.config.port = 4601;\n```\nPort to listen to.\n\n```ts\nserver.config.allowCORSFromAll = false;\n```\nIf we want to allow Cross Origin Resource Sharing from every server then we can just set this variable to true.\n\n```ts\nserver.di.register('config', new Config());\n```\nHere we are registering the config object into dependency injection container.\n\n```ts\nserver.addRoute('GET /file/:fileName', require('./actions/file/GetFile'));\n```\nWe are adding the route class. Every Route action has to be a class that inherits from jasny.Action.\nYou can use dependency injection in the Actions\n\n```ts\nserver.listen();\n```\nFinally we start to listen.\n\n## Example action class (GetFile.ts):\n\n```ts\n/// <reference path=\"../../typings/node/node.d.ts\" />\n/// <reference path=\"../../typings/jasny/jasny.d.ts\" />\n\nimport jasny = require('jasny');\nimport fs = require('fs');\nimport Config = require('../../Config');\n\nclass GetFile extends jasny.Action {\n\n  //We declare what we want to inject.\n  //If the variable name is different then the registered bean name (for example: 'cfg') then\n  //we should define it like that:\n  //public inject:any[] = [{cfg: 'config'}];\n  //otherwise:\n  public inject:any[] = ['config'];\n\n  private config:Config;\n\n  constructor() {\n    super();\n  }\n\n  private ready() : void {\n    //the config variable is ready now\n  }\n\n  public execute():void {\n    fs.readFile('file.txt', (buffer) => {\n      this.res.send(buffer.toString());\n    });\n  }\n\n}\n\nexport = GetFile;\n```\n","created":"2014-05-16T12:34:49.669Z","modified":"2014-06-05T08:08:53.982Z","lastPublisher":{"name":"sel","email":"s@finalclass.net"},"owners":[{"name":"sel","email":"s@finalclass.net"}],"other":{"_attachments":{},"_from":".","_id":"jasny","_npmUser":{"name":"sel","email":"s@finalclass.net"},"_npmVersion":"1.3.24","_rev":"1-4cfdbab6be2c50835a0d3d77c0b53070","author":{"name":"Szymon Wygna≈Ñski","email":"s@finalclass.net","url":"http://finalclass.net/"},"bugs":{"url":"https://github.com/finalclass/jasny/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"9ac811a2acbc16ddab2e3ec9675c010a3e18f1d5","tarball":"http://registry.npmjs.org/jasny/-/jasny-0.1.1.tgz"},"maintainers":[{"name":"sel","email":"s@finalclass.net"}],"readmeFilename":"README.md","time":{"modified":"2014-06-05T08:08:53.982Z","created":"2014-05-16T12:34:49.669Z","0.0.0":"2014-05-16T12:34:49.669Z","0.0.1":"2014-05-16T12:36:04.407Z","0.1.0":"2014-05-22T14:43:33.601Z","0.1.1":"2014-06-05T08:08:53.982Z"}}}