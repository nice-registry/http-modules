{"name":"pino-http","version":"2.6.1","description":"High-speed HTTP logger for Node.js","main":"logger.js","dependencies":{"pino":"^4.0.2"},"devDependencies":{"coveralls":"^2.11.15","http-ndjson":"^3.0.0","pre-commit":"^1.1.2","split2":"^2.0.1","standard":"^10.0.0","tap":"^10.0.0"},"scripts":{"test":"standard && tap --no-cov test.js","ci":"standard && tap --cov test.js"},"license":"MIT","repository":"https://github.com/pinojs/pino-http","homepage":"https://github.com/pinojs/pino-http#readme","gitHead":"08b43ff9eeea558f95930ce2e3b116c752791f74","versions":[{"number":"1.0.0","date":"2016-04-20T19:58:55.012Z"},{"number":"1.0.1","date":"2016-04-20T20:01:05.689Z"},{"number":"1.0.2","date":"2016-04-20T20:08:05.018Z"},{"number":"1.0.3","date":"2016-04-20T20:09:08.919Z"},{"number":"1.0.4","date":"2016-04-20T20:55:39.075Z"},{"number":"1.0.5","date":"2016-04-20T21:08:12.085Z"},{"number":"1.0.6","date":"2016-04-21T13:45:38.873Z"},{"number":"1.0.7","date":"2016-04-21T13:57:38.408Z"},{"number":"1.0.8","date":"2016-04-22T13:02:51.526Z"},{"number":"1.1.0","date":"2016-08-16T14:08:45.125Z"},{"number":"1.1.1","date":"2016-08-19T06:45:37.260Z"},{"number":"1.2.0","date":"2016-08-25T12:41:31.450Z"},{"number":"1.2.1","date":"2016-08-25T12:49:25.774Z"},{"number":"1.3.0","date":"2016-09-29T13:57:05.073Z"},{"number":"1.3.1","date":"2016-11-16T08:13:11.061Z"},{"number":"2.0.0","date":"2016-11-16T08:22:50.242Z"},{"number":"2.0.1","date":"2016-11-16T15:48:07.387Z"},{"number":"2.1.0","date":"2016-11-29T15:07:49.496Z"},{"number":"2.2.0","date":"2016-12-02T15:20:31.659Z"},{"number":"2.3.0","date":"2016-12-12T08:30:32.005Z"},{"number":"2.4.0","date":"2017-02-01T07:34:47.564Z"},{"number":"2.4.1","date":"2017-02-02T17:19:55.929Z"},{"number":"2.4.2","date":"2017-03-04T15:40:22.165Z"},{"number":"2.5.0","date":"2017-04-03T07:14:11.173Z"},{"number":"2.6.0","date":"2017-04-13T13:19:10.545Z"},{"number":"2.6.1","date":"2017-05-01T09:06:07.948Z"}],"readme":"# pino-http&nbsp;&nbsp;[![Build Status](https://travis-ci.org/pinojs/pino-http.svg)](https://travis-ci.org/pinojs/pino-http)[![Coverage Status](https://coveralls.io/repos/github/pinojs/pino-http/badge.svg?branch=master)](https://coveralls.io/github/pinojs/pino-http?branch=master)\n\nHigh-speed HTTP logger for Node.js\n\nTo our knowledge, `pino-http` is the [fastest](#benchmarks) HTTP logger in town.\n\n* [Installation](#install)\n* [Usage](#usage)\n* [Benchmarks](#benchmarks)\n* [API](#api)\n* [Team](#team)\n* [Acknowledgements](#acknowledgements)\n* [License](#license)\n\n## Benchmarks\n\nBenchmarks log each request/response pair while returning\n`'hello world'`, using\n[autocannon](https://github.com/mcollina/autocannon) with 100\nconnections and 10 pipelined requests.\n\n* `http-ndjson` (equivalent info): 7730.73 req/sec\n* `http-ndjson` (standard minimum info): 9522.37 req/sec\n* `pino-http`: 21496 req/sec\n* `pino-http` (extreme): 25770.91 req/sec\n* no logger: 46139.64 req/sec\n\nAll benchmarks where taken on a Macbook Pro 2013 (2.6GHZ i7, 16GB of RAM).\n\n## Install\n\n```\nnpm i pino-http --save\n```\n\n## Example\n\n```js\n'use strict'\n\nvar http = require('http')\nvar server = http.createServer(handle)\n\nvar logger = require('pino-http')()\n\nfunction handle (req, res) {\n  logger(req, res)\n  req.log.info('something else')\n  res.end('hello world')\n}\n\nserver.listen(3000)\n```\n\n```\n$ node example.js | pino\n[2016-03-31T16:53:21.079Z] INFO (46316 on MBP-di-Matteo): something else\n    req: {\n      \"id\": 1,\n      \"method\": \"GET\",\n      \"url\": \"/\",\n      \"headers\": {\n        \"host\": \"localhost:3000\",\n        \"user-agent\": \"curl/7.43.0\",\n        \"accept\": \"*/*\"\n      },\n      \"remoteAddress\": \"::1\",\n      \"remotePort\": 64386\n    }\n[2016-03-31T16:53:21.087Z] INFO (46316 on MBP-di-Matteo): request completed\n    res: {\n      \"statusCode\": 200,\n      \"header\": \"HTTP/1.1 200 OK\\r\\nX-Powered-By: restify\\r\\nContent-Type: text/html; charset=utf-8\\r\\nContent-Length: 11\\r\\nETag: W/\\\"b-XrY7u+Ae7tCTyyK7j1rNww\\\"\\r\\nDate: Thu, 31 Mar 2016 16:53:21 GMT\\r\\nConnection: keep-alive\\r\\n\\r\\n\"\n    }\n    responseTime: 10\n    req: {\n      \"id\": 1,\n      \"method\": \"GET\",\n      \"url\": \"/\",\n      \"headers\": {\n        \"host\": \"localhost:3000\",\n        \"user-agent\": \"curl/7.43.0\",\n        \"accept\": \"*/*\"\n      },\n      \"remoteAddress\": \"::1\",\n      \"remotePort\": 64386\n    }\n```\n\n## API\n\n### pinoHttp([opts], [stream])\n\n`opts`: it has all the options as [pino](http://npm.im/pino) and\n\n* `logger`: `pino-http` can reuse a pino instance if passed with the `logger` property\n* `genReqId`: you can pass a function which gets used to generate a request id. The first argument is the request itself. As fallback `pino-http` is just using an integer. This default might not be the desired behavior if you're running multiple instances of the app\n* `useLevel`: the logger level `pino-http` is using to log out the response. default: `info`\n* `stream`: same as the second parameter\n\n`stream`: the destination stream. Could be passed in as an option too.\n\n#### Examples\n\n##### Logger options\n\n```js\n'use strict'\n\nvar http = require('http')\nvar server = http.createServer(handle)\nvar pino = require('pino')()\nvar logger = require('pino-http')({\n  // Reuse an existing logger instance\n  logger: pino,\n\n  // Define a custom request id function\n  genReqId: function (req) { return req.id },\n\n  // Define custom serializers\n  serializers: {\n    req: pino.stdSerializers.req,\n    res: pino.stdSerializers.res\n  },\n\n  // Logger level is `info` by default\n  useLevel: 'info'\n})\n\nfunction handle (req, res) {\n  logger(req, res)\n  req.log.info('something else')\n  res.end('hello world')\n}\n\nserver.listen(3000)\n```\n\n\n#### Default serializers\n\n##### pinoHttp.stdSerializers.req\n\nGenerates a JSONifiable object from the HTTP `request` object passed to\nthe `createServer` callback of Node's HTTP server.\n\nIt returns an object in the form:\n\n```js\n{\n  pid: 93535,\n  hostname: 'your host',\n  level: 30,\n  msg: 'my request',\n  time: '2016-03-07T12:21:48.766Z',\n  v: 0,\n  req: {\n    id: 42,\n    method: 'GET',\n    url: '/',\n    headers: {\n      host: 'localhost:50201',\n      connection: 'close'\n    },\n    remoteAddress: '::ffff:127.0.0.1',\n    remotePort: 50202\n  }\n}\n```\n\n##### pinoHttp.stdSerializers.res\n\nGenerates a JSONifiable object from the HTTP `response` object passed to\nthe `createServer` callback of Node's HTTP server.\n\nIt returns an object in the form:\n\n```js\n{\n  pid: 93581,\n  hostname: 'myhost',\n  level: 30,\n  msg: 'my response',\n  time: '2016-03-07T12:23:18.041Z',\n  v: 0,\n  res: {\n    statusCode: 200,\n    header: 'HTTP/1.1 200 OK\\r\\nDate: Mon, 07 Mar 2016 12:23:18 GMT\\r\\nConnection: close\\r\\nContent-Length: 5\\r\\n\\r\\n'\n  }\n}\n```\n\n## Team\n\n### Matteo Collina\n\n<https://github.com/mcollina>\n\n<https://www.npmjs.com/~matteo.collina>\n\n<https://twitter.com/matteocollina>\n\n\n### David Mark Clements\n\n<https://github.com/davidmarkclements>\n\n<https://www.npmjs.com/~davidmarkclements>\n\n<https://twitter.com/davidmarkclem>\n\n<a name=\"acknowledgements\"></a>\n## Acknowledgements\n\nThis project was kindly sponsored by [nearForm](http://nearform.com).\n\nLogo and identity designed by Beibhinn Murphy O'Brien: https://www.behance.net/BeibhinnMurphyOBrien.\n\n## License\n\nMIT\n","starsCount":2,"created":"2016-04-20T19:58:55.012Z","modified":"2017-05-01T09:06:07.948Z","lastPublisher":{"name":"matteo.collina","email":"hello@matteocollina.com"},"owners":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"watson","email":"w@tson.dk"}],"other":{"_attachments":{},"_from":".","_id":"pino-http","_nodeVersion":"6.10.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pino-http-2.6.1.tgz_1493629565832_0.23851888650096953"},"_npmUser":{"name":"matteo.collina","email":"hello@matteocollina.com"},"_npmVersion":"3.10.10","_rev":"17-2c337234ab2f4d16ee92bb36218a97d4","_shasum":"aec7e852ee8f47a089bc4be4614a627d2c302598","author":{"name":"David Mark Clements"},"bugs":{"url":"https://github.com/pinojs/pino-http/issues"},"contributors":[{"name":"Matteo Collina","email":"hello@matteocollina.com"}],"directories":{},"dist-tags":{"latest":"2.6.1"},"dist":{"shasum":"aec7e852ee8f47a089bc4be4614a627d2c302598","tarball":"https://registry.npmjs.org/pino-http/-/pino-http-2.6.1.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"watson","email":"w@tson.dk"}],"readmeFilename":"README.md","time":{"modified":"2017-05-01T09:06:07.948Z","created":"2016-04-20T19:58:55.012Z","1.0.0":"2016-04-20T19:58:55.012Z","1.0.1":"2016-04-20T20:01:05.689Z","1.0.2":"2016-04-20T20:08:05.018Z","1.0.3":"2016-04-20T20:09:08.919Z","1.0.4":"2016-04-20T20:55:39.075Z","1.0.5":"2016-04-20T21:08:12.085Z","1.0.6":"2016-04-21T13:45:38.873Z","1.0.7":"2016-04-21T13:57:38.408Z","1.0.8":"2016-04-22T13:02:51.526Z","1.1.0":"2016-08-16T14:08:45.125Z","1.1.1":"2016-08-19T06:45:37.260Z","1.2.0":"2016-08-25T12:41:31.450Z","1.2.1":"2016-08-25T12:49:25.774Z","1.3.0":"2016-09-29T13:57:05.073Z","1.3.1":"2016-11-16T08:13:11.061Z","2.0.0":"2016-11-16T08:22:50.242Z","2.0.1":"2016-11-16T15:48:07.387Z","2.1.0":"2016-11-29T15:07:49.496Z","2.2.0":"2016-12-02T15:20:31.659Z","2.3.0":"2016-12-12T08:30:32.005Z","2.4.0":"2017-02-01T07:34:47.564Z","2.4.1":"2017-02-02T17:19:55.929Z","2.4.2":"2017-03-04T15:40:22.165Z","2.5.0":"2017-04-03T07:14:11.173Z","2.6.0":"2017-04-13T13:19:10.545Z","2.6.1":"2017-05-01T09:06:07.948Z"},"users":{"shanewholloway":true,"kodekracker":true}}}