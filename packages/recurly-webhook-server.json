{"name":"recurly-webhook-server","version":"1.0.0","description":"Server to handle Recurly webhook HTTP requests","keywords":["recurly","webhook"],"license":"MIT","repository":"https://github.com/fullcube/recurly-webhook-server","main":"index.js","dependencies":{"basic-auth":"^1.0.0","debug":"2.x","xml2js":"^0.4.9"},"devDependencies":{"chai":"latest","jscs":"1.13.x","jshint":"latest","mocha":"latest","mocha-sinon":"latest","sinon":"latest","sinon-chai":"latest"},"scripts":{"lint":"jscs lib && jshint lib","test":"mocha -R spec --timeout 10000 test/server.js","test:watch":"npm run test -- -w","pretest":"npm run lint"},"gitHead":"0774135cb2038a89998455c27b7b09371d19def4","homepage":"https://github.com/fullcube/recurly-webhook-server","versions":[{"number":"1.0.0","date":"2015-07-07T18:54:05.223Z"}],"readme":"# Recurly webhook server\n\nWebhooks in [Recurly](https://www.recurly.com) notify you when content in your space has changed.\n\nRecurly webhook server is a lightweight server to handle these notifications:\n\n- handles incoming [Recurly webhook HTTP requests](https://docs.recurly.com/api/push-notifications)\n- emits events for all Recurly webhook topics to allow easy webhook handling\n- supports username/password authentication\n- supports all default [node HTTP server](https://nodejs.org/api/http.html) options\n\n## Installation\n\n```bash\n$ npm install recurly-webhook-server\n```\n\n## Quick example\n\n```javascript\n// Create webhook server\nvar server = require('recurly-webhook-server')({\n  path: '/',\n  username: 'user',\n  password: 'pass'\n});\n\n// Attach handlers to Recurly webhooks\nserver.on('Recurly.new_account_notification', function(req){\n  console.log('A new account was created!');\n});\n\n// Start listening for requests on port 3000\nserver.listen(3000, function(){\n  console.log('Recurly webhook server running on port ' + 3000)\n});\n\n```\n\n## Configuration\n\nYou can pass a configuration object when instantiating the server:\n\n```javascript\n// Create webhook server\nvar server = require('recurly-webhook-server')({\n  path: '/',\n  username: 'user',\n  password: 'pass'\n});\n```\n\nwhere:\n\n- **path**: the path you want the server to listen on, default: '/'\n- **username**: the username you expect the request to contain, default: ''\n- **password**: the password you expect the request to contain, default: ''\n\nSo to start a server on `localhost:3000` without authentication, you can:\n\n```javascript\n// Create server with default options\nvar server = require('recurly-webhook-server')();\n\n// Start listening for requests on port 3000\nserver.listen(3000, function(){\n  console.log('Recurly webhook server running on port ' + 3000)\n});\n```\n\nand to start a server on `localhost:3000/webhooks` with authentication, you can:\n\n```javascript\n// Create server with default options\nvar server = require('recurly-webhook-server')({\n  path: '/webhooks',\n  username: 'user',\n  password: 'pass'\n});\n\n// Start listening for requests on port 3000\nserver.listen(3000, function(){\n  console.log('Recurly webhook server running on port ' + 3000)\n});\n```\n\n## Handling incoming webhook requests\n\nThe server emits incoming Recurly webhook topics as event, so you can:\n\n```javascript\nserver.on('Recurly.new_account_notification', function(req){\n  console.log('A new account was created!');\n});\n\nserver.on('Recurly.canceled_account_notification', function(req){\n  console.log('An account was cancelled!');\n});\n\nserver.on('Recurly.billing_info_updated_notification', function(req){\n  console.log('Billing info was updated!');\n});\n\nserver.on('Recurly.reactivated_account_notification', function(req){\n  console.log('An account was reactivated!');\n});\n\nserver.on('Recurly.new_invoice_notification', function(req){\n  console.log('A new invoice was created!');\n});\n\nserver.on('Recurly.processing_invoice_notification', function(req){\n  console.log('An invoice is being processed!');\n});\n\nserver.on('Recurly.closed_invoice_notification', function(req){\n  console.log('An invoice was closed!');\n});\n\n...\n```\n\n> This module does not make any assumptions about your application.\n\n> Incoming XML data is converted to JSON and passed to your handler(s) so you can process (or ignore) the contents of the [incoming message](https://nodejs.org/api/http.html#http_http_incomingmessage) from within your handler(s).\n\n\n## Special wildcard event\n\nThe server emits a special wildcard event too in case you want to listen to all events in one go:\n\n```javascript\n\n// Handler for all successful requests\n// Is not emitted when an error occurs\nserver.on('Recurly.*', function(topic, req){\n\n  // topic is available as string\n  // => e.g. Recurly.new_account_notification\n  console.log('Request came in for: ' + topic);\n});\n```\n\n> This event is only emitted on successful requests, not on errors\n\n## Handling errors and invalid requests\n\nWhen an invalid request comes in, a `Recurly.error` event is emitted:\n\n```javascript\n// Handle errors\nserver.on('Recurly.error', function(err, req){\n  console.log(err);\n});\n```\n\n## Simulating a request using curl\n\nIf you want to try out your server during development, you can simulate a request without credentials using cUrl:\n\n```bash\n$ curl -X POST --data \"[recurly-xml-data-here]\" localhost:3000\n```\n\nand simulate requests with authentication like this:\n\n```bash\n$ curl -X POST -u user:pass --data \"[recurly-xml-data-here]\" localhost:3000\n```\n\n## Enabling webhooks in Recurly\n\nTo enable webhooks in your Recurly account, go to your developer settings and fill in the options you specified in your server configuration:\n\nAs soon as you save the webhook in Recurly, your server will start receiving notifications.\n\n## Example\n\nA working example is included [here](examples/webhook-server.js).\n\n## License\n\nMIT\n","created":"2015-07-07T18:54:05.223Z","modified":"2015-07-07T18:54:05.223Z","lastPublisher":{"name":"mrfelton","email":"tkirkpatrick@fullcube.com"},"owners":[{"name":"mrfelton","email":"tkirkpatrick@fullcube.com"}],"other":{"_attachments":{},"_from":".","_id":"recurly-webhook-server","_nodeVersion":"0.10.32","_npmUser":{"name":"mrfelton","email":"tkirkpatrick@fullcube.com"},"_npmVersion":"2.5.0","_rev":"1-f6ae4539c2446086499585969d7aeada","_shasum":"8a79ba7facc4a0d82f6e77f481a7f9f5efbd7cad","author":{"name":"Tom Kirkpatrick","email":"tkirkpatrick@fullcube.com"},"bugs":{"url":"https://github.com/fullcube/recurly-webhook-server/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"8a79ba7facc4a0d82f6e77f481a7f9f5efbd7cad","tarball":"http://registry.npmjs.org/recurly-webhook-server/-/recurly-webhook-server-1.0.0.tgz"},"maintainers":[{"name":"mrfelton","email":"tkirkpatrick@fullcube.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-07T18:54:05.223Z","created":"2015-07-07T18:54:05.223Z","1.0.0":"2015-07-07T18:54:05.223Z"}}}