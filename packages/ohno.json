{"name":"ohno","version":"2.0.2","description":"A wrapper library for HTTP error status codes","license":"MIT","homepage":"https://github.com/jsonmaur/ohno#readme","repository":"https://github.com/jsonmaur/ohno","keywords":["node","http","error","statuses","codes","rest"],"files":["dist/","license","readme.md"],"main":"dist/index.js","scripts":{"test:lint":"standard --verbose | snazzy","test:unit":"rm -rf .nyc_output coverage && nyc ava src/**/*.test.js -a","test:coverage":"nyc report -r=lcov","test":"npm-run-all test:*","coveralls":"cat coverage/lcov.info | coveralls","build":"rm -rf dist && babel src -d dist","prepublish":"npm run build"},"dependencies":{},"devDependencies":{"ava":"0.18.2","babel-cli":"6.23.0","babel-preset-latest":"6.22.0","babel-register":"6.23.0","npm-run-all":"4.0.2","nyc":"10.1.2","snazzy":"6.0.0","standard":"9.0.0"},"babel":{"presets":["latest"],"ignore":["**/*.test.js"]},"ava":{"require":"babel-register"},"nyc":{"require":"babel-register","include":["src"]},"gitHead":"e90debec61ae8c7bf2f6eeae3205d4fef938aeae","versions":[{"number":"1.0.0","date":"2016-08-30T21:37:47.178Z"},{"number":"1.0.1","date":"2016-08-30T21:46:49.291Z"},{"number":"2.0.0","date":"2017-03-05T06:30:04.783Z"},{"number":"2.0.1","date":"2017-03-05T06:49:31.474Z"},{"number":"2.0.2","date":"2017-03-05T07:02:25.180Z"}],"readme":"# OhNo\n\n[![Build Status](https://travis-ci.org/jsonmaur/ohno.svg?branch=master)](https://travis-ci.org/jsonmaur/ohno)\n[![Coverage Status](https://coveralls.io/repos/github/jsonmaur/ohno/badge.svg?branch=master)](https://coveralls.io/github/jsonmaur/ohno?branch=master)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nA wrapper library for HTTP error status codes in Node.\n\n## Getting Started\n\n### Installation\n\n```bash\nnpm install ohno\n```\n\n### Usage\n\n```javascript\nconst ohno = require('ohno')\nohno.notFound('Resource was not found')\n```\n\n```javascript\n{\n  isOhNo: true,\n  statusCode: 404,\n  errorName: 'Not Found',\n  isServerError: false,\n  responseBody: {\n    error: 'Resource was not found'\n  }\n}\n```\n\n`isOhNo` - A boolean to identify an error coming from this library\n`statusCode` - The HTTP status code\n`errorName` - The full error name\n`isServerError` - Whether it's a server error (>=500)\n`responseBody` - What you should send back in the response\n\nYou can also pass an object param to send extra data to the response.\n\n```javascript\nohno.notFound('Resource was not found', { extra: 'value' })\n```\n\n```javascript\n{\n  statusCode: 404,\n  errorName: 'Not Found',\n  isServerError: false,\n  responseBody: {\n    error: 'Resource was not found',\n    extra: 'value'\n  }\n}\n```\n\n## API\n\n### Errors By Name\n\n-  `ohno.badRequest()` *-- 400*\n-  `ohno.unauthorized()` *-- 401*\n-  `ohno.paymentRequired()` *-- 402*\n-  `ohno.forbidden()` *-- 403*\n-  `ohno.notFound()` *-- 404*\n-  `ohno.methodNotAllowed()` *-- 405*\n-  `ohno.notAcceptable()` *-- 406*\n-  `ohno.proxyAuthenticationRequired()` *-- 407*\n-  `ohno.requestTimeout()` *-- 408*\n-  `ohno.conflict()` *-- 409*\n-  `ohno.gone()` *-- 410*\n-  `ohno.lengthRequired()` *-- 411*\n-  `ohno.preconditionFailed()` *-- 412*\n-  `ohno.payloadTooLarge()` *-- 413*\n-  `ohno.uriTooLong()` *-- 414*\n-  `ohno.unsupportedMediaType()` *-- 415*\n-  `ohno.rangeNotSatisfiable()` *-- 416*\n-  `ohno.expectationFailed()` *-- 417*\n-  `ohno.teapot()` *-- 418*\n-  `ohno.misdirectedRequest()` *-- 421*\n-  `ohno.unprocessableEntity()` *-- 422*\n-  `ohno.locked()` *-- 423*\n-  `ohno.failedDependency()` *-- 424*\n-  `ohno.unorderedCollection()` *-- 425*\n-  `ohno.upgradeRequired()` *-- 426*\n-  `ohno.preconditionRequired()` *-- 428*\n-  `ohno.tooManyRequests()` *-- 429*\n-  `ohno.requestHeaderFieldsTooLarge()` *-- 431*\n-  `ohno.unavailableForLegalReasons()` *-- 451*\n-  `ohno.internalServerError()` *-- 500*\n-  `ohno.notImplemented()` *-- 501*\n-  `ohno.badGateway()` *-- 502*\n-  `ohno.serviceUnavailable()` *-- 503*\n-  `ohno.gatewayTimeout()` *-- 504*\n-  `ohno.httpVersionNotSupported()` *-- 505*\n-  `ohno.variantAlsoNegotiates()` *-- 506*\n-  `ohno.insufficientStorage()` *-- 507*\n-  `ohno.loopDetected()` *-- 508*\n-  `ohno.bandwidthLimitExceeded()` *-- 509*\n-  `ohno.notExtended()` *-- 510*\n-  `ohno.networkAuthenticationRequired()` *-- 511*\n\n### Errors By Code\n\n-  `ohno.__400()`\n-  `ohno.__401()`\n-  `ohno.__402()`\n-  `ohno.__403()`\n-  `ohno.__404()`\n-  `ohno.__405()`\n-  `ohno.__406()`\n-  `ohno.__407()`\n-  `ohno.__408()`\n-  `ohno.__409()`\n-  `ohno.__410()`\n-  `ohno.__411()`\n-  `ohno.__412()`\n-  `ohno.__413()`\n-  `ohno.__414()`\n-  `ohno.__415()`\n-  `ohno.__416()`\n-  `ohno.__417()`\n-  `ohno.__418()`\n-  `ohno.__421()`\n-  `ohno.__422()`\n-  `ohno.__423()`\n-  `ohno.__424()`\n-  `ohno.__425()`\n-  `ohno.__426()`\n-  `ohno.__428()`\n-  `ohno.__429()`\n-  `ohno.__431()`\n-  `ohno.__451()`\n-  `ohno.__500()`\n-  `ohno.__501()`\n-  `ohno.__502()`\n-  `ohno.__503()`\n-  `ohno.__504()`\n-  `ohno.__505()`\n-  `ohno.__506()`\n-  `ohno.__507()`\n-  `ohno.__508()`\n-  `ohno.__509()`\n-  `ohno.__510()`\n-  `ohno.__511()`\n\n## License\n\n[MIT](LICENSE) Â© [Jason Maurer](http://maur.co)\n","created":"2016-08-30T21:37:47.178Z","modified":"2017-03-05T07:02:25.180Z","lastPublisher":{"name":"jsonmaur","email":"j@maur.co"},"owners":[{"name":"jsonmaur","email":"j@maur.co"}],"other":{"_attachments":{},"_from":".","_id":"ohno","_nodeVersion":"7.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ohno-2.0.2.tgz_1488697344532_0.6735952936578542"},"_npmUser":{"name":"jsonmaur","email":"j@maur.co"},"_npmVersion":"4.1.2","_rev":"4-87371e9637d883323e956d796791e96e","_shasum":"662a9cf8a55329bd7c0e8ba25d6501f9e9ea9786","author":{"name":"Jason Maurer"},"bugs":{"url":"https://github.com/jsonmaur/ohno/issues"},"directories":{},"dist-tags":{"latest":"2.0.2"},"dist":{"shasum":"662a9cf8a55329bd7c0e8ba25d6501f9e9ea9786","tarball":"https://registry.npmjs.org/ohno/-/ohno-2.0.2.tgz"},"maintainers":[{"name":"jsonmaur","email":"j@maur.co"}],"readmeFilename":"readme.md","time":{"modified":"2017-03-05T07:02:25.180Z","created":"2016-08-30T21:37:47.178Z","1.0.0":"2016-08-30T21:37:47.178Z","1.0.1":"2016-08-30T21:46:49.291Z","2.0.0":"2017-03-05T06:30:04.783Z","2.0.1":"2017-03-05T06:49:31.474Z","2.0.2":"2017-03-05T07:02:25.180Z"}}}