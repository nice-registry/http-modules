{"name":"http-auth-utils","version":"1.0.0","description":"Parse, build and deal with HTTP auth headers.","main":"dist/index.js","scripts":{"test":"mocha --compilers js:babel-register src/**/*.mocha.js src/*.mocha.js src/**/*.mocha.js","compile":"babel src --out-dir=dist","cli":"env NPM_CLI=1","lint":"eslint src/*.js src/**/*.js","preversion":"npm run compile && npm run lint && npm test","doc":"cat src/index.js | jsdoc2md > API.md","coveralls":"istanbul cover _mocha --report lcovonly -- --compilers js:babel-register src/*.mocha.js src/**/*.mocha.js -R spec -t 5000 && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage","cover":"istanbul cover --report html _mochai-- --compilers js:babel-register src/*.mocha.js src/**/*.mocha.js -R spec -t 5000"},"keywords":["REST","HTTP","auth","authentication","authorization","basic","digest"],"license":"MIT","repository":"https://github.com/nfroidure/http-auth-utils","homepage":"https://github.com/nfroidure/http-auth-utils","devDependencies":{"babel-cli":"^6.4.0","babel-preset-es2015":"^6.3.13","babel-register":"^6.4.3","coveralls":"^2.11.11","eslint":"^3.1.1","eslint-config-simplifield":"^3.0.0","istanbul":"^1.0.0-alpha.2","jsdoc-to-markdown":"^1.1.1","mocha":"^2.2.4","neatequal":"^1.0.0","sinon":"^1.14.1"},"dependencies":{"yerror":"^1.0.0"},"gitHead":"4413c6cad1a6f6eca3247d0fbe90a2aa63c857b4","versions":[{"number":"0.0.0","date":"2015-05-27T14:57:12.632Z"},{"number":"0.0.1","date":"2015-05-31T20:42:40.828Z"},{"number":"0.0.2","date":"2015-06-01T08:44:17.188Z"},{"number":"1.0.0","date":"2016-07-19T14:32:41.580Z"}],"readme":"# http-auth-utils\n\n> This library provide several utils to parse and build WWW-Authenticate and\n Authorization headers as described per the HTTP RFC.\n\n [![NPM version](https://img.shields.io/npm/v/http-auth-utils.svg)](https://www.npmjs.com/package/http-auth-utils)\n [![Build Status](https://travis-ci.org/nfroidure/http-auth-utils.svg?branch=master)](https://travis-ci.org/nfroidure/http-auth-utils)\n[![Dependency Status](https://david-dm.org/nfroidure/http-auth-utils.svg)](https://david-dm.org/nfroidure/http-auth-utils)\n[![devDependency Status](https://david-dm.org/nfroidure/http-auth-utils/dev-status.svg)](https://david-dm.org/nfroidure/http-auth-utils#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/nfroidure/http-auth-utils/badge.svg?branch=master)](https://coveralls.io/r/nfroidure/http-auth-utils?branch=master)\n[![Code Climate](https://codeclimate.com/github/nfroidure/http-auth-utils/badges/gpa.svg)](https://codeclimate.com/github/nfroidure/http-auth-utils)\n[![Dependency Status](https://dependencyci.com/github/nfroidure/http-auth-utils/badge)](https://dependencyci.com/github/nfroidure/http-auth-utils)\n\nThis library is intended to be framework agnostic and could be used either on\n the server and the client side.\n\nSince this library is in an early development stage, please don't use it until\n you really not care of API changes.\n\n## Development\n\nRunning tests:\n```sh\nnpm test\n```\n\nGenerating docs:\n```sh\ncat src/index.js src/mecanisms/basic.js src/mecanisms/digest.js | npm run cli -- jsdoc2md > API.md\n```\n\n## Contributing\n\nTo contribute to this project, you must accept to publish it under the MIT\n Licence.\n\n## Modules\n<dl>\n<dt><a href=\"#module_http-auth-utils\">http-auth-utils</a></dt>\n<dd></dd>\n<dt><a href=\"#module_http-auth-utils/mecanisms/basic\">http-auth-utils/mecanisms/basic</a></dt>\n<dd></dd>\n<dt><a href=\"#module_http-auth-utils/mecanisms/digest\">http-auth-utils/mecanisms/digest</a></dt>\n<dd></dd>\n</dl>\n<a name=\"module_http-auth-utils\"></a>\n## http-auth-utils\n\n* [http-auth-utils](#module_http-auth-utils)\n  * [.mecanisms](#module_http-auth-utils.mecanisms) : <code>Array</code>\n  * [.parseWWWAuthenticateHeader](#module_http-auth-utils.parseWWWAuthenticateHeader) ⇒ <code>Object</code>\n  * [.parseAuthorizationHeader](#module_http-auth-utils.parseAuthorizationHeader) ⇒ <code>Object</code>\n\n<a name=\"module_http-auth-utils.mecanisms\"></a>\n### http-auth-utils.mecanisms : <code>Array</code>\nNatively supported authentication mecanisms.\n\n**Kind**: static constant of <code>[http-auth-utils](#module_http-auth-utils)</code>\n<a name=\"module_http-auth-utils.parseWWWAuthenticateHeader\"></a>\n### http-auth-utils.parseWWWAuthenticateHeader ⇒ <code>Object</code>\nParse HTTP WWW-Authenticate header contents.\n\n**Kind**: static constant of <code>[http-auth-utils](#module_http-auth-utils)</code>\n**Returns**: <code>Object</code> - Result of the contents parse.\n**Api**: public\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| header | <code>string</code> |  | The WWW-Authenticate header contents |\n| [authMecanisms] | <code>Array</code> | <code>[BASIC, DIGEST]</code> | Allow providing custom authentication mecanisms. |\n\n**Example**\n```js\nassert.equal(\n  parseWWWAuthenticateHeader('Basic realm=\"test\"'), {\n    type: 'Basic',\n    data: {\n      realm: 'test'\n    }\n  }\n);\n```\n<a name=\"module_http-auth-utils.parseAuthorizationHeader\"></a>\n### http-auth-utils.parseAuthorizationHeader ⇒ <code>Object</code>\nParse HTTP Authorization header contents.\n\n**Kind**: static constant of <code>[http-auth-utils](#module_http-auth-utils)</code>\n**Returns**: <code>Object</code> - Result of the contents parse.\n**Api**: public\n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| header | <code>string</code> |  | The Authorization header contents |\n| [authMecanisms] | <code>Array</code> | <code>[BASIC, DIGEST]</code> | Allow providing custom authentication mecanisms. |\n\n**Example**\n```js\nassert.equal(\n  parseAuthorizationHeader('Basic QWxpIEJhYmE6b3BlbiBzZXNhbWU='), {\n    type: 'Basic',\n    data: {\n      hash: 'QWxpIEJhYmE6b3BlbiBzZXNhbWU='\n    }\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic\"></a>\n## http-auth-utils/mecanisms/basic\n\n* [http-auth-utils/mecanisms/basic](#module_http-auth-utils/mecanisms/basic)\n  * [~BASIC](#module_http-auth-utils/mecanisms/basic..BASIC) : <code>Object</code>\n    * [.type](#module_http-auth-utils/mecanisms/basic..BASIC.type) : <code>String</code>\n    * [.parseWWWAuthenticateRest(rest)](#module_http-auth-utils/mecanisms/basic..BASIC.parseWWWAuthenticateRest) ⇒ <code>Object</code>\n    * [.buildWWWAuthenticateRest(content)](#module_http-auth-utils/mecanisms/basic..BASIC.buildWWWAuthenticateRest) ⇒ <code>String</code>\n    * [.parseAuthorizationRest(rest)](#module_http-auth-utils/mecanisms/basic..BASIC.parseAuthorizationRest) ⇒ <code>Object</code>\n    * [.buildAuthorizationRest(content)](#module_http-auth-utils/mecanisms/basic..BASIC.buildAuthorizationRest) ⇒ <code>String</code>\n    * [.computeHash(credentials)](#module_http-auth-utils/mecanisms/basic..BASIC.computeHash) ⇒ <code>String</code>\n    * [.decodeHash(hash)](#module_http-auth-utils/mecanisms/basic..BASIC.decodeHash) ⇒ <code>Object</code>\n\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC\"></a>\n### http-auth-utils/mecanisms/basic~BASIC : <code>Object</code>\nBasic authentication mecanism.\n\n**Kind**: inner constant of <code>[http-auth-utils/mecanisms/basic](#module_http-auth-utils/mecanisms/basic)</code>\n**See**: http://tools.ietf.org/html/rfc2617#section-2\n\n* [~BASIC](#module_http-auth-utils/mecanisms/basic..BASIC) : <code>Object</code>\n  * [.type](#module_http-auth-utils/mecanisms/basic..BASIC.type) : <code>String</code>\n  * [.parseWWWAuthenticateRest(rest)](#module_http-auth-utils/mecanisms/basic..BASIC.parseWWWAuthenticateRest) ⇒ <code>Object</code>\n  * [.buildWWWAuthenticateRest(content)](#module_http-auth-utils/mecanisms/basic..BASIC.buildWWWAuthenticateRest) ⇒ <code>String</code>\n  * [.parseAuthorizationRest(rest)](#module_http-auth-utils/mecanisms/basic..BASIC.parseAuthorizationRest) ⇒ <code>Object</code>\n  * [.buildAuthorizationRest(content)](#module_http-auth-utils/mecanisms/basic..BASIC.buildAuthorizationRest) ⇒ <code>String</code>\n  * [.computeHash(credentials)](#module_http-auth-utils/mecanisms/basic..BASIC.computeHash) ⇒ <code>String</code>\n  * [.decodeHash(hash)](#module_http-auth-utils/mecanisms/basic..BASIC.decodeHash) ⇒ <code>Object</code>\n\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.type\"></a>\n#### BASIC.type : <code>String</code>\nThe Basic auth mecanism prefix.\n\n**Kind**: static property of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.parseWWWAuthenticateRest\"></a>\n#### BASIC.parseWWWAuthenticateRest(rest) ⇒ <code>Object</code>\nParse the WWW Authenticate header rest.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>Object</code> - Object representing the result of the parse operation.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| rest | <code>String</code> | The header rest (string got after removing the authentication mecanism prefix). |\n\n**Example**\n```js\nassert.deepEqual(\n  BASIC.parseWWWAuthenticateRest('realm=\"perlinpinpin\"'), {\n    realm: 'perlinpinpin'\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.buildWWWAuthenticateRest\"></a>\n#### BASIC.buildWWWAuthenticateRest(content) ⇒ <code>String</code>\nBuild the WWW Authenticate header rest.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>String</code> - The built rest.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| content | <code>Object</code> | The content from wich to build the rest. |\n\n**Example**\n```js\nassert.equal(\n  BASIC.buildWWWAuthenticateRest({\n    realm: 'perlinpinpin'\n  }),\n  'realm=\"perlinpinpin\"'\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.parseAuthorizationRest\"></a>\n#### BASIC.parseAuthorizationRest(rest) ⇒ <code>Object</code>\nParse the Authorization header rest.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>Object</code> - Object representing the result of the parse operation {hash}.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| rest | <code>String</code> | The header rest (string got after removing the authentication mecanism prefix).) |\n\n**Example**\n```js\nassert.deepEqual(\n  BASIC.parseAuthorizationRest('QWxpIEJhYmE6b3BlbiBzZXNhbWU='), {\n    hash: 'QWxpIEJhYmE6b3BlbiBzZXNhbWU='\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.buildAuthorizationRest\"></a>\n#### BASIC.buildAuthorizationRest(content) ⇒ <code>String</code>\nBuild the Authorization header rest.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>String</code> - The rest built.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| content | <code>Object</code> | The content from wich to build the rest. |\n\n**Example**\n```js\nassert.equal(\n  BASIC.buildAuthorizationRest({\n    hash: 'QWxpIEJhYmE6b3BlbiBzZXNhbWU='\n  }),\n  'QWxpIEJhYmE6b3BlbiBzZXNhbWU='\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.computeHash\"></a>\n#### BASIC.computeHash(credentials) ⇒ <code>String</code>\nCompute the Basic authentication hash from the given credentials.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>String</code> - The hash representing the credentials.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| credentials | <code>Object</code> | The credentials to encode {username, password}. |\n\n**Example**\n```js\nassert.equal(\n  BASIC.computeHash({\n    username: 'Ali Baba',\n    password: 'open sesame'\n  }),\n  'QWxpIEJhYmE6b3BlbiBzZXNhbWU='\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/basic..BASIC.decodeHash\"></a>\n#### BASIC.decodeHash(hash) ⇒ <code>Object</code>\nDecode the Basic hash and return the corresponding credentials.\n\n**Kind**: static method of <code>[BASIC](#module_http-auth-utils/mecanisms/basic..BASIC)</code>\n**Returns**: <code>Object</code> - Object representing the credentials {username, password}.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| hash | <code>String</code> | The hash. |\n\n**Example**\n```js\nassert.deepEqual(\n  BASIC.decodeHash('QWxpIEJhYmE6b3BlbiBzZXNhbWU='), {\n    username: 'Ali Baba',\n    password: 'open sesame'\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/digest\"></a>\n## http-auth-utils/mecanisms/digest\n\n* [http-auth-utils/mecanisms/digest](#module_http-auth-utils/mecanisms/digest)\n  * [~DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST) : <code>Object</code>\n    * [.type](#module_http-auth-utils/mecanisms/digest..DIGEST.type) : <code>String</code>\n    * [.parseWWWAuthenticateRest(rest)](#module_http-auth-utils/mecanisms/digest..DIGEST.parseWWWAuthenticateRest) ⇒ <code>Object</code>\n    * [.buildWWWAuthenticateRest(content)](#module_http-auth-utils/mecanisms/digest..DIGEST.buildWWWAuthenticateRest) ⇒ <code>String</code>\n    * [.parseAuthorizationRest(rest)](#module_http-auth-utils/mecanisms/digest..DIGEST.parseAuthorizationRest) ⇒ <code>Object</code>\n    * [.buildAuthorizationRest(content)](#module_http-auth-utils/mecanisms/digest..DIGEST.buildAuthorizationRest) ⇒ <code>String</code>\n    * [.computeHash(credentials)](#module_http-auth-utils/mecanisms/digest..DIGEST.computeHash) ⇒ <code>String</code>\n\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST\"></a>\n### http-auth-utils/mecanisms/digest~DIGEST : <code>Object</code>\nDigest authentication mecanism.\n\n**Kind**: inner constant of <code>[http-auth-utils/mecanisms/digest](#module_http-auth-utils/mecanisms/digest)</code>\n**See**\n\n- http://tools.ietf.org/html/rfc2617#section-3\n- http://tools.ietf.org/html/rfc2069#section-2\n\n\n* [~DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST) : <code>Object</code>\n  * [.type](#module_http-auth-utils/mecanisms/digest..DIGEST.type) : <code>String</code>\n  * [.parseWWWAuthenticateRest(rest)](#module_http-auth-utils/mecanisms/digest..DIGEST.parseWWWAuthenticateRest) ⇒ <code>Object</code>\n  * [.buildWWWAuthenticateRest(content)](#module_http-auth-utils/mecanisms/digest..DIGEST.buildWWWAuthenticateRest) ⇒ <code>String</code>\n  * [.parseAuthorizationRest(rest)](#module_http-auth-utils/mecanisms/digest..DIGEST.parseAuthorizationRest) ⇒ <code>Object</code>\n  * [.buildAuthorizationRest(content)](#module_http-auth-utils/mecanisms/digest..DIGEST.buildAuthorizationRest) ⇒ <code>String</code>\n  * [.computeHash(credentials)](#module_http-auth-utils/mecanisms/digest..DIGEST.computeHash) ⇒ <code>String</code>\n\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.type\"></a>\n#### DIGEST.type : <code>String</code>\nThe Digest auth mecanism prefix.\n\n**Kind**: static property of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.parseWWWAuthenticateRest\"></a>\n#### DIGEST.parseWWWAuthenticateRest(rest) ⇒ <code>Object</code>\nParse the WWW Authenticate header rest.\n\n**Kind**: static method of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n**Returns**: <code>Object</code> - Object representing the result of the parse operation.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| rest | <code>String</code> | The header rest (string got after removing the authentication mecanism prefix). |\n\n**Example**\n```js\nassert.deepEqual(\n  DIGEST.parseWWWAuthenticateRest(\n    'realm=\"testrealm@host.com\", ' +\n    'qop=\"auth, auth-int\", ' +\n    'nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\", ' +\n    'opaque=\"5ccc069c403ebaf9f0171e9517f40e41\"'\n  ), {\n    realm: 'testrealm@host.com',\n    qop: 'auth, auth-int',\n    nonce: 'dcd98b7102dd2f0e8b11d0f600bfb0c093',\n    opaque: '5ccc069c403ebaf9f0171e9517f40e41'\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.buildWWWAuthenticateRest\"></a>\n#### DIGEST.buildWWWAuthenticateRest(content) ⇒ <code>String</code>\nBuild the WWW Authenticate header rest.\n\n**Kind**: static method of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n**Returns**: <code>String</code> - The built rest.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| content | <code>Object</code> | The content from wich to build the rest. |\n\n**Example**\n```js\nassert.equal(\n  DIGEST.buildWWWAuthenticateRest({\n    realm: 'testrealm@host.com',\n    qop: 'auth, auth-int',\n    nonce: 'dcd98b7102dd2f0e8b11d0f600bfb0c093',\n    opaque: '5ccc069c403ebaf9f0171e9517f40e41'\n  }),\n  'realm=\"testrealm@host.com\", ' +\n  'qop=\"auth, auth-int\", ' +\n  'nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\", ' +\n  'opaque=\"5ccc069c403ebaf9f0171e9517f40e41\"'\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.parseAuthorizationRest\"></a>\n#### DIGEST.parseAuthorizationRest(rest) ⇒ <code>Object</code>\nParse the Authorization header rest.\n\n**Kind**: static method of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n**Returns**: <code>Object</code> - Object representing the result of the parse operation {hash}.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| rest | <code>String</code> | The header rest (string got after removing the authentication mecanism prefix).) |\n\n**Example**\n```js\nassert.deepEqual(\n  DIGEST.parseAuthorizationRest(\n    'username=\"Mufasa\",' +\n    'realm=\"testrealm@host.com\",' +\n    'nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\",' +\n    'uri=\"/dir/index.html\",' +\n    'qop=\"auth\",' +\n    'nc=\"00000001\",' +\n    'cnonce=\"0a4f113b\",' +\n    'response=\"6629fae49393a05397450978507c4ef1\",' +\n    'opaque=\"5ccc069c403ebaf9f0171e9517f40e41\"'\n  ), {\n    username: \"Mufasa\",\n    realm: 'testrealm@host.com',\n    nonce: \"dcd98b7102dd2f0e8b11d0f600bfb0c093\",\n    uri: \"/dir/index.html\",\n    qop: 'auth',\n    nc: '00000001',\n    cnonce: \"0a4f113b\",\n    response: \"6629fae49393a05397450978507c4ef1\",\n    opaque: \"5ccc069c403ebaf9f0171e9517f40e41\"\n  }\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.buildAuthorizationRest\"></a>\n#### DIGEST.buildAuthorizationRest(content) ⇒ <code>String</code>\nBuild the Authorization header rest.\n\n**Kind**: static method of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n**Returns**: <code>String</code> - The rest built.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| content | <code>Object</code> | The content from wich to build the rest. |\n\n**Example**\n```js\nassert.equal(\n  DIGEST.buildAuthorizationRest({\n    username: \"Mufasa\",\n    realm: 'testrealm@host.com',\n    nonce: \"dcd98b7102dd2f0e8b11d0f600bfb0c093\",\n    uri: \"/dir/index.html\",\n    qop: 'auth',\n    nc: '00000001',\n    cnonce: \"0a4f113b\",\n    response: \"6629fae49393a05397450978507c4ef1\",\n    opaque: \"5ccc069c403ebaf9f0171e9517f40e41\"\n  }),\n  'username=\"Mufasa\", ' +\n  'realm=\"testrealm@host.com\", ' +\n  'nonce=\"dcd98b7102dd2f0e8b11d0f600bfb0c093\", ' +\n  'uri=\"/dir/index.html\", ' +\n  'response=\"6629fae49393a05397450978507c4ef1\", ' +\n  'cnonce=\"0a4f113b\", ' +\n  'opaque=\"5ccc069c403ebaf9f0171e9517f40e41\", ' +\n  'qop=\"auth\", ' +\n  'nc=\"00000001\"'\n);\n```\n<a name=\"module_http-auth-utils/mecanisms/digest..DIGEST.computeHash\"></a>\n#### DIGEST.computeHash(credentials) ⇒ <code>String</code>\nCompute the Digest authentication hash from the given credentials.\n\n**Kind**: static method of <code>[DIGEST](#module_http-auth-utils/mecanisms/digest..DIGEST)</code>\n**Returns**: <code>String</code> - The hash representing the credentials.\n**Api**: public\n\n| Param | Type | Description |\n| --- | --- | --- |\n| credentials | <code>Object</code> | The credentials to encode and other encoding details. |\n\n**Example**\n```js\nassert.equal(\n  DIGEST.computeHash({\n    username: 'Mufasa',\n    realm: 'testrealm@host.com',\n    password: 'Circle Of Life',\n    method: 'GET',\n    uri: '/dir/index.html',\n    nonce: 'dcd98b7102dd2f0e8b11d0f600bfb0c093',\n    nc: '00000001',\n    cnonce: '0a4f113b',\n    qop: 'auth',\n    algorithm: 'md5'\n  }),\n  '6629fae49393a05397450978507c4ef1'\n);\n```\n","created":"2015-05-27T14:57:12.632Z","modified":"2016-07-19T14:32:41.580Z","lastPublisher":{"name":"nfroidure","email":"nfroidure@elitwork.com"},"owners":[{"name":"nfroidure","email":"nfroidure@elitwork.com"}],"other":{"_attachments":{},"_from":".","_id":"http-auth-utils","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/http-auth-utils-1.0.0.tgz_1468938759537_0.6536166861187667"},"_npmUser":{"name":"nfroidure","email":"nfroidure@elitwork.com"},"_npmVersion":"3.9.5","_rev":"1-38ed607f48fc4e8a16d9cf15d135f602","_shasum":"04c28de7395b20e4249ea278b39810b23fdc4b3b","author":{"name":"Nicolas Froidure"},"bugs":{"url":"https://github.com/nfroidure/http-auth-utils/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"04c28de7395b20e4249ea278b39810b23fdc4b3b","tarball":"http://registry.npmjs.org/http-auth-utils/-/http-auth-utils-1.0.0.tgz"},"maintainers":[{"name":"nfroidure","email":"nfroidure@elitwork.com"}],"readmeFilename":"README.md","time":{"modified":"2016-07-19T14:32:41.580Z","created":"2015-05-27T14:57:12.632Z","0.0.0":"2015-05-27T14:57:12.632Z","0.0.1":"2015-05-31T20:42:40.828Z","0.0.2":"2015-06-01T08:44:17.188Z","1.0.0":"2016-07-19T14:32:41.580Z"}}}