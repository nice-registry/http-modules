{"name":"superagent-mock","description":"superagent plugin allowing to simulate HTTP calls by returning data fixtures based on the requested URL.","version":"3.4.0","keywords":["superagent","mock","isomorphic"],"license":"MIT","main":"./lib/superagent-mock.js","repository":"https://github.com/M6Web/superagent-mock","peerDependencies":{"superagent":"^3.5.2"},"devDependencies":{"babel-cli":"^6.24.1","babel-jest":"^20.0.3","babel-preset-env":"^1.4.0","cross-env":"^5.0.0","eslint":"^3.19.0","jest":"20.0.3","rimraf":"^2.6.1","superagent":"^3.5.2"},"scripts":{"clean":"rimraf lib es","test":"jest ./tests","lint":"eslint ./src ./tests","build:commonjs":"cross-env BABEL_ENV=commonjs babel src --out-dir lib","build:es":"cross-env BABEL_ENV=es babel src --out-dir es","build":"yarn build:commonjs && yarn build:es","prepublish":"yarn run clean && yarn lint && yarn build"},"licenseText":"Copyright (c) 2015 M6Web\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n","versions":[{"number":"1.0.0","date":"2015-03-27T13:19:45.632Z"},{"number":"1.1.0","date":"2015-04-30T13:43:43.853Z"},{"number":"1.2.0","date":"2015-05-18T13:42:53.051Z"},{"number":"1.3.0","date":"2015-06-29T13:38:55.838Z"},{"number":"1.6.0","date":"2015-09-09T08:45:50.433Z"},{"number":"1.7.0","date":"2015-09-09T09:12:54.134Z"},{"number":"1.8.0","date":"2015-10-29T09:53:38.586Z"},{"number":"1.9.0","date":"2015-11-18T08:46:02.607Z"},{"number":"1.10.0","date":"2016-01-04T10:02:58.123Z"},{"number":"1.11.0","date":"2016-08-04T13:37:44.876Z"},{"number":"1.12.0","date":"2016-09-06T15:29:31.825Z"},{"number":"2.0.0","date":"2016-11-07T16:28:16.420Z"},{"number":"2.0.1","date":"2016-11-09T16:02:25.269Z"},{"number":"3.0.0","date":"2016-12-14T14:00:01.967Z"},{"number":"3.1.0","date":"2017-01-09T10:04:43.182Z"},{"number":"3.2.0","date":"2017-01-23T09:24:38.639Z"},{"number":"3.3.0","date":"2017-02-13T10:57:47.014Z"},{"number":"3.4.0-beta","date":"2017-04-18T15:39:26.278Z"},{"number":"3.4.0-beta.1","date":"2017-04-18T16:44:56.109Z"},{"number":"3.4.0-beta.2","date":"2017-04-18T16:57:17.144Z"},{"number":"3.4.0-beta.3","date":"2017-04-18T17:08:10.533Z"},{"number":"3.4.0-beta.4","date":"2017-05-23T12:51:12.868Z"},{"number":"3.4.0-beta.5","date":"2017-05-23T16:18:02.052Z"},{"number":"3.4.0-beta.6","date":"2017-05-23T16:24:31.964Z"},{"number":"3.4.0","date":"2017-05-24T13:00:09.550Z"}],"readme":"![](https://img.shields.io/badge/License-MIT-00CCFF.svg?style=flat-square)\n![](https://img.shields.io/badge/superagent--mock-JS-FF0066.svg?style=flat-square)\n[![NPM Downloads](http://img.shields.io/npm/dm/superagent-mock.svg?style=flat-square)](https://www.npmjs.org/package/superagent-mock)\n[![Build Status](http://img.shields.io/travis/M6Web/superagent-mock.svg?style=flat-square)](https://travis-ci.org/M6Web/superagent-mock)\n\n<p align=\"center\">\n<b><a href=\"#installation\">Installation</a></b>\n|\n<b><a href=\"#usage\">Usage</a></b>\n|\n<b><a href=\"#supported-methods\">Supported Methods</a></b>\n|\n<b><a href=\"#tests\">Tests</a></b>\n|\n<b><a href=\"#credits\">Credits</a></b>\n|\n<b><a href=\"#license\">License</a></b>\n</p>\n\n# superagent-mock\n\n[superagent](https://github.com/visionmedia/superagent) plugin allowing to simulate HTTP calls by returning data fixtures based on the requested URL.\n\nSee [this post](http://tech.m6web.fr/how-did-we-mock-the-backend-developers.html) to know why we use superagent-mock at M6Web.\n\n## Installation\n\nInstall with [npm](http://npmjs.org/): `npm install superagent-mock`\n\nInstall with [yarn](https://yarnpkg.com/): `yarn add superagent-mock`\n\n## Usage\n\nFirst, you have to define the URLs to mock in a configuration file:\n\n```js\n// ./superagent-mock-config.js file\nmodule.exports = [\n  {\n    /**\n     * regular expression of URL\n     */\n    pattern: 'https://domain.example(.*)',\n\n    /**\n     * returns the data\n     *\n     * @param match array Result of the resolution of the regular expression\n     * @param params object sent by 'send' function\n     * @param headers object set by 'set' function\n     * @param context object the context of running the fixtures function\n     */\n    fixtures: function (match, params, headers, context) {\n      /**\n       * Returning error codes example:\n       *   request.get('https://domain.example/404').end(function(err, res){\n       *     console.log(err); // 404\n       *     console.log(res.notFound); // true\n       *   })\n       */\n      if (match[1] === '/404') {\n        throw new Error(404);\n      }\n\n      /**\n       * Checking on parameters example:\n       *   request.get('https://domain.example/hero').send({superhero: \"superman\"}).end(function(err, res){\n       *     console.log(res.body); // \"Your hero: superman\"\n       *   })\n       */\n\n      if (match[1] === '/hero') {\n        if(params['superhero']) {\n          return 'Your hero:' + params['superhero'];\n        } else {\n          return 'You didnt choose a hero';\n        }\n      }\n\n\n      /**\n       * Checking on headers example:\n       *   request.get('https://domain.example/authorized_endpoint').set({Authorization: \"9382hfih1834h\"}).end(function(err, res){\n       *     console.log(res.body); // \"Authenticated!\"\n       *   })\n       */\n\n      if (match[1] === '/authorized_endpoint') {\n        if(headers['Authorization']) {\n          return 'Authenticated!';\n        } else {\n          throw new Error(401); // Unauthorized\n        }\n      }\n\n      /**\n       * Cancelling the mocking for a specific matched route example:\n       *   request.get('https://domain.example/server_test').end(function(err, res){\n       *     console.log(res.body); // (whatever the actual server would have returned)\n       *   })\n       */\n\n      if (match[1] === '/server_test') {\n        context.cancel = true; // This will cancel the mock process and continue as usual (unmocked)\n        return null;\n      }\n\n      /**\n       * Delaying the response with a specific number of milliseconds:\n       *   request.get('https://domain.example/delay_test').end(function(err, res){\n       *     console.log(res.body); // This log will be written after the delay time has passed \n       *   })\n       */\n\n      if (match[1] === '/delay_test') {\n        context.delay = 3000; // This will delay the response by 3 seconds\n        return 'zzZ';\n      }\n\n      /**\n       * Mocking progress events:\n       *   request.get('https://domain.example/progress_test')\n       *     .on('progress', function (e) { console.log(e.percent + '%'); })\n       *     .end(function(err, res){\n       *       console.log(res.body); // This log will be written after all progress events emitted \n       *     })\n       */\n\n      if (match[1] === '/progress_test') {\n        context.progress = {\n          parts: 3,               // The number of progress events to emit one after the other with linear progress\n                                  //   (Meaning, loaded will be [total/parts])\n          delay: 1000,            // [optional] The delay of emitting each of the progress events by ms \n                                  //   (default is 0 unless context.delay specified, then it's [delay/parts])\n          total: 100,             // [optional] The total as it will appear in the progress event (default is 100)\n          lengthComputable: true, // [optional] The same as it will appear in the progress event (default is true)\n          direction: 'upload'     // [optional] superagent adds 'download'/'upload' direction to the event (default is 'upload')\n        };\n        return 'Hundred percent!';\n      }\n    },\n\n    /**\n     * returns the result of the GET request\n     *\n     * @param match array Result of the resolution of the regular expression\n     * @param data  mixed Data returns by `fixtures` attribute\n     */\n    get: function (match, data) {\n      return {\n        body: data\n      };\n    },\n\n    /**\n     * returns the result of the POST request\n     *\n     * @param match array Result of the resolution of the regular expression\n     * @param data  mixed Data returns by `fixtures` attribute\n     */\n    post: function (match, data) {\n      return {\n        code: 201\n      };\n    }\n  },\n  ...\n];\n```\n\nThen use the plugin:\n\n```js\n// ./server.js file\nvar request = require('superagent');\nvar config = require('./superagent-mock-config');\n\n// Before tests\nvar superagentMock = require('superagent-mock')(request, config);\n\n...\n\n// After tests\nsuperagentMock.unset();\n```\n\n## Supported methods\n\nAll request methods are supported (get, put, post, etc.).\n\nEach request method mock have to be declared in the config file. Otherwise, the `callback` method is used.\n\n## Logging\n\nYou can monitor each call, that has been intercepted by superagent-mock or not, by passing a callback function at initialization.\n\n``` js\n// ./server.js file\nvar request = require('superagent');\nvar config = require('./superagent-mock-config');\n\nvar logger = function(log)  {\n  console.log('superagent call', log);\n};\n\n// Before tests\nvar superagentMock = require('superagent-mock')(request, config, logger);\n\n...\n\n// After tests\nsuperagentMock.unset();\n```\n\nThe callback function will be called with an object containing the following informations\n - data : data used with `superagent.send` function\n - headers : array of headers given by `superagent.set` function\n - matcher : regex matching the current url which is defined in the provided config\n - url : url which superagent was called\n - method : HTTP method used for the call\n - timestamp : timestamp of the superagent call\n - mocked : true if the call was mocked by superagent mock, false if it used superagent real methods\n\n## Development scripts\n\nTo run units tests: `yarn test`.\n\nTo check code style: `yarn lint`.\n\nTo build code: `yarn build`.\n\n## Credits\n\nDevelopped by the [Cytron Team](http://cytron.fr/) of [M6 Web](http://tech.m6web.fr/).\nTested with [nodeunit](https://github.com/caolan/nodeunit).\n\n## License\n\nsuperagent-mock is licensed under the [MIT license](LICENSE).\n","starsCount":3,"created":"2015-03-27T13:19:45.632Z","modified":"2017-06-15T09:19:28.443Z","lastPublisher":{"name":"devside","email":"thomas.triau@gmail.com"},"owners":[{"email":"florent.lepretre@gmail.com","name":"flepretre"},{"email":"malik.mba@gmail.com","name":"malikba"},{"email":"oltodo@msn.com","name":"oltodo"},{"email":"thomas@zilliox.me","name":"tzi"},{"email":"thomas.triau@gmail.com","name":"devside"},{"email":"florent.dubost@gmail.com","name":"fdubost"}],"other":{"_attachments":{},"_id":"superagent-mock","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/superagent-mock-3.4.0.tgz_1495630808494_0.666366315446794"},"_npmUser":{"name":"devside","email":"thomas.triau@gmail.com"},"_rev":"32-eca7225c713b46909fbe41126faaf50c","bugs":{"url":"https://github.com/M6Web/superagent-mock/issues"},"directories":{},"dist-tags":{"latest":"3.4.0","beta":"3.4.0-beta.6"},"dist":{"shasum":"8c872abb2604531ffdf33cc3da7b83b736a5c490","tarball":"https://registry.npmjs.org/superagent-mock/-/superagent-mock-3.4.0.tgz"},"maintainers":[{"email":"florent.lepretre@gmail.com","name":"flepretre"},{"email":"malik.mba@gmail.com","name":"malikba"},{"email":"oltodo@msn.com","name":"oltodo"},{"email":"thomas@zilliox.me","name":"tzi"},{"email":"thomas.triau@gmail.com","name":"devside"},{"email":"florent.dubost@gmail.com","name":"fdubost"}],"readmeFilename":"README.md","time":{"modified":"2017-06-15T09:19:28.443Z","created":"2015-03-27T13:19:45.632Z","1.0.0":"2015-03-27T13:19:45.632Z","1.1.0":"2015-04-30T13:43:43.853Z","1.2.0":"2015-05-18T13:42:53.051Z","1.3.0":"2015-06-29T13:38:55.838Z","1.6.0":"2015-09-09T08:45:50.433Z","1.7.0":"2015-09-09T09:12:54.134Z","1.8.0":"2015-10-29T09:53:38.586Z","1.9.0":"2015-11-18T08:46:02.607Z","1.10.0":"2016-01-04T10:02:58.123Z","1.11.0":"2016-08-04T13:37:44.876Z","1.12.0":"2016-09-06T15:29:31.825Z","2.0.0":"2016-11-07T16:28:16.420Z","2.0.1":"2016-11-09T16:02:25.269Z","3.0.0":"2016-12-14T14:00:01.967Z","3.1.0":"2017-01-09T10:04:43.182Z","3.2.0":"2017-01-23T09:24:38.639Z","3.3.0":"2017-02-13T10:57:47.014Z","3.4.0-beta":"2017-04-18T15:39:26.278Z","3.4.0-beta.1":"2017-04-18T16:44:56.109Z","3.4.0-beta.2":"2017-04-18T16:57:17.144Z","3.4.0-beta.3":"2017-04-18T17:08:10.533Z","3.4.0-beta.4":"2017-05-23T12:51:12.868Z","3.4.0-beta.5":"2017-05-23T16:18:02.052Z","3.4.0-beta.6":"2017-05-23T16:24:31.964Z","3.4.0":"2017-05-24T13:00:09.550Z"},"users":{"oziks":true,"xgheaven":true,"fdubost":true}}}