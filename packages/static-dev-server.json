{"name":"static-dev-server","description":"A simple http server to serve  static resource files from a local directory and auto reload when file change.","version":"1.0.0","keywords":["static","server","auto-reflesh","watch","local","assets"],"main":"./server.js","repository":"https://github.com/etoah/static-dev-server","bin":{"static":"./bin/static-dev-server.js"},"scripts":{"test":"mocha","test-cov":"istanbul cover node_modules/mocha/bin/_mocha","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly","start":"node server.js"},"engines":{"node":">= 0.10.0"},"dependencies":{"chalk":"^0.5.1","commander":"^2.3.0","file-size":"0.0.5","mime":"^1.2.11","socket.io":"^1.7.3","watch":"^1.0.2"},"license":{"type":"MIT","url":"http://creativecommons.org/licenses/MIT/"},"devDependencies":{"istanbul":"^0.3.0","mocha":"^1.21.4","should":"^4.0.4","supertest":"^0.15.0"},"gitHead":"4156e3a1facd14f3ce94a73e23d36c037d05d7a6","homepage":"https://github.com/etoah/static-dev-server#readme","versions":[{"number":"1.0.0","date":"2017-05-07T00:09:40.037Z"}],"readme":"[![Build Status](https://secure.travis-ci.org/nbluis/static-server.svg?branch=master)](http://travis-ci.org/nbluis/static-server)\n\n# Node static server\nA simple http server to serve static resource files from a local directory and watching.\n\nfork from static-server , but extend below feature:\n\n1.  Auto refresh when file changed.\n2.  Command changed from `static-server`to `static`\n\n## Getting started\n* [Install node.js](http://nodejs.org/download/)\n* Install npm package globally `npm -g install static-server`\n* Go to the folder you want to serve\n* Run the server `static`\n\n## Options\n\n    -h, --help                 output usage information\n    -V, --version              output the version number\n    -p, --port <n>             the port to listen to for incoming HTTP connections\n    -i, --index <filename>     the default index file if not specified\n    -f, --follow-symlink       follow links, otherwise fail with file not found\n    -d, --debug                enable to show error messages\n    -n, --not-found <filename> the error 404 file\n\n## Using as a node module\n\nThe server may be used as a dependency HTTP server.\n\n### Example\n\n```javascript\nvar StaticServer = require('static-dev-server');\nvar server = new StaticServer({\n  rootPath: '.',            // required, the root of the server file tree\n  name: 'my-http-server',   // optional, will set \"X-Powered-by\" HTTP header\n  port: 1337,               // optional, defaults to a random port\n  host: '10.0.0.100',       // optional, defaults to any interface\n  cors: '*'                 // optional, defaults to undefined\n  followSymlink: true,      // optional, defaults to a 404 error\n  templates: {\n    index: 'foo.html',      // optional, defaults to 'index.html'\n    notFound: '404.html'    // optional, defaults to undefined\n  }\n});\n\nserver.start(function () {\n  console.log('Server listening to', server.port);\n});\n\nserver.on('request', function (req, res) {\n  // req.path is the URL resource (file name) from server.rootPath\n  // req.elapsedTime returns a string of the request's elapsed time\n});\n\nserver.on('symbolicLink', function (link, file) {\n  // link is the source of the reference\n  // file is the link reference\n  console.log('File', link, 'is a link to', file);\n});\n\nserver.on('response', function (req, res, err, file, stat) {\n  // res.status is the response status sent to the client\n  // res.headers are the headers sent\n  // err is any error message thrown\n  // file the file being served (may be null)\n  // stat the stat of the file being served (is null if file is null)\n\n  // NOTE: the response has already been sent at this point\n});\n```\n\n## FAQ\n* _Can I use this project in production environments?_ **Obviously not.**\n* _Can this server run php, ruby, python or any other cgi script?_ **No.**\n* _Is this server ready to receive thousands of requests?_ **Preferably not.**\n\n\n## License\n[The MIT License (MIT)](http://creativecommons.org/licenses/MIT/)\n","created":"2017-05-07T00:09:40.037Z","modified":"2017-05-07T00:09:40.037Z","lastPublisher":{"name":"etoah","email":"996778831@qq.com"},"owners":[{"name":"etoah","email":"996778831@qq.com"}],"other":{"_attachments":{},"_from":".","_id":"static-dev-server","_nodeVersion":"7.8.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/static-dev-server-1.0.0.tgz_1494115777106_0.9259299121331424"},"_npmUser":{"name":"etoah","email":"996778831@qq.com"},"_npmVersion":"4.2.0","_rev":"1-6ecc72ce70803039e4fe12cedcb6566a","_shasum":"afe9e96a897b1f3049c42ba765d6699804d97321","author":{"name":"lucien","email":"etoahn@163.com"},"bugs":{"url":"https://github.com/etoah/static-dev-server/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"afe9e96a897b1f3049c42ba765d6699804d97321","tarball":"https://registry.npmjs.org/static-dev-server/-/static-dev-server-1.0.0.tgz"},"maintainers":[{"name":"etoah","email":"996778831@qq.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-07T00:09:40.037Z","created":"2017-05-07T00:09:40.037Z","1.0.0":"2017-05-07T00:09:40.037Z"}}}