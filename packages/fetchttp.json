{"name":"fetchttp","version":"0.1.4","description":"`fetchttp` is a small http request/response helper based on fetch","main":"req.js","scripts":{},"repository":"https://github.com/jiananshi/fetchttp","license":"MIT","homepage":"https://github.com/jiananshi/fetchttp#readme","devDependencies":{"eslint":"^3.19.0","eslint-config-elemefe":"^0.2.2","pre-commit-eslint":"^0.0.6"},"gitHead":"b35ec0ad500584f0aa5348dce07307e3b6051389","versions":[{"number":"0.1.4","date":"2017-05-08T13:06:03.346Z"}],"readme":"`fetchttp` is a small http request/response helper based on fetch\n\n**1. Installation**\n\nAdd `fetchttp.js` to your page\n\n`<script src=\"fetchttp.js\"></script>`\n\n**2. API**\n\n**2.1** a minimal http get request would be like this:\n\n```js\nfetchttp.get('https://yourdomain.com')\n  .end()\n  .then(raw => /* now raw is response from `yourdomain.com` */);\n```\n\n`fetchttp` support bellow methods:\n\n- GET\n- POST\n- PUT\n- PATCH\n- DELETE\n\n**2.2** Alternatively you can pass data as second argument:\n\n```js\nfetchttp.post('https://yourdomain.com', { str: 'ymy' }).end();\n```\n\n**2.3** Last arguments would always be fetch configuration which passes directly to native `fetch`:\n\n```js\nfetchttp.patch('https://yourdomain.com/user/813', { str: 'ymy' }, {\n  mode: 'cors',\n  credentials: 'include'\n}).end();\n````\n\n**2.4** The reason why call `end()` method is inspired by mongoose's queryBuilder, which leet you generate your query step by step then do the query:\n\n```js\nfetchttp.post('https://yourdomain.com')\n  .set('content-type', 'application/json')\n  .set('accept', 'application/json')\n  .set('x-csrftoken', '25818910680')\n  .send(data)\n  .end() // till now send the request\n```\n\n**2.5** Finally there are senarios in Project your have to write\n\n```js\nconst commonConfig = Object.freeze({\n  headers: { /* ... */ }\n  mode: 'cors'\n});\nconst prefix = 'https://yourdomain.com';\n\nfetch('url', Object.assign(customConfig, commonConfig));\n```\n\nnow just:\n\n```js\nconst api = fetchttp.create({\n  baseUrl: 'https://yourdomain.com/v1/',\n  options: {\n    headers: { /* ... */ },\n    mode: 'cors'\n  }\n});\n\napi.get('data').end(); // would send get request to https:\\/\\/yourdomain.com/data\n```\n\n","created":"2017-05-08T13:06:03.346Z","modified":"2017-05-08T13:06:03.346Z","lastPublisher":{"name":"klam","email":"klamtine@gmail.com"},"owners":[{"name":"klam","email":"klamtine@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fetchttp","_nodeVersion":"7.7.3","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/fetchttp-0.1.4.tgz_1494248763102_0.695941731100902"},"_npmUser":{"name":"klam","email":"klamtine@gmail.com"},"_npmVersion":"4.1.2","_rev":"1-9547a50b05526763a760c85cc3dd60bf","_shasum":"c18eb5946fafdab39b2521918e556111b40caf7a","author":{"name":"jiananshi"},"bugs":{"url":"https://github.com/jiananshi/fetchttp/issues"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"c18eb5946fafdab39b2521918e556111b40caf7a","tarball":"https://registry.npmjs.org/fetchttp/-/fetchttp-0.1.4.tgz"},"maintainers":[{"name":"klam","email":"klamtine@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-08T13:06:03.346Z","created":"2017-05-08T13:06:03.346Z","0.1.4":"2017-05-08T13:06:03.346Z"}}}