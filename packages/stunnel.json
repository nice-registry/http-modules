{"name":"stunnel","version":"0.10.1","description":"A pure-JavaScript tunnel client for http and https similar to localtunnel.me, but uses TLS (SSL) with ServerName Indication (SNI) over https to work even in harsh network conditions such as in student dorms and behind HOAs, corporate firewalls, public lib","main":"wsclient.js","bin":{"jstunnel":"bin/stunnel.js","stunnel.js":"bin/stunnel.js","stunnel-js":"bin/stunnel.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+ssh://git@git.daplie.com/Daplie/node-tunnel-client.git"},"keywords":["cli","client","tcp","tls","http","https","sni","servername","indication","stunnel","secure","securetunnel","secure-tunnel","tunnel","localtunnel","localtunnel.me","proxy","reverse","reverse-proxy","reverseproxy","vpn","sni"],"license":"(MIT OR Apache-2.0)","homepage":"https://git.daplie.com/Daplie/node-tunnel-client#readme","dependencies":{"bluebird":"^3.5.0","commander":"^2.9.0","jsonwebtoken":"^7.1.9","oauth3.js":"git+https://git.daplie.com/OAuth3/oauth3.js.git#v1","sni":"^1.0.0","tunnel-packer":"^1.2.0","ws":"^2.2.3"},"gitHead":"cad0e561fbea5c5dbbf5fc10ed95833dd3573ebc","versions":[{"number":"0.8.0","date":"2016-09-30T16:33:48.484Z"},{"number":"0.8.1","date":"2016-09-30T22:08:18.921Z"},{"number":"0.8.2","date":"2017-03-28T21:37:46.934Z"},{"number":"0.9.0","date":"2017-03-29T18:29:41.495Z"},{"number":"0.9.1","date":"2017-03-29T19:26:26.463Z"},{"number":"0.9.2","date":"2017-03-29T19:36:38.197Z"},{"number":"0.9.4","date":"2017-03-30T00:00:08.986Z"},{"number":"0.9.5","date":"2017-03-30T01:29:45.987Z"},{"number":"0.9.6","date":"2017-04-03T21:18:04.547Z"},{"number":"0.9.7","date":"2017-04-10T17:41:32.637Z"},{"number":"0.9.8","date":"2017-04-15T00:29:04.038Z"},{"number":"0.9.9","date":"2017-04-28T00:39:25.002Z"},{"number":"0.10.0","date":"2017-06-06T23:33:20.036Z"},{"number":"0.10.1","date":"2017-06-15T20:50:07.033Z"}],"readme":"<!-- BANNER_TPL_BEGIN -->\n\nAbout Daplie: We're taking back the Internet!\n--------------\n\nDown with Google, Apple, and Facebook!\n\nWe're re-decentralizing the web and making it read-write again - one home cloud system at a time.\n\nTired of serving the Empire? Come join the Rebel Alliance:\n\n<a href=\"mailto:jobs@daplie.com\">jobs@daplie.com</a> | [Invest in Daplie on Wefunder](https://daplie.com/invest/) | [Pre-order Cloud](https://daplie.com/preorder/), The World's First Home Server for Everyone\n\n<!-- BANNER_TPL_END -->\n\n# stunnel.js\n\nA client that works in combination with [stunneld.js](https://github.com/Daplie/node-tunnel-server)\nto allow you to serve http and https from any computer, anywhere through a secure tunnel.\n\n* CLI\n* Library\n\nCLI\n===\n\nInstalls as `stunnel.js` with the alias `jstunnel`\n(for those that regularly use `stunnel` but still like commandline completion).\n\n### Install\n\n```bash\nnpm install -g 'git+https://git@git.daplie.com/Daplie/node-tunnel-client.git#v1'\n```\n\nOr if you want to bow down to the kings of the centralized dictator-net:\n\n```bash\nnpm install -g stunnel\n```\n\n### Usage with OAuth3.org\n\nDaplie's OAuth3.org tunnel service is in Beta.\n\n**Terms of Service**: The Software and Services shall be used for Good, not Evil.\nExamples of good: education, business, pleasure. Examples of evil: crime, abuse, extortion.\n\n```bash\nstunnel.js --agree-tos --email john@example.com --locals http:*:4080,https:*:8443 --device\n```\n\n```bash\nstunnel.js \\\n  --agree-tos --email <EMAIL> \\\n  --locals <List of <SCHEME>:<EXTERNAL_DOMAINNAME>:<INTERNAL_PORT>> \\\n  --device [HOSTNAME] \\\n  --domains [Comma-separated list of domains to attach to device] \\\n  --oauth3-url <Tunnel Service OAuth3 URL>\n```\n\n### Advanced Usage (DIY)\n\nHow to use `stunnel.js` with your own instance of `stunneld.js`:\n\n```bash\nstunnel.js \\\n  --locals <<external domain name>> \\\n  --stunneld wss://<<tunnel domain>>:<<tunnel port>> \\\n  --secret <<128-bit hex key>>\n```\n\n```bash\nstunnel.js --locals john.example.com --stunneld wss://tunnel.example.com:443 --secret abc123\n```\n\n```bash\nstunnel.js \\\n  --locals <<protocol>>:<<external domain name>>:<<local port>> \\\n  --stunneld wss://<<tunnel domain>>:<<tunnel port>> \\\n  --secret <<128-bit hex key>>\n```\n\n```bash\nstunnel.js \\\n  --locals http:john.example.com:3000,https:john.example.com \\\n  --stunneld wss://tunnel.example.com:443 \\\n  --secret abc123\n```\n\n```\n--secret          the same secret used by stunneld (used for authentication)\n--locals          comma separated list of <proto>:<servername>:<port> to which\n                  incoming http and https should be forwarded\n--stunneld        the domain or ip address at which you are running stunneld.js\n-k, --insecure    ignore invalid ssl certificates from stunneld\n```\n\nLibrary\n=======\n\n### Example\n\n```javascript\nvar stunnel = require('stunnel');\n\nstunnel.connect({\n  stunneld: 'wss://tunnel.example.com'\n, token: '...'\n, locals: [\n    // defaults to sending http to local port 80 and https to local port 443\n    { hostname: 'doe.net' }\n\n    // sends both http and https to local port 3000 (httpolyglot)\n  , { protocol: 'https', hostname: 'john.doe.net', port: 3000 }\n\n    // send http to local port 4080 and https to local port 8443\n  , { protocol: 'https', hostname: 'jane.doe.net', port: 4080 }\n  , { protocol: 'https', hostname: 'jane.doe.net', port: 8443 }\n  ]\n\n, net: require('net')\n, insecure: false\n});\n```\n\n* You can get sneaky with `net` and provide a `createConnection` that returns a `stream.Duplex`.\n\n### Token\n\n```javascript\nvar tokenData = { domains: [ 'doe.net', 'john.doe.net', 'jane.doe.net' ] }\nvar secret = 'shhhhh';\nvar token = jwt.sign(tokenData, secret);\n```\n\n### net\n\nLet's say you want to handle http requests in-process\nor decrypt https before passing it to the local http handler.\n\nYou'll need to create a pair of streams to connect between the\nlocal handler and the tunnel handler.\n\nYou could do a little magic like this:\n\n```js\nstunnel.connect({\n  // ...\n, net: {\n  createConnection: function (info, cb) {\n    // data is the hello packet / first chunk\n    // info = { data, servername, port, host, remoteAddress: { family, address, port } }\n\n    var streamPair = require('stream-pair');\n    \n    // here \"reader\" means the socket that looks like the connection being accepted\n    var writer = streamPair.create();\n    // here \"writer\" means the remote-looking part of the socket that driving the connection\n    var reader = writer.other;\n    // duplex = { write, push, end, events: [ 'readable', 'data', 'error', 'end' ] };\n\n    reader.remoteFamily = info.remoteFamily;\n    reader.remoteAddress = info.remoteAddress;\n    reader.remotePort = info.remotePort;\n\n    // socket.local{Family,Address,Port}\n    reader.localFamily = 'IPv4';\n    reader.localAddress = '127.0.01';\n    reader.localPort = info.port;\n\n    httpsServer.emit('connection', reader);\n\n    if (cb) {\n      process.nextTick(cb);\n    }\n\n    return writer;\n  }\n});\n```\n","created":"2016-09-30T16:33:48.484Z","modified":"2017-06-15T20:50:07.033Z","lastPublisher":{"name":"tigerbot","email":"slgibelyou@gmail.com"},"owners":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"other":{"_attachments":{},"_id":"stunnel","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/stunnel-0.10.1.tgz_1497559806872_0.24369462789036334"},"_npmUser":{"name":"tigerbot","email":"slgibelyou@gmail.com"},"_npmVersion":"5.0.3","_rev":"19-4e8618f9a9a51f6fcbf7785db255f49b","author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com/"},"bugs":{"url":"https://git.daplie.com/Daplie/node-tunnel-client/issues"},"directories":{},"dist-tags":{"latest":"0.10.1"},"dist":{"integrity":"sha512-qbCEdWcbdxBj/OluXLU5sjaeUOx5nykhpmPz37s6NAq0Fek6uyTu5tzE8AycbQ8ZpcQJQlaYXN2O1Z6Vm14kgA==","shasum":"1378f38cc26f496870f128a414884710ba0bafe2","tarball":"https://registry.npmjs.org/stunnel/-/stunnel-0.10.1.tgz"},"maintainers":[{"name":"coolaj86","email":"coolaj86@gmail.com"},{"name":"creationix","email":"tim@creationix.com"},{"name":"daplieinc","email":"npm@daplie.com"},{"name":"drewwarrentiy","email":"drewwarrentiy@gmail.com"},{"name":"insightfuls","email":"insightful_schmidt@yahoo.com.au"},{"name":"jimh","email":"jim.hager@daplie.com"},{"name":"tigerbot","email":"slgibelyou@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-15T20:50:07.033Z","created":"2016-09-30T16:33:48.484Z","0.8.0":"2016-09-30T16:33:48.484Z","0.8.1":"2016-09-30T22:08:18.921Z","0.8.2":"2017-03-28T21:37:46.934Z","0.9.0":"2017-03-29T18:29:41.495Z","0.9.1":"2017-03-29T19:26:26.463Z","0.9.2":"2017-03-29T19:36:38.197Z","0.9.4":"2017-03-30T00:00:08.986Z","0.9.5":"2017-03-30T01:29:45.987Z","0.9.6":"2017-04-03T21:18:04.547Z","0.9.7":"2017-04-10T17:41:32.637Z","0.9.8":"2017-04-15T00:29:04.038Z","0.9.9":"2017-04-28T00:39:25.002Z","0.10.0":"2017-06-06T23:33:20.036Z","0.10.1":"2017-06-15T20:50:07.033Z"}}}