{"description":"A backend for StatsD to emit stats to Splunk HTTP Event Collector","name":"splunk-statsd-backend","version":"0.1.0","homepage":"https://github.com/emiller42/splunk-statsd-backend","repository":"https://github.com/emiller42/splunk-statsd-backend","main":"lib/splunkdriver.js","dependencies":{"request":"~2.79.0"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"keywords":["metrics","statsd","splunk"],"license":{"type":"MIT"},"gitHead":"c302aa056731110bcf1ed082d25fa7ae830afe26","scripts":{},"versions":[{"number":"0.1.0","date":"2017-01-25T04:06:01.664Z"}],"readme":"splunk-statsd-backend\n=====================\nBackend plugin for [statsd](https://github.com/etsy/statsd) to output metrics to [Splunk](https://www.splunk.com) HTTP Event Collector (HEC)\n\n# Installation\n```bash\n$ cd /path/to/statsd/install\n$ npm install splunk-statsd-backend\n```\n\n# Configuration\n```js\n{\n  backends: ['splunk-statsd-backend', 'other-backends'],\n  splunk: {\n    splunkHost: '127.0.0.1', // the hostname of the Splunk Collector you wish to send metrics (default: 127.0.0.1)\n    splunkPort: 8088,        // port that the event collector is listening on (Default: 8088)\n    useSSL: true,            // HEC is using SSL (Default: true)\n    strictSSL: true,         // Should collectd should validate ssl certificates. Set to false if Splunk is using self-signed certs. (Default: true)\n    splunkToken: 'abcde',    // HEC token for authentication with Splunk (required)\n    // the following are somewhat equivalent to the 'prefix*' options for the graphite backend\n    timerLabel: 'timer',     // Label applied to all timer metrics (default: 'timer')\n    counterLabel: counter,   // Label applied to all counter metrics (default: 'counter')\n    gaugeLabel: gauge,       // Label applied to all gauge metrics (default: 'gauge')\n    setLabel: Set,           // Label applied to all set metrics (default: 'set')\n    // the following populate splunk-specific fields\n    host: 'foo',             // Specify a 'host' value for the events sent to Splunk. Leave unset to let Splunk infer this value.  \n    source: 'statsd',        // Specify a 'source' value for the events sent to Splunk.  (default: statsd)\n    sourcetype: _json,       // Specify a 'sourcetype' value for the events sent to Splunk. (default: _json)\n    index: 'main'            // Specify the target index for the events sent to Splunk.  Leave unset to let Splunk control destination index.\n  }\n}\n```\n\n# Implementation Details and Examples\nThis backend will transform statsd metrics into a format suitable for batch collection by the Splunk HTTP Event Collector.  Further, the events are properly formed JSON, allowing ['Indexed Extractions'](http://dev.splunk.com/view/event-collector/SP-CAAAFB6) to be applied out of the box.  All metrics are sent in a single HTTP POST request to the collector.  \n\nA batch event follows this format:\n```js\n{ \"time\": <timestamp>, \"source\": \"my_source\", \"sourcetype\": \"my_sourcetype\", \"index\": \"my_index\", \"event\": {...event payload...} }\n```\n\nWhere the event payload will contain all relevant fields for the metrics.  (Examples further down)\n\n## Field Names\n* `metricType` will be set according to the *Label fields.  ('timer', 'counter', etc.)\n* `metricName` will be a direct passthrough of the metric name provided to statsd.  (`my.counter:123|c` sets `metricName = \"my.counter\"`)\n* Other event field names are derived from the stats they represent.  \n\n## Example Counter\n```js\n{\n  \"event\": {\n    \"rate\": 1704.6,\n    \"count\": 17046,\n    \"metricType\": \"counter\",\n    \"metricName\": \"foo.requests\"\n  },\n  \"time\": 1485314310,\n  \"source\": \"statsd\",\n  \"sourcetype\": \"_json\"\n}\n```\n\n## Example Timer (with Histogram)\n```js\n{\n  \"event\": {\n    \"count_90\": 304,\n    \"mean_90\": 143.07236842105263,\n    \"upper_90\": 280,\n    \"sum_90\": 43494,\n    \"sum_squares_90\": 8083406,\n    \"std\": 86.5952973729948,\n    \"upper\": 300,\n    \"lower\": 1,\n    \"count\": 338,\n    \"count_ps\": 33.8,\n    \"sum\": 53402,\n    \"sum_squares\": 10971776,\n    \"mean\": 157.9940828402367,\n    \"median\": 157.5,\n    \"histogram\": {\n      \"bin_50\": 49,\n      \"bin_100\": 45,\n      \"bin_150\": 66,\n      \"bin_200\": 60,\n      \"bin_inf\": 118\n    },\n    \"metricType\": \"timer\",\n    \"metricName\": \"foo.duration\"\n  },\n  \"time\": 1485314310,\n  \"source\": \"statsd\",\n  \"sourcetype\": \"_json\"\n}\n```\n\n## Example Gauge\n```js\n{\n  \"event\": {\n    \"value\": 2,\n    \"metricType\": \"gauge\",\n    \"metricName\": \"foo.pct_util\"\n  },\n  \"time\": 1485314310,\n  \"source\": \"statsd\",\n  \"sourcetype\": \"_json\"\n}\n```\n\n## Example Set\n```js\n{\n  \"event\": {\n    \"count\": 98,\n    \"metricType\": \"set\",\n    \"metricName\": \"foo.uniques\"\n  },\n  \"time\": 1485314310,\n  \"source\": \"statsd\",\n  \"sourcetype\": \"_json\"\n}\n```\n\n# Backend Metrics\nThe following internal metrics are calculated and emitted under the `splunkStats` metricName\n* `calculationTime` - time spent parsing metrics in ms\n* `numStats` - The number of metrics processed\n* `flush_length` - the length of the event payload sent to Splunk\n* `flush_time` - the response time of the POST request to Splunk\n* `last_exception` - the timestamp of the last time a POST failed\n* `last_flush` - the timestamp of the last flush","created":"2017-01-25T04:06:01.664Z","modified":"2017-01-25T04:06:01.664Z","lastPublisher":{"name":"emiller42","email":"emiller42@gmail.com"},"owners":[{"name":"emiller42","email":"emiller42@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"splunk-statsd-backend","_nodeVersion":"7.4.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/splunk-statsd-backend-0.1.0.tgz_1485317159687_0.05388637911528349"},"_npmUser":{"name":"emiller42","email":"emiller42@gmail.com"},"_npmVersion":"4.0.5","_rev":"1-c430ac70576a3cd6d665f1847729f982","_shasum":"13945ffb1ad4faf193b4466725c035efaae3770a","author":{"name":"Eric Miller","email":"emiller42@gmail.com"},"bugs":{"url":"https://github.com/emiller42/splunk-statsd-backend/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"13945ffb1ad4faf193b4466725c035efaae3770a","tarball":"https://registry.npmjs.org/splunk-statsd-backend/-/splunk-statsd-backend-0.1.0.tgz"},"maintainers":[{"name":"emiller42","email":"emiller42@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-25T04:06:01.664Z","created":"2017-01-25T04:06:01.664Z","0.1.0":"2017-01-25T04:06:01.664Z"}}}