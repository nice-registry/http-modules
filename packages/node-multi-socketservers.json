{"name":"node-multi-socketservers","version":"0.2.4","description":"A multi http & socket servers manager, based on node-multi-webserver","main":"lib/main.js","scripts":{"start":"node lib/main.js","test":"gulp"},"repository":"https://github.com/Psychopoulet/node-multi-socketservers","keywords":["http","https","multi","many","ssl","port","server","web","socket"],"license":"ISC","dependencies":{"node-multi-webserver":"^1.2.4","socket.io":"^1.4.8"},"devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^2.1.0","gulp-exclude-gitignore":"^1.0.0","gulp-mocha":"^2.2.0","gulp-plumber":"^1.1.0"},"homepage":"https://github.com/Psychopoulet/node-multi-socketservers#readme","engines":{"node":">=4.0.0"},"gitHead":"f49e8e3f901ef2873cfea850bcaef5aa98d8277c","versions":[{"number":"0.1.0","date":"2016-08-05T12:39:16.112Z"},{"number":"0.2.0","date":"2016-08-08T09:41:37.468Z"},{"number":"0.2.1","date":"2016-08-08T09:59:02.909Z"},{"number":"0.2.2","date":"2016-08-08T16:08:44.174Z"},{"number":"0.2.3","date":"2016-10-03T10:32:16.783Z"},{"number":"0.2.4","date":"2016-10-03T13:30:57.179Z"}],"readme":"# node-multi-socketservers\r\nA multi http and socket servers manager, based on node-multi-webserver\r\n\r\n# Installation\r\n\r\n```bash\r\n$ npm install node-multi-socketservers\r\n```\r\n\r\n# Features\r\n\r\n  * run the same server with different configurations (ports, ssl, etc...)\r\n  * socket communication with all servers\r\n\r\n# Doc\r\n\r\n* see [node-multi-webservers](https://www.npmjs.com/package/node-multi-webserver) documentation for webservers management\r\n\r\n* ``` connection(function eventListener) : return Promise instance ``` eventListener((socket[ , server ]) => {})\r\n* ``` emit(string eventName[, mixed data]) : return Promise instance ```\r\n* ``` broadcast(SocketIO.Socket socket, http.Server server, string eventName, [, mixed data]) : return Promise instance ``` broadcast on all servers\r\n* ``` removeAllListeners(string|array eventNames) : return Promise instance ``` remove all listener of an event or an array of events for all the servers and sockets \r\n\r\n# Examples\r\n\r\n### with express\r\n\r\n```js\r\nconst http = require(\"http\"),\r\n      https = require(\"https\"),\r\n      express = require(\"express\"),\r\n      multiservers = require(\"node-multi-socketservers\");\r\n\r\nlet servers = new multiservers(),\r\n    app = express().get(\"/\", (req, res) => {\r\n  res.set(\"Content-Type\", contentType).send(message);\r\n});\r\n\r\nreturn servers.addServer({\r\n  port: 80,\r\n  name: \"http server\"\r\n}).then(() => {\r\n\r\n  return servers.addServer({\r\n    port: 443,\r\n    name: \"secure server\",\r\n    ssl: true,\r\n    key: \"YOUR_PRIVATE_KEY\",\r\n    cert: \"YOUR_CERTIFICATE\"\r\n  });\r\n\r\n}).then(() => {\r\n\r\n  return servers.addServer({\r\n    port: 1337,\r\n    name: \"admin server\",\r\n    key: \"YOUR_PRIVATE_KEY\",\r\n    cert: \"YOUR_CERTIFICATE\"\r\n  });\r\n\r\n}).then(() => {\r\n\r\n  return servers.setTimeout(2 * 1000);\r\n\r\n}).then(() => {\r\n\r\n  return servers.listen(app);\r\n\r\n}).then(() => {\r\n\r\n  return servers.connection((socket, server) => {\r\n\r\n    servers.broadcast(socket, server, \"newconnection\");\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      servers.broadcast(socket, server, \"disconnection\");\r\n    });\r\n\r\n  });\r\n\r\n}).catch((err) => {\r\n\r\n  console.log(err);\r\n\r\n  servers.release().catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n});\r\n```\r\n### native\r\n\r\n```js\r\nconst http = require(\"http\"),\r\n      https = require(\"https\"),\r\n      multiservers = require(\"node-multi-socketservers\");\r\n\r\nlet servers = new multiservers();\r\n\r\nreturn servers.addServer({\r\n  port: 80,\r\n  name: \"http server\"\r\n}).then(() => {\r\n\r\n  return servers.addServer({\r\n    port: 443,\r\n    name: \"secure server\",\r\n    ssl: true,\r\n    key: \"YOUR_PRIVATE_KEY\",\r\n    cert: \"YOUR_CERTIFICATE\"\r\n  });\r\n\r\n}).then(() => {\r\n\r\n  return servers.addServer({\r\n    port: 1337,\r\n    name: \"admin server\",\r\n    key: \"YOUR_PRIVATE_KEY\",\r\n    cert: \"YOUR_CERTIFICATE\"\r\n  });\r\n\r\n}).then(() => {\r\n\r\n  return servers.setTimeout(2 * 1000);\r\n\r\n}).then(() => {\r\n\r\n  return servers.listen((req, res) => {\r\n\r\n    res.writeHead(200, {\"Content-Type\": contentType});\r\n    res.end(\"hello world, from http:80, https:443 or https:1337\");\r\n\r\n  });\r\n\r\n}).then(() => {\r\n\r\n  return servers.connection((socket, server) => {\r\n\r\n    servers.broadcast(socket, server, \"newconnection\");\r\n\r\n    socket.on(\"disconnect\", () => {\r\n      servers.broadcast(socket, server, \"disconnection\");\r\n    });\r\n\r\n  });\r\n\r\n}).catch((err) => {\r\n\r\n  console.log(err);\r\n\r\n  servers.release().catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n});\r\n```\r\n\r\n\r\n# Tests\r\n\r\n```bash\r\n$ gulp\r\n```\r\n\r\n## License\r\n\r\n  [ISC](LICENSE)\r\n","created":"2016-08-05T12:39:16.112Z","modified":"2016-10-03T13:30:57.179Z","lastPublisher":{"name":"psychopoulet","email":"svidal1@free.fr"},"owners":[{"name":"psychopoulet","email":"svidal1@free.fr"}],"other":{"_attachments":{},"_from":".","_id":"node-multi-socketservers","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-multi-socketservers-0.2.4.tgz_1475501455430_0.7095838580280542"},"_npmUser":{"name":"psychopoulet","email":"svidal1@free.fr"},"_npmVersion":"3.10.3","_rev":"1-026ae71d5a71890520e656917c1f7063","_shasum":"eeea0bf40f853284a5906ba75a4965b3044b143e","author":{"name":"SÃ©bastien VIDAL"},"bugs":{"url":"https://github.com/Psychopoulet/node-multi-socketservers/issues"},"directories":{},"dist-tags":{"latest":"0.2.4"},"dist":{"shasum":"eeea0bf40f853284a5906ba75a4965b3044b143e","tarball":"http://registry.npmjs.org/node-multi-socketservers/-/node-multi-socketservers-0.2.4.tgz"},"maintainers":[{"name":"psychopoulet","email":"svidal1@free.fr"}],"readmeFilename":"README.md","time":{"modified":"2016-10-03T13:30:57.179Z","created":"2016-08-05T12:39:16.112Z","0.1.0":"2016-08-05T12:39:16.112Z","0.2.0":"2016-08-08T09:41:37.468Z","0.2.1":"2016-08-08T09:59:02.909Z","0.2.2":"2016-08-08T16:08:44.174Z","0.2.3":"2016-10-03T10:32:16.783Z","0.2.4":"2016-10-03T13:30:57.179Z"}}}