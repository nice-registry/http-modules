{"name":"cans-plugin-http","version":"0.0.6","description":"HTTP (axios) plugin for cans","main":"dist/cansPluginHttp.common.js","unpkg":"dist/cansPluginHttp.js","scripts":{"test":"mocha test/","dist":"bili --format umd --format cjs --browser --name \"cansPluginHttp\""},"dependencies":{"axios":"^0.15.3"},"devDependencies":{"bili":"^0.14.0","cans":"^0.0.10","mocha":"^3.2.0","power-assert":"^1.4.2"},"peerDependencies":{"cans":"^0.0.10"},"gitHead":"26869cb78b436438ea221d9e5f1e3e348a311b61","versions":[{"number":"0.0.1","date":"2017-03-28T08:41:05.359Z"},{"number":"0.0.2","date":"2017-03-28T09:00:07.061Z"},{"number":"0.0.3","date":"2017-03-30T10:26:39.851Z"},{"number":"0.0.4","date":"2017-03-31T05:42:58.548Z"},{"number":"0.0.5","date":"2017-03-31T11:27:47.992Z"},{"number":"0.0.6","date":"2017-04-01T08:19:41.989Z"}],"readme":"# cans-plugin-http\n\n[![npm](https://img.shields.io/npm/v/cans-plugin-http.svg)](https://www.npmjs.com/package/cans-plugin-http)\n[![circle](https://circleci.com/gh/djyde/cans-plugin-http.svg?style=shield)](https://circleci.com/gh/djyde/cans-plugin-http)\n\nHTTP (axios) plugin for cans\n\n## Install\n\n```bash\n$ yarn add cans-plugin-http\n```\n\n## Usage\n\n### httpPlugin\n\n#### Example\n\n```js\nimport cans from 'cans'\nimport { observable, action } from 'cans/mobx'\nimport { httpPlugin } from 'cans-plugin-http'\n\nconst app = cans()\n\napp.use(httpPlugin)\n\napp.model({\n  observable: app => {\n    return observable({\n      list: [],\n\n      fetchList: action.bound(async function () {\n        const list = (await app.http.get('/api/v1/lists')).data\n        // modify `list`\n      })\n    })\n  }\n})\n```\n\n#### options\n\n- axiosConfig: AxiosConfig. If provided, `app.http` will return `axios.create(axiosConfig)`\n\n### restPlugin\n\n`restPlugin` is useful when your backend exposed frontend a standard RESTful interface. `restPlugin` will help you generate RESTful cans model that return a observable, which contains RESTful action and loading status:\n\nMethod | Path            | action\n-------|-----------------|----------------\nGET    | /posts          | app.models.rest.posts.index\nGET    | /posts/:id      | app.models.rest.posts.show\nPOST   | /posts          | app.models.rest.posts.create\nPUT    | /posts/:id      | app.models.rest.posts.update\nDELETE | /posts/:id      | app.models.rest.posts.delete\n\n*(Inspired by [Egg](https://eggjs.org/zh-cn/basics/router.html))*\n\n#### Example\n\n```js\nimport cans from 'cans'\nimport { observable, action } from 'cans/mobx'\nimport { restPlugin } from 'cans-plugin-http'\n\nconst app = cans()\n\nconst URL = 'http://jsonplaceholder.typicode.com'\n\napp.use(restPlugin, { \n  resources: [\n    { name: 'posts', url: URL }\n  ]\n})\n\nconst PostList = ({ posts }) => (\n  <div>\n    {posts.map(post => (\n      <h1>{post.title}</h1>\n      <p>{post.body}</p>\n    ))}\n  </div>\n)\n\nconst PostApp = inject(({ models }) => (\n  <div>\n    <button disable={models.rest.posts.loading.index} onClick={models.rest.posts.index}>Fetch</button>\n    <PostList posts={models.rest.posts.data.index} />\n  </div>\n))\n```\n\n#### options\n\n- resources\n\n  - name: resource name\n  - url: endpoint URL\n  - total: (AxiosResponse) => string | number - Compute total count from response\n  - defaultData: { index: any, show: any } - Data fetched from `rest[name].index` will be set in `rest[name].data.index`. `show` is the same. `index` is `[]` by default. `show` is `{}` by default.\n\n#### What in `app.models.rest[name]`\n\nrestPlugin create observables for every resource:\n\n```ts\nobservable({\n  // data fetched from RESTful interface\n  data: {\n    index: defaultData.index || [],\n    show: defaultData.show || {}\n  },\n  // loading status\n  loading: {\n    index: boolean,\n    show: boolean,\n    create: boolean,\n    update: boolean,\n    delete: boolean\n  },\n\n  // action\n  async index(),\n  async show(id),\n  async create(data),\n  async update(id, data),\n  async delete(id)\n})\n```\n\n## License\n\nMIT License\n","created":"2017-03-28T08:41:05.359Z","modified":"2017-04-01T08:19:41.989Z","lastPublisher":{"name":"djyde","email":"randypriv@gmail.com"},"owners":[{"name":"djyde","email":"randypriv@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"cans-plugin-http","_nodeVersion":"6.9.5","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/cans-plugin-http-0.0.6.tgz_1491034780257_0.928738730493933"},"_npmUser":{"name":"djyde","email":"randypriv@gmail.com"},"_npmVersion":"3.10.10","_rev":"6-9adb4e77617a383b6cb93ebad6c73a60","_shasum":"fb49812a78781d7f3731409cfcdde63ff6bdfe38","directories":{},"dist-tags":{"latest":"0.0.6"},"dist":{"shasum":"fb49812a78781d7f3731409cfcdde63ff6bdfe38","tarball":"https://registry.npmjs.org/cans-plugin-http/-/cans-plugin-http-0.0.6.tgz"},"maintainers":[{"name":"djyde","email":"randypriv@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-01T08:19:41.989Z","created":"2017-03-28T08:41:05.359Z","0.0.1":"2017-03-28T08:41:05.359Z","0.0.2":"2017-03-28T09:00:07.061Z","0.0.3":"2017-03-30T10:26:39.851Z","0.0.4":"2017-03-31T05:42:58.548Z","0.0.5":"2017-03-31T11:27:47.992Z","0.0.6":"2017-04-01T08:19:41.989Z"}}}