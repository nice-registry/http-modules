{"name":"quereaze","version":"2.0.0","description":"Easily build IO UI's that utilize Undo, History, and Abort Http Request Logic","keywords":["querying","IO","form","control","history","undo","rxjs","rx"],"license":"ISC","main":"./dist/main.js","scripts":{"test":"karma start","test:single":"karma start --single-run","check-coverage":"istanbul check-coverage --statements 85 --branches 78 --functions 80 --lines 85","report-coverage":"cat ./coverage/reports/lcov.info | codecov","start":"webpack-dev-server","build":"rm -Rf dist && NODE_ENV=production webpack","commit":"git-cz","semantic-release":"semantic-release pre && npm publish && semantic-release post"},"dependencies":{"rxjs":"^5.0.0-beta.10"},"devDependencies":{"babel-core":"^6.8.0","babel-loader":"^6.2.4","babel-preset-es2015":"^6.6.0","babel-preset-stage-2":"^6.5.0","chai":"^3.5.0","codecov.io":"^0.1.6","commitizen":"^2.8.4","cz-conventional-changelog":"^1.1.6","expect":"^1.20.1","ghooks":"^1.3.2","istanbul":"^0.4.4","istanbul-instrumenter-loader":"^0.2.0","karma":"^1.1.2","karma-chai":"^0.1.0","karma-coverage":"^1.1.1","karma-istanbul-reporter":"0.0.1","karma-mocha":"^1.1.1","karma-phantomjs-launcher":"^1.0.1","karma-typescript-preprocessor2":"^1.2.1","karma-webpack":"^1.7.0","mocha":"^2.4.5","phantomjs-polyfill-object-assign":"0.0.2","phantomjs-prebuilt":"^2.1.10","raw-loader":"^0.5.1","semantic-release":"^4.3.5","sinon":"^1.17.5","ts-loader":"^0.8.2","typescript":"1.8.9","webpack":"^1.13.0","webpack-dev-server":"^1.14.1"},"homepage":"https://rphansen91.github.io/Quereaze/","repository":"https://github.com/rphansen91/Quereaze","config":{"ghooks":{"pre-commit":"npm run test:single && npm run check-coverage"},"commitizen":{"path":"node_modules/cz-conventional-changelog"}},"gitHead":"4d2e2b70d4c428758e6709d50ea675bfc362f519","versions":[{"number":"1.0.0","date":"2016-08-03T21:06:24.126Z"},{"number":"1.0.1","date":"2016-08-04T00:22:08.184Z"},{"number":"1.0.2","date":"2016-08-04T00:37:17.654Z"},{"number":"1.0.3","date":"2016-08-04T00:38:10.334Z"},{"number":"1.0.4","date":"2016-08-04T00:40:14.635Z"},{"number":"1.0.5","date":"2016-08-04T00:58:20.629Z"},{"number":"1.0.6","date":"2016-08-04T03:25:49.083Z"},{"number":"1.0.7","date":"2016-08-04T03:51:38.382Z"},{"number":"1.0.8","date":"2016-08-04T04:39:05.412Z"},{"number":"1.0.9","date":"2016-08-04T04:43:46.558Z"},{"number":"2.0.0","date":"2016-08-06T01:15:30.540Z"}],"readme":"#Quereaze\n\n[![Travis](https://img.shields.io/travis/rphansen91/Quereaze.svg?maxAge=2592000&style=flat-square)](https://travis-ci.org/rphansen91/Quereaze)\n[![Code Coverage](https://img.shields.io/codecov/c/github/rphansen91/Quereaze/master.svg?maxAge=2592000&style=flat-square)](https://codecov.io/github/rphansen91/Quereaze)\n[![version](https://img.shields.io/npm/v/quereaze.svg?style=flat-square)](https://www.npmjs.com/package/quereaze)\n[![downloads](https://img.shields.io/npm/dm/quereaze.svg?style=flat-square)](http://npm-stat.com/charts.html?package=quereaze&from=2016-08-01)\n[![ISC License](https://img.shields.io/npm/l/quereaze.svg?style=flat-square)](http://opensource.org/licenses/ISC)\n\n> Easily build **IO UI's** that utilize `Undo, History, and Abort Http Request Logic`.\n> Simple html syntax combined with declaritive typing allow the library to keep a\n> **memoized** history of parameters.\n\n[GITHUB](https://github.com/rphansen91/Quereaze) [DEMO](https://rphansen91.github.io/Quereaze/) \n-----------------------------------------------------------------------------------------------\n\nTable of contents\n=================\n\n  * [Table of contents](#table-of-contents)\n  * [Installation](#installation)\n  * [Usage](#usage)\n    * [Constructor](#constructor)\n        * [Root](#root)\n        * [Defaults](#defaults)\n        * [Template](#template)\n    * [QuereazeIO](#QuereazeIO)\n    * [QuereazeHttp](#QuereazeHttp)\n  * [Conclusion](#conclusion)\n  * [Dependencies](#dependencies)\n\nInstallation\n------------\n\n`npm install quereaze -S`\n\nUsage\n-----\n\n## Constructor - (QuereazeIO and QuereazeHttp)\n\n    * root: HTMLElement\n    * defaults: JS Object describing parameters\n    * template: Optional, can be supplied in constructor or inline with root\n\n    Example: \n\n    {\n        root: document.getElementById(\"root\"),\n        defaults: {\n            strKey: \"\",\n            numKey: 0,\n            boolKey:  \n        },\n        template: `\n            <input type=\"text\" quereaze=\"strKey\" />\n            <input type=\"number\" quereaze=\"numKey\" />\n            <input type=\"checkbox\" quereaze=\"boolKey\" />\n            <button quereaze-submit>Submit</button>\n        `\n    }\n\n1. String: (defaultValue = \"\")\n    `<input type=\"text\" quereaze=\"strKey\" />`\n\n2. Number: (defaultValue = 0)\n    `<input type=\"number\" quereaze=\"numKey\" />`\n\n3. Boolean: (defaultValue = false)\n    `<input type=\"checkbox\" quereaze=\"boolKey\" />`\n\n4. Submit On Click (Optional)\n    `<button quereaze-submit>Submit</button>`\n\nThe `quereaze-submit` element is optional.\nThis is because all the `quereaze` elements\nare wired with [rxjs.Observable](https://github.com/ReactiveX/rxjs) sequences.\nThese sequences emit the new query params \nwhenever the `enter` key is pressed.\n\nThe template will be parsed and matched against the defaults supplied to Quereaze\nThe defaults can contain additional params but an error will throw if additional \nquereaze params are found in the template of the values in the \ntemplate do not === the default values.\n\nOnce the constructor has been created it is sent of to one of the Quereaze \nsequences below to be wired up.\n\n## QuereazeIO - Form Only\n\nimport { QuereazeIO } from 'Quereaze';\n\nQuereazeIO({\n    ...Constructor\n})\n({\n    onSubmit: ({ data, quereaze }) => {\n        quereaze.save()\n        quereaze.history; //Array of all submitted params\n        data // Current \n    }\n})\n\nWith the simple declaritive syntax Quereaze is able to keep \nparams synced and alert the onSubmit handler. All of the \nDOM interaction is abstracted and the new params can be used\nto update the UI as needed.  \n\nThe `quereaze.history` Array also allows for a dead simple\nintegration of History or Undo actions.\n\n## QuereazeHttp - Form and HTTP \n\nimport { QuereazeHttp } from 'Quereaze';\n\nQuereazeHttp({\n    ...constructor\n})\n({\n    onSubmit: (params) => {\n        // Show Loader\n        return {\n            method: \"GET\"|\"POST\"|\"PUT\"|\"DELETE\",\n            url: \"\", // Enpoint, params available to construct\n            body: params // Make changes to params if needed\n        }\n    },\n\n    onSuccess: ({ data, quereaze }) => {\n        // Stop Loader\n        // Display response data\n    },\n\n    onError: (err) => console.log(err)\n})\n\nWith two additional handlers Quereaze is able to not only\nkeep form parameters in sync but also fire XHR responses\nto a specified endpoints.\n\nConclusion\n----------\n\nThe days of manually interacting with the DOM are long gone.\nBrowsers API's are constantly changing and deprecating\nand working with them alongside complex Business logic is a \nvery complicated task. Often leading to bugs and hours of \nfocus spent not on the end goal but on StackOverflow.\n\nWith Quereaze, all the focus now is on the **3 main** \ncomponents that make up a Robust IO Sttate Machine.\n\n1. User Experience, Style\n2. Where data lives, how it's accessed\n3. Displaying Data\n\nAll the state management, HTMLInput interaction is \nabstracted away and given back to the user in a\nchronological sequence of events which is much \neasier to reason with.\n\nDependencies\n------------\n\n- rxjs","created":"2016-08-03T21:06:24.126Z","modified":"2016-08-06T01:15:30.540Z","lastPublisher":{"name":"rphansen91","email":"rphansen91@gmail.com"},"owners":[{"name":"rphansen91","email":"rphansen91@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"quereaze","_nodeVersion":"4.4.7","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/quereaze-2.0.0.tgz_1470446128562_0.5477717511821538"},"_npmUser":{"name":"rphansen91","email":"rphansen91@gmail.com"},"_npmVersion":"2.15.9","_rev":"1-2192b4efdb882839512b245f49e89c83","_shasum":"28b2321c3af0765937d2db2958cd3ee75a3a2c53","author":{"name":"Ryan P Hansen"},"bugs":{"url":"https://github.com/rphansen91/Quereaze/issues"},"directories":{},"dist-tags":{"latest":"2.0.0"},"dist":{"shasum":"28b2321c3af0765937d2db2958cd3ee75a3a2c53","tarball":"http://registry.npmjs.org/quereaze/-/quereaze-2.0.0.tgz"},"maintainers":[{"name":"rphansen91","email":"rphansen91@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-06T01:15:30.540Z","created":"2016-08-03T21:06:24.126Z","1.0.0":"2016-08-03T21:06:24.126Z","1.0.1":"2016-08-04T00:22:08.184Z","1.0.2":"2016-08-04T00:37:17.654Z","1.0.3":"2016-08-04T00:38:10.334Z","1.0.4":"2016-08-04T00:40:14.635Z","1.0.5":"2016-08-04T00:58:20.629Z","1.0.6":"2016-08-04T03:25:49.083Z","1.0.7":"2016-08-04T03:51:38.382Z","1.0.8":"2016-08-04T04:39:05.412Z","1.0.9":"2016-08-04T04:43:46.558Z","2.0.0":"2016-08-06T01:15:30.540Z"}}}