{"name":"server-error-handler","version":"1.0.2","description":"Http application internal server error handler","main":"index.js","license":"MIT","dependencies":{"get-env":"^0.4.0"},"devDependencies":{"semistandard":"^7.0.4"},"scripts":{"test":"semistandard"},"keywords":["error","handler"],"homepage":"https://github.com/AlexeyGorokhov/server-error-handler","repository":"https://github.com/AlexeyGorokhov/server-error-handler","gitHead":"92d2b1279a0fe42dde1222c3013365bdebdcbb3d","versions":[{"number":"1.0.0","date":"2016-01-10T08:23:28.055Z"},{"number":"1.0.1","date":"2016-02-17T17:24:27.906Z"},{"number":"1.0.2","date":"2016-02-17T17:36:09.326Z"}],"readme":"# server-error-handler\n\n[![js-semistandard-style](https://img.shields.io/badge/code%20style-semistandard-brightgreen.svg?style=flat-square)](https://github.com/Flet/semistandard)\n\nHTTP application internal server error handler.\n\nIt can be used with any HTTP application framework (Express etc) whose `response` object provides `status(httpStatusCode)` and `send(payload)` methods to send an `500 Internal Server Error` response with the following extensions:\n\n* In a `production` environment, it sends empty payload but asynchronously executes functions passed within the options object.\n\n* In a `non-production` environment, it sends payload that contains information about the error occurred.\n\n## Creating a singleton instance per application\n\n```js\nconst app = require('express')();\nconst serverErrorHandlerOptions = {\n  logger: function (err) { /* Log the error */ },\n  notificator: function (err) { /* Send a message to an admin */ }\n};\nconst serverErrorHandler = require('server-error-handler')(serverErrorHandlerOptions);\n```\n\n## Usage\n\n```js\n...\ncallSomeAsyncFunction(data, function (err, someReturnedValue) {\n  if (err) {\n    serverErrorHandler.handle(err);\n    return;\n  }\n  /* Normal path of execution */\n});\n...\n```\n\n## API\n\n### Constructor\n\n```js\nconst serverErrorHandler = require('server-error-handler')(options)\n\n// or you can explicitly construct it\n\nconst serverErrorHandler = new require('server-error-handler')(options)\n```\n\n#### options\n\nType: `Object`\n\nOptional. Configuration object that may have the following properties:\n\nProperty Name | Type | Description\n------------- | ---- | -----------\nlogger | {Function} | Optional. A function that will asynchronously be called to log the error. The function will be passed the `Error` object.\nnotificator | {Function} | Optional. A function that will be asynchronously be called to send a notice to an administrator about the error. The function will be passed the `Error` object.\n\n### Methods\n\n#### handle(err, res)\n\n##### err\n\nType: `Object<Error>`\n\nAn Error caught somewhere in your code.\n\n##### res\n\nType: `Object`\n\nThe HTTP response object provided by Node.js or a framework.\n","created":"2016-01-10T08:23:28.055Z","modified":"2016-02-17T17:36:09.326Z","lastPublisher":{"name":"agorokhov","email":"alexey.gorokhov@icloud.com"},"owners":[{"name":"agorokhov","email":"alexey.gorokhov@icloud.com"}],"other":{"_attachments":{},"_from":".","_id":"server-error-handler","_nodeVersion":"4.2.0","_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/server-error-handler-1.0.2.tgz_1455730565481_0.6685812196228653"},"_npmUser":{"name":"agorokhov","email":"alexey.gorokhov@icloud.com"},"_npmVersion":"3.7.2","_rev":"1-85136cdf717b2517fd806823177e1cb3","_shasum":"938e0c53a11769a9c57b80dfd7d0149221eb5eea","author":{"name":"Alexey Gorokhov","email":"alexey.gorokhov@icloud.com"},"bugs":{"url":"https://github.com/AlexeyGorokhov/server-error-handler/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"938e0c53a11769a9c57b80dfd7d0149221eb5eea","tarball":"http://registry.npmjs.org/server-error-handler/-/server-error-handler-1.0.2.tgz"},"maintainers":[{"name":"agorokhov","email":"alexey.gorokhov@icloud.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-17T17:36:09.326Z","created":"2016-01-10T08:23:28.055Z","1.0.0":"2016-01-10T08:23:28.055Z","1.0.1":"2016-02-17T17:24:27.906Z","1.0.2":"2016-02-17T17:36:09.326Z"}}}