{"name":"imperfect-rest-comparison","description":"Tools to compare the speed of running REST over HTTP as usual versus over a WebSocket.","keywords":["speed","comparison","rest","websocket"],"version":"0.0.1","homepage":"https://github.com/exratione/imperfect-nn-comparison","engines":{"node":">= 0.10"},"dependencies":{"express":"3.x.x","socket.io":"0.9.x"},"main":"./index","repository":"https://github.com/exratione/imperfect-rest-comparison","licenses":[{"type":"MIT","url":"https://github.com/exratione/imperfect-rest-comparison/raw/master/LICENSE"}],"readme":"Imperfect REST Versus Socket.IO Speed Comparison\n================================================\n\nThis package contains a small server and Angular application to non-rigorously\nmeasure speed differences between REST-like calls to a server made over (a)\nplain old AJAX HTTP requests versus (b) a WebSocket connection.\n\nTo fire up the server.\n\n    npm install imperfect-rest-comparison\n    node imperfect-rest-comparison\n\nThen launch a browser and open up:\n\n    http://localhost:10080\n\nYou'll find a page with options to run various tests against the server.\n\nUnscientific Conclusions\n------------------------\n\nIf you've managed to tweak your browser to turn off the Connection: Keep-Alive\nheader in AJAX requests, then HTTP is going to be very slow in comparison to\nSocket.IO. This is pretty easy to do in Firefox if you are set up to use it as a\ndeveloper, less easy in Chrome.\n\nThe unscientific results for browsers with Keep-Alive on, using non-cached AJAX\nrequests and non-cached equivalent WebSocket exchanges:\n\n  * When running requests in series WebSockets are 5-10% faster than HTTP.\n  * When running requests in parallel WebSockets are ~40% faster than HTTP.\n\nThe story no doubt becomes different if you're making heavy use of client-side\ncaching. Good caches for AJAX HTTP come built in to frameworks like AngularJS\nand are essentially free in terms of development time. You'd have to implement\nsomething similar from scratch for your potential WebSocket transport layer. Not\nthat this would be an enormous task. Still, something to think about.\n","versions":[{"number":"0.0.1","date":"2013-07-21T20:38:55.331Z"}],"created":"2013-07-21T20:38:53.995Z","modified":"2013-07-21T20:38:55.331Z","lastPublisher":{"name":"exratione","email":"reason@exratione.com"},"owners":[{"name":"exratione","email":"reason@exratione.com"}],"other":{"_attachments":{},"_id":"imperfect-rest-comparison","_npmUser":{"name":"exratione","email":"reason@exratione.com"},"_npmVersion":"1.1.69","_rev":"1-851a4599574e4bd0640fabde643afafc","author":{"name":"Reason","email":"reason@exratione.com"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"4e292d51b0afc28730ffab01f55ce8d56abac4ce","tarball":"http://registry.npmjs.org/imperfect-rest-comparison/-/imperfect-rest-comparison-0.0.1.tgz"},"maintainers":[{"name":"exratione","email":"reason@exratione.com"}],"readmeFilename":"README.md","time":{"modified":"2013-07-21T20:38:55.331Z","created":"2013-07-21T20:38:53.995Z","0.0.1":"2013-07-21T20:38:55.331Z"}}}