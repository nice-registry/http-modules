{"name":"axios-cancel","version":"0.2.2","description":"Simplify cancellation of http requests when using the awesome axios library","main":"dist/index.js","scripts":{"build":"webpack -p","test":"jest --verbose","coverage":"jest --coverage","semantic-release":"semantic-release pre && npm publish && semantic-release post"},"keywords":["axios","http","cancel","promise"],"license":"MIT","repository":"https://github.com/thaerlabs/axios-cancel","devDependencies":{"axios":"0.15.2","axios-mock-adapter":"1.7.1","babel-loader":"^6.2.10","babel-plugin-transform-es2015-modules-umd":"^6.18.0","babel-preset-es2015":"6.18.0","jest":"16.0.2","semantic-release":"^6.3.2","webpack":"^1.14.0"},"jest":{"verbose":true},"gitHead":"2562f7102270569d3cb7fa66b5e3c97597f50dc2","homepage":"https://github.com/thaerlabs/axios-cancel#readme","versions":[{"number":"0.1.0","date":"2016-12-15T16:41:53.173Z"},{"number":"0.2.0","date":"2016-12-15T17:19:18.845Z"},{"number":"0.2.1","date":"2016-12-15T17:42:30.756Z"},{"number":"0.2.2","date":"2016-12-17T12:20:11.304Z"}],"readme":"# axios-cancel\n\n[![travis build](https://img.shields.io/travis/thaerlabs/axios-cancel/master.svg?style=flat-square)](https://travis-ci.org/thaerlabs/axios-cancel)\n\nSimplify cancellation of http requests when using the awesome [axios](https://github.com/mzabriskie/axios) library\n\n## Installation\n\nUsing npm:\n\n`npm install axios-cancel --save`\n\n## Getting started\n\n`axios-cancel` simplifies the interface of the [Cancel](https://github.com/mzabriskie/axios#cancellation) api introducted in axios v1.5, \nwhich is based on the [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises)\n\n```javascript\nimport axios from 'axios';\nimport axiosCancel from 'axios-cancel';\n\naxiosCancel(axios, {\n  debug: false // default\n});\n\n...\n\n// Single request cancellation\nconst requestId = 'my_sample_request';\nconst promise = axios.get(url, {\n  requestId: requestId\n})\n  .then((res) => {\n    console.log('resolved');\n  }).catch((thrown) => {\n    if (axios.isCancel(thrown)) {\n      console.log('request cancelled');\n    } else {\n      console.log('some other reason');\n    }\n  });\n\naxios.cancel(requestId);\n// aborts the HTTP request and logs `request cancelled`\n\n```\n\n## Examples\n\nMultiple subsequent requests with same `requestId`\n\n```javascript\n...\n\nconst requestId = 'my_sample_request';\nconst promise1 = axios.get(url, {\n  requestId: requestId\n})\n  .then((res) => {\n    console.log('resolved promise 1');\n  }).catch((thrown) => {\n    if (axios.isCancel(thrown)) {\n      console.log('request 1 cancelled');\n    } else {\n      console.log('some other reason');\n    }\n  });\n\n// another request with same `requestId`, before `promise1` resolution\nconst promise2 = axios.get(url, {\n  requestId: requestId\n})\n  .then((res) => {\n    console.log('resolved promise 2');\n  }).catch((thrown) => {\n    if (axios.isCancel(thrown)) {\n      console.log('request 2 cancelled');\n    } else {\n      console.log('some other reason');\n    }\n  });\n\n// aborts the first HTTP request, and cancels the first promise \n// logs `request 1 cancelled`\n// logs `resolved promise 2`\n```\n\nMultiple requests with different `requestId`, cancell all\n```javascript\n...\n\nconst requestId1 = 'my_sample_request_1';\nconst promise1 = axios.get(url, {\n  requestId: requestId1\n})\n  .then((res) => {\n    console.log('resolved promise 1');\n  }).catch((thrown) => {\n    if (axios.isCancel(thrown)) {\n      console.log('request 1 cancelled');\n    } else {\n      console.log('some other reason');\n    }\n  });\n\nconst requestId2 = 'my_sample_request_2';\nconst promise2 = axios.get(url, {\n  requestId: requestId2\n})\n  .then((res) => {\n    console.log('resolved promise 1');\n  }).catch((thrown) => {\n    if (axios.isCancel(thrown)) {\n      console.log('request 2 cancelled');\n    } else {\n      console.log('some other reason');\n    }\n  });\n\naxios.cancelAll();\n\n// aborts all HTTP request, and cancels all promises\n// logs `request 1 cancelled`\n// logs `request 2 cancelled`\n\n```\n\n## Methods\n\n*axiosCancel(instance: axios[, options])*\n\n*options*\n- debug _(enables logging)_\n\n*axios.cancel(requestId: string[, reason: string])*\n\n*axios.cancelAll([reason: string])*\n\n## License\n\nMIT\n","created":"2016-12-15T16:41:53.173Z","modified":"2016-12-17T12:20:11.304Z","lastPublisher":{"name":"thaerlabs","email":"abbas.t249@gmail.com"},"owners":[{"name":"thaerlabs","email":"abbas.t249@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"axios-cancel","_nodeVersion":"7.2.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/axios-cancel-0.2.2.tgz_1481977209508_0.6394684298429638"},"_npmUser":{"name":"thaerlabs","email":"abbas.t249@gmail.com"},"_npmVersion":"3.10.10","_rev":"4-178d8fbb330a4db1f52f77033bed2792","_shasum":"a587368d2f34c4baa8dcf2538d8264db13b643cf","author":{"name":"Thaer Abbas","email":"abbas.t249@gmail.com"},"bugs":{"url":"https://github.com/thaerlabs/axios-cancel/issues"},"directories":{},"dist-tags":{"latest":"0.2.2"},"dist":{"shasum":"a587368d2f34c4baa8dcf2538d8264db13b643cf","tarball":"http://registry.npmjs.org/axios-cancel/-/axios-cancel-0.2.2.tgz"},"maintainers":[{"name":"thaerlabs","email":"abbas.t249@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-12-17T12:20:11.304Z","created":"2016-12-15T16:41:53.173Z","0.1.0":"2016-12-15T16:41:53.173Z","0.2.0":"2016-12-15T17:19:18.845Z","0.2.1":"2016-12-15T17:42:30.756Z","0.2.2":"2016-12-17T12:20:11.304Z"}}}