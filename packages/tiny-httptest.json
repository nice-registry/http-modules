{"name":"tiny-httptest","version":"1.0.8","description":"Lightweight HTTP compliant test framework","main":"index.js","scripts":{"test":"grunt test"},"repository":"https://github.com/avoidwork/tiny-httptest","keywords":["http","https","test","framework","compliant","cors","easy","testing","tests"],"license":"BSD-3-Clause","engineStrict":true,"engines":{"node":">=6.0.0"},"homepage":"https://github.com/avoidwork/tiny-httptest","devDependencies":{"grunt":"~1.0.1","grunt-cli":"~1.2.0","grunt-contrib-watch":"~1.0.0","grunt-eslint":"~19.0.0","grunt-mocha-test":"~0.13.2","mocha":"~3.2.0","tenso":"~4.5.11"},"gitHead":"1cd6558ff62ace21ab75100ec34a204fc960f8f4","_resolved":"file:tiny-httptest","versions":[{"number":"1.0.0","date":"2017-02-19T17:04:45.440Z"},{"number":"1.0.1","date":"2017-02-19T17:43:19.701Z"},{"number":"1.0.2","date":"2017-02-19T19:07:43.788Z"},{"number":"1.0.3","date":"2017-02-20T12:10:49.895Z"},{"number":"1.0.4","date":"2017-02-20T14:08:58.503Z"},{"number":"1.0.5","date":"2017-02-20T15:18:17.258Z"},{"number":"1.0.6","date":"2017-03-04T17:25:20.332Z"},{"number":"1.0.7","date":"2017-03-22T11:17:44.041Z"},{"number":"1.0.8","date":"2017-05-27T22:40:32.294Z"}],"readme":"# tiny-httptest\r\n### Lightweight HTTP compliant test framework\r\ntiny-httptest makes it easy to validate CORS is working, capture cookies & HTTP response headers (including etags) and reuse them for sequential tests.\r\n\r\n[![build status](https://secure.travis-ci.org/avoidwork/tiny-httptest.svg)](http://travis-ci.org/avoidwork/tiny-httptest)\r\n\r\n## Example\r\n```javascript\r\nconst tinyhttptest = require(\"tiny-httptest\");\r\n\r\n// Simulating CORS request to localhost:8000\r\ntinyhttptest({url:\"http://localhost:8000\", method: \"OPTIONS\"}).cors().end().then(() => {\r\n\treturn tinyhttptest({url:\"http://localhost:8000\"}).cors().expectJson().end();\r\n}).then(() => {\r\n\tconsole.log(\"CORS is working\");\r\n}, () => {\r\n\tconsole.error(\"CORS is not working\");\r\n});\r\n```\r\n## Configuration\r\n\r\n#### body\r\n_*(Mixed)*_ HTTP request body, defaults to `null` but can be `String`, `Object` or `Array`.\r\n\r\n#### headers\r\n_*(Object)*_ HTTP request headers, defaults to `{}`.\r\n\r\n#### method\r\n_*(String)*_ HTTP request method, defaults to `GET`.\r\n\r\n#### timeout\r\n_*(Number)*_ HTTP request timeout as milliseconds, defaults to `30000`.\r\n\r\n#### url\r\n_*(String)*_ URL & port to request, defaults to `http://localhost`.\r\n\r\n## API\r\n**captureHeader(name)**\r\n_TinyHTTPTest_\r\n\r\nCaptures a header to be reused by another instance of `TinyHTTPTest`.\r\n\r\n**cookies([state = true])**\r\n_TinyHTTPTest_\r\n\r\nEnables or disables cookie capture & reuse.\r\n\r\n**cors([hostname])**\r\n_TinyHTTPTest_\r\n\r\nSets request & response header expectations, defaults to request `hostname` if optional argument is not supplied.\r\n\r\n**end()**\r\n_Promise_\r\n\r\nEnds the request, `Promise` resolves with `TinyHTTPTest` instance or rejects with `Error`.\r\n\r\n**etags([state = true])**\r\n_TinyHTTPTest_\r\n\r\nEnables or disables ETag capture & reuse.\r\n\r\n**expectBody([value = /\\w+/])**\r\n_TinyHTTPTest_\r\n\r\nSets an expectation of the response body, default value is a `RegExp` which tests if there is a response body.\r\n\r\n**expectHeader(name, [value = /\\w+/])**\r\n_TinyHTTPTest_\r\n\r\nSets an expectation of a response header, default value is a `RegExp` which tests if there is a header value.\r\n\r\n**expectJson()**\r\n_TinyHTTPTest_\r\n\r\nSets an expectation of response header `content-type`, supports correct and common incorrect header values.\r\n\r\n**expectStatus([value = 200])**\r\n_TinyHTTPTest_\r\n\r\nSets an expectation of response status code, default value is `200`.\r\n\r\n**json([arg])**\r\n_TinyHTTPTest_\r\n\r\nSets request & response to `JSON`, sends `arg` if not `undefined`.\r\n\r\n**process**\r\n_TinyHTTPTest_\r\n\r\nProcesses the response of the `TinyHTTPTest` instance.\r\n\r\n**reuseHeader(name)**\r\n_TinyHTTPTest_\r\n\r\nReuses a captured header from another instance of `TinyHTTPTest`.\r\n\r\n**send(arg)**\r\n_TinyHTTPTest_\r\n\r\nDecorates `arg` as request body & sets request headers.\r\n \r\n **test(arg, value, err)**\r\n _TinyHTTPTest_\r\n \r\n Validates that `arg` is equal to or passes `value` test, throws `Error` with `err` as message if invalid.\r\n\r\n## License\r\nCopyright (c) 2017 Jason Mulligan  \r\nLicensed under the BSD-3 license.\r\n","created":"2017-02-19T17:04:45.440Z","modified":"2017-05-27T22:40:32.294Z","lastPublisher":{"name":"avoidwork","email":"jason.mulligan@avoidwork.com"},"owners":[{"name":"avoidwork","email":"jason.mulligan@avoidwork.com"}],"other":{"_attachments":{},"_from":"tiny-httptest","_id":"tiny-httptest","_nodeVersion":"7.9.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/tiny-httptest-1.0.8.tgz_1495924832155_0.06173612596467137"},"_npmUser":{"name":"avoidwork","email":"jason.mulligan@avoidwork.com"},"_npmVersion":"4.2.0","_rev":"9-d357de43455f4a25545a699dd93fc51b","_shasum":"80c8301b66b6ce73b3e61e690044dfcbf4a01942","author":{"name":"Jason Mulligan","email":"jason.mulligan@avoidwork.com"},"bugs":{"url":"https://github.com/avoidwork/tiny-httptest/issues"},"directories":{},"dist-tags":{"latest":"1.0.8"},"dist":{"shasum":"80c8301b66b6ce73b3e61e690044dfcbf4a01942","tarball":"https://registry.npmjs.org/tiny-httptest/-/tiny-httptest-1.0.8.tgz"},"maintainers":[{"name":"avoidwork","email":"jason.mulligan@avoidwork.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-27T22:40:32.294Z","created":"2017-02-19T17:04:45.440Z","1.0.0":"2017-02-19T17:04:45.440Z","1.0.1":"2017-02-19T17:43:19.701Z","1.0.2":"2017-02-19T19:07:43.788Z","1.0.3":"2017-02-20T12:10:49.895Z","1.0.4":"2017-02-20T14:08:58.503Z","1.0.5":"2017-02-20T15:18:17.258Z","1.0.6":"2017-03-04T17:25:20.332Z","1.0.7":"2017-03-22T11:17:44.041Z","1.0.8":"2017-05-27T22:40:32.294Z"}}}