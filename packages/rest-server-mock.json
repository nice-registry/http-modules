{"name":"rest-server-mock","version":"0.9.2","description":"A simple server. It serves mock JSON responses to the incoming HTTP requests.","main":"index","scripts":{"test":"mocha -R spec tests/*.js"},"repository":"https://github.com/pmatzavin/restServerMock","keywords":["rest-server-mock","rest","server","HTTP","JSON","mock"],"license":"MIT","dependencies":{"express":"*","bluebird":"*"},"devDependencies":{"mocha":"*","should":"*","supertest":"*"},"bin":{"rest-server-mock":"index.js"},"gitHead":"062abfc453dad567238fb058659fdc2e58d0ea40","homepage":"https://github.com/pmatzavin/restServerMock","versions":[{"number":"0.9.0","date":"2015-01-07T14:15:37.399Z"},{"number":"0.9.1","date":"2015-01-07T14:38:11.264Z"},{"number":"0.9.2","date":"2015-01-07T14:50:03.323Z"}],"readme":"# RestServerMock\n\n  A Simple REST HTTP server that serves the configured JSON responses\n  [rest-server-mock](https://github.com/pmatzavin/restServerMock.git)\n\n  Currently it servers JSON responses with status code 200.\n  Future versions will support more options including : status codes, headers, encodings, etc.\n\n## About\n\n  The motivation for implementing this module was to provide a quick and simple server to be used\n  when developing a rest client.\n  In that cases where the rest server has not been implemented yet,\n  I wanted to have an HTTP server responding with some mock JSON responses,\n  without relying on a more complex mocking framework.\n\n## Installation\n\n```\nnpm install rest-server-mock\n```\n\n## Configuration\n\n  The server's port and routes are configured in a JSON file:\n\n  Example file:\n  ```\n  {\n\n    \"port\": 3001\n\n    , \"routes\": [\n\n      {\n        \"path\": \"/a\"\n        , \"type\": \"GET\"\n        , \"response\": {\n          \"field_1\": \"f1 get a ok\"\n          , \"field_2\": \"f2 get a ok\"\n        }\n      }\n\n      , {\n        \"path\": \"/a\"\n        , \"type\": \"POST\"\n        , \"response\": {\n          \"field_1\": \"f1 post a ok\"\n          , \"field_2\": \"f2 post a ok\"\n        }\n      }\n\n      , {\n        \"path\": \"/a\"\n        , \"type\": \"PUT\"\n        , \"response\": {\n          \"field_1\": \"f1 put a ok\"\n          , \"field_2\": \"f2 put a ok\"\n        }\n      }\n\n      , {\n        \"path\": \"/a\"\n        , \"type\": \"DELETE\"\n        , \"response\": {\n          \"field_1\": \"f1 delete a ok\"\n          , \"field_2\": \"f2 delete a ok\"\n        }\n      }\n\n    ]\n\n  }\n  ```\n## Usage\n\n### As a commandline tool\n\n```\nrest-server-mock path_to_configuration_file\n```\n\n### As a module\n\n```\n// Include the module.\nvar restServerMock = require('rest-server-mock')\n// Start the server. Returns a promise.\nrestServerMock('path_to_configuration_file/filename.json')\n.then(function (server) {\n    console.log('RestServerMock is listening on port: ', server.address().port, ' ...')\n    console.log('Configuration file: ', process.argv[2])\n}\n, function (err) {\n    console.log(err)\n})\n// Note that the restServerMock method returns a promise.\n```\n\n## Running the tests\n\n```\nnpm test\n```\n","created":"2015-01-07T14:15:37.399Z","modified":"2015-01-07T14:50:03.323Z","lastPublisher":{"name":"pmatzavin","email":"matzavin.panos@gmail.com"},"owners":[{"name":"pmatzavin","email":"matzavin.panos@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"rest-server-mock","_nodeVersion":"0.10.32","_npmUser":{"name":"pmatzavin","email":"matzavin.panos@gmail.com"},"_npmVersion":"2.1.17","_rev":"1-9bb828c1afec237a23d697f631cda5f1","_shasum":"040aa3125b894263aa7b409f4fb89f051d9857eb","author":{"name":"Panos Matzavinos"},"bugs":{"url":"https://github.com/pmatzavin/restServerMock/issues"},"directories":{},"dist-tags":{"latest":"0.9.2"},"dist":{"shasum":"040aa3125b894263aa7b409f4fb89f051d9857eb","tarball":"http://registry.npmjs.org/rest-server-mock/-/rest-server-mock-0.9.2.tgz"},"maintainers":[{"name":"pmatzavin","email":"matzavin.panos@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-01-07T14:50:03.323Z","created":"2015-01-07T14:15:37.399Z","0.9.0":"2015-01-07T14:15:37.399Z","0.9.1":"2015-01-07T14:38:11.264Z","0.9.2":"2015-01-07T14:50:03.323Z"}}}