{"name":"http-session-store","version":"0.3.1","description":"HTTP session store","main":"index.js","scripts":{"test":"mocha"},"engines":{"node":">=4.4.2"},"repository":"https://github.com/markusfuerer/http-session-store","license":"MIT","dependencies":{"bluebird":"^3.5.0","redis":"^2.7.1"},"devDependencies":{"mocha":"^3.2.0"},"gitHead":"9813c57a4f7e9427d7948d9364642d204a346b91","homepage":"https://github.com/markusfuerer/http-session-store#readme","versions":[{"number":"0.0.1","date":"2017-05-09T16:13:54.411Z"},{"number":"0.0.2","date":"2017-05-10T11:45:15.112Z"},{"number":"0.0.3","date":"2017-05-10T11:55:12.776Z"},{"number":"0.0.4","date":"2017-05-10T12:17:01.099Z"},{"number":"0.0.5","date":"2017-05-10T12:33:20.510Z"},{"number":"0.0.6","date":"2017-05-10T12:41:24.597Z"},{"number":"0.1.0","date":"2017-05-15T15:36:33.664Z"},{"number":"0.2.0","date":"2017-05-15T18:15:11.810Z"},{"number":"0.3.0","date":"2017-05-16T07:17:00.515Z"},{"number":"0.3.1","date":"2017-05-25T07:39:42.012Z"}],"readme":"# HTTP Session Store\n\nSimple package to use a Redis database a as session store for HTTP sessions.\n\nFor every session we store two key-value pairs `(sid,uid)` and `(uid,sid)`. Here `sid` is supposed to be a \"cryptographically secure\" session identifier, whereas `uid` denotes the user identifier of the session owner.\n\nUsing the method `create(<sid>,<uid>)` the corresponding key-value pairs are stored in the database. The first entry of the key-value pair `(sid,uid)` has a timeout set to `idleTime` seconds, such that the entry is automatically deleted after this timeout. The second entry `(uid,sid)` has a timeout set to `maxTime` seconds.\nThis setting is motivated by the idead that the timeout of the first key-value pair is reseted with every check of the session identifier `sid`, whereas the timeout of the second key-value pair is never reseted, denoting the absolut length of session. In order for the method `check(<sid>)` to return `true` (and to reset the session idle timer), both entries have to exist.\n\n\nIn the following code snippet we first create a pair of entries for session identifier `123` and user identifier `abc`, then check if the session is valid (and reset the idleTime), and finally get the user id associated with session identifier `123`.\n\n```js\n    const session = require('http-session-store')();\n\n    session.create('123', 'abc');\n\n    session.check('123').then(userId => {\n      console.log(userId); // output abc\n    });\n\n    session.drop('123');\n```\n\n## Installation\n\n```bash\n$ npm i http-session-store\n```\n\n## Options\n\n**const session = require('http-session-store')([options]);**\n\n| Property | Description                                                                           | Default     |\n|----------|---------------------------------------------------------------------------------------|-------------|\n| host     | Define host where redis database is running.                                          | \"localhost\" |   \n| port     | Set port where redis databse is listening.                                            | 6379        | \n| password | If set, client will run Redis auth command on connect.                                |             | \n| idleTime | If there is no refresh call (method check), the session will be terminated. [seconds] | 360         |\n| maxTime  | This is the maximum lifetime of a session. [seconds]                                  | 3600        |\n\n\n## Tests\nTo run the test suite, first install the dependencies, then run `npm test`:\n\n```bash\n$ npm i\n$ npm test\n```","created":"2017-05-09T16:13:54.411Z","modified":"2017-05-25T07:39:42.012Z","lastPublisher":{"name":"markusfuerer","email":"markus.fuerer@gmx.net"},"owners":[{"name":"markusfuerer","email":"markus.fuerer@gmx.net"},{"name":"pascha","email":"schaller@gmx.ch"}],"other":{"_attachments":{},"_from":".","_id":"http-session-store","_nodeVersion":"7.7.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-session-store-0.3.1.tgz_1495697981192_0.2917426461353898"},"_npmUser":{"name":"markusfuerer","email":"markus.fuerer@gmx.net"},"_npmVersion":"4.1.2","_rev":"11-5e22c371b9247baf843d4c9aa9c2b226","_shasum":"0720f94c915b4a1a57f3bd70835294e5a1156de0","author":{"name":"Markus FÃ¼rer"},"bugs":{"url":"https://github.com/markusfuerer/http-session-store/issues"},"directories":{},"dist-tags":{"latest":"0.3.1"},"dist":{"shasum":"0720f94c915b4a1a57f3bd70835294e5a1156de0","tarball":"https://registry.npmjs.org/http-session-store/-/http-session-store-0.3.1.tgz"},"maintainers":[{"name":"markusfuerer","email":"markus.fuerer@gmx.net"},{"name":"pascha","email":"schaller@gmx.ch"}],"readmeFilename":"README.md","time":{"modified":"2017-05-25T07:39:42.012Z","created":"2017-05-09T16:13:54.411Z","0.0.1":"2017-05-09T16:13:54.411Z","0.0.2":"2017-05-10T11:45:15.112Z","0.0.3":"2017-05-10T11:55:12.776Z","0.0.4":"2017-05-10T12:17:01.099Z","0.0.5":"2017-05-10T12:33:20.510Z","0.0.6":"2017-05-10T12:41:24.597Z","0.1.0":"2017-05-15T15:36:33.664Z","0.2.0":"2017-05-15T18:15:11.810Z","0.3.0":"2017-05-16T07:17:00.515Z","0.3.1":"2017-05-25T07:39:42.012Z"}}}