{"name":"mincer-simple-server","version":"1.0.2","description":"Compile mincer assets with HTTP requests","main":"index.js","license":"MIT","dependencies":{"coffee-script":"^1.9.3","connect":"^3.4.0","haml-coffee":"^1.14.1","mincer":"^1.2.5","mincer-haml-coffee":"0.0.1","mkdirp":"^0.5.1","yargs":"^3.12.0"},"devDependencies":{"jshint":"^2.8.0","node-inspector":"^0.10.2"},"gitHead":"ce479531c89a8b15effb8ec052bdf1b35d61241c","scripts":{},"versions":[{"number":"0.1.0","date":"2015-06-24T19:21:51.132Z"},{"number":"0.1.1","date":"2015-06-24T20:18:54.548Z"},{"number":"0.2.0","date":"2015-06-24T21:13:58.707Z"},{"number":"0.2.1","date":"2015-06-25T18:03:19.918Z"},{"number":"1.0.0","date":"2015-06-29T20:41:31.971Z"},{"number":"1.0.1","date":"2015-06-30T21:01:50.463Z"},{"number":"1.0.2","date":"2015-07-01T21:16:52.203Z"}],"readme":"# mincer-simple-server\n\nCompile your [mincer](https://github.com/nodeca/mincer) assets as fast as idiomatically possibleâ€”just a `curl localhost` away.\n\nmincer-simple-server supports out of the box:\n\n- Source Maps\n- CoffeeScript\n- Haml Coffee Templates\n- Persistent assets caching on the filesystem, through `Mincer.FileStore`\n\n## Installation\n\n```\n$ npm install mincer-simple-server\n```\n\n## Usage\n\n**Server**\n\n``` sh\n$ npm install\n$ node serve.js --root /Users/randall/Workspace/project/ --include lib/assets/javascripts vendor/assets/javascripts --build_dir build --enable-source-maps --files application.js.coffee\n```\n\nParameters:\n\n- `--root` (String): `--include` and `--build-dir` are calculated against this value. Required.\n- `--include` ([yargs.array](https://github.com/bcoe/yargs#arraykey)): Mincer load path directories. Required.\n- `--build-dir` (String): Assets/maps/mincer cache are all built here. Required.\n- `--enable-source-maps` (Boolean): Toggle source map generation on (at a performance hit). Optional, defaults to `false`.\n- `--port` (String): Port the server listens on. Optional, defaults to `3000`.\n- `--files` ([yargs.array](https://github.com/bcoe/yargs#arraykey)): Files in the Mincer load path to be processed. Required.\n\nThe first compile of an asset with a lot of `require` calls will take a long time (~20s on a 2014 MacBook Pro) because a cache will be built to `$build_dir/cache`.\n\n**Client**\n\nTo mince assets:\n\n```sh\n$ curl -X PUT localhost:3000\n```\n\nTo kill the server:\n\n```\n$ curl localhost:3000/exit\n```\n\n## Contributing :heart_eyes:\n\n1. [Fork it](https://help.github.com/articles/fork-a-repo)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Added some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new [Pull Request](https://help.github.com/articles/using-pull-requests)\n\n**Guidelines**\n\n1. Keep things simple\n  - The mincer API has support for a lot of features, including manifest files (to track asset hash changes) and built-in `connect` middleware...\n  - ...but in lieu of using the aforementioned methods (`Manifest.compile` and `Server.compile`) to build assets, we call `Environment.findAsset`. It's a lower level method that spits out an `Asset` object in only one line, and it helps keep us out of callback hell.\n2. Run `jshint` before you submit anything upstream\n","created":"2015-06-24T19:21:51.132Z","modified":"2015-07-01T21:16:52.203Z","lastPublisher":{"name":"polleverywhere","email":"geeks@polleverywhere.com"},"owners":[{"name":"polleverywhere","email":"geeks@polleverywhere.com"}],"other":{"_attachments":{},"_from":".","_id":"mincer-simple-server","_nodeVersion":"0.12.4","_npmUser":{"name":"polleverywhere","email":"geeks@polleverywhere.com"},"_npmVersion":"2.11.3","_rev":"1-4c2b7e9e2499800c5189706a6eddec30","_shasum":"91a381f9460726e60d21948b93890f271c3e3e30","author":{"name":"Poll Everywhere, Inc. and Randall Ma"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"91a381f9460726e60d21948b93890f271c3e3e30","tarball":"http://registry.npmjs.org/mincer-simple-server/-/mincer-simple-server-1.0.2.tgz"},"maintainers":[{"name":"polleverywhere","email":"geeks@polleverywhere.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-01T21:16:52.203Z","created":"2015-06-24T19:21:51.132Z","0.1.0":"2015-06-24T19:21:51.132Z","0.1.1":"2015-06-24T20:18:54.548Z","0.2.0":"2015-06-24T21:13:58.707Z","0.2.1":"2015-06-25T18:03:19.918Z","1.0.0":"2015-06-29T20:41:31.971Z","1.0.1":"2015-06-30T21:01:50.463Z","1.0.2":"2015-07-01T21:16:52.203Z"}}}