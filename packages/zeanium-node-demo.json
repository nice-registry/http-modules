{"name":"zeanium-node-demo","version":"0.1.2","description":"zeanium-node http server demo","main":"zn.local.debug","repository":"https://github.com/yangyxu/zeanium-node-demo","scripts":{"release":"nohup zn run config:zn.workspace.config.js &","debug":"zn run config:zn.workspace.config.js"},"keywords":["zeanium-node","http server","demo"],"license":"MIT","dependencies":{"zeanium-node":"^0.4.27"},"preferGlobal":"true","gitHead":"08584b967de98095c2f29395f529069aaeb47c75","homepage":"https://github.com/yangyxu/zeanium-node-demo#readme","versions":[{"number":"0.1.0","date":"2017-04-29T16:25:16.581Z"},{"number":"0.1.1","date":"2017-04-29T16:28:10.740Z"},{"number":"0.1.2","date":"2017-05-02T10:50:32.221Z"},{"number":"0.1.3","date":"2017-05-19T08:36:35.766Z"}],"readme":"#zeanium-node演示项目\r\n\r\n这次zeanium-node版本有了最大的突破, 大版本升级到0.5。主要表现在项目依赖分离和集成, 插件机制”随插即用”、”随拔即删”。\r\n## 插件化\r\n插件有本地化插件和远程仓库插件：\r\n- 本地化插件：下一个demo着重讲解\r\n- 远程插件：在zn.server.config.js中有添加以下行即可\r\n\r\n```javascript\r\nnode_modules: ['zn-plugin-admin']\r\n```\r\npackage.json 添加以下行：\r\n```javascript\r\n\"dependencies\": {\r\n  \"zeanium-node\": \"^0.5.4\",\r\n  \"zn-plugin-admin\": \"^0.1.3\"\r\n}\r\n```\r\n\r\n## Node.js安装\r\n后台和前端都基于Node.js, 所以不管是部署开始开发首选需要安装的是[Node.js](https://nodejs.org/zh-cn/) > v5.0.0, 必须是5.0.0及以上版本。不同的平台有不同的按照方式, 根据具体情况参考下面描述。\r\n\r\n### Window平台\r\nwindows版本按照比较简单, 直接去下载[链接](https://nodejs.org/zh-cn/)下载最新版本的node.js按照包, 一步一步按照直到结束。安装完成可以测试是否安装成功, 运行`node -v` || `npm -v` 如果有版本显示则说明按照成功, 可以进入下一步。\r\n\r\nTips: 为了更好的兼容性, 安装选项建议选用Linux环境。\r\n\r\n### Linux平台\r\n为了方便管理node.js版本, 推荐使用nvm来管理node.\r\n\r\n[Linux 通过 nvm 安装 Node](http://www.clarkhan.com/2015/06/05/linux-install-node-with-nvm/) 详细的介绍了如何在Linux平台上通过nvm的方式来按照node.js。安装完成可以测试是否安装成功, 运行`node -v` || `npm -v` 如果有版本显示则说明按照成功, 可以进入下一步。\r\n\r\n## 安装zeanium-node\r\n\r\n全局安装zeanium-node\r\n\r\n`sudo npm install zeanium-node -g`\r\n\r\n输入`zn info`测试是否安装成功, 如果打印出zeanium-node的包信息, 恭喜你安装成功。\r\n\r\n## 运行\r\n\r\n运行项目分两类：\r\n\r\n- 部署：第一次拿到源码的时候首先想到的是看一下项目运行的效果\r\n- 开发：在读懂源代码的基础上，想做二次开发可以进入该步骤\r\n\r\n项目架构在数据交互API级别是完全分离的, 前后端没有任何的代码依赖, 但项目代码在结构存储中是整合在一起的。所以不管是部署还是开发, 都有前端和后端之分。\r\n\r\n对于后端需要调用`zn run`命令, 而前端代码可以放在任何http server的WebRoot目录下, 当然我们的后端也是一个http server, 你也可以不要做任何操作, 启动服务就可以访问我们的前端。\r\n\r\n开发和部署的后端运行坏境都是一样的, 唯一的区别就是前端的环境。部署阶段前端代码已经在开发阶段打包完成，所以不再需要前端的运行环境。\r\n\r\n### 部署\r\n经过上面的说明, 应该很清楚的知道, 部署阶段是不需要前端的运行坏境, 所以只需要在项目根目录上运行 `npm run install.release` 自动安装后台API所需要的依赖包和环境。\r\n\r\n部署(在项目根目录运行)：\r\n\r\n```sh\r\nnpm run install.release\r\nzn run\r\n```\r\n\r\n打开浏览器输入以下测试连接：\r\n\r\n- API列表: http://127.0.0.1:8181/apis\r\n\r\n### 开发\r\n开发阶段需要安装前端的运行环境\r\n\r\n首先要安装的是全局的webpack\r\n\r\n`npm install webpack -g`\r\n\r\n安装前后端的项目依赖包\r\n\r\n`npm run install.dev`\r\n\r\n启动后端服务\r\n\r\n`zn run`\r\n\r\n开启前端开发\r\n\r\n`webpack --watch`\r\n","created":"2017-04-29T16:25:16.581Z","modified":"2017-05-25T07:31:23.469Z","lastPublisher":{"name":"yangyxu","email":"945758912@qq.com"},"owners":[{"name":"yangyxu","email":"945758912@qq.com"}],"other":{"_attachments":{},"_from":".","_id":"zeanium-node-demo","_nodeVersion":"5.10.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/zeanium-node-demo-0.1.2.tgz_1493722231974_0.7124563828110695"},"_npmUser":{"name":"yangyxu","email":"945758912@qq.com"},"_npmVersion":"3.8.3","_rev":"5-d37f98007659cfc02d9249289238727d","_shasum":"335a92cb26e53b9a0f14891ea7cf0835f3a0bb53","author":{"name":"yangyxu"},"bugs":{"url":"https://github.com/yangyxu/zeanium-node-demo/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"335a92cb26e53b9a0f14891ea7cf0835f3a0bb53","tarball":"https://registry.npmjs.org/zeanium-node-demo/-/zeanium-node-demo-0.1.2.tgz"},"maintainers":[{"name":"yangyxu","email":"945758912@qq.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-25T07:31:23.469Z","created":"2017-04-29T16:25:16.581Z","0.1.0":"2017-04-29T16:25:16.581Z","0.1.1":"2017-04-29T16:28:10.740Z","0.1.2":"2017-05-02T10:50:32.221Z","0.1.3":"2017-05-19T08:36:35.766Z"}}}