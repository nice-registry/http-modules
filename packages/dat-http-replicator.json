{"name":"dat-http-replicator","version":"1.1.0","description":"push/pull a dat repo over a HTTP REST API","main":"index.js","scripts":{"test":"standard && tape test.js","start":"node server.js"},"repository":"https://github.com/maxogden/dat-http-replicator","keywords":["dat"],"license":"ISC","homepage":"https://github.com/maxogden/dat-http-replicator#readme","dependencies":{"length-prefixed-stream":"^1.4.0","pump":"^1.0.1","xtend":"^4.0.0"},"devDependencies":{"dat-graph":"^1.0.2","memdb":"^1.0.1","standard":"^5.3.1","tape":"^4.2.2"},"gitHead":"98268854f317e0d2e77fcb5c803e47c03732cb06","versions":[{"number":"1.0.0","date":"2015-10-18T19:32:40.705Z"},{"number":"1.1.0","date":"2015-10-29T18:00:49.805Z"}],"readme":"# dat-http-replicator\n\n```\nnpm install dat-http-replicator\n```\n\n[![build status](http://img.shields.io/travis/maxogden/dat-http-replicator.svg?style=flat)](http://travis-ci.org/maxogden/dat-http-replicator)\n\n## Usage\n\nOn a server\n\n``` js\nvar replicator = require('dat-http-replicator')\nvar http = require('http')\n\nvar server = http.createServer(function (req, res) {\n  var progress = replicator.server(datGraphInstance, req, res)\n  if (!progress) return\n\n  progress.on('pull', function () {\n    console.log('server pulled', progress.pulled)\n  })\n\n  progress.on('push', function () {\n    console.log('server pushed', progress.pushed)\n  })\n})\n\nserver.listen(9000)\n```\n\nOn a client\n\n``` js\nvar replicator = require('dat-http-replicator')\nvar progress = replicator(datGraphInstance, 'http://localhost:9000')\n\nprogress.on('pull', function () {\n  console.log('client pulled', progress.pulled)\n})\n\nprogress.on('push', function () {\n  console.log('client pushed', progress.pushed)\n})\n\nprogress.on('end', function () {\n  console.log('done replicating')\n})\n\nprogress.on('error', function (err) {\n  console.log('error!', err)\n})\n```\n\n## API\n\n#### `progress = replicator.server(datGraph, req, res, [opts], [cb])`\n\nSetup a server http handler. Options include:\n\n``` js\n{\n  readonly: true, // do not allow pushes\n  writeonly: true // do not allow pulls\n}\n```\n\nNote that the progress monitor will be `null` if this is an endpoint\nwithout progress monitoring support.\n\n#### `progress = replicator.client(datGraph, url, [opts], [cb])`\n\nMake a replication request. Options include:\n\n``` js\n{\n  mode: 'push' | 'pull' | 'sync' // defaults to sync\n}\n```\n\n## Progress monitoring\n\nThe progress monitor returned will emit `push` and `pull` when you send a graph node\nor receive a graph node. The progress events look like this\n\n``` js\n{\n  transferred: nodesTransferredSoFar,\n  length: totalNumberOfNodesToTransfer\n}\n```\n\nThe latest progress event call also be accessed at `progress.pushed` and `progress.pulled`\n","created":"2015-10-18T19:32:40.705Z","modified":"2015-10-29T18:00:49.805Z","lastPublisher":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"owners":[{"name":"karissa","email":"krmckelv@gmail.com"},{"name":"mafintosh","email":"mathiasbuus@gmail.com"},{"name":"maxogden","email":"max@maxogden.com"}],"other":{"_attachments":{},"_from":".","_id":"dat-http-replicator","_nodeVersion":"4.1.1","_npmUser":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"_npmVersion":"2.14.4","_rev":"1-03d03fb1d151a68d2c97e9f1fcdde9ea","_shasum":"5003bce884391dc33c4ad0203b9a5fb37a1a89f9","author":{"name":"max ogden"},"bugs":{"url":"https://github.com/maxogden/dat-http-replicator/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"5003bce884391dc33c4ad0203b9a5fb37a1a89f9","tarball":"http://registry.npmjs.org/dat-http-replicator/-/dat-http-replicator-1.1.0.tgz"},"maintainers":[{"name":"karissa","email":"krmckelv@gmail.com"},{"name":"mafintosh","email":"mathiasbuus@gmail.com"},{"name":"maxogden","email":"max@maxogden.com"}],"readmeFilename":"readme.md","time":{"modified":"2015-10-29T18:00:49.805Z","created":"2015-10-18T19:32:40.705Z","1.0.0":"2015-10-18T19:32:40.705Z","1.1.0":"2015-10-29T18:00:49.805Z"}}}