{"name":"cachelicious.x","version":"0.0.3","description":"Delicious Node.js file stream cacher and HTTP cache server","main":"lib/cachelicious.js","repository":"https://github.com/cblage/node-cachelicious","keywords":["stream","cache","http","server"],"dependencies":{"lru-cache":"^1.1.1","mime":"1.2.x"},"devDependencies":{},"bundleDependencies":[],"license":"New BSD","engine":{"node":">= 0.6.0"},"homepage":"https://github.com/cblage/node-cachelicious","_resolved":"https://github.com/cblage/node-cachelicious/archive/0.0.3.tar.gz","scripts":{},"gitHead":"837de848e3c31f294e55459be01fe7e513b7fb25","versions":[{"number":"0.0.3","date":"2015-01-13T22:31:31.286Z"}],"readme":"Cachelicious\n=============\n\nWho said caching and serving cached files should be a chore? \n\nWith Cachelicious it's easier than baking a pie, and almost as delicious as eating it. Mmmmm, pie.... *drool*\n\n\nInstallation\n-----------\n\n    npm install cachelicious\n\n\nFS Cache Usage\n-----\n\n```js\nvar CacheliciousFs = require('cachelicious').fs;\nvar fsCache = new CacheliciousFs(20971520); //20MB of cache\n\nfsCache.createReadStream(filepath, options).pipe(destination1);\nfsCache.createReadStream(filepath, {start: 2, end: 100}).pipe(destination2);\n//both will stream from the same cache :)\n\n```\n\nStandalone HTTP Server Usage\n-----\n\n```js\nvar CacheliciousHttp = require('cachelicious').http;\n\n//create an HTTP cache server with 20MB to serve files from the assets directory\n(new CacheliciousHttp(20971520, __dirname + '/assets')).listen(9876);\t\n```\n\nConnect Middleware Usage\n-----\n\n```js\nvar connect = require('connect'),\n    cacheliciousConnect = require('cachelicious').connect,\n    http = require('http');\n\nvar app = connect()\n\t.use(cacheliciousConnect(__dirname + '/assets',  {maxCacheSize: 20971520}))\n\t.listen(3210);\n```\n\n\nSome test assets are included in the test/assets directory.\n\nYou can also try streaming video (and you should :D), like the Big Buck Bunny - http://www.bigbuckbunny.org/index.php/download/\n\nRanged HTTP requests are fully supported :)\n\nFast\n-----\n\n[APIB](http://code.google.com/p/apib/) results serving the 641KB file in the test assets, running on a 2011 MacBook Air i7 1.8GHz (initial status - cold cache):\n\n**Standlone HTTP server** *test/http.js*\n\n\tapib -d 30 -c 200 -K 2  http://127.0.0.1:9876/medium.jpg\n\n```\nDuration:             30.004 seconds\nAttempted requests:   53845\nSuccessful requests:  53845\nNon-200 results:      0\nConnections opened:   200\nSocket errors:        0\n\nThroughput:           1794.583 requests/second\nAverage latency:      111.210 milliseconds\nMinimum latency:      39.997 milliseconds\nMaximum latency:      243.020 milliseconds\nLatency std. dev:     12.224 milliseconds\n50% latency:          109.000 milliseconds\n90% latency:          124.159 milliseconds\n98% latency:          142.353 milliseconds\n99% latency:          148.804 milliseconds\n\nClient CPU average:    0%\nClient CPU max:        0%\nClient memory usage:    0%\n\nTotal bytes sent:      3.71 megabytes\nTotal bytes received:  33792.17 megabytes\nSend bandwidth:        0.99 megabits / second\nReceive bandwidth:     9009.99 megabits / second\n```\n\n**Cachelicious Connect Middleware** *test/connect.js*\n\t\n\tapib -d 30 -c 200 -K 2  http://127.0.0.1:3210/medium.jpg\n\n```\nDuration:             30.004 seconds\nAttempted requests:   49598\nSuccessful requests:  49598\nNon-200 results:      0\nConnections opened:   200\nSocket errors:        0\n\nThroughput:           1653.028 requests/second\nAverage latency:      120.535 milliseconds\nMinimum latency:      46.361 milliseconds\nMaximum latency:      572.141 milliseconds\nLatency std. dev:     31.452 milliseconds\n50% latency:          115.357 milliseconds\n90% latency:          137.229 milliseconds\n98% latency:          161.885 milliseconds\n99% latency:          194.394 milliseconds\n\nClient CPU average:    0%\nClient CPU max:        0%\nClient memory usage:    0%\n\nTotal bytes sent:      3.42 megabytes\nTotal bytes received:  31150.77 megabytes\nSend bandwidth:        0.91 megabits / second\nReceive bandwidth:     8305.67 megabits / second\n```\n\n**Static + Static Cache Connect Middleware** *test/connectStatic.js*\n\n\tapib -d 30 -c 200 -K 2  http://127.0.0.1:4321/medium.jpg\n\n```\nDuration:             30.004 seconds\nAttempted requests:   15000\nSuccessful requests:  15000\nNon-200 results:      0\nConnections opened:   200\nSocket errors:        0\n\nThroughput:           499.940 requests/second\nAverage latency:      398.803 milliseconds\nMinimum latency:      371.709 milliseconds\nMaximum latency:      525.252 milliseconds\nLatency std. dev:     24.629 milliseconds\n50% latency:          390.023 milliseconds\n90% latency:          431.956 milliseconds\n98% latency:          475.991 milliseconds\n99% latency:          505.020 milliseconds\n\nClient CPU average:    0%\nClient CPU max:        0%\nClient memory usage:    0%\n\nTotal bytes sent:      1.04 megabytes\nTotal bytes received:  9410.90 megabytes\nSend bandwidth:        0.28 megabits / second\nReceive bandwidth:     2509.27 megabits / second\n```\n\n\nLicense\n-----\n\n[New BSD License](https://github.com/cblage/node-cachelicious/blob/master/LICENSE) \n\n\nContributing\n------------\n\nPull requests are welcome! I'll try to merge all valuable contributions and credit the author when I do so.","created":"2015-01-13T22:31:31.286Z","modified":"2015-01-13T22:31:31.286Z","lastPublisher":{"name":"ingwiephoenix","email":"ingwie2000@googlemail.com"},"owners":[{"name":"ingwiephoenix","email":"ingwie2000@googlemail.com"}],"other":{"_attachments":{},"_from":".","_id":"cachelicious.x","_nodeVersion":"0.10.31","_npmUser":{"name":"ingwiephoenix","email":"ingwie2000@googlemail.com"},"_npmVersion":"2.1.17","_rev":"1-083da25cb734a4a332289c312a44a49e","_shasum":"0cb3ae1ce064fae7e4c4800330b04688447462b7","author":{"name":"Carlos Brito Lage","email":"carlos@carloslage.met"},"bugs":{"url":"https://github.com/cblage/node-cachelicious/issues"},"directories":{},"dist-tags":{"latest":"0.0.3"},"dist":{"shasum":"0cb3ae1ce064fae7e4c4800330b04688447462b7","tarball":"http://registry.npmjs.org/cachelicious.x/-/cachelicious.x-0.0.3.tgz"},"maintainers":[{"name":"ingwiephoenix","email":"ingwie2000@googlemail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-01-13T22:31:31.286Z","created":"2015-01-13T22:31:31.286Z","0.0.3":"2015-01-13T22:31:31.286Z"}}}