{"name":"restistream","version":"0.0.5","description":"A minimal restful module to build a streaming http backend","main":"src/main.js","scripts":{"test":"grunt test"},"repository":"https://github.com/MattiasFestin/Restistream","keywords":["rest","http","stream"],"license":"MIT","devDependencies":{"grunt-simple-mocha":"~0.4.0","should":"~1.2.2","grunt":"~0.4.1","grunt-cli":"~0.1.8","jshint":"~2.1.2","grunt-contrib-jshint":"~0.5.4","grunt-contrib-watch":"~0.4.3","request":"~2.21.0","JSONStream":"0.1.2"},"dependencies":{"stringtokenizer":"~0.0.4","lodash":"~1.2.1","http-duplex":"~0.0.2","sbar-inject":"~0.0.1","JSONStream":"~0.7.1"},"readme":"### Reststream ###\r\nReststream uses sbar-inject to inject the function params.\r\n\r\nThe injeted standard params are:\r\n\r\n* $dup http-duplex\r\n* $body JSONStream decoded\r\n* $auth A function that excepts a function that returns a boolean if is a autherized request.\r\n\r\n# Create server\r\n    \r\n    var http = require('http'),\r\n\t\tserver = http.createServer(),\r\n\t\trest = require('reststream');\r\n\r\n\trest.create(http.createServer(), {baseUrl: 'localhost:8989'});\r\n\trest.listen(8080);\r\n\r\n#Supported HTTP methods:\r\n\r\n* GET\r\n    - rest.get(urlToMatch, callback)\r\n* POST\r\n    - rest.post(urlToMatch, callback)\r\n* PUT\r\n    - rest.put(urlToMatch, callback)\r\n* DELETE\r\n    - rest.del(urlToMatch, callback)\r\n* PATCH\r\n    - rest.patch(urlToMatch, callback)\r\n* OPTIONS\r\n    - rest.opts(urlToMatch, callback)\r\n* HEAD (Does not have a response body! Only sends headers!)\r\n    - rest.head(urlToMatch, callback)\r\n\r\n\r\nAll data from the client is in the $dup parameter. And a JSON parsed version of the request body is in the $body parameter.\r\n\r\nAll routes must be unique!\r\n\r\n\r\n# Create a REST method\r\n\r\n\trest.post('/api/{foo}/{bar}', function ($dup, foo, $body, bar) {\r\n        var db = someDbMethodThatReturnsAStream(bar, baz);\r\n\t\t$body.pipe(db).pipe($dup);\r\n\t});\r\n\r\n\r\n# Authenticate\r\nAll calls to $auth must be made before any data is sent to $dup.\r\n\r\n### Not authenticated\r\n    rest.get('/api/user/{id}', function ($dup, $body, id, $auth, qsParam, baz) {\r\n        //Accepts any function that returns a boolean that says if the current\r\n        // request is authenticated\r\n        $auth(function () {\r\n            //Not authenticated\r\n\t\t\treturn false;\r\n\t\t});\r\n    \r\n        $dup.write(id + '|');\r\n        $dup.write(qsParam + '|');\r\n        $dup.write(baz + '|');\r\n        \r\n        $dup.end();\r\n\t});\r\n    \r\n    request.get('http://localhost:8080/api/user/1?qsParam=1&baz=false, function (error, response, body) {\r\n        response.statusCode; //401\r\n        body; //'Unauthorized'\r\n    });\r\n\r\n###Authenticated\r\n    rest.get('/api/user/{id}', function ($dup, $body, id, $auth, qsParam, baz) {\r\n        //Accepts any function that returns a boolean that says if the current\r\n        // request is authenticated\r\n        $auth(function () {\r\n            //Is authenticated\r\n    \t\treturn true;\r\n\t\t});\r\n    \r\n        $dup.write(id + '|');\r\n        $dup.write(qsParam + '|');\r\n        $dup.write(baz + '|');\r\n        \r\n        $dup.end();\r\n\t});\r\n    \r\n    request.get('http://localhost:8080/api/user/1?qsParam=55&baz=false, function (error, response, body) {\r\n        response.statusCode; //200\r\n        body; //'1|55|false'\r\n    });","_resolved":"https://registry.npmjs.org/restistream/-/restistream-0.0.4.tgz","versions":[{"number":"0.0.1","date":"2013-05-28T19:22:58.276Z"},{"number":"0.0.2","date":"2013-05-28T19:29:25.394Z"},{"number":"0.0.3","date":"2013-09-06T16:23:44.556Z"},{"number":"0.0.4","date":"2013-09-14T23:16:14.933Z"},{"number":"0.0.5","date":"2013-09-14T23:46:19.176Z"}],"created":"2013-05-28T19:22:54.636Z","modified":"2013-09-14T23:46:19.176Z","lastPublisher":{"name":"mattiasfestin","email":"npm@mattiasfest.in"},"owners":[{"name":"mattiasfestin","email":"npm@mattiasfest.in"}],"other":{"_attachments":{},"_from":".","_id":"restistream","_npmUser":{"name":"mattiasfestin","email":"npm@mattiasfest.in"},"_npmVersion":"1.2.25","_rev":"1-59fc629e92c32ab4de7bd067564b1f75","author":{"name":"Mattias Festin"},"bugs":{"url":"https://github.com/MattiasFestin/Restistream/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"0.0.5"},"dist":{"shasum":"9da7d73ac28fd2270fa654d5fca6d83df14b4b81","tarball":"http://registry.npmjs.org/restistream/-/restistream-0.0.5.tgz"},"maintainers":[{"name":"mattiasfestin","email":"npm@mattiasfest.in"}],"readmeFilename":"README.md","time":{"modified":"2013-09-14T23:46:19.176Z","created":"2013-05-28T19:22:54.636Z","0.0.1":"2013-05-28T19:22:58.276Z","0.0.2":"2013-05-28T19:29:25.394Z","0.0.3":"2013-09-06T16:23:44.556Z","0.0.4":"2013-09-14T23:16:14.933Z","0.0.5":"2013-09-14T23:46:19.176Z"}}}