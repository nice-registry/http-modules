{"name":"node-http-api","version":"0.0.1","description":"Node-API is an easy to use module for creating APIs in Node.JS","main":"./node-api","repository":"https://github.com/Turixis/node-api","keywords":["http","api","server"],"license":"MIT","engine":{"node":">=0.6"},"dependencies":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_defaultsLoaded":true,"versions":[{"number":"0.0.1","date":"2012-04-27T17:11:05.137Z"}],"readme":"# Node-API\n\nNode-API is an easy to use module for creating APIs. This first version (0.0.1) provides you with an easy to use way to add calls and bind them to paths (e.g. /status).\n\n## Usage\nNode-API is easy to set up and attempts to provide the best way to allow for customized request handing (similar to an HTTP router).\n\n### Adding calls\nAdding a call is easy, using api.addCall(path, options, callback) or optionally api.addCall(path, callback):\n\n```javascript\napi.addCall('/status', { 'method': 'GET' }, function(args, response) {\n\tresponse.data1 = 'some Data Here';\n\tresponse.data2 = 'someData Here';\n\treturn response;\n});\n```\n\nFor the options part, several options can be used:\n\n**method**: the request method this call allows. Can be either GET or POST. When not set, this defaults to GET\n\n**requiredFields**: an array containing required fields for this request. For GET requests, these fields will need to be provided in the query string. For POST, these fields need to be available as a JSON object in the request body\n\n**authentication**: a boolean indicating wether or not to use authentication for this call (see below)\n\n### Starting the server\n\nTo start the API server, simply use the startServer method:\n\n```javascript\napi.startServer({\n\tport: 80\n});\n```\n\nYou can use several options here:\n\n**port**: the port to run the API on. When this option is omitted, port 80 will be used.\n\n**authentication**: a method providing authentication. This method receives the request body (query string for GET and JSON body for POST), and should return true if authentication succeeded, or false if it didn't.\n\n**authenticationDefaultOn**: authentication can be enabled on a per-call basis. To enable global authentication, set this option to true.\n\n**ssl**: If you wish to use SSL, set this option to true. The following two options **must** be included if this is set to true!\n\n**key**: the location of your key file. Should of course be readable by Node.\n\n**cert**: the location of your certificate file. Should of course be readable by Node.\n\n### Error messages\n\nNode-API does some checking on incoming requests. The fowllowing error messages can be sent by Node-API:\n\n**400 Bad Request**: Sent if the request body is not validly formatted JSON (for POST) or when one or more required fields were not present.\n\n**401 Unauthorized**: Sent if authentication is enabled and failed.\n\n**404 Not Found**: Sent if the requested path (e.g. '/status') is not specified.\n\n**405 Method Not Allowed**: Sent if the request method is not GET or POST, or if the wrong method is used for the request (e.g. GET instead of POST).\n\nError messages are sent to the requester in JSON format as in the following example:\n\n```javascript\n{ \"error\": \"404\",\n  \"message\": \"Action is not found\"\n}\n```\n\n## Changelog\n\n**Version 0.0.1 (27th of April, 2012)**\n\n1. Added SSL support using the new **ssl**, **key** and **cert** options for the **startServer** method\n\n**Initial version 0.0.1 (19th of April, 2012)**\n\n- Initial commit\n\n## To do\n\n1. Add support for regular expressions as path identifiers\n2. Make paths and request methods case insensitive\n3. Redo authentication to allow for customized error messages\n4. Make all error messages customizable\n\n## Planned for a next version:\n\n1. Support multiple output formats (targeted at JSON (as it is now) and XML)\n2. Support for other request methods (e.g. PUT, DELETE, ...)\n3. Send the ServerResponse object directly to the addCall callback and send a response by using response.send() instead of using return (more async)\n4. Make the module more asynchroneous\n\n\n## License\nNode-API is available under the MIT license.\n\n\n\nThis readme will be expanded in the future to provide a more complete documentation.\n","starsCount":3,"created":"2012-04-27T17:11:02.813Z","modified":"2017-03-20T09:51:44.716Z","lastPublisher":{"name":"turixis","email":"michiel@turixis.nl"},"owners":[{"name":"turixis","email":"michiel@turixis.nl"}],"other":{"_attachments":{},"_id":"node-http-api","_nodeVersion":"v0.6.15","_npmUser":{"name":"turixis","email":"michiel@turixis.nl"},"_npmVersion":"1.1.16","_rev":"2-5c55aa053c80ccc59899ea5a73ce3dce","author":{"name":"Turixis","email":"michiel@turixis.nl"},"contributors":[{"name":"Michiel van der Velde","email":"michiel@turixis.nl"}],"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"116e8e08278a3636fff3523e019469c785661dcf","tarball":"http://registry.npmjs.org/node-http-api/-/node-http-api-0.0.1.tgz"},"maintainers":[{"name":"turixis","email":"michiel@turixis.nl"}],"time":{"modified":"2017-03-20T09:51:44.716Z","created":"2012-04-27T17:11:02.813Z","0.0.1":"2012-04-27T17:11:05.137Z"},"users":{"syzer":true,"michaelyurin":true,"morswin22":true}}}