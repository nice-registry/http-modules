{"name":"node-fetch-response-matchers","version":"1.1.39","description":"Chai asserts for node-fetch response promise, make your tests with http more declarative","keywords":["chai","chai-plugin","matchers","node-fetch","http-response","tdd"],"main":"index.js","license":"SEE LICENSE IN LICENSE.md","scripts":{"test":"mocha"},"repository":"https://github.com/kfiron/node-fetch-response-matchers","engines":{"node":">=4"},"dependencies":{"set-cookie-parser":"^2.0.0"},"devDependencies":{"chai":"^3.5.0","express":"^4.15.2","mocha":"~3.2.0","node-fetch":"^1.6.3","sinon":"~1.17.6"},"gitHead":"da0917ad1b01251b9a8b67c8be8140faa5a833dd","homepage":"https://github.com/kfiron/node-fetch-response-matchers#readme","versions":[{"number":"1.0.2","date":"2017-04-07T13:37:41.806Z"},{"number":"1.0.3","date":"2017-04-07T13:39:50.771Z"},{"number":"1.0.4","date":"2017-04-07T15:15:11.713Z"},{"number":"1.0.5","date":"2017-04-07T17:21:24.800Z"},{"number":"1.1.1","date":"2017-04-07T19:07:00.435Z"},{"number":"1.1.2","date":"2017-04-07T20:07:18.893Z"},{"number":"1.1.3","date":"2017-04-08T07:39:12.893Z"},{"number":"1.1.4","date":"2017-04-08T07:48:28.450Z"},{"number":"1.1.5","date":"2017-04-08T08:11:08.576Z"},{"number":"1.1.6","date":"2017-04-08T08:19:02.780Z"},{"number":"1.1.7","date":"2017-04-08T08:38:58.528Z"},{"number":"1.1.9","date":"2017-04-08T10:29:57.643Z"},{"number":"1.1.10","date":"2017-04-08T12:59:41.737Z"},{"number":"1.1.11","date":"2017-04-08T13:46:25.127Z"},{"number":"1.1.12","date":"2017-04-08T18:15:17.189Z"},{"number":"1.1.13","date":"2017-04-08T21:13:32.712Z"},{"number":"1.1.14","date":"2017-04-08T21:24:08.920Z"},{"number":"1.1.15","date":"2017-04-09T02:38:38.607Z"},{"number":"1.1.16","date":"2017-04-09T02:44:58.005Z"},{"number":"1.1.17","date":"2017-04-09T02:50:02.271Z"},{"number":"1.1.18","date":"2017-04-09T21:58:31.072Z"},{"number":"1.1.19","date":"2017-04-09T22:30:35.707Z"},{"number":"1.1.20","date":"2017-04-11T07:22:59.355Z"},{"number":"1.1.21","date":"2017-04-11T07:27:37.182Z"},{"number":"1.1.22","date":"2017-04-11T16:26:49.453Z"},{"number":"1.1.23","date":"2017-04-11T16:43:07.040Z"},{"number":"1.1.24","date":"2017-04-12T22:08:03.586Z"},{"number":"1.1.25","date":"2017-04-16T21:00:20.702Z"},{"number":"1.1.26","date":"2017-05-02T08:04:00.373Z"},{"number":"1.1.27","date":"2017-05-02T08:14:08.772Z"},{"number":"1.1.28","date":"2017-05-02T08:40:25.394Z"},{"number":"1.1.29","date":"2017-05-04T15:42:20.908Z"},{"number":"1.1.30","date":"2017-05-09T11:25:33.015Z"},{"number":"1.1.31","date":"2017-05-12T06:39:00.529Z"},{"number":"1.1.32","date":"2017-05-12T06:41:04.205Z"},{"number":"1.1.33","date":"2017-05-12T12:21:58.711Z"},{"number":"1.1.34","date":"2017-05-27T09:19:18.994Z"},{"number":"1.1.35","date":"2017-05-27T09:34:17.448Z"},{"number":"1.1.36","date":"2017-05-27T11:36:15.955Z"},{"number":"1.1.37","date":"2017-05-27T11:41:11.814Z"},{"number":"1.1.38","date":"2017-06-01T20:13:43.584Z"},{"number":"1.1.39","date":"2017-06-02T13:30:39.786Z"}],"readme":"# node-fetch-response-matchers\n\n[![Build Status](https://travis-ci.org/kfiron/node-fetch-response-matchers.svg?branch=master)](https://travis-ci.org/kfiron/node-fetch-response-matchers)\n\nChai plugin with matchers for node-fetch promise response.\nIt helps the tests to be more declarative.\n\n## TL;DR\n\n- This lib gives you a declarative way to assert fetch response, Also it hides the promises and their callbacks noise:\n```javascript\n   it('some-test', function(){\n     return expect(fetch('http://localhost/')).to.be.successful()\n                            .and.to.haveBodyText('foo');\n\n   });\n```\n\n- If you are not using this lib it becomes very verbose:\n```javascript\n   it('some-test', function(done){\n      fetch('http://localhost/')\n         .then(res => {\n            expect(res.status).to.equal(200);\n            return res.text();\n         }).then(text => {\n            expect(text).to.equal('foo');\n            done();\n         })\n   });\n```\n\n\n\n## Install (for dev only - used by tests)\n```shell\n$ npm install --save-dev node-fetch-response-matchers\n```\n\n## Usage example\n```javascript\n\nconst nodeFetchMatchers = require('node-fetch-response-matchers');\nconst fetch = require('node-fetch');\nconst chai = require('chai');\n\nchai.use(nodeFetchMatchers);\n\ndescribe('test suite', function(){\n    it('http success test', function(){\n        return expect(fetch('http://localhost/')).to.be.successful();\n    });\n    it('and', function(){\n          return expect(fetch('http://localhost/')).to.be.successful()\n                                                    .and.haveBodyText('foo');\n    });\n});\n```\n\n### Chai native plugin\nYou can all use chai \"not\"\n\n```javascript\n   it('not', function(){\n      return expect(fetch('http://localhost/')).to.not.be.successful();\n   });\n```\n\n\n## Status matchers\n\n```javascript\n   it('http success test', function(){\n      return expect(fetch('http://localhost/')).to.be.successful();\n   });\n   it('http status assert', function(){\n        return expect(fetch('http://localhost/')).to.haveStatus(500);\n   });\n```\n\n#### Full status matchers list\n\n| API function         | params   | description                      |\n| ---------------------|----------| ---------------------------------|\n| successful()         | ()       | Assert that the status is 200 OK |\n| created()            | ()       | Assert that the status is 201    |\n| unauthorized()       | ()       | Assert that the status is 401    |\n| rejected()           | ()       | Assert that the status is 403    |\n| notFound()           | ()       | Assert that the status is 404    |\n| serverError()        | ()       | Assert that the status is 500    |\n| serviceUnAvailable() | ()       | Assert that the status is 503    |\n| haveStatus()         | (status) | Assert that the status is provided number argument    |\n\n\n\n## Body matchers\n\n```javascript\n   it('have body object', () => {\n     return expect(fetch('http://localhost/').to.haveBodyObject({foo: 'bar'});\n   });\n```\n#### Full body matchers list\n\n| API function         | params             | description                                                  |\n| ----------------------|-------------------| -------------------------------------------------------------|\n| haveBodyObject()      | (obj)             | Assert equal provided object                                 |\n| haveBodyText()        | (text)            | Assert equal provided string text                            |\n| haveBodyRegexpMatch() | (regexp)          | Assert match body on regular expression                      |\n| haveBodyThat()        | (predicate(text)) | Assert match body on provided function predicate on the text |\n\n\n\n## Header matchers\n\n```javascript\n   it('have header', () => {\n     return expect(fetch('http://localhost/').to.haveHeader('connection', 'close');\n   });\n```\n#### Headers matchers list\n\n| API function    | params                  | description                                                                     |\n| ----------------|-------------------------| --------------------------------------------------------------------------------|\n| haveHeader()    | (name, value)           | Assert that response contains header by provided name and value                 |\n| headerExists()  | (name)                  | Assert that response contains header by provided name                           |\n| haveHeaderThat()| (name, predicate(value))| Assert that header with given name have true on the value for a given predicate |\n| haveHeaders()   | (headersMap)            | Assert that given key-value headers are exists in headers response              |\n\n## Cookie matchers\n\n```javascript\n   it('have cookie', () => {\n     return expect(fetch('http://localhost/').to.haveCookie('foo', 'bar');\n   });\n```\n#### Cookie matchers list\n\n\n| API function       | params                     | description                                                               |\n| -------------------|----------------------------| --------------------------------------------------------------------------|\n| haveCookieByName() | (name)                     | Assert that cookie by name is written to the response                     |\n| haveCookie()       | (name, value)              | Assert that cookie by name and value is written to the response           |\n| haveCookieThat()   | (name, predicate(cookie))  | Assert that cookie by name and match given predicate on cookie properties |\n\n## Cache control response matchers\n\n```javascript\n   it('must-revalidate', () => {\n     return expect(fetch('http://localhost/').to.have.cacheControlMustRevalidate();\n   });\n   it('max-age', () => {\n        return expect(fetch('http://localhost/').to.have.cacheControlmMaxAge(120);\n   });\n```\n#### cache control full matchers list\n\n\n| API function                  | params      |\n| ------------------------------|-------------|\n| cacheControlMustRevalidate()  | ()          |\n| cacheControlNoCache()         | ()          |\n| cacheControlNoStore()         | ()          |\n| cacheControlNoTransform()     | ()          |\n| cacheControlPublic()          | ()          |\n| cacheControlPrivate()         | ()          |\n| cacheControlProxyMaxRevalidate| ()          |\n| cacheControlmMaxAge()         | (age-in-sec)|\n| cacheControlSMaxAge()         | (age-in-sec)|\n\n\n","created":"2017-04-07T13:37:41.806Z","modified":"2017-06-02T13:30:39.786Z","lastPublisher":{"name":"kfiron","email":"kfirb@wix.com"},"owners":[{"name":"kfiron","email":"kfirb@wix.com"}],"other":{"_attachments":{},"_from":".","_id":"node-fetch-response-matchers","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-fetch-response-matchers-1.1.39.tgz_1496410238743_0.4891666842158884"},"_npmUser":{"name":"kfiron","email":"kfirb@wix.com"},"_npmVersion":"4.2.0","_rev":"42-c813ad1090696f7ac40f064cac7dd2c4","_shasum":"3beeccba09597762a5c753be48b6a5e3d293c746","author":{"name":"Kfir Bloch","email":"kfirb@wix.com"},"bugs":{"url":"https://github.com/kfiron/node-fetch-response-matchers/issues"},"directories":{},"dist-tags":{"latest":"1.1.39"},"dist":{"shasum":"3beeccba09597762a5c753be48b6a5e3d293c746","tarball":"https://registry.npmjs.org/node-fetch-response-matchers/-/node-fetch-response-matchers-1.1.39.tgz"},"maintainers":[{"name":"kfiron","email":"kfirb@wix.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T13:30:39.786Z","created":"2017-04-07T13:37:41.806Z","1.0.2":"2017-04-07T13:37:41.806Z","1.0.3":"2017-04-07T13:39:50.771Z","1.0.4":"2017-04-07T15:15:11.713Z","1.0.5":"2017-04-07T17:21:24.800Z","1.1.1":"2017-04-07T19:07:00.435Z","1.1.2":"2017-04-07T20:07:18.893Z","1.1.3":"2017-04-08T07:39:12.893Z","1.1.4":"2017-04-08T07:48:28.450Z","1.1.5":"2017-04-08T08:11:08.576Z","1.1.6":"2017-04-08T08:19:02.780Z","1.1.7":"2017-04-08T08:38:58.528Z","1.1.9":"2017-04-08T10:29:57.643Z","1.1.10":"2017-04-08T12:59:41.737Z","1.1.11":"2017-04-08T13:46:25.127Z","1.1.12":"2017-04-08T18:15:17.189Z","1.1.13":"2017-04-08T21:13:32.712Z","1.1.14":"2017-04-08T21:24:08.920Z","1.1.15":"2017-04-09T02:38:38.607Z","1.1.16":"2017-04-09T02:44:58.005Z","1.1.17":"2017-04-09T02:50:02.271Z","1.1.18":"2017-04-09T21:58:31.072Z","1.1.19":"2017-04-09T22:30:35.707Z","1.1.20":"2017-04-11T07:22:59.355Z","1.1.21":"2017-04-11T07:27:37.182Z","1.1.22":"2017-04-11T16:26:49.453Z","1.1.23":"2017-04-11T16:43:07.040Z","1.1.24":"2017-04-12T22:08:03.586Z","1.1.25":"2017-04-16T21:00:20.702Z","1.1.26":"2017-05-02T08:04:00.373Z","1.1.27":"2017-05-02T08:14:08.772Z","1.1.28":"2017-05-02T08:40:25.394Z","1.1.29":"2017-05-04T15:42:20.908Z","1.1.30":"2017-05-09T11:25:33.015Z","1.1.31":"2017-05-12T06:39:00.529Z","1.1.32":"2017-05-12T06:41:04.205Z","1.1.33":"2017-05-12T12:21:58.711Z","1.1.34":"2017-05-27T09:19:18.994Z","1.1.35":"2017-05-27T09:34:17.448Z","1.1.36":"2017-05-27T11:36:15.955Z","1.1.37":"2017-05-27T11:41:11.814Z","1.1.38":"2017-06-01T20:13:43.584Z","1.1.39":"2017-06-02T13:30:39.786Z"}}}