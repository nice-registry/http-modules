{"name":"angular-http-etag","version":"2.0.17","description":"Angular module for easy ETag-based caching of $http responses","homepage":"https://github.com/shaungrady/angular-http-etag","license":"MIT","main":"lib/index.js","module":"src/index.js","jsnext:main":"src/index.js","scripts":{"bundle":"webpack && npm run bundle-umd","bundle-umd":"webpack --config webpack.config.browser.js && webpack --config webpack.config.browser-min.js","test":"karma start && karma start --ng 1.5 && eslint .","test-start":"karma start --no-single-run","pretest":"rm -rf coverage/","posttest":"istanbul-combine -r lcov -r html coverage/angular_*/**/*.json","patch":"npm version patch -m '%s'","preversion":"npm run test","version":"rm -rf lib/ release/ && npm run bundle && git add -A lib/ release/"},"repository":"https://github.com/shaungrady/angular-http-etag","keywords":["angular","$http","etag","cache","$cacheFactory","localStorage","sessionStorage","web storage","entity tag","interceptor","decorator","If-None-Match"],"dependencies":{"array-map":"^0.0.0","deepcopy":"^0.6.3","object-keys":"^1.0.11"},"peerDependencies":{"angular":">=1.2 <1.7"},"devDependencies":{"angular":"~1.6.1","angular-mocks":"~1.6.1","chai":"^3.5.0","chai-spies":"^0.7.1","codeclimate-test-reporter":"^0.4.0","eslint":"^3.8.1","eslint-config-standard":"^6.2.0","eslint-plugin-promise":"^3.0.0","eslint-plugin-standard":"^2.0.1","istanbul-combine":"^0.3.0","istanbul-instrumenter-loader":"^2.0.0","karma":"^1.4.0","karma-commonjs":"^1.0.0","karma-coverage":"^1.1.1","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sourcemap-loader":"^0.3.7","karma-webpack":"^2.0.1","mocha":"^3.2.0","webpack":"^2.2"},"files":["src/*.js","lib/*.js","release/angular-http-etag.js","readme.md","LICENSE.md"],"gitHead":"c075a707bf9f340a9b37fd04b43d99f35b350b0c","versions":[{"number":"0.2.0","date":"2015-06-20T01:36:04.074Z"},{"number":"0.2.1","date":"2015-06-20T04:29:11.205Z"},{"number":"0.2.2","date":"2015-06-20T17:27:25.175Z"},{"number":"1.0.0","date":"2015-06-23T01:35:57.076Z"},{"number":"1.0.1","date":"2015-06-23T16:30:19.858Z"},{"number":"1.0.2","date":"2015-06-26T01:45:30.183Z"},{"number":"1.1.0","date":"2015-06-28T22:59:07.738Z"},{"number":"1.1.1","date":"2015-12-15T22:49:29.883Z"},{"number":"1.1.2","date":"2016-02-19T06:20:51.617Z"},{"number":"1.1.3","date":"2016-03-30T17:59:20.252Z"},{"number":"1.1.4","date":"2016-07-20T15:56:02.939Z"},{"number":"2.0.0","date":"2016-07-30T18:39:45.522Z"},{"number":"2.0.1","date":"2016-07-31T20:12:27.758Z"},{"number":"2.0.2","date":"2016-08-01T17:33:48.746Z"},{"number":"2.0.3","date":"2016-08-10T15:07:47.440Z"},{"number":"2.0.4","date":"2016-08-11T23:33:21.334Z"},{"number":"2.0.5","date":"2016-08-12T17:31:51.854Z"},{"number":"2.0.6","date":"2016-08-16T00:51:57.274Z"},{"number":"2.0.7","date":"2016-08-17T00:04:15.558Z"},{"number":"2.0.8","date":"2016-08-17T00:32:19.449Z"},{"number":"2.0.9","date":"2016-08-24T21:00:09.741Z"},{"number":"2.0.10","date":"2016-08-25T16:47:28.820Z"},{"number":"2.0.11","date":"2016-08-28T02:44:15.889Z"},{"number":"2.0.12","date":"2016-09-22T19:37:48.990Z"},{"number":"2.0.13","date":"2016-09-27T16:39:24.553Z"},{"number":"2.0.14","date":"2016-10-15T04:07:29.124Z"},{"number":"2.0.15","date":"2017-01-24T00:02:43.729Z"},{"number":"2.0.16","date":"2017-02-03T16:19:41.976Z"},{"number":"2.0.17","date":"2017-02-28T16:39:59.423Z"}],"readme":"# Angular HTTP ETag\n\n[![npm version](https://badge.fury.io/js/angular-http-etag.svg)](http://badge.fury.io/js/angular-http-etag)\n[![Build Status](https://travis-ci.org/shaungrady/angular-http-etag.svg?branch=master)](https://travis-ci.org/shaungrady/angular-http-etag)\n[![Test Coverage](https://codeclimate.com/github/shaungrady/angular-http-etag/badges/coverage.svg)](https://codeclimate.com/github/shaungrady/angular-http-etag/coverage)\n[![Code Climate](https://codeclimate.com/github/shaungrady/angular-http-etag/badges/gpa.svg)](https://codeclimate.com/github/shaungrady/angular-http-etag)  \n[![dependencies Status](https://david-dm.org/shaungrady/angular-http-etag/status.svg)](https://david-dm.org/shaungrady/angular-http-etag)\n[![peerDependencies Status](https://david-dm.org/shaungrady/angular-http-etag/peer-status.svg)](https://david-dm.org/shaungrady/angular-http-etag?type=peer)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nTested: IE 9+; Edge 13; Chrome 29, 50+; Firefox 46+; Safari 7+; iOS 9.2+; Android 4.4, 5.1.\n\n---\n\nEasy ETag-based caching for `$http` service requests! Increase responsiveness, decrease bandwidth usage.\n\n* Caches ETag headers and sends them back to the server in the `If-None-Match` header.\n* Caches response data with flexible cache configuration.\n* Support for `$cacheFactory`, `sessionStorage`, and `localStorage` caches out-of-the-box.\n* Easily [adaptable][Cache Service Adapters] for other third-party cache services.\n* Compatible with Angular 1.2â€“1.6.\n\n**Example Usage:**\n\n``` javascript\nangular\n  .module('myApp', [\n    'http-etag'\n  ])\n  .config(function (httpEtagProvider) {\n    httpEtagProvider\n      .defineCache('persistentCache', {\n        cacheService: 'localStorage'\n      })\n  })\n\n  .controller('MyCtrl', function ($http) {\n    var self = this\n\n    $http\n      .get('/my_data.json', {\n        etagCache: 'persistentCache'\n      })\n      .then(function success (response, itemCache) {\n        var data = response.data\n        // Modify the data from the server\n        data._fullName = data.first_name + ' ' + data.last_name\n        // Update the cache with the modified data\n        itemCache.set(data)\n        // Assign to controller property\n        self.fullName = data._fullName\n      }, function error (response) {\n        if (response.status != 304) alert('Request error')\n      })\n      // Synchronous method called if request was previously cached\n      // status == 'cached'; headers === undefined;\n      .ifCached(function (response, itemCache) {\n        self.fullName = data._fullName\n      })\n  })\n```\n\n_Need more information on how ETags work? [Read this](http://bitworking.org/news/ETags__This_stuff_matters)._\n\n## Detailed Documentation\n\n- [Service Provider]\n- [Service]\n- [$http Decorator]\n- [Cache Service Adapters]\n\n[Service Provider]: https://github.com/shaungrady/angular-http-etag/blob/master/docs/service_provider.md\n[Service]: https://github.com/shaungrady/angular-http-etag/blob/master/docs/service.md\n[$http Decorator]: https://github.com/shaungrady/angular-http-etag/blob/master/docs/http_decorator.md\n[Cache Service Adapters]: https://github.com/shaungrady/angular-http-etag/blob/master/docs/cache_service_adapters.md\n\n## Quick Guide\n\n### Install Module\n\n``` bash\n$ npm install angular-http-etag\n```\n\nOr download from [master/release](https://github.com/shaungrady/angular-http-etag/tree/master/release)\n\n### Include Dependency\n\nInclude `'http-etag'` in your module's dependencies.\n\n``` javascript\n// The node module exports the string 'http-etag'...\nangular.module('myApp', [\n  require('angular-http-etag')\n])\n```\n\n``` javascript\n// ... otherwise, include the code first then the module name\nangular.module('myApp', [\n  'http-etag'\n])\n```\n\n### Define Caches\n\n``` javascript\n.config(function ('httpEtagProvider') {\n  httpEtagProvider\n    .defineCache('persistentCache', {\n      cacheService: 'localStorage'\n    })\n    .defineCache('sessionCache', {\n      cacheService: 'sessionStorage'\n    })\n    .defineCache('memoryCache', {\n      cacheService: '$cacheFactory',\n      cacheOptions: {\n        number: 50 // LRU cache\n      },\n      deepCopy: true // $cacheFactory copies by reference by default\n    })\n})\n```\n\nIf you so desire, you can define your own caches. The default cache uses `$cacheFactory`\nand is limited to 25 cache items (Least Recently Used algorithm).\n\nDefine the caches you'd like to use by using `defineCache(cacheId[, config])`, passing a cache ID\nfollowed by the cache configuration. The configuration you pass will extend the\ndefault configuration, which can be set using the `setDefaultCacheConfig(config)`\nmethod. If you don't pass a config, a new cache will be defined using the default config.\n\n _See more in the [Service Provider] documentation._\n\n### Cache Requests\n\nUsing the default cache with default configuration and an automatically generated cache itemKey based on the request:\n\n``` javascript\n$http.get('/data', {\n    etagCache: true\n  })\n  .then(responseHandler)\n  .ifCached(responseHandler)\n\nfunction responseHandler (response, itemCache) {\n  // Differentiating between cached and successful request responses\n  var isCached = response.status === 'cached'\n\n  // itemCache is a cache object bound to the cache item associated with this request.\n  itemCache.info()\n  // { id: 'httpEtagCache',\n  //   itemKey: '/data',\n  //   deepCopy: false,\n  //   cacheResponseData: true,\n  //   cacheService: '$cacheFactory',\n  //   cacheOptions: { number: 25 } }\n}\n```\n\nUsing a defined cache from the previous section and an automatically generated cache itemKey:\n\n``` javascript\n$http.get('/data', {\n    etagCache: 'persistentCache'\n  })\n  .then(responseHandler)\n  .ifCached(responseHandler)\n\nfunction responseHandler (response, itemCache) {\n  itemCache.info()\n  // { id: 'persistentCache',\n  //   itemKey: '/data',\n  //   deepCopy: false,\n  //   cacheResponseData: true,\n  //   cacheService: 'localStorage',\n  //   cacheOptions: { number: 25 } }\n}\n```\nUsing a defined cache and a specified key for the cache item:\n\n``` javascript\n$http.get('/data', {\n    etagCache: {\n      id: 'persistentCache',\n      itemKey: 'whatFineKeyYouHave'\n    }\n  })\n  .then(responseHandler)\n  .ifCached(responseHandler)\n\nfunction responseHandler (response, itemCache) {\n  itemCache.info()\n  // { id: 'persistentCache',\n  //   itemKey: 'whatFineKeyYouHave',\n  //   deepCopy: false,\n  //   cacheResponseData: true,\n  //   cacheService: 'localStorage',\n  //   cacheOptions: { number: 25 } }\n}\n```\n\nThe `etagCache` property also accepts a function that returns on of the values\ndemonstrated; a `boolean`, a `string`, or an `object`.\n\n _See more in the [$http Decorator] and [Service] documentation._\n\n## Contributing\n\nWrite an issue. Then, possibly, hopefully...\n\n1. Fork the repo.\n2. Make a branch.\n3. Write the code.\n3. Write the tests.\n3. Run tests. (`npm test`)\n3. Open a pull request.\n","starsCount":0,"created":"2015-06-20T01:36:04.074Z","modified":"2017-03-01T22:45:47.941Z","lastPublisher":{"name":"shaungrady","email":"grady@shaungrady.com"},"owners":[{"name":"shaungrady","email":"grady@shaungrady.com"}],"other":{"_attachments":{},"_from":".","_id":"angular-http-etag","_nodeVersion":"7.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/angular-http-etag-2.0.17.tgz_1488299997482_0.9622089662589133"},"_npmUser":{"name":"shaungrady","email":"grady@shaungrady.com"},"_npmVersion":"4.3.0","_rev":"6-538e1ea2077a30de5efcdd7953d64e2b","_shasum":"5967f66d415f4bdf3cf88cc58edc7e1474d4c195","author":{"name":"Shaun Grady","url":"http://shaungrady.com"},"bugs":{"url":"https://github.com/shaungrady/angular-http-etag/issues"},"directories":{},"dist-tags":{"latest":"2.0.17"},"dist":{"shasum":"5967f66d415f4bdf3cf88cc58edc7e1474d4c195","tarball":"https://registry.npmjs.org/angular-http-etag/-/angular-http-etag-2.0.17.tgz"},"maintainers":[{"name":"shaungrady","email":"grady@shaungrady.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-03-01T22:45:47.941Z","created":"2015-06-20T01:36:04.074Z","0.2.0":"2015-06-20T01:36:04.074Z","0.2.1":"2015-06-20T04:29:11.205Z","0.2.2":"2015-06-20T17:27:25.175Z","1.0.0":"2015-06-23T01:35:57.076Z","1.0.1":"2015-06-23T16:30:19.858Z","1.0.2":"2015-06-26T01:45:30.183Z","1.1.0":"2015-06-28T22:59:07.738Z","1.1.1":"2015-12-15T22:49:29.883Z","1.1.2":"2016-02-19T06:20:51.617Z","1.1.3":"2016-03-30T17:59:20.252Z","1.1.4":"2016-07-20T15:56:02.939Z","2.0.0":"2016-07-30T18:39:45.522Z","2.0.1":"2016-07-31T20:12:27.758Z","2.0.2":"2016-08-01T17:33:48.746Z","2.0.3":"2016-08-10T15:07:47.440Z","2.0.4":"2016-08-11T23:33:21.334Z","2.0.5":"2016-08-12T17:31:51.854Z","2.0.6":"2016-08-16T00:51:57.274Z","2.0.7":"2016-08-17T00:04:15.558Z","2.0.8":"2016-08-17T00:32:19.449Z","2.0.9":"2016-08-24T21:00:09.741Z","2.0.10":"2016-08-25T16:47:28.820Z","2.0.11":"2016-08-28T02:44:15.889Z","2.0.12":"2016-09-22T19:37:48.990Z","2.0.13":"2016-09-27T16:39:24.553Z","2.0.14":"2016-10-15T04:07:29.124Z","2.0.15":"2017-01-24T00:02:43.729Z","2.0.16":"2017-02-03T16:19:41.976Z","2.0.17":"2017-02-28T16:39:59.423Z"},"users":{}}}