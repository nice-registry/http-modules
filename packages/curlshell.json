{"name":"curlshell","description":"curlshell runs a HTTP server that serves predefined shell commands to curl.","main":"./lib/curlshell.js","version":"0.2.0","keywords":["curl","shell","rest"],"bin":{"curlshell":"./bin/curlshell"},"scripts":{"lint":"jshint bin/curlshell lib/*.js"},"homepage":"https://github.com/laktak/curlshell","repository":"https://github.com/laktak/curlshell","license":"MIT","dependencies":{"hjson":"^2.3.1","http-auth":"^3.0.1"},"gitHead":"cb602084ff89bb115410f944800cff0b55f237d3","versions":[{"number":"0.1.0","date":"2015-08-12T22:22:40.382Z"},{"number":"0.1.1","date":"2015-08-26T20:14:32.717Z"},{"number":"0.2.0","date":"2016-11-09T23:13:19.031Z"}],"readme":"# curlshell\n\ncurlshell runs a HTTP server that serves predefined shell scripts to curl.\n\nYou can use curl in your scripts to execute commands on the curlshell machine. If binary IO is required pipe to tar.\n\ncurlshell is best used in a Docker environment by linking to the container without exposing its port publicly.\n\n*Why not use sshd serving predefined commands?* sshd is not a good match for Docker and it is not trivial to set up. ForceCommand can be circumvented so you need to set a custom shell.\n\n**curlshell is to be used with trusted callers only! Don't expose it to the internet!**\n\n## Installation\n\n```\nnpm i curlshell -g\n```\n\nCreate your initial configuration:\n\n```\ncurlshell -init > config.hjson\n```\n\nRun with\n\n```\ncurlshell config.hjson\n```\n\n## Configuration\n\nThe config file is in [hjson format](http://hjson.org) though you can use regular JSON as well.\n\nFor the full list of options see [template.hjson](template.hjson).\n\n### commands:\n\nEach item defines a script listening at the given name. E.g. `commands: { hello: { ... } }` will listen at `/hello`.\n\n- `cmd` defines the script you wish to execute with bash (can be multiline).\n  `$ARG` will contain the subpath (if any)\n  `$ARG_*` will be set for each supplied argument (uppercase)\n\n- `cwd` defines the current working directory (relative to this config)\n\n- `stream`\n  true: send the output immedeately (for long running tasks and large binary output)\n  false: buffers everything until the command exits\n\n- `output` defines what should be sent to curl as the body.\n  - full: return stdout+stderr (mixed)\n  - append-err: return stdout, append stderr\n  - no-err: return stdout, hide stderr\n  - binary: return binary, hide stderr\n\nSamples:\n\n```\nhello: {\n  # curl localhost:8080/hello?name=human\n\n  cmd:\n    '''\n    if [[ $ARG_NAME ]]; then\n      echo \"Hello $ARG_NAME!\"\n    else\n      echo \"What's your name?\"\n    fi\n    '''\n}\n\nping: {\n  # curl localhost:8080/ping\n\n  cmd: ping 127.0.0.1 -c 10\n  stream: true\n}\n\ncount: {\n  # curl -T YOURFILE http://localhost:8080/count\n\n  cmd: echo You sent us `wc -c` bytes!\n}\n\ngetsh: {\n  # curl http://localhost:8080/getsh | tar -t\n\n  cmd: tar -cz -C /bin .\n  output: binary\n  stream: true\n}\n```\n\n### digest authentication\n\nUse with curl --digest -uUSER:PASS\n\ne.g. curl --digest -uhugo:vroom localhost:8080/hello\n\n","created":"2015-08-12T22:22:40.382Z","modified":"2016-11-09T23:13:19.031Z","lastPublisher":{"name":"laktak","email":"coralllama@gmail.com"},"owners":[{"name":"laktak","email":"coralllama@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"curlshell","_nodeVersion":"6.2.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/curlshell-0.2.0.tgz_1478733197002_0.29588899854570627"},"_npmUser":{"name":"laktak","email":"coralllama@gmail.com"},"_npmVersion":"3.10.8","_rev":"2-e1599221fd6bf81b843e93fcaff0dfe2","_shasum":"e9562121d8565bfad0515570570a1cad9a0779fc","author":{"name":"Christian Zangl"},"bugs":{"url":"https://github.com/laktak/curlshell/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"e9562121d8565bfad0515570570a1cad9a0779fc","tarball":"http://registry.npmjs.org/curlshell/-/curlshell-0.2.0.tgz"},"maintainers":[{"name":"laktak","email":"coralllama@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-09T23:13:19.031Z","created":"2015-08-12T22:22:40.382Z","0.1.0":"2015-08-12T22:22:40.382Z","0.1.1":"2015-08-26T20:14:32.717Z","0.2.0":"2016-11-09T23:13:19.031Z"}}}