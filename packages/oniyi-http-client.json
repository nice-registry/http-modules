{"name":"oniyi-http-client","version":"1.1.1","description":"Adding a plugin interface to \"request\" that allows modifications of request parameters and response data","homepage":"https://github.com/benkroeger/oniyi-http-client#readme","files":["lib","plugins"],"main":"lib/index.js","keywords":["request","plugin","http"],"repository":"https://github.com/benkroeger/oniyi-http-client","devDependencies":{"eslint":"^3.5.0","eslint-config-oniyi":"^4.2.0","gulp":"3.9.1","gulp-coveralls":"0.1.4","gulp-eslint":"3.0.1","gulp-exclude-gitignore":"1.0.0","gulp-istanbul":"1.1.1","gulp-mocha":"3.0.1","gulp-nsp":"2.4.2","gulp-plumber":"1.1.0"},"scripts":{"prepublish":"gulp prepublish","test":"gulp"},"license":"MIT","dependencies":{"async":"2.0.1","lodash":"4.15.0","oniyi-logger":"^1.0.0","request":"^2.78.0","tough-cookie":"^2.3.2"},"gitHead":"e24c15ffdc04f907786848b5d3673c9006cc224f","versions":[{"number":"0.0.1","date":"2015-05-14T10:59:51.488Z"},{"number":"0.0.2","date":"2015-12-03T13:23:10.758Z"},{"number":"0.0.3","date":"2016-02-24T14:20:54.096Z"},{"number":"0.1.0","date":"2016-04-13T09:40:19.391Z"},{"number":"0.2.0","date":"2016-04-14T13:26:54.232Z"},{"number":"1.0.0","date":"2016-08-31T12:53:06.619Z"},{"number":"1.1.0","date":"2016-11-07T16:17:59.799Z"},{"number":"1.1.1","date":"2017-05-08T11:03:19.389Z"}],"readme":"# oniyi-http-client  \n[![NPM version][npm-image]][npm-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]  \n> Adding a plugin interface to [request](https://www.npmjs.com/package/request) that allows modifications of request parameters and response data\n\n## Installation\n\n```sh\n$ npm install --save oniyi-http-client\n```\n\n## Usage\n\n**Note:** this module does not support streams, yet\n\n```js\nvar OniyiHttpClient = require('oniyi-http-client');\n\nvar client = new OniyiHttpClient({\n  defaults: {\n    headers: {\n      'Accept-Language': 'en-US,en;q=0.8',\n      Host: 'httpbin.org',\n      'Accept-Charset': 'ISO-8859-1,utf-8;q=0.7,*;q=0.3',\n      Accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'\n    }\n  }\n});\n\nclient.makeRequest('http://httpbin.org/headers', {\n  method: 'GET'\n  // jar: client.jar(new redisStore(redisClient))\n}, function (err, response, body) {\n  if (err) {\n    logger.warn('got an error');\n    if (err.stack) {\n      logger.error(err.stack);\n    } else {\n      logger.error(err);\n    }\n    process.exit(0);\n  }\n  if (response) {\n    logger.debug('statusCode: %d', response.statusCode);\n    logger.debug('headers: ', response.headers);\n    logger.debug('body: ', body);\n  }\n  process.exit(0);\n});\n```\n\n## Using plugins\n\nThis creates a plugin named `plugin-2` which adds a request-header with name and value `plugin-2`.\nAlso, it stores some data in a local variable and overrides the original callback function \nto print that stored data on response. Afterwards it calls the original callback function.\n\n```js\nvar plugin2 = {\n  name: 'plugin-2',\n  load: function (req, params, callback) {\n    var plugin2Storage = {};\n    setTimeout(function () {\n      params.headers = params.headers || {};\n      params.headers['plugin-2'] = 'plugin-2';\n\n      var name = 'Bam Bam!';\n\n      var originalCallback = params.callback;\n\n      params.callback = function (err, response, body) {\n        logger.info('Name in this plugin\\'s store: %s', name);\n        return originalCallback(err, response, body);\n      };\n\n      callback(null, params);\n    }, 500);\n  }\n};\n\nclient\n  .use(plugin2)\n  .makeRequest('http://httpbin.org/headers', {\n    method: 'GET'\n    // jar: client.jar(new redisStore(redisClient))\n  }, function (err, response, body) {\n    if (err) {\n      logger.warn('got an error');\n      if (err.stack) {\n        logger.error(err.stack);\n      } else {\n        logger.error(err);\n      }\n      process.exit(0);\n    }\n    if (response) {\n      logger.debug('statusCode: %d', response.statusCode);\n      logger.debug('headers: ', response.headers);\n      logger.debug('body: ', body);\n    }\n    process.exit(0);\n  });\n\n```\n## License\n\nApache-2.0 Â© [Benjamin Kroeger]()\n\n\n[npm-image]: https://badge.fury.io/js/oniyi-http-client.svg\n[npm-url]: https://npmjs.org/package/oniyi-http-client\n[travis-image]: https://travis-ci.org/benkroeger/oniyi-http-client.svg?branch=master\n[travis-url]: https://travis-ci.org/benkroeger/oniyi-http-client\n[daviddm-image]: https://david-dm.org/benkroeger/oniyi-http-client.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/benkroeger/oniyi-http-client\n[coveralls-image]: https://coveralls.io/repos/benkroeger/oniyi-http-client/badge.svg\n[coveralls-url]: https://coveralls.io/r/benkroeger/oniyi-http-client\n","created":"2015-05-14T10:59:51.488Z","modified":"2017-05-08T11:03:19.389Z","lastPublisher":{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"},"owners":[{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"oniyi-http-client","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/oniyi-http-client-1.1.1.tgz_1494241397640_0.42582136089913547"},"_npmUser":{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"},"_npmVersion":"4.5.0","_rev":"3-35021994d1e8769f12d0dbc1a5f896ca","_shasum":"7fb3817c4c8724e7cd41cf6cbb7adbcde7f9972e","author":{"name":"Benjamin Kroeger","email":"benjamin.kroeger@gmail.com"},"bugs":{"url":"https://github.com/benkroeger/oniyi-http-client/issues"},"directories":{},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"7fb3817c4c8724e7cd41cf6cbb7adbcde7f9972e","tarball":"https://registry.npmjs.org/oniyi-http-client/-/oniyi-http-client-1.1.1.tgz"},"maintainers":[{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-08T11:03:19.389Z","created":"2015-05-14T10:59:51.488Z","0.0.1":"2015-05-14T10:59:51.488Z","0.0.2":"2015-12-03T13:23:10.758Z","0.0.3":"2016-02-24T14:20:54.096Z","0.1.0":"2016-04-13T09:40:19.391Z","0.2.0":"2016-04-14T13:26:54.232Z","1.0.0":"2016-08-31T12:53:06.619Z","1.1.0":"2016-11-07T16:17:59.799Z","1.1.1":"2017-05-08T11:03:19.389Z"}}}