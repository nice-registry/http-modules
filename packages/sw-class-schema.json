{"name":"sw-class-schema","repository":"https://github.com/swanest/sw-class-schema","version":"1.1.9","scripts":{"test":"mocha --opts ./src/tests/mocha.opts ./src/tests/*.ts","build":"rm -rf dist && ./node_modules/typescript/bin/tsc && rm -rf ./dist/tests","prepublish":"npm run build"},"main":"dist/index.js","types":"dist/index.d.ts","license":"MIT","files":["dist/"],"dependencies":{"sw-class-sanitizer":"^0.0.2","lodash":"^4.17.4","source-map-support":"^0.4.8","class-validator":"^0.6.8","sw-logger":"^1.0.2","when":"^3.7.7"},"devDependencies":{"@types/chai":"^3.4.34","@types/lodash":"^4.14.47","@types/mocha":"^2.2.32","@types/node":"^6.0.42","@types/source-map-support":"^0.2.28","@types/when":"^2.4.28","chai":"^3.5.0","es6-shim":"^0.35.2","mocha":"^3.1.0","mocha-clean":"^1.0.0","ts-node":"^1.3.0","typescript":"^2.0.3"},"description":"Useful helper to construct and deconstruct objects over http requests. This module re-exports validators from [Swanest' class-validator fork](https://github.com/swanest/class-validator) and sanitzers from [class-sanitizer](https://github.com/pleerock/clas","homepage":"https://github.com/swanest/sw-class-schema#readme","versions":[{"number":"1.0.0","date":"2017-01-10T17:14:23.103Z"},{"number":"1.0.1","date":"2017-01-16T12:34:59.327Z"},{"number":"1.0.2","date":"2017-01-16T18:41:58.498Z"},{"number":"1.0.3","date":"2017-01-16T19:05:22.315Z"},{"number":"1.0.4","date":"2017-01-16T19:11:30.575Z"},{"number":"1.1.0","date":"2017-02-21T12:18:37.580Z"},{"number":"1.1.1","date":"2017-02-21T13:54:50.437Z"},{"number":"1.1.2","date":"2017-02-28T14:17:12.478Z"},{"number":"1.1.3","date":"2017-02-28T14:34:14.440Z"},{"number":"1.1.4","date":"2017-02-28T15:07:55.178Z"},{"number":"1.1.5","date":"2017-02-28T15:14:18.247Z"},{"number":"1.1.6","date":"2017-03-01T07:38:28.191Z"},{"number":"1.1.7","date":"2017-03-02T18:20:28.626Z"},{"number":"1.1.8","date":"2017-03-09T12:53:01.425Z"},{"number":"1.1.9","date":"2017-05-05T15:50:35.911Z"}],"readme":"# sw-class-schema\n\nUseful helper to construct and deconstruct objects over http requests.\nThis module re-exports validators from [Swanest' class-validator fork](https://github.com/swanest/class-validator) and sanitzers from [class-sanitizer](https://github.com/pleerock/class-sanitizer/)\n\n## List of usable types\nCheck out [class-validator](https://github.com/pleerock/class-validator) doc.\n\n## Install\n\n`npm i sw-class-schema --save`\n\n## Use-case\n\nSuppose you have an `User` that is posting some `Posts`\n\n```js\n\nimport {\n    Schema,\n    Min,\n    Max,\n    Contains,\n    ValidateNested,\n    IsDefined,\n    IsDate,\n    Length,\n    ValidateIf,\n    IsEmail,\n    IsFQDN, Strict, IsDatable, ToDate\n} from 'sw-class-schema';\n\n\nclass User extends Schema { \n            \n    @Strict(false) //Additional parameters in JSON object won't throw an error\n    \n    @Min(12) @Max(12)\n    age: number;\n    \n    @Contains(\"patrick\")\n    name: string;\n    \n    @ValidateIf(obj => obj.email != void 0) @IsEmail() //This is an optional field\n    email: string;\n\n    constructor() {\n        super(\"age\", \"name\", \"email\"); //Here all properties that need to be constructed/deconstructed\n    }\n            \n}\n\n\nclass Post extends Schema {\n\n    @Strict(true) //Strict mode\n    \n    @IsDefined() @ValidateNested() //Never forget to put @IsDefined() if you use @ValidateNested()\n    user: User;\n    \n    @Length(5, 20)\n    title: string;\n    \n    @Contains(\"hello\") @Length(10, 200)\n    text: string;\n    \n    @IsDatable() //This means either an ISO string date or a Date object\n    @ToDate() //When an object is stringified, Date objects become ISO strings, so to reconstruct, we use ToDate formatter \n    date: Date;\n    \n    @IsDefined() @ValidateNested({each: true}) // Special case for arrays, see super as well\n    users: Array<User>;\n    \n    constructor() { //Never forget it !\n        super({user: User}, \"title\", \"text\", \"date\", {user: [User]});\n    }\n    \n }\n\n```\n\n\n## toSchema()\n\nThis sync method returns an object and recursively schematize inner objects.\n\n```js\nlet post = new Post();\npost.title = \"welcome\";\npost.user = new User();\npost.toSchema();\n```\n\n## fromSchema()\n\nThis async static method returns a promise of instance.\n\n```js\n\nlet post = await Post.fromSchema<Post>({title:\"hello\"}); //This will throw an error\n\n```","created":"2017-01-10T17:14:23.103Z","modified":"2017-05-05T15:50:35.911Z","lastPublisher":{"name":"youri","email":"youri@swanest.com"},"owners":[{"name":"cyrils","email":"l.cyril@gmail.com"},{"name":"youri","email":"youri@swanest.com"}],"other":{"_attachments":{},"_from":".","_id":"sw-class-schema","_nodeVersion":"6.10.3","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/sw-class-schema-1.1.9.tgz_1493999434043_0.0075265292543917894"},"_npmUser":{"name":"youri","email":"youri@swanest.com"},"_npmVersion":"3.10.10","_rev":"16-cae20389c2956d80c21a2a5b5f81fa31","_shasum":"1e404642bb1bc0443e506bafd4a8edf015747732","author":{"name":"Swanest"},"bugs":{"url":"https://github.com/swanest/sw-class-schema/issues"},"directories":{},"dist-tags":{"latest":"1.1.9"},"dist":{"shasum":"1e404642bb1bc0443e506bafd4a8edf015747732","tarball":"https://registry.npmjs.org/sw-class-schema/-/sw-class-schema-1.1.9.tgz"},"maintainers":[{"name":"cyrils","email":"l.cyril@gmail.com"},{"name":"youri","email":"youri@swanest.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-05T15:50:35.911Z","created":"2017-01-10T17:14:23.103Z","1.0.0":"2017-01-10T17:14:23.103Z","1.0.1":"2017-01-16T12:34:59.327Z","1.0.2":"2017-01-16T18:41:58.498Z","1.0.3":"2017-01-16T19:05:22.315Z","1.0.4":"2017-01-16T19:11:30.575Z","1.1.0":"2017-02-21T12:18:37.580Z","1.1.1":"2017-02-21T13:54:50.437Z","1.1.2":"2017-02-28T14:17:12.478Z","1.1.3":"2017-02-28T14:34:14.440Z","1.1.4":"2017-02-28T15:07:55.178Z","1.1.5":"2017-02-28T15:14:18.247Z","1.1.6":"2017-03-01T07:38:28.191Z","1.1.7":"2017-03-02T18:20:28.626Z","1.1.8":"2017-03-09T12:53:01.425Z","1.1.9":"2017-05-05T15:50:35.911Z"}}}