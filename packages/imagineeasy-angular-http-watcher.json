{"name":"imagineeasy-angular-http-watcher","version":"2.2.1","description":"Angular HTTP Interceptor to act on failed HTTP request and replay them on a given point in the future","homepage":"https://github.com/easybiblabs/angular-http-watcher","licenses":[{"type":"Apache-2.0","url":"https://github.com/easybiblabs/angular-http-watcher/blob/master/LICENSE.txt"}],"main":"src/index.js","repository":"https://github.com/easybiblabs/angular-http-watcher","dependencies":{"angular":"1.4.7"},"gitHead":"10eb9a67a83ed20f46e62683013c053c998a60f2","scripts":{},"versions":[{"number":"1.0.0","date":"2015-11-12T15:49:49.820Z"},{"number":"2.0.0","date":"2015-11-17T15:15:45.690Z"},{"number":"2.1.0","date":"2015-11-20T17:46:49.244Z"},{"number":"2.2.0","date":"2015-11-27T12:32:16.657Z"},{"number":"2.2.1","date":"2016-06-08T10:31:34.730Z"}],"readme":"# imagineasy-angular-http-watcher\n\nHTTP Watcher Module\n============================\n\nThis is initially based on the concept described in [Authentication in AngularJS (or similar) based application](http://www.espeo.pl/1-authentication-in-angularjs-application/) and  - https://github.com/witoldsz/angular-http-auth\n\nBut we extended it to be a general notification (and buffering) system for all http requests an angular app does via the `$http` service.\n\nUsage\n------\n\n- Install via npm: `npm install --save imagineeasy-angular-http-watcher`\n- Include as a dependency in your app: `angular.module('myApp', ['http-watch'])`\n\nManual\n------\n\nThis module installs $http interceptor and provides the `httpWatcher` service.\n\nThe $http interceptor does the following:\n\nIf an HTTP request fails, the event `network:http-error` is broadcasted with the configuration object (this is the requested URL, payload and parameters)\nof said request. If the HTTP Error-Code is in the bufferList, it will be buffered and can be replayed at any given time using the `continue()` method of the `httpWatcher` service.\n\nYou are responsible to invoke this method after you handled the error. Example:\n```js\n/** @ngInject */\nreturn function(httpWatcher) {\n    httpWatcher.continue();\n};\n```\n\n#### Ignoring the interceptor\n\nSometimes you might not want the interceptor to intercept a request even if one returns a http error code. In a case like this you can add `ignoreHttpWatcher: true` to the request config.\n\n#### Disabling the buffering of requests\n\nIf needed, you can also add `saveOnHttpError: false|true` to the request config to specifically say you want to allow/disallow buffering a request regardless of the response code.\n\n#### Specifing custom default values\n\nIf you need a custom event name oder you want to change the defaults which http statuses are saved and which not in your app, you can do this easily by using the ``httpWatcherConfig`` provider in your app. On initialization this will be used by the interceptor.\n\nCurrently support are these values, shown with their default values, all optional:\n```js\nangular.module('your-app', []).config(function(httpWatcherConfigProvider) {\n  httpWatcherConfigProvider.setConfig({\n    eventNames: {\n      error: 'network:http-error',\n      continue: 'network:continue',\n      reject: 'network:reject'\n    },\n    status: {\n      0: true,\n      408: true,\n      401: true\n    }\n  });\n});\n```\n","created":"2015-11-12T15:49:49.820Z","modified":"2016-06-08T10:31:34.730Z","lastPublisher":{"name":"bluemaex","email":"mail@bluemaex.de"},"owners":[{"name":"bluemaex","email":"mail@bluemaex.de"},{"name":"brandonklm","email":"hi@brandonkm.net"},{"name":"darshanbib","email":"darshan@imagineeasy.com"},{"name":"fholzhauer","email":"fh-npmjs@fholzhauer.de"},{"name":"rwos","email":"richard@r-wos.org"},{"name":"sashless","email":"saweniger@gmail.com"},{"name":"till","email":"klimpong@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"imagineeasy-angular-http-watcher","_nodeVersion":"6.0.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/imagineeasy-angular-http-watcher-2.2.1.tgz_1465381892692_0.557158509735018"},"_npmUser":{"name":"bluemaex","email":"mail@bluemaex.de"},"_npmVersion":"3.8.6","_rev":"1-fcbd1f10fdc9daf55df5e3580cbcb3af","_shasum":"bda1b36719e07730c43a886d4cc089d41892a2c5","bugs":{"url":"https://github.com/easybiblabs/angular-http-watcher/issues"},"directories":{},"dist-tags":{"latest":"2.2.1"},"dist":{"shasum":"bda1b36719e07730c43a886d4cc089d41892a2c5","tarball":"http://registry.npmjs.org/imagineeasy-angular-http-watcher/-/imagineeasy-angular-http-watcher-2.2.1.tgz"},"maintainers":[{"name":"bluemaex","email":"mail@bluemaex.de"},{"name":"brandonklm","email":"hi@brandonkm.net"},{"name":"darshanbib","email":"darshan@imagineeasy.com"},{"name":"fholzhauer","email":"fh-npmjs@fholzhauer.de"},{"name":"rwos","email":"richard@r-wos.org"},{"name":"sashless","email":"saweniger@gmail.com"},{"name":"till","email":"klimpong@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-06-08T10:31:34.730Z","created":"2015-11-12T15:49:49.820Z","1.0.0":"2015-11-12T15:49:49.820Z","2.0.0":"2015-11-17T15:15:45.690Z","2.1.0":"2015-11-20T17:46:49.244Z","2.2.0":"2015-11-27T12:32:16.657Z","2.2.1":"2016-06-08T10:31:34.730Z"}}}