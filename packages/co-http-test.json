{"name":"co-http-test","version":"0.3.1","description":"http request validations made easy","repository":"https://www.github.com/maxmill/co-http-test","license":"MIT","main":"./bin","scripts":{"clean":"npm cache clean && rm -rf node_modules bin data","build":"babel lib -d bin","postbuild":"npm test","test":"tape ./test","watch":"watch 'npm run build' lib test"},"keywords":["koa","api","http","utils","requests","validation","co","test","tape","testing","qa","httpTest","generators","convenience"],"devDependencies":{"babel":"*","babel-cli":"*","babel-preset-es2015-node5":"*","babel-preset-stage-3":"*","deep-equal":"*","co-tape":"*","tape":"*","tape-catch":"*","rain-util-http":"*","watch":"*"},"engines":{"node":">= 4.2.0"},"babel":{"presets":["es2015-node5","stage-3"]},"gitHead":"7342095cbfbe7c5ad4a1b0abb0698922762bb2ae","versions":[{"number":"0.1.0","date":"2016-02-04T06:08:34.345Z"},{"number":"0.1.1","date":"2016-02-06T13:41:58.939Z"},{"number":"0.3.0","date":"2016-04-24T01:52:12.782Z"},{"number":"0.3.1","date":"2016-04-24T02:27:05.779Z"}],"readme":"# co-http-test #\n\n[![Build Status](https://travis-ci.org/maxmill/co-http-test.svg?style=flat-square)](https://travis-ci.org/maxmill/co-http-test)\n[![npm](https://img.shields.io/npm/v/co-http-test.svg?style=flat-square)]()\n[![npm](https://img.shields.io/npm/dt/co-http-test.svg)]()\n\n#### Validates results of one or more http requests. (optional) validate by status(defaults to 200), body, and headers\n\n\n```\nnpm i --save co-http-test\n\nconst httpTest = require('co-http-test');\n\nhttpTest(description, request)\n// description   : string\n// request       : co/koa/generator compatible request.js call\n```\n\nfor slightly more verbose output format description:\n\n    var str = 'test group description | test1 desc, test2 desc, etc'\n\n### examples\n```\nconst httpTest = require('co-http-test').httpTest; // \".httpTest\" only needed when httpUtil is used\nconst httpUtil = require('co-http-test').httpUtil;\n\nconst testApi = {\n    gmaps: new $http('https://maps.googleapis.com/', {'x-hi-there': 'hello'}),\n    endPoint: new $http('http://jsonplaceholder.typicode.com/')\n};\n\nhttpTest('HTTP DELETE',testApi.endPoint.put('posts/1'))\n\nhttpTest('enforce response body | and status', testApi.endPoint.get('posts/1'),\n    200,\n    {\n        \"userId\": 1,\n        \"id\": 1,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    }\n);\n\n// request arrays are executed in parallel\n\n\nhttpTest('parallel HTTP test detailed description | details for POST, PUT details, PATCH details', [\n    testApi.endPoint.post('posts/'),\n    testApi.endPoint.put('posts/1', {\n        title: 'test put'\n    }),\n    testApi.endPoint.patch('posts/1', {\n        title: 'test patch'\n    })\n]);\n\nhttpTest('parallel HTTP enforce statuses | POST, PUT, PATCH', [\n    testApi.endPoint.post('posts/'),\n    testApi.endPoint.put('posts/1', {\n        title: 'test put'\n    }),\n    testApi.endPoint.patch('posts/1', {\n        title: 'test patch'\n    })\n], [201, 200, 200]);\n\n\nhttpTest('enforce response body | status and headers', testApi.endPoint.get('posts/1'),\n    200,\n    {\n        \"userId\": 1,\n        \"id\": 1,\n        \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n        \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n    },\n    {\n        'x-powered-by': 'Express'\n    }\n);\n\n\n```\n\n### credits ###\n- https://github.com/maxmill/rain-util-http\n- https://github.com/request/request\n- https://github.com/substack/tape\n","created":"2016-02-04T06:08:34.345Z","modified":"2016-04-24T02:27:05.779Z","lastPublisher":{"name":"maxmill","email":"maxmillien@gmail.com"},"owners":[{"name":"maxmill","email":"maxmillien@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"co-http-test","_nodeVersion":"5.10.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/co-http-test-0.3.1.tgz_1461464823872_0.45160466874949634"},"_npmUser":{"name":"maxmill","email":"maxmillien@gmail.com"},"_npmVersion":"3.8.3","_rev":"1-fd995c9269a79ce7ffc9b6e45bfe4484","_shasum":"f137885df5ea89340e99c3718cad73cb21a0105f","author":{"name":"Max Millien"},"directories":{},"dist-tags":{"latest":"0.3.1"},"dist":{"shasum":"f137885df5ea89340e99c3718cad73cb21a0105f","tarball":"http://registry.npmjs.org/co-http-test/-/co-http-test-0.3.1.tgz"},"maintainers":[{"name":"maxmill","email":"maxmillien@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-04-24T02:27:05.779Z","created":"2016-02-04T06:08:34.345Z","0.1.0":"2016-02-04T06:08:34.345Z","0.1.1":"2016-02-06T13:41:58.939Z","0.3.0":"2016-04-24T01:52:12.782Z","0.3.1":"2016-04-24T02:27:05.779Z"}}}