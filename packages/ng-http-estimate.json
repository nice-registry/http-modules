{"name":"ng-http-estimate","version":"0.6.0","description":"Automatic $http request time estimates","main":"Gruntfile.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/bahmutov/ng-http-estimate","keywords":["angular","$http","http","request","time","estimate","estimation"],"license":"MIT","homepage":"https://github.com/bahmutov/ng-http-estimate","devDependencies":{"grunt":"~0.4.2","grunt-contrib-clean":"~0.5.0","grunt-contrib-copy":"~0.5.0","grunt-gh-pages":"~0.9.0","grunt-npm2bower-sync":"0.8.1","matchdep":"~0.3.0","pre-git":"0.2.1"},"pre-commit":["grunt","npm version"],"gitHead":"3c512dc24a58514c9865be1a7c10e682b25f59fc","versions":[{"number":"0.1.0","date":"2015-04-27T19:37:26.641Z"},{"number":"0.2.0","date":"2015-04-28T00:17:54.363Z"},{"number":"0.3.0","date":"2015-04-28T00:23:14.376Z"},{"number":"0.4.0","date":"2015-04-28T02:45:22.349Z"},{"number":"0.5.0","date":"2015-04-28T13:46:37.687Z"},{"number":"0.5.2","date":"2015-04-28T19:02:27.012Z"},{"number":"0.5.3","date":"2015-04-28T21:05:34.103Z"},{"number":"0.6.0","date":"2015-06-02T17:11:17.079Z"}],"readme":"# ng-http-estimate\n\n> Automatic $http request time estimates\n\n[Demo][demo], [basic example][basic], [custom estimator][estimator],\n[reporting accuracy][accuracy], [low-level][low-level]\n\n[demo]: http://glebbahmutov.com/ng-http-estimate/\n[basic]: http://glebbahmutov.com/ng-http-estimate/examples/basic\n[estimator]: http://glebbahmutov.com/ng-http-estimate/examples/custom-estimator\n[accuracy]: http://glebbahmutov.com/ng-http-estimate/examples/accuracy\n[low-level]: http://glebbahmutov.com/ng-http-estimate/examples/low-level\n\n    npm|bower install ng-http-estimate\n\nInclude 'dist/ng-http-estimate.js' script in your page and add dependency on 'http-estimate'\n\n    angular.module('app', ['http-estimate']);\n\nPlace the loading element into the body, you can also style it\n\n    <body>\n        <http-estimate></http-estimate>\n        ...\n    </body>\n\nThe element will appear automatically on HTML requests and will show estimated remaining\ntime (if previously computed) or \"loading ...\" message. Optionally, include 'dist/ng-http-estimate.css'\nfile to get the default centered style.\n\n![screenshot](screenshot.png)\n\n## Features\n\n* Measurements are saved in the local storage.\n* The $http requests are automatically intercepted. If you want to disable intercept and\ncontrol the start / stop events, use config provider\n\n```js\n.config(function (httpEstimateProvider) {\n  httpEstimateProvider.set({\n    interceptHttp: false\n  });\n})\n```\n\n* You can pass your own estimator function via config provider. The function can\nuse built-in estimator and should return the wait time in milliseconds. For example:\n\n```js\n.config(function (httpEstimateProvider) {\n  httpEstimateProvider.set({\n    estimator: function (cacheEstimator, url) {\n      console.log('need to estimate how long get request to', url, 'would take');\n      var estimate = cacheEstimator(url);\n      console.log('built-in cache estimator says', estimate);\n      console.log('will trust it');\n      return estimate;\n    }\n  });\n})\n```\n\n* You can pass 'accuracy' function via config provider to receive result after a request\ncompletes. Useful to collect analytics how accurate the measurements were\n\n```js\n.config(function (httpEstimateProvider) {\n  httpEstimateProvider.set({\n    estimator: function (cacheEstimator, url) {\n      ...\n    },\n    accuracy: function (url, estimate, took) {\n      console.log('estimated request to', url, 'to take', estimate, 'took', took, 'ms');\n    }\n  });\n})\n```\n\n* Low level interface. You can inject 'httpEstimateLowLevel' into your application and call\nthe low-level methods `start(name)` and `stop(name)`. Great for custom duration estimation with\nhttp intercepts disabled.\n\n```js\n.controller('demoController', function ($scope, httpEstimateLowLevel) {\n  $scope.startLoad = function startLoad() {\n    httpEstimateLowLevel.start('/foo/bar');\n  };\n  $scope.stopLoad = function stopLoad() {\n    httpEstimateLowLevel.stop('/foo/bar');\n  };\n});\n```\n\n* Verbose console log output for debugging.\n\n```js\n.config(function (httpEstimateProvider) {\n  httpEstimateProvider.set({\n    verbose: true\n  });\n})\n```\n\n* Works fine with other $http interceptors, like [angular-loading-bar][angular-loading-bar],\nfor example see the [accuracy example][accuracy].\n\n[angular-loading-bar]: http://chieffancypants.github.io/angular-loading-bar/\n\n## Small print\n\nAuthor: Gleb Bahmutov &copy; 2015\n\n* [@bahmutov](https://twitter.com/bahmutov)\n* [glebbahmutov.com](http://glebbahmutov.com)\n* [blog](http://glebbahmutov.com/blog)\n\nLicense: MIT - do anything with the code, but don't blame me if it does not work.\n\nSpread the word: tweet, star on github, etc.\n\nSupport: if you find any problems with this module, email / tweet /\n[open issue](https://github.com/bahmutov/ng-http-esimate/issues) on Github\n","created":"2015-04-27T19:37:26.641Z","modified":"2015-06-02T17:11:17.079Z","lastPublisher":{"name":"bahmutov","email":"gleb.bahmutov@gmail.com"},"owners":[{"name":"bahmutov","email":"gleb.bahmutov@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ng-http-estimate","_npmUser":{"name":"bahmutov","email":"gleb.bahmutov@gmail.com"},"_npmVersion":"1.4.28","_rev":"1-b903d5d126542db69b78be1773f3fab6","_shasum":"386bc951b67affeda623289b0411fc61c1d6f592","author":{"name":"Gleb Bahmutov","email":"gleb.bahmutov@gmail.com"},"bugs":{"url":"https://github.com/bahmutov/ng-http-estimate/issues"},"directories":{},"dist-tags":{"latest":"0.6.0"},"dist":{"shasum":"386bc951b67affeda623289b0411fc61c1d6f592","tarball":"http://registry.npmjs.org/ng-http-estimate/-/ng-http-estimate-0.6.0.tgz"},"maintainers":[{"name":"bahmutov","email":"gleb.bahmutov@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-06-02T17:11:17.079Z","created":"2015-04-27T19:37:26.641Z","0.1.0":"2015-04-27T19:37:26.641Z","0.2.0":"2015-04-28T00:17:54.363Z","0.3.0":"2015-04-28T00:23:14.376Z","0.4.0":"2015-04-28T02:45:22.349Z","0.5.0":"2015-04-28T13:46:37.687Z","0.5.2":"2015-04-28T19:02:27.012Z","0.5.3":"2015-04-28T21:05:34.103Z","0.6.0":"2015-06-02T17:11:17.079Z"}}}