{"name":"noradle","description":"A NodeJS and Oracle DB integration, NodeJS act as http gateway for plsql server pages","keywords":["oracle","sql","plsql","psp","psp.web","servlet","driver","jdbc","ndbc","pool","dba","ocp"],"version":"0.16.2","homepage":"https://github.com/kaven276/noradle","repository":"https://github.com/kaven276/noradle","main":"server.js","bin":{"noradle-dispatcher":"./node_modules/.bin/noradle-dispatcher","noradle-console":"./node_modules/.bin/noradle-console"},"scripts":{"start":"node server.js"},"config":{},"engines":{"node":">=0.10.0","oracle":">=11"},"dependencies":{"debug":"~2.1.1","underscore":"^1.8.3","commander":"^2.9.0","dnode":"^1.2.1","noradle-protocol":"^0.14.0","noradle-oracle-server":"^0.14.0","noradle-nodejs-client":"^0.14.1","noradle-dispatcher":"^0.14.1","noradle-console":"^0.13.1","noradle-resultsets":"^0.13.2","noradle-http":"^0.13.2","noradle-ndbc":"^0.13.2"},"devDependencies":{},"gitHead":"ddfd02239d310ab6c3c9b5a0d38475389430599f","versions":[{"number":"0.6.1","date":"2013-03-29T08:06:40.593Z"},{"number":"0.6.2","date":"2013-04-02T02:51:56.329Z"},{"number":"0.6.3","date":"2013-04-02T05:51:47.692Z"},{"number":"0.6.4","date":"2013-04-09T03:22:34.999Z"},{"number":"0.6.5","date":"2013-04-15T02:05:27.567Z"},{"number":"0.6.6","date":"2013-04-16T01:19:48.039Z"},{"number":"0.6.7","date":"2013-04-16T07:01:14.195Z"},{"number":"0.6.9","date":"2014-02-13T09:16:29.149Z"},{"number":"0.6.11","date":"2014-02-28T07:20:50.169Z"},{"number":"0.10.0","date":"2015-01-16T02:35:00.297Z"},{"number":"0.10.1","date":"2015-01-16T02:44:03.921Z"},{"number":"0.10.2","date":"2015-01-16T06:04:12.017Z"},{"number":"0.10.4","date":"2015-01-23T03:37:28.477Z"},{"number":"0.10.6","date":"2015-03-18T03:18:36.294Z"},{"number":"0.10.7","date":"2015-03-24T06:15:29.839Z"},{"number":"0.11.1","date":"2015-07-06T08:55:38.432Z"},{"number":"0.11.2","date":"2015-07-31T03:43:58.314Z"},{"number":"0.11.3","date":"2015-10-08T07:39:43.394Z"},{"number":"0.12.0","date":"2015-11-24T02:30:11.811Z"},{"number":"0.12.1","date":"2015-11-24T06:51:41.594Z"},{"number":"0.12.2","date":"2015-11-27T07:51:32.800Z"},{"number":"0.13.0","date":"2015-12-10T08:00:33.455Z"},{"number":"0.14.0","date":"2015-12-16T09:29:42.250Z"},{"number":"0.14.1","date":"2015-12-17T01:16:54.939Z"},{"number":"0.14.2","date":"2015-12-17T06:15:01.788Z"},{"number":"0.15.0","date":"2015-12-22T01:12:21.328Z"},{"number":"0.16.2","date":"2016-01-08T05:49:29.961Z"}],"readme":"Want to build solid information system solely on PL/SQL and javascript easily,\nno rely on any other programming language or technical stack? develop with NORADLE.\n\n<center>![NORADLE](noradle_span_960.png)</center>\n\nWhat's NORADLE?\n=================\n\nThe word NORADLE is combination of node.js and oracle,\nIt aims at\n\n1. write http servlet in PL/SQL with extremely concise code\n2. with node.js as http gateway, give full http protocol support for oracle environment\n3. node.js accessibility to oracle, give node.js ecosystem a real thustworthy db backend\n\ntake a first glance at pl/sql servlet code\n==========================================\n\n### bind data into html\n\n```plsql\nprocedure bind_data is\n  cursor c_packages is\n    select *\n      from user_objects a\n     where a.object_type = 'PACKAGE'\n       and rownum <= 5\n     order by a.object_name asc;\nbegin\n  b.l('<!DOCTYPE html>');\n  o.t('<html>');\n  o.t('<body>');\n  o.t('<table rules=all cellspacing=0 cellpadding=5 style=\"border:1px solid silver;\">');\n  o.t(' <caption>', 'bind sql data to table example');\n  o.t(' <thead>', o.t('<tr>', m.w('<th>@</th>', 'package name,created')));\n  o.t(' <tbody>');\n  for i in c_packages loop\n    o.t('<tr>');\n    o.t(' <td>', i.object_name);\n    o.t(' <td>', t.d2s(i.created));\n    o.t('</tr>');\n  end loop;\n  o.t(' </tbody>');\n  o.t('</table>');\n  o.t('</body>');\n  o.t('</html>');\nend;\n```\n\n### use json data service to populate chart\n\n```plsql\ncreate or replace package body chart_b is\n\n\tprocedure common_preface(default_type varchar2) is\n\t\tv_chart_type varchar2(30) := r.getc('chart_type', default_type);\n\tbegin\n\t\tsrc_b.header;\n\t\to.u('<link rel=stylesheet/>', '[animate.css]');\n\t\to.u('<script>', '[chart.js]', '');\n\t\to.u('<script>', '[zepto.js]', '');\n\t\to.u('<script>', '[underscore.js]', '');\n\t\to.t('<canvas#cc width=600 height=400>', '');\n\t\to.t('<script>',\n\t\t\t\tt.ps('\n\t\tvar ctx = document.getElementById(\"cc\").getContext(\"2d\")\n\t\t , demoChart = new Chart(ctx)\n\t\t , chartType=\":1\"\n\t\t ;',\n\t\t\t\t\t\t st(v_chart_type)));\n\tend;\n\n\tprocedure salary_min_max_by_job_id is\n\t\tcur sys_refcursor;\n\tbegin\n\t\tif r.is_xhr then\n\t\t\topen cur for\n\t\t\t\tselect a.job_id, count(*) cnt, avg(a.salary) avg, min(a.salary) min, max(a.salary) max\n\t\t\t\t\tfrom employees a\n\t\t\t\t group by a.job_id\n\t\t\t\t order by avg asc;\n\t\t\trs.print(cur);\n\t\t\treturn;\n\t\tend if;\n\t\n\t\tcommon_preface('Bar');\n\t\to.t('<div#links>');\n\t\to.u(' <a>', r.prog || '?chart_type=Line', 'Line');\n\t\to.u(' <a>', r.prog || '?chart_type=Bar', 'Bar');\n\t\to.u(' <a>', r.prog || '?chart_type=Radar', 'Rader');\n\t\to.t('</div>');\n\t\tb.l('<script>\n\t\t$.getJSON(location.pathname+\"?data\", function(data){\n\t\t\tvar salaries = data.$DATA.rows;\n\t\t\tvar chartData = {\n\t\t\t\tlabels : _.pluck(salaries, \"job_id\"),\n\t\t\t\tdatasets : [\n\t\t\t\t\t{\n\t\t\t\t\t\tfillColor : \"rgba(220,220,220,0.5)\",\n\t\t\t\t\t\tstrokeColor : \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointColor : \"rgba(220,220,220,1)\",\n\t\t\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\t\t\tdata : _.pluck(salaries, \"min\")\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tfillColor : \"rgba(151,187,205,0.5)\",\n\t\t\t\t\t\tstrokeColor : \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointColor : \"rgba(151,187,205,1)\",\n\t\t\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\t\t\tdata : _.pluck(salaries, \"max\")\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t};\n\t\t\tdemoChart[chartType](chartData);\n\t\t});</script>');\n\tend;\n  \nend chart_b;\n```\n\nWhat NORADLE provide?\n=====================\n\n* NORADLE support full dynamic(data driving) web development(whether for html page service or json data service),\n  but more concise than PHP, J2EE, ...\n* NORADLE NDBC make node ecosystem embracing oracle, expand node's realm to serious enterprise information systems\n* NORADLE call out feature extend oracle PL/SQL to access external service/resource, break restrictions\n\nCore thinking\n==============\n\n* use pl/sql stored procedure to implement application/business logic\n  - servlet code that access data should be as close as the data, avoid complexity and develop-time and runtime overhead\n  - all SQL should be in PL/SQL stored procedure, no string concat, no network transfer \n  - no triditional templating, print html/json with concise API, just use pl/sql, introduce no excessive templating language\n  - give all function that a triditional servlet tech can provide, but be more concise and easier to master\n  - be aware of that middle layer JAVA/PHP/.NET/PYTHON/RUBY... is superfluous, except adding comlexity\n  - enjoy the good of oracle, advanced SQL, availility, stability, performance, scalability, tunable...\n* node.js can access oracle, and vice versa, they can aid each other\n  - node.js give oracle a http servlet container environment\n  - pl/sql can call out by node.js, extending oracle\n  - by node.js, oracle became a full servlet container, integrate code and data seamlessly\n  - by connectivity to oracle, node.js ecosysetm will extend to the area of enterprise information system\n\n\nthe resource for NORADLE\n========================\n\n### [document site](http://docs.noradle.com/) http://docs.noradle.com\n### [demo site](http://demo.noradle.com/) http://demo.noradle.com\n\n\n","starsCount":1,"created":"2013-03-29T08:06:37.669Z","modified":"2016-01-08T05:49:29.961Z","lastPublisher":{"name":"kaven276","email":"kaven276@vip.sina.com"},"owners":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"other":{"_attachments":{},"_from":".","_id":"noradle","_npmUser":{"name":"kaven276","email":"kaven276@vip.sina.com"},"_npmVersion":"1.4.28","_rev":"1-08d248dffe59cad41991f5399a34e007","_shasum":"ccdd8b3ace126e933175d6c6e55649ecf8444a29","author":{"name":"Li Yong","email":"kaven276@vip.sina.com"},"bugs":{"url":"https://github.com/kaven276/noradle/issues","email":"kaven276@vip.sina.com"},"directories":{},"dist-tags":{"latest":"0.16.2"},"dist":{"shasum":"ccdd8b3ace126e933175d6c6e55649ecf8444a29","tarball":"http://registry.npmjs.org/noradle/-/noradle-0.16.2.tgz"},"maintainers":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-08T05:49:29.961Z","created":"2013-03-29T08:06:37.669Z","0.6.1":"2013-03-29T08:06:40.593Z","0.6.2":"2013-04-02T02:51:56.329Z","0.6.3":"2013-04-02T05:51:47.692Z","0.6.4":"2013-04-09T03:22:34.999Z","0.6.5":"2013-04-15T02:05:27.567Z","0.6.6":"2013-04-16T01:19:48.039Z","0.6.7":"2013-04-16T07:01:14.195Z","0.6.9":"2014-02-13T09:16:29.149Z","0.6.11":"2014-02-28T07:20:50.169Z","0.10.0":"2015-01-16T02:35:00.297Z","0.10.1":"2015-01-16T02:44:03.921Z","0.10.2":"2015-01-16T06:04:12.017Z","0.10.4":"2015-01-23T03:37:28.477Z","0.10.6":"2015-03-18T03:18:36.294Z","0.10.7":"2015-03-24T06:15:29.839Z","0.11.1":"2015-07-06T08:55:38.432Z","0.11.2":"2015-07-31T03:43:58.314Z","0.11.3":"2015-10-08T07:39:43.394Z","0.12.0":"2015-11-24T02:30:11.811Z","0.12.1":"2015-11-24T06:51:41.594Z","0.12.2":"2015-11-27T07:51:32.800Z","0.13.0":"2015-12-10T08:00:33.455Z","0.14.0":"2015-12-16T09:29:42.250Z","0.14.1":"2015-12-17T01:16:54.939Z","0.14.2":"2015-12-17T06:15:01.788Z","0.15.0":"2015-12-22T01:12:21.328Z","0.16.2":"2016-01-08T05:49:29.961Z"},"users":{"kaven276":true}}}