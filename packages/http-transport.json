{"name":"http-transport","version":"1.1.3","description":"A basic isomorphic Javascript interface and implementations for HTTP requests","repository":"https://github.com/bvalosek/http-transport","scripts":{"test":"tape test/*.js"},"main":"index.js","license":"MIT","devDependencies":{"tape":"^3.0.3"},"dependencies":{"bluebird":"^2.3.11","debug":"^2.1.0","httpinvoke":"^1.3.2","jsonp-client":"^0.5.1"},"gitHead":"0085a869484d6c513b22bd9e4ab5cb855d615bb2","homepage":"https://github.com/bvalosek/http-transport","versions":[{"number":"1.0.0","date":"2014-09-15T16:33:48.538Z"},{"number":"1.0.1","date":"2014-09-24T00:54:39.827Z"},{"number":"1.0.2","date":"2014-09-26T00:10:16.268Z"},{"number":"1.0.3","date":"2014-10-17T13:28:03.652Z"},{"number":"1.1.0","date":"2014-11-15T00:55:34.761Z"},{"number":"1.1.1","date":"2014-11-20T19:50:12.379Z"},{"number":"1.1.2","date":"2014-11-21T02:14:27.452Z"},{"number":"1.1.3","date":"2014-11-25T05:30:11.037Z"}],"readme":"# HttpTransport\n\n[![Build Status](https://travis-ci.org/bvalosek/http-transport.png?branch=master)](https://travis-ci.org/bvalosek/http-transport)\n[![NPM version](https://badge.fury.io/js/http-transport.png)](http://badge.fury.io/js/http-transport)\n\nA basic promise-driven Javascript interface for HTTP requests.\n\n## Installation\n\n```\n$ npm install http-transport\n```\n\n## Rationale\n\n* Directly accessing HTTP data sources in domain code leads to difficulty in\n  testing and is a violation of SRP.\n* Complicated data abstraction layers are often too heavy-handed or not\n  flexible enough.\n* Writing isomorphic code that uses HTTP requests can be difficult.\n\n## Overview\n\nThis is a very small wrapper around the\n[httpinvoke](https://github.com/jakutis/httpinvoke) module that compresses the\nexternal API into the four primary HTTP verbs as methods that return a\n`Promise`.\n\nThe `HttpTransport` class is meant to be instantiated once and shared\nthroughout the application when domain code needs access to the HTTP layer,\ne.g. calling REST services.\n\nUsing a simple facade to make `GET` request vs e.g `$.get()` or the Node `http`\nmodule allows for clean, testable, isomorphic code.\n\n## Methods\n\n```javascript\nvar HttpTransport = require('http-transport');\n\nvar transport = new HttpTransport();\n```\n\n### transport.get(url, params?): Promise\n\nExecute a `GET` request with optional query parameters and return a `Promise` for\nthe response.\n\n```javascript\n// Basic GET\ntransport.get('/users')\n  .then(function(users) {\n    ...\n  });\n\n// With query params (fetches /users?group=admins)\ntransport.get('/users', { group: 'admins' })\n  .then(function(users) {\n    ...\n  });\n```\n\n### transport.post(url, data?): Promise\n\nExecute a `POST` request with optional object data passed as\n`application/x-www-form-urlencoded` and return a `Promise` for the response.\n\n```\ntransport.post('/blogs', { content: 'Hello, world!' })\n  .then(function(blog) {\n    ...\n  });\n```\n\n### transport.put(url, data?): Promise\n\nExecute a `PUT` request with optional object data passed as\n`application/x-www-form-urlencoded` and return a `Promise` for the response.\n\n```\ntransport.put('/users', { id: 123, name: 'Billy' })\n  .then(function(user) {\n    ...\n  });\n```\n\n### transport.delete(url, params?): Promise\n\nExecute a `DELETE` request with optional query parameters and return a `Promise` for\nthe response.\n\n```javascript\ntransport.delete('/users', { id: 123 })\n  .then(function(resp) {\n    ...\n  });\n```\n\n## JSONP\n\nThe `JsonpTransport` class also implements the `AbstractTransport` interface\nand can be used the same as the `HttpTransport` class, except it will throw an\nerror if any method other than `GET` is used.\n\n```javascript\nvar JsonpTransport = require('http-transport').JsonpTransport;\n\nvar transport = new JsonpTransport();\n\ntransport.get('http://api.external.com/').then(...);\n```\n\n## Testing\n\n```\n$ npm test\n```\n\n## License\n\nMIT\n","created":"2014-09-15T16:33:48.538Z","modified":"2014-11-25T05:30:11.037Z","lastPublisher":{"name":"bvalosek","email":"bvalosek@gmail.com"},"owners":[{"name":"bvalosek","email":"bvalosek@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-transport","_nodeVersion":"0.10.33","_npmUser":{"name":"bvalosek","email":"bvalosek@gmail.com"},"_npmVersion":"2.1.9","_rev":"1-3b2e7d80cd59bd5b2e657ece4099b114","_shasum":"7f7a14a9dae3ad072def3f07727478812b8b4f5a","author":{"name":"Brandon Valosek","email":"bvalosek@gmail.com","url":"http://bvalosek.com"},"bugs":{"url":"https://github.com/bvalosek/http-transport/issues"},"directories":{},"dist-tags":{"latest":"1.1.3"},"dist":{"shasum":"7f7a14a9dae3ad072def3f07727478812b8b4f5a","tarball":"http://registry.npmjs.org/http-transport/-/http-transport-1.1.3.tgz"},"maintainers":[{"name":"bvalosek","email":"bvalosek@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-11-25T05:30:11.037Z","created":"2014-09-15T16:33:48.538Z","1.0.0":"2014-09-15T16:33:48.538Z","1.0.1":"2014-09-24T00:54:39.827Z","1.0.2":"2014-09-26T00:10:16.268Z","1.0.3":"2014-10-17T13:28:03.652Z","1.1.0":"2014-11-15T00:55:34.761Z","1.1.1":"2014-11-20T19:50:12.379Z","1.1.2":"2014-11-21T02:14:27.452Z","1.1.3":"2014-11-25T05:30:11.037Z"}}}