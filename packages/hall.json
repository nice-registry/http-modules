{"name":"hall","description":"Unified http router middleware","version":"0.5.2","repository":"https://github.com/rumkin/hall","devDependencies":{"should":"~7.0.2","mocha":"~2.2.5","blanket":"~1.1.7"},"dependencies":{"route-parser":"0.0.5"},"scripts":{"test":"mocha test/**.spec.js","cov":"mocha test/**.spec.js -r blanket -R html-cov > tmp/coverage.html"},"main":"src/router.js","config":{"blanket":{"pattern":["src"],"data-cover-never":["node_modules","test"]}},"gitHead":"c00552f9b7b7426099176d1920bf1152e3cc339f","homepage":"https://github.com/rumkin/hall#readme","versions":[{"number":"0.0.1","date":"2015-08-01T15:16:31.184Z"},{"number":"0.0.2","date":"2015-08-01T15:17:36.697Z"},{"number":"0.1.0","date":"2016-09-24T23:53:43.055Z"},{"number":"0.1.1","date":"2016-10-02T05:37:08.467Z"},{"number":"0.2.0","date":"2016-10-12T16:57:13.798Z"},{"number":"0.3.0","date":"2016-10-14T17:12:23.496Z"},{"number":"0.4.0","date":"2016-10-21T15:57:16.408Z"},{"number":"0.4.1","date":"2016-10-21T16:20:29.544Z"},{"number":"0.5.0","date":"2016-11-22T13:39:01.062Z"},{"number":"0.5.1","date":"2017-02-11T13:38:55.672Z"},{"number":"0.5.2","date":"2017-02-11T13:46:52.285Z"}],"readme":"# Hall\n\nUnified HTTP middleware router. It works with express, connect and native http\nserver. It's goal is provide routring for distributable and modular\nweb applications and support standard behavior.\n\n![Travis](https://img.shields.io/travis/rumkin/hall/master.svg)\n\n\n## Installation\n\n```shell\nnpm install hall\n```\n\n## Usage\n\nExample of middleware factory.\n\n```javascript\nconst hall = require('hall');\nconst connect = require('connect');\n\n// Middleware factory\nconnect()\n    .use(hall((router) => {\n        router.get('/products/:id', (req, res) => {\n            // ...\n        });\n    });\n```\n\nExample of router factory.\n\n```javascript\nconst hall = require('hall');\nconst connect = require('connect');\n\n// Router instance\nconst router = hall();\n\nrouter.resource('/products/:id')\n.get((req, res, next) => {\n    // Return product...\n})\n.put((req, res, next) => {\n    // Update product...\n})\n.delete((req, res, next) => {\n    // Delete product...\n});\n\n\nrouter.get('/products/:id/reviews', (req, res) => {\n    // ...\n});\n\nconnect().use(router);\n```\n\nResources are differs from single routes. It processing before routes. If\nresource exists but method not defined than response gets 405 status code\n(method not allowed).\n\n## API\n\n### router.resource(route: string[, handlers: Object]) => Resource\n\nAdd resource. If route is defined return existing resource instance. If handlers\nis an object use property names as methods names and values as a handlers:\n\n```javascript\nrouter.resource('/users/:id')\n.get((req, res, next) => {\n    // ...\n})\n.put((req, res, next) => {\n    // ...\n});\n\nrouter.resource('/docs/:id', {\n    get(req, res, next) {\n        // get...\n    },\n    delete(req, res, next) {\n        // delete...\n    }\n});\n```\n\n### Methods\n\nRouter has methods `before`, `after`, `filter` and `use`. This methods allow\nto control process of request preprocessing and filtering. Note that before and after\nhandlers will not be called if there is no matching routes.\n\n```javascript\n\nvar router = hall();\n\n// Preprocess request\nrouter.before((req, res, next) => {\n    req.version = req.headers['X-API-VERSION'];\n    next();\n});\n\n// Pass only 2.0 API requests.\nrouter.filter((req) => {\n    return req.version === '2.0'\n});\n\nrouter.after((error, req, res, next) => {\n    // Got an error or nothing is found...\n});\n\nrouter.get('/product/:id', (req, res, next) => {\n    // Get and render product\n    res.end();\n});\n```\n\n### HTTP Methods\n\nMethods to bind http methods routes. There is several supported HTTP methods:\n\n* `GET`\n* `POST`\n* `PUT`\n* `DELETE`\n* `PATCH`\n* `HEAD`\n\nEach HTTP-method has it's own lowercased alias:\n\n```javascript\nrouter.get('/', (req, res, next) => {\n  // ...\n});\n\nrouter.post('/', (req, res, next) => {\n  // ...\n});\n\nrouter.patch('/', (req, res, next) => {\n  // ...\n});\n```\n\nAlso route could be instance of `hall.RouteParser`:\n\n```javascript\nrouter.get(new hall.RouteParser('/some/:id'), (req, res, next) => {\n  // ...\n});\n```\n\n\n### Filter\n\nFilter method allow to filter requests in smarter way. It's using for dynamic request filtering. Filter method should\nreturn boolean, promise or use methods;\n\n```javascript\n// Boolean\nrouter.filter((req) => {\n    return req.hostname === 'localhost';\n});\n\n// Promise\nrouter.filter((req) => {\n    return new Promise((resolve, reject) => {\n        // Do some async job\n    });\n});\n\n// Methods\nrouter.filter((req, next, skip) => {\n    if (req.hostname === 'localhost') {\n        next();\n    } else {\n        skip();\n    }\n});\n```\n\n### Use\n\nMethod `use` is context dependent and it will call before if there is no routes defined and after in other way.\n\n```javascript\nrouter.use((req, res, next) => {\n    // Call before\n    next();\n});\n\nrouter.get('/product/:id', (req, res, next) => {\n    // Get and render product\n    res.end();\n});\n\nrouter.use((req, res, next) => {\n    // Call after\n    next();\n```\n\n## Workflow\n\nRouter will not call any method if request has no matching url. This is made for request isolation and high productivity.\nIf you have some job which should be done for each request move it to previous loop.\n","created":"2015-08-01T15:16:31.184Z","modified":"2017-02-11T13:48:10.766Z","lastPublisher":{"name":"rumkin","email":"dev@rumk.in"},"owners":[{"name":"rumkin","email":"dev@rumk.in"}],"other":{"_attachments":{},"_from":".","_id":"hall","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hall-0.5.2.tgz_1486820810435_0.33209149446338415"},"_npmUser":{"name":"rumkin","email":"dev@rumk.in"},"_npmVersion":"2.15.9","_rev":"10-daaecbb85c4da87601381e726d173df4","_shasum":"b43030ec7e46a939e630a05301d6b74af9050948","bugs":{"url":"https://github.com/rumkin/hall/issues"},"directories":{},"dist-tags":{"latest":"0.5.2"},"dist":{"shasum":"b43030ec7e46a939e630a05301d6b74af9050948","tarball":"https://registry.npmjs.org/hall/-/hall-0.5.2.tgz"},"maintainers":[{"name":"rumkin","email":"dev@rumk.in"}],"readmeFilename":"readme.md","time":{"modified":"2017-02-11T13:48:10.766Z","created":"2015-08-01T15:16:31.184Z","0.0.1":"2015-08-01T15:16:31.184Z","0.0.2":"2015-08-01T15:17:36.697Z","0.1.0":"2016-09-24T23:53:43.055Z","0.1.1":"2016-10-02T05:37:08.467Z","0.2.0":"2016-10-12T16:57:13.798Z","0.3.0":"2016-10-14T17:12:23.496Z","0.4.0":"2016-10-21T15:57:16.408Z","0.4.1":"2016-10-21T16:20:29.544Z","0.5.0":"2016-11-22T13:39:01.062Z","0.5.1":"2017-02-11T13:38:55.672Z","0.5.2":"2017-02-11T13:46:52.285Z"}}}