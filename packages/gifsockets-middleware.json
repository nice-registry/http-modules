{"name":"gifsockets-middleware","description":"Set of HTTP middlewares for gifsockets","version":"0.1.0","homepage":"https://github.com/twolfson/gifsockets-middleware","repository":"https://github.com/twolfson/gifsockets-middleware","licenses":[{"type":"UNLICENSE","url":"https://github.com/twolfson/gifsockets-middleware/blob/master/UNLICENSE"}],"main":"lib/gifsockets-middleware","engines":{"node":">= 0.8.0"},"scripts":{"test":"mocha"},"dependencies":{"gifsockets":"~0.1.0","request":"~2.27.0","function-to-string":"~0.2.0"},"devDependencies":{"mocha":"~1.11.0","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.0","grunt-contrib-watch":"~0.4.0","raw-body":"~0.2.0","phantomjs-pixel-server":"~0.1.0","get-pixels":"~1.0.1"},"keywords":["gifsockets","gif","connect","middleware"],"readme":"# gifsockets-middleware [![Build status](https://travis-ci.org/twolfson/gifsockets-middleware.png?branch=master)](https://travis-ci.org/twolfson/gifsockets-middleware)\n\nSet of HTTP middlewares for [gifsockets][]\n\nThis is part of the [gifsockets project][]; it acts as a plug and play middleware that is used in the [demo][gifsockets project] but can be re-used anywhere.\n\n[gifsockets]: https://github.com/twolfson/gifsockets\n[gifsockets project]: https://github.com/twolfson/gifsockets-server\n\n## Getting Started\nInstall the module with: `npm install gifsockets-middleware`\n\n```javascript\nvar GifsocketMiddleware = require('gifsockets-middleware');\nvar middlewares = GifsocketMiddleware({width: 200, height: 200});\nvar express = require('express');\nvar app = express();\n\n// middlewares returns an object containing 4 middlewares\n// `openImage` writes the beginning of a .gif and leaves `res` open\napp.get('/image.gif', middlewares.openImage);\n\n// `writePixelsToImages` writes a new frame to all open `res` from openImage\nvar bodyParser = express.bodyParser();\napp.post('/image/pixels', bodyParser, middlewares.writePixelsToImages);\n\n// `writeTextToImages` accepts a string of text and writes a new frame\n// This requires running `phantomjs-pixel-server`\napp.post('/image/text', bodyParser, middlewares.writeTextToImages);\n\n// `closeOpenImages` closes all active images opened by `openImage`\napp.post('/image/close', middlewares.closeOpenImages);\n\n// If you want to load a specific middleware, you can do so\nvar openImageMiddleware = require('gifsockets-middleware/lib/middlewares/open-image');\nvar openImage = openImageMiddleware(gifsocket);\n// `openImage` has the same behavior as that returned from `GifsocketMiddleware`\n```\n\n## Documentation\n`gifsockets-middleware` returns `GifsocketMiddleware` as its `module.exports`\n\n### `GifsocketMiddleware(options)`\nFunction that generates an object of middlewares for `gifsockets`\n\n- options `Object`\n    - width `Number` Width of the output GIF/`gifsocket`\n    - height `Number` Height of the output GIF/`gifsocket`\n- Returns an object containing\n    - `openImage` middleware\n    - `writePixelsToImages` middleware\n    - `writeTextToImages` middleware\n    - `closeOpenImages` middleware\n\n### `openImage` middleware\nMiddleware that will maintain an open connection such that it can write additional GIF frames.\n\nFunction signature is `function (req, res, next) {}`\n\nThis does not expect any information on `req`/`res` and will not callback to `next`.\n\n### `writePixelsToImages` middleware\nMiddleware that will write a new GIF frame with the provided pixels.\n\nFunction signature is `function (req, res, next) {}`\n\nIf `req.rgbPixels` exists, we will draw a GIF frame with the pixel values.\n\n> `req.rgbPixels` is expected to be an stringified array of rgb pixels; `[0, 1, 2, 3, 4, 5]` is 2 pixels with `r: 0, g: 1, b: 2` and `r: 3, g: 4, b: 5`\n\nIf `req.rgbPixels` is not found, we look for `req.rgbaPixels` or `req.body`. If either of these is found, we will draw a GIF frame with the pixel values.\n\n> `req.rgbaPixels`/`req.body` is expected to be an stringified array of rgba pixels; `[0, 1, 2, 3, 4, 5, 6, 7]` is 2 pixels with `r: 0, g: 1, b: 2, a: 3` and `r: 4, g: 5, b: 6, a: 7`\n\nThis will reply with a `204` when it is complete.\n\n### `writeTextToImages` middleware\n**This depends on [phantomjs-pixel-server][] running as another process.**\n\n**Please read the documentation: https://github.com/twolfson/phantomjs-pixel-server**\n\n[phantomjs-pixel-server]: https://github.com/twolfson/phantomjs-pixel-server\n\nMiddleware that will create and write a new GIF frame with the provided text parameters.\n\nFunction signature is `function (req, res, next) {}`\n\nIf `req.body` is provided, we will parse it via [`querystring.parse`][] and use the following parameters:\n\n- text `String` - Text to write to the canvas\n- background `String` - [CSS color][] background for the canvas (default \"#000000\")\n  - Any valid [CSS color][] is accepted, under the hood we are using [`fillStyle`][]\n- foreground `String` - [CSS color][] for text on the canvas (default \"#BADA55\")\n  - Any valid [CSS color][] is accepted, under the hood we are using [`fillStyle`][]\n- font-size `Number` - Size of the font to draw (default: 30)\n- font-family `String` - Font family to use on the canvas (default: \"Impact\")\n\n[`querystring.parse`]: http://nodejs.org/api/querystring.html\n[CSS color]: https://developer.mozilla.org/en-US/docs/Web/CSS/color\n[`fillStyle`]: http://www.w3.org/TR/2dcontext/#fill-and-stroke-styles\n\nThis will reply with a `204` when it is complete.\n\n### `closeOpenImages` middleware\nMiddleware that iterates over open connections, writes GIF footer, and closes connection.\n\nFunction signature is `function (req, res, next) {}`\n\nThis will reply with a `204` when it is complete.\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## Donating\nSupport this project and [others by twolfson][gittip] via [gittip][].\n\n[![Support via Gittip][gittip-badge]][gittip]\n\n[gittip-badge]: https://rawgithub.com/twolfson/gittip-badge/master/dist/gittip.png\n[gittip]: https://www.gittip.com/twolfson/\n\n## Unlicense\nAs of Nov 20 2013, Todd Wolfson has released this repository and its contents to the public domain.\n\nIt has been released under the [UNLICENSE][].\n\n[UNLICENSE]: UNLICENSE\n","versions":[{"number":"0.1.0","date":"2013-11-21T10:39:04.223Z"}],"created":"2013-11-21T10:39:02.193Z","modified":"2013-11-21T10:39:04.223Z","lastPublisher":{"name":"twolfson","email":"todd@twolfson.com"},"owners":[{"name":"twolfson","email":"todd@twolfson.com"}],"other":{"_attachments":{},"_from":".","_id":"gifsockets-middleware","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"_npmVersion":"1.3.11","_rev":"1-26ab39a160f8797428cbcec4b08e4b63","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"bugs":{"url":"https://github.com/twolfson/gifsockets-middleware/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"9bddc72148d473db762a56fa6b0eae6835a73ea0","tarball":"http://registry.npmjs.org/gifsockets-middleware/-/gifsockets-middleware-0.1.0.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"}],"readmeFilename":"README.md","time":{"modified":"2013-11-21T10:39:04.223Z","created":"2013-11-21T10:39:02.193Z","0.1.0":"2013-11-21T10:39:04.223Z"}}}