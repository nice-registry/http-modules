{"name":"nice-request","version":"1.3.1","description":"A library to help with http requests in nodeland.","main":"nice-request.js","scripts":{"lint":"gulp lint","lint:watch":"gulp lint-watch --cont","test":"npm run lint && npm run test:unit","test:unit":"mocha '*.test.js' 'make-request/test/*.test.js'","test:watch":"npm run test:unit -- -w","test:coverage":"JUNIT_REPORT_PATH=report.xml JUNIT_REPORT_STACK=1 istanbul cover -x '*.test.js' _mocha -- --reporter mocha-jenkins-reporter '*.test.js' 'make-request/test/*.test.js'","test:integration":"mocha '**/*.integration.test.js'"},"repository":"https://github.com/BobbieBarker/nice-request","license":"MIT","homepage":"https://github.com/BobbieBarker/nice-request.git#readme","devDependencies":{"chai":"^3.5.0","chai-as-promised":"^5.3.0","eslint":"^2.9.0","eslint-config-bobbiebarker":"git+ssh://git@github.com/BobbieBarker/custom-eslint-rules.git","eslint-plugin-import":"^1.10.2","gulp":"^3.9.1","gulp-cached":"^1.1.0","gulp-chmod":"^1.3.0","gulp-cli":"^1.2.1","gulp-eslint":"^3.0.1","gulp-if":"^2.0.1","gulp-rename":"^1.2.2","istanbul":"^0.4.2","mocha":"^2.5.3","mocha-jenkins-reporter":"^0.2.2","nock":"^8.0.0","proxyquire":"^1.7.10","sinon":"^1.17.4","sinon-as-promised":"^3.0.1","sinon-chai":"^2.8.0","testdouble":"^1.10.2","yargs":"^4.8.1"},"dependencies":{"bluebird":"^3.4.1","lodash":"^4.16.6","nice-http-error":"^1.1.0","request":"^2.78.0","request-promise":"^4.1.1"},"engines":{"node":">=4.0.0"},"gitHead":"ad5bb6569dd49721d203f0e05849e7a11d76a1d9","versions":[{"number":"1.0.0","date":"2016-11-07T04:32:19.932Z"},{"number":"1.0.1","date":"2016-11-07T04:37:44.154Z"},{"number":"1.1.0","date":"2016-11-15T00:09:31.119Z"},{"number":"1.2.0","date":"2017-01-19T03:48:17.511Z"},{"number":"1.2.1","date":"2017-01-20T20:46:07.151Z"},{"number":"1.2.2","date":"2017-02-17T23:26:44.379Z"},{"number":"1.2.3","date":"2017-03-12T20:15:32.839Z"},{"number":"1.2.4","date":"2017-03-27T00:30:28.255Z"},{"number":"1.3.0","date":"2017-03-28T04:22:59.399Z"},{"number":"1.3.1","date":"2017-03-29T22:00:20.791Z"}],"readme":"# Nice Request\n\nnice-request is a promise based library to facilitate service to service communication. It makes use of a singleton pattern and exposes two methods as a part of it's API, setup and request. Additionally, data is logged off of failed responses to enable better metrics for API and system performance.\n\n## Installation\n\nRun this command in a terminal session to add nice-request to your project:\n\n```\nnpm install nice-request --save\n```\n\n## API\n\n* ### setup()\n\nThe setup method should be invoked when the express server is initialized with these arguments:\n\n* `logger`: a object with .info() function for logging\n* `projectTag`: a string used for constructing the metrics tag (ex. dev.monto-user)\n\n```javascript\n\nconst Logger = require('some-logger')\nconst niceRequest = require('nice-request');\n\nconst logger = new Logger();\n\nniceRequest.setup('project tag', logger);\n```\n\n* ### request()\n\nThe request method is to be used to make HTTP requests. It accepts one argument, a configuration object, to set the details for the outbound request.\nSuccessful requests will result in a fulfilled promise with the value of the response.body. Failed requests will result in a rejected promise with a nice error.\n\n```javascript\nconst niceRequest = require('nice-request');\n\nniceRequest.request({\n    url: `http://some-api/users`, // desired resource\n    method: 'GET', // desired http method\n    metricTag: 'get_account', // string - tag to identify the request in the log (ex. 'create_user')\n  })\n  .then(result => {});\n```\n\nOptional object properties:\n\n  + headers: object - additional http headers specific to the request.\n  + body: object - req data\n  + queryString: object -\n  + timeout: number - override timeout(ms). Default timeout is 25000 ms.\n  + resolveWithFullResponse: boolean - true resolve with full response (including headers) instead of just body\n  + rejectUnauthorized: boolean - ignore SSL certificate errors (i.e. self-signed certs)\n  + maxTries: integer - integer specifying the maximum number of retry attempts.\n  + errCond: function - function that accepts an error object for evaluation and returns a boolean indicating if the request should be retried or not\n\n\n#### Responses\n\nThe niceRequest.request(options) function is implemented to return the response body of the request as a JSON object. Please note that headers and http properties are not available in the response body. It is assumed that the http status code is 200 if the requests fulfills.\n\n#### Error Handling\n\n[NiceErrors](https://www.npmjs.com/package/nice-http-error), and [request-promise](https://www.npmjs.com/package/request-promise-json) errors will be returned to the callee with a newly created NiceError.\n\n#### Timeouts\n\nNice requests will timeout by default after 25 seconds or at the specified time in the requestOptions object if no response is sent back before that timeframe.\n","created":"2016-11-07T04:32:19.932Z","modified":"2017-03-29T22:00:20.791Z","lastPublisher":{"name":"bobbiebarker","email":"sirkemera@gmail.com"},"owners":[{"name":"bobbiebarker","email":"sirkemera@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"nice-request","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/nice-request-1.3.1.tgz_1490824820513_0.9216094994917512"},"_npmUser":{"name":"bobbiebarker","email":"sirkemera@gmail.com"},"_npmVersion":"3.10.8","_rev":"10-2f9e5fe08bc231ef7c5319c9ecdc3263","_shasum":"8a7bdc7ba6cc2782b53b506a61dcb248563c6b1d","bugs":{"url":"https://github.com/BobbieBarker/nice-request/issues"},"directories":{},"dist-tags":{"latest":"1.3.1"},"dist":{"shasum":"8a7bdc7ba6cc2782b53b506a61dcb248563c6b1d","tarball":"https://registry.npmjs.org/nice-request/-/nice-request-1.3.1.tgz"},"maintainers":[{"name":"bobbiebarker","email":"sirkemera@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-29T22:00:20.791Z","created":"2016-11-07T04:32:19.932Z","1.0.0":"2016-11-07T04:32:19.932Z","1.0.1":"2016-11-07T04:37:44.154Z","1.1.0":"2016-11-15T00:09:31.119Z","1.2.0":"2017-01-19T03:48:17.511Z","1.2.1":"2017-01-20T20:46:07.151Z","1.2.2":"2017-02-17T23:26:44.379Z","1.2.3":"2017-03-12T20:15:32.839Z","1.2.4":"2017-03-27T00:30:28.255Z","1.3.0":"2017-03-28T04:22:59.399Z","1.3.1":"2017-03-29T22:00:20.791Z"}}}