{"name":"hurt","version":"0.1.0-alpha.1","description":"HTTP and SPA routing using RFC 6570 URI templates","keywords":["http","router","routing","6570","uri","templates"],"license":"MIT","repository":"https://github.com/jpommerening/hurt","main":"lib/index.js","browser":"lib/browser.js","scripts":{"prepublish":"babel -d lib src && webpack -p","test":"nyc -s -n src mocha","coverage":"cross-env NODE_ENV=coverage nyc -n src mocha","posttest":"eslint src test","prepush":"npm test","postmerge":"npm install","postrewrite":"npm install"},"dependencies":{"eventemitter3":"^2.0.2","uri-templates":"^0.2.0"},"devDependencies":{"babel-cli":"^6.18.0","babel-core":"^6.24.1","babel-loader":"^6.3.2","babel-plugin-istanbul":"^4.1.3","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-preset-es2015":"^6.24.1","chai":"^3.5.0","connect":"^3.5.0","cross-env":"^5.0.0","eslint":"^3.12.2","express":"^4.14.0","husky":"^0.12.0","istanbul-api":"^1.1.1","lodash.template":"^4.4.0","memory-fs":"^0.4.1","mocha":"^3.2.0","nyc":"^10.1.2","phantomjs-prebuilt":"^2.1.14","restify":"^4.3.0","staged-files":"^0.1.2","wd":"^1.1.1","webpack":"^2.5.1"},"config":{"port":8080},"gitHead":"ad0edbd6349ec80103fdb33b2d23d7cde1a6ad59","homepage":"https://github.com/jpommerening/hurt#readme","versions":[{"number":"0.1.0-alpha.1","date":"2017-06-15T10:54:23.207Z"}],"readme":"# hurt\n\n> **H**TTP routing with **UR**I **t**emplates\n\nAfter all of two minutes browsing [npmjs.org][npm-search] I could not find what\nI was looking for, so I built it myself.  How hard can it be, right?\n\n## Motivation\n\nNot very. [RFC 6570][] specifies URI templates, of which there are\n[a bunch][6570libs] of very nice implementations.  However, at the time of\nwriting, full featured URI template routers for [express][], [connect][] or\n[restify][] were hard to come by.\n\nSo what's so great about URI templates then? For one, they have a syntax to\nproperly describe recursive paths and arguments.  This makes them great for\ndescribing APIs. Actually, you might have seen them, for example in GitHubs API\ndocumentation.  Also, when you're writing a RESTful API you'll often write URLs\ninto your service's responses. Instead of hard-coding the URLs or using some\nother way to generate them, you can just use the router to give you a route,\nbecause if any part of your software knows which URLs are reachable, it's your\nrouter.\n\n## Usage\n\nSo what does `hurt` look like? _Glad you asked!_\nLet's start this of with an example:\n\n```js\nimport hurt from 'hurt';\nimport { Users } from './app/model';\n\nconst router = hurt();\n\nrouter.get('/users/{name}', function (req, res, next) {\n  const { name } = req.params;\n  const user = Users.get({ name });\n  res.send(200, user);\n});\n\nrouter.get('/users{?q,page}', function (req, res, next) {\n  const { q, page = 0 } = req.params;\n  const length = 10;\n  const start = page * length;\n  const users = Users.find({ q }).slice(start, length);\n  res.send(200, users);\n});\n```\n\nJust like so many other routers, except with RFC 6570 URI templates. There are\nsome nice bonuses though. Check out the docs.\n\n## Installation\n\n### npm\n\n```console\nnpm install hurt\n```\n\n### bower\n\n```console\nbower install hurt\n```\n\n### html\n\n```console\ncurl -o hurt.min.js https://github.com/jpommerening/hurt/releases/download/v0.1.0/hurt.min.js\necho '<script src=\"hurt.min.js\"></script>' >> index.html\n```\n\n[npm-search]: https://www.npmjs.com/search?q=6570+router\n[RFC 6570]: https://tools.ietf.org/html/rfc6570\n[6570libs]: https://github.com/medialize/URI.js#uri-template\n[express]: https://expressjs.com\n[connect]: https://senchalabs.github.io/connect\n[restify]: https://restify.com\n","created":"2017-06-15T10:54:23.207Z","modified":"2017-06-15T10:54:23.207Z","lastPublisher":{"name":"jpommerening","email":"jonas.pommerening@gmail.com"},"owners":[{"name":"jpommerening","email":"jonas.pommerening@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"hurt","_nodeVersion":"6.9.5","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/hurt-0.1.0-alpha.1.tgz_1497524062161_0.4614756202790886"},"_npmUser":{"name":"jpommerening","email":"jonas.pommerening@gmail.com"},"_npmVersion":"3.10.10","_rev":"1-50e5173ac1fd03bbe8543c6c68a3e73a","_shasum":"31ab4761fd702f63ae79704349ab92dfd5ded5a2","bugs":{"url":"https://github.com/jpommerening/hurt/issues"},"directories":{},"dist-tags":{"latest":"0.1.0-alpha.1"},"dist":{"shasum":"31ab4761fd702f63ae79704349ab92dfd5ded5a2","tarball":"https://registry.npmjs.org/hurt/-/hurt-0.1.0-alpha.1.tgz"},"maintainers":[{"name":"jpommerening","email":"jonas.pommerening@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-15T10:54:23.207Z","created":"2017-06-15T10:54:23.207Z","0.1.0-alpha.1":"2017-06-15T10:54:23.207Z"}}}