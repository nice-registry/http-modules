{"name":"http-link-header","version":"0.8.0","description":"Parse & format HTTP link headers according to RFC 5988","license":"MIT","keywords":["rfc5988","rfc","5988","http","link","header"],"main":"lib/link.js","dependencies":{},"devDependencies":{"matcha":"~0.7.0","mocha":"~3.2.0"},"homepage":"https://github.com/jhermsmeier/node-http-link-header","repository":"https://github.com/jhermsmeier/node-http-link-header","scripts":{"benchmark":"matcha --reporter plain","test":"mocha --ui tdd"},"gitHead":"e317e7717223080c45dac151e1ca8610e9b10986","versions":[{"number":"0.1.0","date":"2016-10-28T18:07:14.050Z"},{"number":"0.2.0","date":"2016-11-01T18:34:09.519Z"},{"number":"0.3.0","date":"2016-11-01T21:36:03.910Z"},{"number":"0.4.0","date":"2016-11-01T22:43:40.584Z"},{"number":"0.5.0","date":"2016-11-01T23:13:16.459Z"},{"number":"0.6.0","date":"2016-11-19T14:23:14.613Z"},{"number":"0.7.0","date":"2016-12-07T12:54:27.390Z"},{"number":"0.8.0","date":"2017-03-06T19:54:24.360Z"}],"readme":"# HTTP Link Header\n[![npm](https://img.shields.io/npm/v/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![npm license](https://img.shields.io/npm/l/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![npm downloads](https://img.shields.io/npm/dm/http-link-header.svg?style=flat-square)](https://npmjs.com/http-link-header)\n[![build status](https://img.shields.io/travis/jhermsmeier/node-http-link-header.svg?style=flat-square)](https://travis-ci.org/jhermsmeier/node-http-link-header)\n\nParse & format HTTP link headers according to [RFC 5988]\n\n[RFC 5988]: https://tools.ietf.org/html/rfc5988\n\n## Install via [npm](https://npmjs.com)\n\n```sh\n$ npm install --save http-link-header\n```\n\n## Usage\n\n```js\nvar LinkHeader = require( 'http-link-header' )\n```\n\n**Parse a HTTP link header**\n\n```js\nvar link = LinkHeader.parse(\n  '<example.com>; rel=\"example\"; title=\"Example Website\", ' +\n  '<example-01.com>; rel=\"alternate\"; title=\"Alternate Example Domain\"'\n)\n\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n  ]\n}\n```\n\n**Check whether it has a reference with a given attribute & value**\n\n```js\nlink.has( 'rel', 'alternate' )\n> true\n```\n\n**Retrieve a reference with a given attribute & value**\n\n```js\nlink.get( 'rel', 'alternate' )\n> [\n  { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' }\n]\n```\n```js\n// Shorthand for `rel` attributes\nlink.rel( 'alternate' )\n> [\n  { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' }\n]\n```\n\n**Set references**\n\n```js\nlink.set({ rel: 'next', uri: 'http://example.com/next' })\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n    { rel: 'next', uri: 'http://example.com/next' }\n  ]\n}\n```\n\n**Parse multiple headers**\n\n```js\nvar links = new LinkHeader()\n\nlinks.parse( '<example.com>; rel=\"example\"; title=\"Example Website\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n  ]\n}\n\nlinks.parse( '<example-01.com>; rel=\"alternate\"; title=\"Alternate Example Domain\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n  ]\n}\n\nlinks.parse( '<example-02.com>; rel=\"alternate\"; title=\"Second Alternate Example Domain\"' )\n> Link {\n  refs: [\n    { uri: 'example.com', rel: 'example', title: 'Example Website' },\n    { uri: 'example-01.com', rel: 'alternate', title: 'Alternate Example Domain' },\n    { uri: 'example-02.com', rel: 'alternate', title: 'Second Alternate Example Domain' },\n  ]\n}\n```\n\n**Stringify to HTTP header format**\n\n```js\nlink.toString()\n> '<example.com>; rel=\"example\"; title=\"Example Website\", <example-01.com>; rel=\"alternate\"; title=\"Alternate Example Domain\"'\n```\n\n## Speed\n\n```\n$ npm run benchmark\n```\n\n```\nhttp-link-header\n  parse .......................................... 204,355 op/s\n  toString ....................................... 485,465 op/s\n```\n","created":"2016-10-28T18:07:14.050Z","modified":"2017-03-06T19:54:24.360Z","lastPublisher":{"name":"jhermsmeier","email":"jhermsmeier@gmail.com"},"owners":[{"name":"jhermsmeier","email":"jhermsmeier@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-link-header","_nodeVersion":"7.7.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/http-link-header-0.8.0.tgz_1488830063802_0.7996700501535088"},"_npmUser":{"name":"jhermsmeier","email":"jhermsmeier@gmail.com"},"_npmVersion":"4.4.0","_rev":"8-93b6cfd317e33e2790038d484b6ba8f1","_shasum":"a22b41a0c9b1e2d8fac1bf1b697c6bd532d5f5e4","author":{"name":"Jonas Hermsmeier","email":"jhermsmeier@gmail.com","url":"https://jhermsmeier.de"},"bugs":{"url":"https://github.com/jhermsmeier/node-http-link-header/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"0.8.0"},"dist":{"shasum":"a22b41a0c9b1e2d8fac1bf1b697c6bd532d5f5e4","tarball":"https://registry.npmjs.org/http-link-header/-/http-link-header-0.8.0.tgz"},"maintainers":[{"name":"jhermsmeier","email":"jhermsmeier@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-06T19:54:24.360Z","created":"2016-10-28T18:07:14.050Z","0.1.0":"2016-10-28T18:07:14.050Z","0.2.0":"2016-11-01T18:34:09.519Z","0.3.0":"2016-11-01T21:36:03.910Z","0.4.0":"2016-11-01T22:43:40.584Z","0.5.0":"2016-11-01T23:13:16.459Z","0.6.0":"2016-11-19T14:23:14.613Z","0.7.0":"2016-12-07T12:54:27.390Z","0.8.0":"2017-03-06T19:54:24.360Z"}}}