{"name":"resin-request","version":"8.4.0","description":"Resin.io HTTP client","main":"build/request.js","homepage":"https://github.com/resin-io-modules/resin-request","repository":"https://github.com/resin-io-modules/resin-request","keywords":["resin","request","http"],"scripts":{"lint":"gulp lint","test":"npm run test-node && npm run test-browser","test-node":"gulp test","test-browser":"karma start","build":"gulp build","prepublish":"npm test && npm run build","readme":"jsdoc2md --template doc/README.hbs build/request.js build/progress.js build/utils.js > README.md"},"license":"Apache-2.0","devDependencies":{"coffee-script":"~1.12.1","resin-fetch-mock":"^1.0.1","gulp":"^3.9.1","gulp-coffee":"^2.3.1","gulp-coffeelint":"^0.6.0","gulp-mocha":"^3.0.0","gulp-util":"^3.0.1","jsdoc-to-markdown":"^2.0.1","karma":"^1.3.0","mocha":"^3.0.0","mochainon":"^1.0.0","resin-config-karma":"^1.0.4","resin-token":"^4.0.0","temp":"^0.8.3","timekeeper":"^1.0.0"},"dependencies":{"bluebird":"^3.3.4","fetch-ponyfill":"^3.0.2","lodash":"^4.6.1","progress-stream":"^1.1.1","qs":"^6.3.0","resin-errors":"^2.5.0","rindle":"^1.3.1"},"peerDependencies":{"resin-token":"^4.0.0"},"gitHead":"18e7e2d35b4c8377cfa3ceff4e34f90230b8ca4d","versions":[{"number":"1.0.0","date":"2015-03-17T16:34:11.953Z"},{"number":"1.1.0","date":"2015-03-18T20:39:58.151Z"},{"number":"1.2.0","date":"2015-03-19T13:03:51.227Z"},{"number":"1.2.1","date":"2015-03-20T14:02:46.048Z"},{"number":"1.2.2","date":"2015-03-20T19:13:49.730Z"},{"number":"1.2.3","date":"2015-04-21T15:12:38.437Z"},{"number":"1.2.4","date":"2015-05-07T14:38:13.806Z"},{"number":"1.2.5","date":"2015-05-18T16:47:10.409Z"},{"number":"1.3.0","date":"2015-06-12T11:23:55.697Z"},{"number":"2.0.0","date":"2015-06-19T12:36:25.107Z"},{"number":"2.1.0","date":"2015-06-29T13:10:54.606Z"},{"number":"2.2.0","date":"2015-07-17T14:41:53.142Z"},{"number":"2.2.1","date":"2015-07-17T18:24:32.209Z"},{"number":"2.2.2","date":"2015-07-27T15:50:33.550Z"},{"number":"2.2.3","date":"2015-08-07T11:49:02.665Z"},{"number":"2.2.4","date":"2015-08-24T11:45:53.078Z"},{"number":"2.2.5","date":"2015-08-24T15:09:44.086Z"},{"number":"2.3.0","date":"2015-08-25T16:59:54.854Z"},{"number":"2.3.1","date":"2015-08-26T11:59:35.668Z"},{"number":"2.3.2","date":"2015-09-07T06:14:50.740Z"},{"number":"3.0.0","date":"2015-09-23T15:27:25.436Z"},{"number":"2.4.0","date":"2015-11-17T18:04:16.293Z"},{"number":"2.4.1","date":"2015-11-23T15:57:44.625Z"},{"number":"2.4.2","date":"2016-01-08T20:37:57.327Z"},{"number":"2.4.3","date":"2016-01-20T15:23:33.805Z"},{"number":"4.0.0","date":"2016-01-20T18:36:00.009Z"},{"number":"4.0.1","date":"2016-01-25T00:23:02.791Z"},{"number":"4.0.2","date":"2016-02-12T23:37:05.181Z"},{"number":"4.0.3","date":"2016-02-17T22:20:46.565Z"},{"number":"4.0.4","date":"2016-02-19T02:31:07.072Z"},{"number":"4.0.5","date":"2016-03-03T15:39:04.708Z"},{"number":"4.0.6","date":"2016-03-09T17:37:48.168Z"},{"number":"4.0.7","date":"2016-03-09T19:44:45.121Z"},{"number":"4.1.0","date":"2016-03-14T02:15:24.595Z"},{"number":"4.1.1","date":"2016-03-14T16:33:22.740Z"},{"number":"4.1.2","date":"2016-03-17T15:30:20.765Z"},{"number":"5.0.0","date":"2016-09-15T12:47:31.954Z"},{"number":"6.0.0","date":"2016-11-20T20:10:30.707Z"},{"number":"6.0.1","date":"2016-11-24T10:33:39.737Z"},{"number":"6.1.0","date":"2016-12-13T11:01:54.393Z"},{"number":"6.1.1","date":"2016-12-13T15:14:13.598Z"},{"number":"6.2.0","date":"2016-12-13T20:05:03.723Z"},{"number":"7.0.0","date":"2017-01-02T13:18:15.114Z"},{"number":"8.0.0","date":"2017-01-04T15:11:32.015Z"},{"number":"8.0.1","date":"2017-01-05T14:29:34.329Z"},{"number":"8.1.0","date":"2017-01-06T14:46:43.590Z"},{"number":"8.2.0","date":"2017-02-20T12:38:17.665Z"},{"number":"8.3.0","date":"2017-02-23T19:36:42.014Z"},{"number":"8.3.1","date":"2017-04-03T13:25:46.756Z"},{"number":"8.4.0","date":"2017-04-10T22:58:09.429Z"}],"readme":"resin-request\r\n=============\r\n\r\n> Resin.io HTTP client.\r\n\r\n[![npm version](https://badge.fury.io/js/resin-request.svg)](http://badge.fury.io/js/resin-request)\r\n[![dependencies](https://david-dm.org/resin-io-modules/resin-request.svg)](https://david-dm.org/resin-io-modules/resin-request.svg)\r\n[![Build Status](https://travis-ci.org/resin-io-modules/resin-request.svg?branch=master)](https://travis-ci.org/resin-io-modules/resin-request)\r\n[![Build status](https://ci.appveyor.com/api/projects/status/8qmwhh1vhm27otn4/branch/master?svg=true)](https://ci.appveyor.com/project/resin-io/resin-request/branch/master)\r\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/resin-io/chat)\r\n\r\nRole\r\n----\r\n\r\nThe intention of this module is to provide an exclusive client to make HTTP requests to the Resin.io servers.\r\n\r\n**THIS MODULE IS LOW LEVEL AND IS NOT MEANT TO BE USED BY END USERS DIRECTLY**.\r\n\r\nUnless you know what you're doing, use the [Resin SDK](https://github.com/resin-io/resin-sdk) instead.\r\n\r\nInstallation\r\n------------\r\n\r\nInstall `resin-request` by running:\r\n\r\n```sh\r\n$ npm install --save resin-request\r\n```\r\n\r\nDocumentation\r\n-------------\r\n\r\nThe module returns a _factory function_ that you use to get an instance of the token module.\r\n\r\nIt accepts the following params:\r\n\r\n| Param | Type | Description |\r\n| --- | --- | --- |\r\n| options | <code>Object</code> | options |\r\n| options.token | <code>Object</code> | An instantiated [resin-token](https://github.com/resin-io/resin-token) instance |\r\n| options.debug | <code>boolean</code> | when set to `true` will log the request details in case of error. |\r\n| options.isBrowser | <code>boolean</code> | set to `true` if the runtime is the browser. |\r\n| options.interceptors | <code>Array&lt;Interceptor&gt;</code> | An initial array of interceptors |\r\n\r\n**Example**\r\n```js\r\nvar request = require('resin-request')({\r\n\ttoken: token,\r\n\tdebug: false,\r\n\tisBrowser: false\r\n})\r\n```\r\n\r\n\r\n* [request](#module_request)\r\n    * _static_\r\n        * [.interceptors](#module_request.interceptors) : <code>Array.&lt;Interceptor&gt;</code>\r\n        * [.send(options)](#module_request.send) ⇒ <code>Promise.&lt;Object&gt;</code>\r\n        * [.stream(options)](#module_request.stream) ⇒ <code>Promise.&lt;Stream&gt;</code>\r\n    * _inner_\r\n        * [~Interceptor](#module_request..Interceptor) : <code>object</code>\r\n\r\n<a name=\"module_request.interceptors\"></a>\r\n\r\n### request.interceptors : <code>Array.&lt;Interceptor&gt;</code>\r\nThe current array of interceptors to use. Interceptors intercept requests made\r\nby calls to `.stream()` and `.send()` (some of which are made internally) and\r\nare executed in the order they appear in this array for requests, and in the\r\nreverse order for responses.\r\n\r\n**Kind**: static property of <code>[request](#module_request)</code>  \r\n**Summary**: Array of interceptors  \r\n**Access:** public  \r\n**Example**  \r\n```js\r\nrequest.interceptors.push(\r\n\trequestError: (error) ->\r\n\t\tconsole.log(error)\r\n\t\tthrow error\r\n)\r\n```\r\n<a name=\"module_request.send\"></a>\r\n\r\n### request.send(options) ⇒ <code>Promise.&lt;Object&gt;</code>\r\nThis function automatically handles authorization with Resin.io.\r\n\r\nThe module scans your environment for a saved session token. Alternatively, you may pass the `apiKey` options. Otherwise, the request is made anonymously.\r\n\r\n**Kind**: static method of <code>[request](#module_request)</code>  \r\n**Summary**: Perform an HTTP request to Resin.io  \r\n**Returns**: <code>Promise.&lt;Object&gt;</code> - response  \r\n**Access:** public  \r\n\r\n| Param | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| options | <code>Object</code> |  | options |\r\n| [options.method] | <code>String</code> | <code>&#x27;GET&#x27;</code> | method |\r\n| options.url | <code>String</code> |  | relative url |\r\n| [options.apiKey] | <code>String</code> |  | api key |\r\n| [options.body] | <code>\\*</code> |  | body |\r\n\r\n**Example**  \r\n```js\r\nrequest.send\r\n\tmethod: 'GET'\r\n\tbaseUrl: 'https://api.resin.io'\r\n\turl: '/foo'\r\n.get('body')\r\n```\r\n**Example**  \r\n```js\r\nrequest.send\r\n\tmethod: 'POST'\r\n\tbaseUrl: 'https://api.resin.io'\r\n\turl: '/bar'\r\n\tdata:\r\n\t\thello: 'world'\r\n.get('body')\r\n```\r\n<a name=\"module_request.stream\"></a>\r\n\r\n### request.stream(options) ⇒ <code>Promise.&lt;Stream&gt;</code>\r\n**Not implemented for the browser.**\r\nThis function emits a `progress` event, passing an object with the following properties:\r\n\r\n- `Number percent`: from 0 to 100.\r\n- `Number total`: total bytes to be transmitted.\r\n- `Number received`: number of bytes transmitted.\r\n- `Number eta`: estimated remaining time, in seconds.\r\n\r\nThe stream may also contain the following custom properties:\r\n\r\n- `String .mime`: Equals the value of the `Content-Type` HTTP header.\r\n\r\nSee `request.send()` for an explanation on how this function handles authentication.\r\n\r\n**Kind**: static method of <code>[request](#module_request)</code>  \r\n**Summary**: Stream an HTTP response from Resin.io.  \r\n**Returns**: <code>Promise.&lt;Stream&gt;</code> - response  \r\n**Access:** public  \r\n\r\n| Param | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| options | <code>Object</code> |  | options |\r\n| [options.method] | <code>String</code> | <code>&#x27;GET&#x27;</code> | method |\r\n| options.url | <code>String</code> |  | relative url |\r\n| [options.body] | <code>\\*</code> |  | body |\r\n\r\n**Example**  \r\n```js\r\nrequest.stream\r\n\tmethod: 'GET'\r\n\tbaseUrl: 'https://img.resin.io'\r\n\turl: '/download/foo'\r\n.then (stream) ->\r\n\tstream.on 'progress', (state) ->\r\n\t\tconsole.log(state)\r\n\r\n\tstream.pipe(fs.createWriteStream('/opt/download'))\r\n```\r\n<a name=\"module_request..Interceptor\"></a>\r\n\r\n### request~Interceptor : <code>object</code>\r\nAn interceptor implements some set of the four interception hook callbacks.\r\nTo continue processing, each function should return a value or a promise that\r\nsuccessfully resolves to a value.\r\n\r\nTo halt processing, each function should throw an error or return a promise that\r\nrejects with an error.\r\n\r\n**Kind**: inner typedef of <code>[request](#module_request)</code>  \r\n**Properties**\r\n\r\n| Name | Type | Description |\r\n| --- | --- | --- |\r\n| request | <code>function</code> | Callback invoked before requests are made. Called with the request options, should return (or resolve to) new request options, or throw/reject. |\r\n| response | <code>function</code> | Callback invoked before responses are returned. Called with the response, should return (or resolve to) a new response, or throw/reject. |\r\n| requestError | <code>function</code> | Callback invoked if an error happens before a request. Called with the error itself, caused by a preceeding request interceptor rejecting/throwing an error for the request, or a failing in preflight token validation. Should return (or resolve to) new request options, or throw/reject. |\r\n| responseError | <code>function</code> | Callback invoked if an error happens in the response. Called with the error itself, caused by a preceeding response interceptor rejecting/throwing an error for the request, a network error, or an error response from the server. Should return (or resolve to) a new response, or throw/reject. |\r\n\r\n\r\nSupport\r\n-------\r\n\r\nIf you're having any problem, please [raise an issue](https://github.com/resin-io-modules/resin-request/issues/new) on GitHub and the Resin.io team will be happy to help.\r\n\r\nTests\r\n-----\r\n\r\nRun the test suite by doing:\r\n\r\n```sh\r\n$ npm test\r\n```\r\n\r\nContribute\r\n----------\r\n\r\n- Issue Tracker: [github.com/resin-io-modules/resin-request/issues](https://github.com/resin-io-modules/resin-request/issues)\r\n- Source Code: [github.com/resin-io-modules/resin-request](https://github.com/resin-io-modules/resin-request)\r\n\r\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\r\n\r\n```sh\r\n$ gulp lint\r\n```\r\n\r\nLicense\r\n-------\r\n\r\nThe project is licensed under the Apache 2.0 license.\r\n","created":"2015-03-17T16:34:11.953Z","modified":"2017-04-10T22:58:09.429Z","lastPublisher":{"name":"resin.io","email":"accounts@resin.io"},"owners":[{"name":"resin.io","email":"accounts@resin.io"}],"other":{"_attachments":{},"_from":".","_id":"resin-request","_nodeVersion":"6.9.4","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/resin-request-8.4.0.tgz_1491865087581_0.36417799256742"},"_npmUser":{"name":"resin.io","email":"accounts@resin.io"},"_npmVersion":"4.0.3","_rev":"15-79c84939fcc3dfbd2e93afeb4dbbb6ae","_shasum":"7ce11540d568129ed0a3cf092d1eba307b2943e3","author":{"name":"Juan Cruz Viotti","email":"juanchiviotti@gmail.com"},"bugs":{"url":"https://github.com/resin-io-modules/resin-request/issues"},"directories":{"test":"tests"},"dist-tags":{"latest":"8.4.0"},"dist":{"shasum":"7ce11540d568129ed0a3cf092d1eba307b2943e3","tarball":"https://registry.npmjs.org/resin-request/-/resin-request-8.4.0.tgz"},"maintainers":[{"name":"resin.io","email":"accounts@resin.io"}],"readmeFilename":"README.md","time":{"modified":"2017-04-10T22:58:09.429Z","created":"2015-03-17T16:34:11.953Z","1.0.0":"2015-03-17T16:34:11.953Z","1.1.0":"2015-03-18T20:39:58.151Z","1.2.0":"2015-03-19T13:03:51.227Z","1.2.1":"2015-03-20T14:02:46.048Z","1.2.2":"2015-03-20T19:13:49.730Z","1.2.3":"2015-04-21T15:12:38.437Z","1.2.4":"2015-05-07T14:38:13.806Z","1.2.5":"2015-05-18T16:47:10.409Z","1.3.0":"2015-06-12T11:23:55.697Z","2.0.0":"2015-06-19T12:36:25.107Z","2.1.0":"2015-06-29T13:10:54.606Z","2.2.0":"2015-07-17T14:41:53.142Z","2.2.1":"2015-07-17T18:24:32.209Z","2.2.2":"2015-07-27T15:50:33.550Z","2.2.3":"2015-08-07T11:49:02.665Z","2.2.4":"2015-08-24T11:45:53.078Z","2.2.5":"2015-08-24T15:09:44.086Z","2.3.0":"2015-08-25T16:59:54.854Z","2.3.1":"2015-08-26T11:59:35.668Z","2.3.2":"2015-09-07T06:14:50.740Z","3.0.0":"2015-09-23T15:27:25.436Z","2.4.0":"2015-11-17T18:04:16.293Z","2.4.1":"2015-11-23T15:57:44.625Z","2.4.2":"2016-01-08T20:37:57.327Z","2.4.3":"2016-01-20T15:23:33.805Z","4.0.0":"2016-01-20T18:36:00.009Z","4.0.1":"2016-01-25T00:23:02.791Z","4.0.2":"2016-02-12T23:37:05.181Z","4.0.3":"2016-02-17T22:20:46.565Z","4.0.4":"2016-02-19T02:31:07.072Z","4.0.5":"2016-03-03T15:39:04.708Z","4.0.6":"2016-03-09T17:37:48.168Z","4.0.7":"2016-03-09T19:44:45.121Z","4.1.0":"2016-03-14T02:15:24.595Z","4.1.1":"2016-03-14T16:33:22.740Z","4.1.2":"2016-03-17T15:30:20.765Z","5.0.0":"2016-09-15T12:47:31.954Z","6.0.0":"2016-11-20T20:10:30.707Z","6.0.1":"2016-11-24T10:33:39.737Z","6.1.0":"2016-12-13T11:01:54.393Z","6.1.1":"2016-12-13T15:14:13.598Z","6.2.0":"2016-12-13T20:05:03.723Z","7.0.0":"2017-01-02T13:18:15.114Z","8.0.0":"2017-01-04T15:11:32.015Z","8.0.1":"2017-01-05T14:29:34.329Z","8.1.0":"2017-01-06T14:46:43.590Z","8.2.0":"2017-02-20T12:38:17.665Z","8.3.0":"2017-02-23T19:36:42.014Z","8.3.1":"2017-04-03T13:25:46.756Z","8.4.0":"2017-04-10T22:58:09.429Z"}}}