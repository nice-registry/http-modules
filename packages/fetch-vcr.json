{"version":"1.1.1","name":"fetch-vcr","description":"Stop mocking HTTP Requests. Just record and then play them back","main":"./lib/index.js","scripts":{"pretest":"./script/clean-for-test","test":"ava","debug":"DEBUG=true node --inspect --debug-brk ./node_modules/ava/profile.js ./test/index.js","build-browser":"rollup --config rollup.config.js"},"dependencies":{"node-fetch":"^1.6.3","whatwg-fetch":"^2.0.3"},"devDependencies":{"ava":"^0.19.1","jsdom":"^11.0.0","rollup":"^0.42.0","rollup-plugin-commonjs":"^8.0.2","rollup-plugin-node-resolve":"^3.0.0","standard":"^10.0.2"},"repository":"https://github.com/philschatz/fetch-vcr","keywords":["fetch","fixture","cassette","vcr"],"browser":{"./lib/adapter/fetch-node.js":"./lib/adapter/fetch-browser.js","./lib/adapter/files-node.js":"./lib/adapter/files-browser.js","./lib/adapter/response-node.js":"./lib/adapter/response-browser.js"},"license":"MIT","homepage":"https://github.com/philschatz/fetch-vcr#readme","gitHead":"61e60616bd2e335f95a6353f239dfc56b5c86851","versions":[{"number":"0.1.0","date":"2017-05-12T22:51:13.150Z"},{"number":"0.2.0","date":"2017-05-13T01:47:17.370Z"},{"number":"0.3.0","date":"2017-05-13T18:44:41.999Z"},{"number":"0.3.1","date":"2017-05-13T18:53:03.668Z"},{"number":"0.4.0","date":"2017-05-14T12:14:13.180Z"},{"number":"0.4.1","date":"2017-05-14T12:48:14.797Z"},{"number":"0.4.2","date":"2017-05-14T13:30:50.443Z"},{"number":"0.4.3","date":"2017-05-14T18:09:14.014Z"},{"number":"0.4.4","date":"2017-05-14T18:28:06.045Z"},{"number":"0.4.5","date":"2017-05-14T18:55:49.782Z"},{"number":"0.4.6","date":"2017-05-14T18:58:05.291Z"},{"number":"0.5.0","date":"2017-05-14T20:04:22.579Z"},{"number":"0.5.1","date":"2017-05-14T20:32:03.863Z"},{"number":"0.5.2","date":"2017-05-15T04:19:21.546Z"},{"number":"0.5.3","date":"2017-05-15T04:53:29.664Z"},{"number":"0.5.4","date":"2017-05-15T06:00:06.271Z"},{"number":"0.5.5","date":"2017-05-15T15:56:09.022Z"},{"number":"1.0.0","date":"2017-05-26T21:41:36.614Z"},{"number":"1.0.1","date":"2017-05-26T22:08:47.090Z"},{"number":"1.1.0","date":"2017-06-05T11:26:48.222Z"},{"number":"1.1.1","date":"2017-06-12T05:44:59.038Z"}],"readme":"# fetch-vcr\n\n[![gh-board][kanban-image]][kanban-url]\n[![NPM version][npm-image]][npm-url]\n[![Downloads][downloads-image]][downloads-url]\n[![build status][travis-image]][travis-url]\n[![dependency status][dependency-image]][dependency-url]\n[![dev dependency status][dev-dependency-image]][dev-dependency-url]\n\nStop mocking HTTP Requests. Just record and then play them back. See [vcr/vcr](https://github.com/vcr/vcr) for the main idea.\n\n# Usage\n\nAfter setting up (see below), the basics are:\n\n1. set the `VCR_MODE=cache` environment variable before running your tests\n2. run your tests\n\nThis will record (and load) all the HTTP responses into the `./_fixtures/` directory.\n\nAnd when you run the steps again, viola! no network traffic happens.\n\n\n# What are the different modes?\n\n- `playback`: (default) **only** uses the local fixture files\n- `cache`: tries to use the recorded response and if not found then it is fetched and then saved (useful when adding new tests)\n- `record`: forces HTTP requests and responses are saved to the filesystem (useful for regenerating all the fixtures)\n\n\n# How can I set the VCR mode?\n\nYou can set the mode either by:\n\n- setting the `VCR_MODE=record` environment variable when running tests (NodeJS)\n- explicitly running `fetch.configure({mode: 'record'})` (NodeJS or browser)\n\n\n# How do I set this up?\n\nThere are separate examples for NodeJS, Jest, and in a browser (PhantomJS or Selenium)\n\n## NodeJS Setup\n\nHere is how you would use it in a typical NodeJS app:\n\n```js\n// import fetch from 'fetch';\nimport fetch from 'fetch-vcr';\n\n// Configure where the recordings should be loaded/saved to.\n// The path is relative to `process.cwd()` but can be absolute.\nfetch.configure({\n  fixturePath: './_fixtures',\n  // mode: 'record'     <-- This is optional\n})\n\n// Use fetch like you would normally\nfetch('http://openstax.org')\n.then(response => {\n  console.log(response.ok)\n})\n```\n\n## Jest Setup\n\nJust add the following to `package.json`:\n\n```\n  \"jest\": {\n    \"moduleNameMapper\": {\n      \"fetch\": \"fetch-vcr\"\n    }\n  }\n```\n\n## jsdom Setup\n\nMany apps use `jsdom` for testing which makes it really easy to add `fetch-vcr`. Just replace the global `fetch` function with `fetchVCR` and you can record/play back the cassettes. See below for an example:\n\n```js\nvar fs = require('fs')\nvar jsdom = require('jsdom')\nvar fetchVCR = require('fetch-vcr')\n\n// Configure the path to find cassettes\nfetchVCR.configure({\n  fixturePath: './_fixtures/'\n})\n\nvar dom = new jsdom.JSDOM(fs.readFileSync('./jsdom-example.html'), {\n  runScripts: 'dangerously',\n  beforeParse: (window) => {\n    // This changes the fetch global to be fetchVCR\n    window.fetch = fetchVCR\n  }\n})\n```\n\n\n## How can I use this in a browser?\n\nIt is easy to record HTTP requests in NodeJS and play them back in the browser.\n\nTo play them back in a browser, just run `fetchVCR.configure({fixturePath: './path/to/_fixtures'})` and `fetchVCR` will use that path to load the files via AJAX requests.\n\nTo record HTTP requests in a browser you will need to do a little bit of work. Loading fixture files is relatively painless (using `XMLHTTPRequest`) but saving them to disk is non-trivial.\n\nIn order to save the fixture files to disk you will need to override `fetchVCR.saveFile(rootPath, filename, contents) => Promise`.\n\nIf you are using PhantomJS you will likely need to use the `alert(msg)` to get data out of PhantomJS and then save it to the filesystem (using `fs.writeFile(...)`)\n\n\n\n[kanban-image]: https://img.shields.io/github/issues/philschatz/fetch-vcr.svg?label=kanban%20board%20%28gh-board%29\n[kanban-url]: http://philschatz.com/gh-board/#/r/philschatz:fetch-vcr\n[npm-image]: https://img.shields.io/npm/v/fetch-vcr.svg\n[npm-url]: https://npmjs.org/package/fetch-vcr\n[downloads-image]: http://img.shields.io/npm/dm/fetch-vcr.svg\n[downloads-url]: https://npmjs.org/package/fetch-vcr\n[travis-image]: https://img.shields.io/travis/philschatz/fetch-vcr.svg\n[travis-url]: https://travis-ci.org/philschatz/fetch-vcr\n[dependency-image]: https://img.shields.io/david/philschatz/fetch-vcr.svg\n[dependency-url]: https://david-dm.org/philschatz/fetch-vcr\n[dev-dependency-image]: https://img.shields.io/david/dev/philschatz/fetch-vcr.svg\n[dev-dependency-url]: https://david-dm.org/philschatz/fetch-vcr#info=devDependencies\n[coverage-image]: https://img.shields.io/codecov/c/github/philschatz/fetch-vcr.svg\n[coverage-url]: https://codecov.io/gh/philschatz/fetch-vcr\n","created":"2017-05-12T22:51:13.150Z","modified":"2017-06-12T05:44:59.038Z","lastPublisher":{"name":"philschatz","email":"phil@cnx.org"},"owners":[{"name":"philschatz","email":"phil@cnx.org"}],"other":{"_attachments":{},"_from":".","_id":"fetch-vcr","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/fetch-vcr-1.1.1.tgz_1497246298822_0.05147706554271281"},"_npmUser":{"name":"philschatz","email":"phil@cnx.org"},"_npmVersion":"3.10.8","_rev":"21-320231145eac8ce46149cc61726055b7","_shasum":"acd843963c221b1f3012283ab832f3c29da4617c","author":{"name":"Philip Schatz"},"bugs":{"url":"https://github.com/philschatz/fetch-vcr/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"acd843963c221b1f3012283ab832f3c29da4617c","tarball":"https://registry.npmjs.org/fetch-vcr/-/fetch-vcr-1.1.1.tgz"},"maintainers":[{"name":"philschatz","email":"phil@cnx.org"}],"readmeFilename":"README.md","time":{"modified":"2017-06-12T05:44:59.038Z","created":"2017-05-12T22:51:13.150Z","0.1.0":"2017-05-12T22:51:13.150Z","0.2.0":"2017-05-13T01:47:17.370Z","0.3.0":"2017-05-13T18:44:41.999Z","0.3.1":"2017-05-13T18:53:03.668Z","0.4.0":"2017-05-14T12:14:13.180Z","0.4.1":"2017-05-14T12:48:14.797Z","0.4.2":"2017-05-14T13:30:50.443Z","0.4.3":"2017-05-14T18:09:14.014Z","0.4.4":"2017-05-14T18:28:06.045Z","0.4.5":"2017-05-14T18:55:49.782Z","0.4.6":"2017-05-14T18:58:05.291Z","0.5.0":"2017-05-14T20:04:22.579Z","0.5.1":"2017-05-14T20:32:03.863Z","0.5.2":"2017-05-15T04:19:21.546Z","0.5.3":"2017-05-15T04:53:29.664Z","0.5.4":"2017-05-15T06:00:06.271Z","0.5.5":"2017-05-15T15:56:09.022Z","1.0.0":"2017-05-26T21:41:36.614Z","1.0.1":"2017-05-26T22:08:47.090Z","1.1.0":"2017-06-05T11:26:48.222Z","1.1.1":"2017-06-12T05:44:59.038Z"}}}