{"name":"http-partial-loader","version":"1.1.2","description":"Library QuickStart package.json from the documentation, supplemented with testing support","main":"./bundles/http-partial-loader.umd.js","module":"./http-partial-loader.es5.js","es2015":"./http-partial-loader.js","typings":"./http-partial-loader.d.ts","license":"MIT","repository":{},"engines":{"node":">= 6.9.0","npm":">= 3.0.0"},"scripts":{"clean":"rimraf out-tsc dist","prebuild":"npm run clean","build":"node build.js","build-demo":"tsc -p src/demo/","build-demo:watch":"tsc -p src/demo/ -w","serve":"lite-server -c=bs-config.json","prestart":"npm run build-demo","start":"concurrently \"npm run build-demo:watch\" \"npm run serve\"","build-test":"tsc -p src/lib/tsconfig.spec.json","build-test:watch":"tsc -p src/lib/tsconfig.spec.json -w","pretest":"npm run build-test","test":"concurrently \"npm run build-test:watch\" \"karma start karma.conf.js\"","pretest:once":"npm run build-test","test:once":"karma start karma.conf.js --single-run","preintegration":"npm run build && cd integration && npm run clean && npm install","integration":"npm run integration:aot && npm run integration:jit","integration:jit":"cd integration && npm run e2e","integration:aot":"cd integration && npm run e2e:aot","lint":"tslint ./src/**/*.ts -t verbose"},"peerDependencies":{"@angular/core":">=4.0.0 <5.0.0 || >=4.0.0-beta <5.0.0"},"devDependencies":{"@angular/common":"~4.0.0","@angular/compiler":"~4.0.0","@angular/compiler-cli":"~4.0.0","@angular/core":"~4.0.0","@angular/platform-browser":"~4.0.0","@angular/platform-browser-dynamic":"~4.0.0","@types/jasmine":"2.5.36","@types/node":"^6.0.46","camelcase":"^4.0.0","concurrently":"3.2.0","core-js":"^2.4.1","glob":"^7.1.1","jasmine-core":"^2.5.2","karma":"^1.5.0","karma-chrome-launcher":"^2.0.0","karma-cli":"^1.0.1","karma-html-reporter":"^0.2.7","karma-jasmine":"^1.1.0","karma-jasmine-html-reporter":"^0.2.2","lite-server":"^2.2.2","rimraf":"^2.6.1","rollup":"^0.41.5","rollup-plugin-sourcemaps":"^0.4.1","rollup-plugin-uglify":"^1.0.1","rxjs":"^5.3.1","systemjs":"^0.19.40","tslint":"^4.4.2","typescript":"^2.2.1","zone.js":"^0.8.4"},"dependencies":{"@angular/http":"^4.1.1","@ngx-translate/core":"^6.0.1","@types/lodash":"^4.14.63","lodash":"^4.17.4"},"versions":[{"number":"1.0.0-1","date":"2017-05-09T13:59:04.795Z"},{"number":"1.0.0-2","date":"2017-05-09T14:00:07.148Z"},{"number":"1.0.0-3","date":"2017-05-09T14:01:19.957Z"},{"number":"1.0.0-4","date":"2017-05-09T14:01:49.598Z"},{"number":"1.0.0","date":"2017-05-09T15:25:43.218Z"},{"number":"1.0.1","date":"2017-05-09T15:26:29.540Z"},{"number":"1.0.2","date":"2017-05-09T16:01:41.904Z"},{"number":"1.1.0","date":"2017-05-11T08:40:19.237Z"},{"number":"1.1.1","date":"2017-05-30T15:15:50.959Z"},{"number":"1.1.2","date":"2017-06-08T12:23:28.923Z"}],"readme":"# julienbourgain/http-partial-loader [![Build Status](https://travis-ci.org/JulienBourgain/http-partial-loader.svg?branch=master)](https://travis-ci.org/JulienBourgain/http-partial-loader) [![npm version](https://img.shields.io/npm/v/julienbourgain/http-partial-loader.svg)](https://www.npmjs.com/package/julienbourgain/http-partial-loader)\n\nA loader for [ngx-translate](https://github.com/ngx-translate/core) that loads translation using http.\n\nGet the complete changelog here: https://github.com/julienbourgain/http-partial-loader/releases\n\n* [Installation](#installation)\n* [Usage](#usage)\n\n## Installation\n\nWe assume that you already installed [ngx-translate](https://github.com/ngx-translate/core).\n\nNow you need to install the npm module for `TranslateHttpPartialLoader`:\n\n```sh\nnpm install julienbourgain/http-partial-loader --save\n```\n\n## Usage\n\n#### 1. Setup the `TranslateModule` to use the `TranslateHttpPartialLoader`:\n\nThe `TranslateHttpPartialLoader` uses Http to load translations, which means that you have to import the HttpModule from `@angular/http` before the `TranslateModule`:\n\n```ts\nimport {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpModule, Http} from '@angular/http';\nimport {TranslateModule, TranslateLoader} from '@ngx-translate/core';\nimport {TranslateHttpPartialLoader} from 'julienbourgain/http-partial-loader';\nimport {AppComponent} from \"./app\";\n\n// AoT requires an exported function for factories\nexport function HttpLoaderFactory(http: Http) {\n    return new TranslateHttpPartialLoader(http);\n}\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        HttpModule,\n        LanguageModule.forRoot({prefix: './i18n/', suffix: '.json'})\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n```\n\nThe `TranslateHttpPartialLoader` also has two optional parameters:\n- prefix: string = \"/assets/i18n/\"\n- suffix: string = \".json\"\n\nBy using those default parameters, it will load your translations files for the lang \"en\" from: `/assets/i18n/en.json`.\n\nYou can change those in the `HttpLoaderFactory` method that we just defined. For example if you want to load the \"en\" translations from `/public/lang-files/en-lang.json` you would use:\n\n```ts\nexport function HttpLoaderFactory(http: Http) {\n    return new TranslateHttpPartialLoader(http, \"/public/lang-files/\", \"-lang.json\");\n}\n```\n\nFor now this loader only support the json format.\n\nBecause `ngx-translate` doesn't target partial translations, we need to inform the partialLoader witch parts of the current language translation load.\nWhen you split translation in multiple translation files, one ngx page, need 0, 1 or many translation parts.\n\nSo to do this with @angular/router for example, you need to add a resolver to your routes\n\n\n```ts\n@Injectable()\nexport class TranslatePartialResolver implements Resolve<any> {\n  constructor(private translateConfig: TranslateConfig) {}\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) \n    switch ((<Type<any>>route.component).name) {\n      case AppComponent.name:\n        return this.translateConfig.addPartials(['global', 'toastr']);\n      case LoginComponent.name:\n        return this.translateConfig.addPartials(['login']);\n    }\n  }\n}\n```\n\nAnd you just add the resolver in your routes like : \n\n```ts\n{\n  path     : 'app',\n  component: AppComponent,\n  resolve: {\n    translatePartialLoader: TranslatePartialResolver\n  }\n}\n```\n\nCurrently you cannot remove partials to load when you change the language, because it's difficult to know if a translation is in use or not.\nAlso, translation parts adding needs to reload the language. And we cache already loaded parts.\n\nFor this reasons, translateService.reloadLang('en') doesn't works with this loader.\nBut I invite you to use julienbourgain/partial-translate-ott to have a more friendly API :)\n","created":"2017-05-09T13:59:04.795Z","modified":"2017-06-08T12:23:28.923Z","lastPublisher":{"name":"julienbourgain","email":"julien.bourgain@zenika.com"},"owners":[{"name":"julienbourgain","email":"julien.bourgain@zenika.com"}],"other":{"_attachments":{},"_from":".","_id":"http-partial-loader","_nodeVersion":"7.9.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-partial-loader-1.1.2.tgz_1496924607969_0.17817804287187755"},"_npmUser":{"name":"julienbourgain","email":"julien.bourgain@zenika.com"},"_npmVersion":"4.2.0","_rev":"10-70d57d393566d4df2b423e1440d7b18a","_shasum":"afbf9bcaeb91e5a33c2fb8e6c210091422cc640e","author":"","directories":{},"dist-tags":{"latest":"1.1.2"},"dist":{"shasum":"afbf9bcaeb91e5a33c2fb8e6c210091422cc640e","tarball":"https://registry.npmjs.org/http-partial-loader/-/http-partial-loader-1.1.2.tgz"},"maintainers":[{"name":"julienbourgain","email":"julien.bourgain@zenika.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-08T12:23:28.923Z","created":"2017-05-09T13:59:04.795Z","1.0.0-1":"2017-05-09T13:59:04.795Z","1.0.0-2":"2017-05-09T14:00:07.148Z","1.0.0-3":"2017-05-09T14:01:19.957Z","1.0.0-4":"2017-05-09T14:01:49.598Z","1.0.0":"2017-05-09T15:25:43.218Z","1.0.1":"2017-05-09T15:26:29.540Z","1.0.2":"2017-05-09T16:01:41.904Z","1.1.0":"2017-05-11T08:40:19.237Z","1.1.1":"2017-05-30T15:15:50.959Z","1.1.2":"2017-06-08T12:23:28.923Z"}}}