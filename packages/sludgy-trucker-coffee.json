{"name":"sludgy-trucker-coffee","version":"1.0.2","description":"A humble http router framework.","main":"index.js","scripts":{"test":"./node_modules/mocha/bin/mocha test","start":"./index.js"},"repository":"https://github.com/timcmiller/framework_app","license":"MIT","homepage":"https://github.com/timcmiller/framework_app#readme","devDependencies":{"chai":"^3.4.0","chai-http":"^1.0.0","gulp":"^3.9.0","gulp-jshint":"^1.12.0","gulp-mocha":"^2.1.3","jshint-stylish":"^2.0.1","mocha":"^2.3.3"},"gitHead":"eafbe6599cddc5c6873511b417d5127fa0fd9ee4","versions":[{"number":"0.1.0","date":"2015-11-07T23:46:29.481Z"},{"number":"0.2.0","date":"2015-11-08T00:34:31.037Z"},{"number":"1.0.0","date":"2015-11-09T18:42:44.266Z"},{"number":"1.0.1","date":"2015-11-09T19:39:54.078Z"},{"number":"1.0.2","date":"2015-11-09T20:29:21.555Z"}],"readme":"# sludgy-trucker-coffee\n\n[![Build Status](https://travis-ci.org/timcmiller/sludgy-trucker-coffee.svg)](https://travis-ci.org/timcmiller/sludgy-trucker-coffee)\n\n<strong>The sludgy-trucker-coffee (STC) http Framework</strong>\n\nHow to use the STC framework\n=====================\nInstallation\n-------------\n```npm install sludgy-trucker-coffee```\n\nTo then use STC you must require in ('sludgy-trucker-coffee').\n\n```var stc = require('sludgy-trucker-coffee')```\n\n\nRouter Methods\n<ul>\n  <li><a href=\"#get-request\">stc.router.get</a></li>\n  <li><a href=\"#get-static\">stc.router.getStatic</a></li>\n  <li><a href=\"#post-request\">stc.router.post</a></li>\n  <li><a href=\"#custom-404\">stc.router.custom404</a></li>\n</ul>\nServer Methods\n<ul>\n  <li><a href=\"#listen\">stc.server.listen</a></li>\n</ul>\n--------------------\n\n<h4><a name=\"get-request\"></a>Setting up a route for a GET request:</h4>\n\n<strong>stc.router.get(pathname, [plain/text])</strong>\n\nSets up a basic route on your server that will return the plain/text you give it as a second argument\n\n1. Pathname: Any valid url character may be used in the form of a string.\n2. Response[optional]: The response you want the server to send and thus be displayed on a browser if you navigate to this route. If you do not include a response it defaults to a placeholder.\n\n```\nstc.router.get('/finecupofjoe', \"damn that's fine coffee\");\n```\n\nwill print \"damn that's a fine cup of coffee\" when you visit /finecupofjoe.\n\n```\nstc.router.get('/default');\n```\n\nwill give you the default reminder text when you go to /default.\n\nFor those who want a little more control, you can add your own callback:\n\n```\nstc.router.get('/thehardway', function(request, response){\n    response.writeHead(200, {'Content-Type': 'text/plain'});\n    response.write(\"Here be some text I wrote the hard way\");\n    response.end();\n  });\n```\n\nNOTE: If you want to serve up more than plain text (like HTML), you <strong>MUST</strong> add a callback and use response.writeHead.\n\n<h4><a name=\"get-static\"></a></a>Setting up a route for a GET request to a static file html or css:</h4>\n\n<strong>stc.router.getStatic(pathname, [route])</strong>\n\n1.Pathname: Any valid pathname to the file contents you want to serve.\n\n2.Route[Optional]: If you leave this blank it defaults to the filename and extenstion. (example: '/style.css');\n\n<p>Coming soon: Support for image files!</p>\n\n```\nstc.router.getStatic('/path/to/index.html', '/');\n//Returns the contents of index.html at the '/' route\n\nstc.router.getStatic('/path/to/style.css');\n//Returns the contents of style.css at '/style.css'\n```\n\n<h4><a name=\"post-request\"></a>Setting up a route for a POST request:</h4>\n\n<strong>stc.router.post(pathname, [callback])</strong>\n\n1.Pathname: Any valid url character may be used in the form of a string.\n2.Callback[optional]: A callback function with the parameters of request and response. If left black will default to an empty response.\n\nand setting up a route for a POST request is easy if you can use the default callback provided above.  Simply use the following code:\n\n```\nstc.router.post('/yourownurl');\n```\n\nHere is an example of an optional callback.\n\n```\nstc.router.post('/postwithcustomcallback', function(request, respnse){\n      var totalData = '';\n      request.on('data', function(data){\n        totalData += data.toString();\n      });\n      request.on('end', function() {\n        response.writeHead(200, {\"Content-Type\": \"application/json\"});\n        response.write(totalData);\n        response.end();\n      });\n```\n\n<h4><a name=\"custom-404\"></a>Setting up your own customer 404 response:</h4>\n\n<strong>stc.router.custom404(string)</strong>\n\n1.String: Any sting you use in here will then be set as your 404 response message.\n\n404 messages have a default already built in. But if you want to create custom 404 messages you can.\n\n```\nstc.custom404('some custom message here');\n```\n\nEvery 404 you encounter will now respond with 'some custom message here'.\n\n<h4><a name=\"listen\"></a>Starting up your server:</h4>\n\n<strong>stc.server.listen([port])</strong>\n\n1.Port(optional): You can set what port you want your server to be on. If you provide no arguments it will default to 3000.\n\n\n```\nstc.server.listen(5000);\n\n```\n\nYour server is now listen on port 5000.\n","created":"2015-11-07T23:46:29.481Z","modified":"2015-11-09T20:29:21.555Z","lastPublisher":{"name":"kenjicrosland","email":"kenji.crosland@gmail.com"},"owners":[{"name":"craigaaroncampbell","email":"craigaaroncampbell@gmail.com"},{"name":"kenjicrosland","email":"kenji.crosland@gmail.com"},{"name":"timcmiller","email":"timcmiller@live.com"}],"other":{"_attachments":{},"_from":".","_id":"sludgy-trucker-coffee","_nodeVersion":"4.2.1","_npmUser":{"name":"kenjicrosland","email":"kenji.crosland@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-efde7ae9dc749750abb402674fe89932","_shasum":"0f64c83f74d9f85800225d7db0ae6508f9c87851","author":{"name":"Craig Campbell, Tim Miller, Kenji Crosland"},"bugs":{"url":"https://github.com/timcmiller/framework_app/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"0f64c83f74d9f85800225d7db0ae6508f9c87851","tarball":"http://registry.npmjs.org/sludgy-trucker-coffee/-/sludgy-trucker-coffee-1.0.2.tgz"},"maintainers":[{"name":"craigaaroncampbell","email":"craigaaroncampbell@gmail.com"},{"name":"kenjicrosland","email":"kenji.crosland@gmail.com"},{"name":"timcmiller","email":"timcmiller@live.com"}],"readmeFilename":"README.md","time":{"modified":"2015-11-09T20:29:21.555Z","created":"2015-11-07T23:46:29.481Z","0.1.0":"2015-11-07T23:46:29.481Z","0.2.0":"2015-11-08T00:34:31.037Z","1.0.0":"2015-11-09T18:42:44.266Z","1.0.1":"2015-11-09T19:39:54.078Z","1.0.2":"2015-11-09T20:29:21.555Z"}}}