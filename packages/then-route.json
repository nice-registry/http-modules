{"name":"then-route","version":"0.1.1","description":"promise-based, asynchronous http request router","main":"dist/then-route.js","scripts":{"test":"mocha test/test.js"},"config":{"src":"src/*.js"},"dependencies":{"es6-promise":"~2.0.1","emoney":"~0.2.3","briskit":"~0.1.0","extend":"~2.0.0","colors":"~1.0.3"},"devDependencies":{"es6-module-transpiler":">=0.9.0","mocha":"~1.21.4","chai":">=1.9.1","fs-extra":">=0.9.1","request":"~2.53.0","grunt":"~0.4.2","grunt-contrib-jshint":"~0.6.3","grunt-contrib-concat":">=0.4.0","grunt-contrib-clean":">=0.4.1","grunt-git-describe":"~2.0.2","grunt-contrib-watch":">=0.6.1","grunt-import-clean":">=0.1.0","grunt-jsdoc":">=0.5.7","es6-module-transpiler-amd-formatter":">=0.0.1"},"repository":"https://github.com/elnarddogg/then-route","keywords":["http","promise","asynchronous","request","server","router"],"license":{"type":"MIT","url":"https://github.com/elnarddogg/then-route/blob/master/LICENSE.txt"},"homepage":"https://github.com/elnarddogg/then-route","gitHead":"bb1ba9360736b9aac2b0d02e791bc23ae984f2b4","versions":[{"number":"0.1.0","date":"2015-04-15T17:35:27.327Z"},{"number":"0.1.1","date":"2015-04-22T23:14:41.176Z"}],"readme":"then-route\n==========\n\n> promise-based, asynchronous http request router\n\n## Instantiation\n```javascript\n// defaults\nvar base = '/';\nvar options = { verbose: true };\n\nvar router = new Router( base , options );\n```\n\n## Server Hook\n```javascript\nvar server = http.createServer(function ( req , res ) {\n  router.handle( req , res );\n});\n```\n\n## Routing\n```javascript\nrouter.get( '/pattern' ).then(function( req , res ) {\n  // matches only \"/pattern\" or \"/pattern/\"\n});\n\nrouter.get( '/pattern/*' ).then(function( req , res ) {\n  // matches only \"/pattern/[child]\"\n});\n\nrouter.get( '/pattern*' ).then(function( req , res ) {\n  // matches \"/pattern\", \"/pattern/\", or \"/pattern/[child]\"\n});\n\nrouter.get( /^\\/\\w{2}\\d{3}/ ).then(function( req , res ) {\n  // matches anything of the format \"/XX000\"\n});\n```\n\n## Default Responses\n```javascript\n// 404 Not Found\nrouter.get( '/pattern' ).then(function( req , res ) {\n  // unhandled\n});\n\n// 500 Internal Server Error\nrouter.get( '/pattern' ).then(function( req , res ) {\n  throw new Error( 'error!' );\n});\n```\n\n## Synchronous Responses\n```javascript\nrouter.get( '/pattern?gnarly=true' ).then(function( req , res ) {\n  \n  // read data from request\n  var body = {\n    path: req.$path,\n    search: req.$search,\n    data: req.$data\n  };\n  \n  // {\n  //   \"path\": \"/pattern\",\n  //   \"search\": \"gnarly=true\",\n  //   \"data\": {\n  //     \"gnarly\": true\n  //   }\n  // }\n  var json = JSON.parse( body );\n  \n  // send response headers\n  res.writeHead( 200 , {\n    'Content-Type': 'application/json'\n  });\n  \n  // send response body\n  res.end( json );\n});\n```\n\n## Asynchronous Responses\n```javascript\nrouter.get( '/pattern' ).then(function( req , res ) {\n  \n  // a data object to pass along the chain\n  var data = { token: 'xxxxx' };\n\n  // let the router know we don't\n  // want to keep looking for a match\n  // and extend res.$data with data\n  res.$engage( data );\n  \n  // continue to the next block\n  res.$go();\n})\n.then(function( req , res ) {\n\n  doSomeAsyncTask(function( data ) {\n  \n    // data: { gnarly: true }\n    // extend res.$data again\n    res.$engage( data );\n    \n    // continue to the next block\n    res.$go();\n  });\n})\n.then(function( req , res ) {\n  \n  // {\n  //   \"token\": \"xxxxx\",\n  //   \"gnarly\": true\n  // }\n  var json = JSON.stringify( res.$data );\n  \n  // send response headers\n  res.writeHead( 200 , {\n    'Content-Type': 'application/json'\n  });\n  \n  // send response body\n  res.end( json );\n});\n\n```\n\n## Error Handling\n```javascript\n// thrown errors\nrouter.get( '/pattern' ).then(function( req , res ) {\n  throw new Error( 'error!' );\n})\n.catch(function( req , res , err ) {\n  // continue to the next block\n  res.$go();\n})\n.catch(function( req , res , err ) {\n  var message = err ? err.message : 'error';\n  if (err instanceof Error) {\n    Router.printStack( err );\n  }\n  res.end( message );\n});\n\n// res.$stop()\nrouter.get( '/pattern' ).then(function( req , res ) {\n  // go to the catch block\n  res.$stop();\n})\n.catch(function( req , res , err ) {\n  // continue to the next block\n  res.$go();\n})\n.catch(function( req , res , err ) {\n  res.writeHead( 403 );\n  res.end( '403 Forbidden' );\n});\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","created":"2015-04-15T17:35:27.327Z","modified":"2015-04-22T23:14:41.176Z","lastPublisher":{"name":"elnarddogg","email":"bernard.mcmanus.iv@gmail.com"},"owners":[{"name":"elnarddogg","email":"bernard.mcmanus.iv@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"then-route","_npmUser":{"name":"elnarddogg","email":"bernard.mcmanus.iv@gmail.com"},"_npmVersion":"1.4.28","_rev":"1-cbfc709aa415e823681d716e578ff2c1","_shasum":"8da839c9b7e37ee1c34cf70035cf1c821deefe7b","author":{"name":"Bernard McManus","email":"bernard.mcmanus.iv@gmail.com","url":"http://github.com/elnarddogg"},"bugs":{"url":"https://github.com/elnarddogg/then-route/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"8da839c9b7e37ee1c34cf70035cf1c821deefe7b","tarball":"http://registry.npmjs.org/then-route/-/then-route-0.1.1.tgz"},"maintainers":[{"name":"elnarddogg","email":"bernard.mcmanus.iv@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-04-22T23:14:41.176Z","created":"2015-04-15T17:35:27.327Z","0.1.0":"2015-04-15T17:35:27.327Z","0.1.1":"2015-04-22T23:14:41.176Z"}}}