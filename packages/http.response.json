{"name":"http.response","version":"0.1.0","description":"Simple api for http response.","main":"lib/main.js","keywords":["dojs","response","http"],"repository":"https://github.com/yutent/http.response","license":"MIT","gitHead":"cb1147c69a496862f24b2603bb88134fc2262dbf","homepage":"https://github.com/yutent/http.response#readme","scripts":{},"versions":[{"number":"0.1.0","date":"2017-03-17T08:14:15.610Z"}],"readme":"![module info](https://nodei.co/npm/http.response.png?downloads=true&downloadRank=true&stars=true)\n\n\n# http.response\n> `http.response` is a module that let you can easily using on http server. \n\n\n\n\n\n## Install\n```bash\n    npm install http.response\n```\n\n## Usage\n```javascript\n\nlet Response = require('http.response'),\n    http = require('http');\n\n\n    http.createServer((req, res) => {\n\n    \n        let response = new Response(req, res);\n\n        // it eq. argument res\n        console.log(response.res)\n        \n        response.set('content-type', 'text/html; charset=utf-8')\n        response.end('hello world')\n\n\n    }).listen(3000)\n\n\n```\n\n\n## API\n\n### error(msg[, code])\n- msg `<String>` \n- code `<Number>` optional\n\n> It send msg to client for a friendly way. \n\n```javascript\nresponse.error('This is the error code', 500) //\nresponse.error('Page not Found', 404) // \nresponse.error(new Error('Auth denied'), 401) // \n```\n\n\n\n\n### setStatus(code)\n- code `<Number>`\n\n> Set http status code.\n\n```javascript\nresponse.setStatus(501) //\nresponse.setStatus(200) //\n```\n\n\n### set(key[, val])\n- key `<String>` | `<Object>`\n- code `<String>` | `<Number>`\n\n> Set headers for response.\n\n**Header will be replaced if it already exists.**\n**chartset will be set if not define in `content-type`**\n\n\n```javascript\nresponse.set('content-type', 'text/html; charset=utf-8') //\nresponse.set('content-type', 'text/html') // same result with above\n\nresponse.set({'content-type', 'text/html', foo: 'bar'[, ...]})\n```\n\n\n### append(key, val)\n- key `<String>`\n- code `<String>` | `<Number>`\n\n> Like set function, but it will not replace same field, just push it behind.\n\n```javascript\nresponse.append('name', 'foo')\nresponse.append('name', 'bar') //客户端能同时看到foo和bar这2个值 \n```\n\n\n\n### get(key)\n- key `<String>`\n\n> Get the headers from response, just use for previewing the content what will be send to client.\n\n```javascript\nresponse.set('name', 'foo')\nresponse.get('name') // foo \n```\n\n\n\n### redirect(url[, f])\n- url `<String>`\n- f `<Boolean>` optional\n\n> Redirect the url. It will be 302 if `f` is true, else 301.\n\n```javascript\nresponse.redirect('http://test.com/foo') \nresponse.redirect('http://test.cn', true)\n```\n\n\n### location(url)\n- url `<String>`\n\n> Redirect the url. It base on frentend supported.\n\n```javascript\nresponse.location('http://test.com/foo') \nresponse.location('/foo')\n```\n\n\n\n### render(data[, code])\n- data `<String>` | `<Buffer>`\n- code `<Number>` optional\n\n> It will send client a html content.\n\n```javascript\nlet html = fs.readFileSync('./index.html')\nresponse.render(html) // send from a html file.\n\nlet txt = '<h1>hello doJS</h1>'\nresponse.render(txt)\n\nresponse.render('You\\'re not able to here', 401) // set http status at the same time\n\n```\n\n\n\n\n### sendfile(data, filename)\n- data `<String>` | `<Buffer>`\n- filename `<String>`\n\n> Send a file to client. It will be downloaded instead of previewing.\n\n```javascript\nlet pic = fs.readFileSync('./boy.jpg')\nresponse.sendfile(pic, 'a-little-boy.jpg') //\n```\n\n\n### send(code[, msg][, data][, callback])\n- code `<Number>`\n- msg `<String>` optional\n- data `<Object>` optional\n- callback `<String>` optional\n\n> It send a `json` data to client.\n> `code` is http status, default to 200;\n> `msg` is some tips for the code;\n> `data` is the extra content.\n> `callback` is for json usage.\n\n```javascript\nresponse.send(200, 'ok', {foo: 'bar'})\n// client will get the content like\n// '{\"code\": 200, \"msg\": \"ok\", \"data\": {\"foo\": \"bar\"}}'\n\nresponse.send(200, 'success', {name: 'foo', age: 16}, 'blabla')\n// client will get the content like \n// 'blabla({\"code\": 200, \"msg\": \"success\", \"data\": {\"name\": \"foo\", \"age\": 16}})'\n\n```\n\n\n\n### end([data])\n- data `<String>` | `<Buffer>` optional\n\n> It just the res.end().","starsCount":1,"created":"2017-03-17T08:14:15.610Z","modified":"2017-03-17T08:15:39.268Z","lastPublisher":{"name":"yutent","email":"yutent@doui.cc"},"owners":[{"name":"yutent","email":"yutent@doui.cc"}],"other":{"_attachments":{},"_from":".","_id":"http.response","_nodeVersion":"7.7.3","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/http.response-0.1.0.tgz_1489738453850_0.5988934887573123"},"_npmUser":{"name":"yutent","email":"yutent@doui.cc"},"_npmVersion":"4.1.2","_rev":"2-75edfe99de099b9ea3ccc71da8d58e7a","_shasum":"adc8149d568498b6e955b67d5b11c2c388a1d683","author":{"name":"yutent"},"bugs":{"url":"https://github.com/yutent/http.response/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"adc8149d568498b6e955b67d5b11c2c388a1d683","tarball":"https://registry.npmjs.org/http.response/-/http.response-0.1.0.tgz"},"maintainers":[{"name":"yutent","email":"yutent@doui.cc"}],"readmeFilename":"Readme.md","time":{"modified":"2017-03-17T08:15:39.268Z","created":"2017-03-17T08:14:15.610Z","0.1.0":"2017-03-17T08:14:15.610Z"},"users":{"yutent":true}}}