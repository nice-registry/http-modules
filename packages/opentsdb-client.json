{"name":"opentsdb-client","version":"0.0.4","description":"HTTP client for querying OpenTSDB.","scripts":{"test":"mocha","test-cov":"istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coverage -- -R spec","coveralls":"istanbul cover ./node_modules/.bin/_mocha --dir ./reports/coveralls/coverage --report lcovonly -- -R spec && cat ./reports/coveralls/coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./reports/coveralls"},"main":"./lib","repository":"https://github.com/opentsdb-js/client","keywords":["opentsdb","tsdb","timeseries","query","client"],"dependencies":{"opentsdb-url":"0.0.2","opentsdb-validate-time":"0.0.1","request":"^2.45.0"},"peerDependencies":{"opentsdb-query":"~0.0.2"},"devDependencies":{"chai":"1.x.x","coveralls":"^2.11.1","istanbul":"^0.3.0","mocha":"1.x.x","opentsdb-mock-server":"0.0.0","opentsdb-mquery":"~0.0.1","opentsdb-tquery":"~0.0.2","opentsdb-query":"~0.0.2"},"license":"MIT","gitHead":"362a82af8bc1480a1184f68bc0d130348653c5da","homepage":"https://github.com/opentsdb-js/client#readme","versions":[{"number":"0.0.0","date":"2014-10-15T09:27:21.414Z"},{"number":"0.0.1","date":"2014-10-15T19:02:50.481Z"},{"number":"0.0.2","date":"2014-10-15T19:26:04.965Z"},{"number":"0.0.3","date":"2015-02-04T20:54:29.562Z"},{"number":"0.0.4","date":"2016-03-16T10:04:01.667Z"}],"readme":"Client\n======\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Dependencies][dependencies-image]][dependencies-url]\n\n> HTTP client for querying [OpenTSDB](http://opentsdb.net).\n\n\n### Install\n\nFor use in Node.js,\n\n``` bash\n$ npm install opentsdb-client\n```\n\nFor use in the browser, use [browserify](https://github.com/substack/node-browserify).\n\n\n### Usage\n\nTo use the module,\n\n``` javascript\nvar createClient = require( 'opentsdb-client' );\n```\n\nTo create a new client,\n\n``` javascript\nvar client = createClient();\n```\n\nA client is configurable and has the following methods...\n\n\n<a name=\"client-host\"></a>\n#### client.host( [host] )\n\nThis method is a setter/getter. If no `host` is provided, the method returns the configured `host`. By default, the client `host` is `127.0.0.1`. To point to a remote `host`,\n\n``` javascript\nclient.host( '192.168.92.11' );\n```\n\n\n<a name=\"client-port\"></a>\n#### client.port( [port] )\n\nThis method is a setter/getter. If no `port` is provided, the method returns the configured `port`. By default, the client port is `4242`. To set a different `port`,\n\n``` javascript\nclient.port( 8080 );\n```\n\n\n<a name=\"client-ms\"></a>\n#### client.ms( [bool] )\n\nThis method is a setter/getter. If no boolean flag is provided, the method returns the flag indicating whether time should be output at millisecond resolution. By default, millisecond resolution is on, so as to ensure timestamps are 13 digit UNIX timestamps. To turn off millisecond resolution,\n\n``` javascript\nclient.ms( false );\n```\n\n\n<a name=\"client-arrays\"></a>\n#### client.arrays( [bool] )\n\nThis method is a setter/getter. If no boolean flag is provided, the method returns the flag indicating whether data is output as an `array`. By default, `array` output is on. To turn off `array` output,\n\n``` javascript\nclient.arrays( false );\n```\n\n\n<a name=\"client-tsuids\"></a>\n#### client.tsuids( [bool] )\n\nThis method is a setter/getter. If no boolean flag is provided, the method returns the flag indicating whether TSUIDs accompany data output. By default, TSUIDs are not returned. To turn on TSUID output,\n\n``` javascript\nclient.tsuids( true );\n```\n\n\n<a name=\"client-annotations\"></a>\n#### client.annotations( [option] )\n\nThis method is a setter/getter. If no option is provided, the method returns the option indicating whether annotations should accompany data output. OpenTSDB supports two types of annotations: local and global. By default, annotations are not returned. \n\nThree options are possible: `none`, `local`, and `all`. `none` indicates to return no annotations. `local` indicates to return only local annotations; i.e., annotations specific to a timeseries. `all` indicates to return both local and global annotations. OpenTSDB does not support returning only global annotations.\n\nTo set annotation output,\n\n``` javascript\nclient.annotations( 'all' );\n```\n\n\n<a name=\"client-start\"></a>\n#### client.start( [time] )\n\nThis method is a setter/getter. If no `time` is provided, the method returns the configured query start `time`. Before making an OpenTSDB query, a start time is __required__. To do so,\n\n``` javascript\n// UNIX timestamp:\nclient.start( Date.now()-1000 );\n\n// Absolute time:\nclient.start( '2014/10/18 09:45' );\n\n// Relative time:\nclient.start( '72m-ago' );\n```\n\n\n<a name=\"client-end\"></a>\n#### client.end( [time | null] )\n\nThis method is a setter/getter. If no `time` is provided, the method returns the configured query end `time`. An end time is optional when making an OpenTSDB query. If no end time is set upon making a query, OpenTSDB defaults to the time at which the request is made.\n\n``` javascript\n// UNIX timestamp:\nclient.end( Date.now() );\n\n// Absolute time:\nclient.end( '2014/10/18 09:47' );\n\n// Relative time:\nclient.end( '70m-ago' );\n```\n\nIf at time `t1` you specify an end time and later decide at `t2` to make a request which does not specify an end time, you can `null` the configuration value.\n\n``` javascript\nclient.end( null );\n```\n\n\n<a name=\"client-queries\"></a>\n#### client.queries( [query1, query2, query3,...] )\n\nThis method is a setter/getter. If no queries are provided, the method returns any previously set queries. Queries must be set before making an OpenTSDB data request.\n\n``` javascript\nclient.queries( mQuery, mQuery, tQuery );\n```\n\nFor more information on how to create queries, see [opentsdb-mquery](https://github.com/opentsdb-js/mquery) and [opentsdb-tquery](https://github.com/opentsdb-js/tquery).\n\n\n<a name=\"client-url\"></a>\n#### client.url()\n\nGenerate an OpenTSDB request URL based on a client's configuration. Both queries and a start time are __required__ before running this method.\n\n``` javascript\nvar url = client.url();\n```\n\nAn example returned `url`:\n\n```\nhttp://127.0.0.1:4242/api/query?ms=true&arrays=true&show_tsuids=true&no_annotations=true&global_annotations=false&start=72000ms-ago&end=60s-ago&m=avg:5s-avg:cpu.utilization{nid=*}&m=avg:5s-avg:mem.utilization{nid=*}\n```\n\n\n<a name=\"client-get\"></a>\n#### client.get( clbk )\n\nMake a data request from OpenTSDB. Results are passed along to the provided callback.\n\n``` javascript\nclient.get( function onData( error, data ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( data ) );\n});\n```\n\n\n<a name=\"client-aggregators\"></a>\n#### client.aggregators( clbk )\n\nRequests the current list of supported aggregation operators from OpenTSDB. Results are passed along to the provided callback.\n\n``` javascript\nclient.aggregators( function onResponse( error, aggregators ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( aggregators ) );\n});\n```\n\n\n<a name=\"client-metrics\"></a>\n#### client.metrics( clbk )\n\nRequests the current list of stored metrics from OpenTSDB. Results are passed along to the provided callback.\n\n``` javascript\nclient.metrics( function onResponse( error, metrics ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( metrics ) );\n});\n```\n\n\n<a name=\"client-config\"></a>\n#### client.config( clbk )\n\nRequests the current OpenTSDB [configuration](http://opentsdb.net/docs/build/html/api_http/config.html). Results are passed along to the provided callback.\n\n``` javascript\nclient.config( function onResponse( error, config ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( config ) );\n});\n```\n\n\n<a name=\"client-version\"></a>\n#### client.version( clbk )\n\nRequests the current OpenTSDB [version](http://opentsdb.net/docs/build/html/api_http/version.html). Results are passed along to the provided callback.\n\n``` javascript\nclient.version( function onResponse( error, version ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( version ) );\n});\n```\n\n\n<a name=\"client-dropcaches\"></a>\n#### client.dropcaches( clbk )\n\nInstructs an OpenTSDB to purge its in-memory [caches](http://opentsdb.net/docs/build/html/api_http/dropcaches.html). The response is passed along to the provided callback.\n\n``` javascript\nclient.dropcaches( function onResponse( error, body ) {\n\tif ( error ) {\n\t\tconsole.error( JSON.stringify( error ) );\n\t\treturn;\n\t}\n\tconsole.log( JSON.stringify( body ) );\n});\n```\n\n\n## Examples\n\n``` javascript\nvar client = require( 'opentsdb-client' )(),\n\tmQuery = require( 'opentsdb-mquery' )(),\n\tend = Date.now(),\n\tstart = end - 1000;\n\nmQuery\n\t.aggregator( 'sum' )\n\t.downsample( '5m-avg' )\n\t.rate( false )\n\t.metric( 'mem.utilization' )\n\t.tags( 'nid', '1234,5678' )\n\t.tags( 'name', 'beep,boop' );\n\nclient\n\t.host( '192.168.92.111' )\n\t.port( 8080 )\n\t.ms( true )\n\t.arrays( true )\n\t.tsuids( true )\n\t.annotations( 'all' )\n\t.start( start )\n\t.end( end )\n\t.queries( mQuery )\n\t.get( function onData( error, data ) {\n\t\tif ( error ) {\n\t\t\tconsole.error( JSON.stringify( error ) );\n\t\t\treturn;\n\t\t}\n\t\tconsole.log( JSON.stringify( data ) );\n\t});\n```\n\nTo run the example code from the top-level application directory,\n\n``` bash\n$ node ./examples/index.js\n```\n\nNOTE: before running the example, tailor the client configuration to your OpenTSDB endpoint; e.g., `metric`, `tags`, `host`, and `port`.\n\n\n## Tests\n\n### Unit\n\nUnit tests use the [Mocha](http://visionmedia.github.io/mocha) test framework with [Chai](http://chaijs.com) assertions. To run the tests, execute the following command in the top-level application directory:\n\n``` bash\n$ make test\n```\n\nAll new feature development should have corresponding unit tests to validate correct functionality.\n\n\n### Test Coverage\n\nThis repository uses [Istanbul](https://github.com/gotwarlost/istanbul) as its code coverage tool. To generate a test coverage report, execute the following command in the top-level application directory:\n\n``` bash\n$ make test-cov\n```\n\nIstanbul creates a `./reports/coverage` directory. To access an HTML version of the report,\n\n``` bash\n$ make view-cov\n```\n\n---\n## License\n\n[MIT license](http://opensource.org/licenses/MIT). \n\n\n## Copyright\n\nCopyright &copy; 2014. Athan Reines.\n\n\n[npm-image]: http://img.shields.io/npm/v/opentsdb-client.svg\n[npm-url]: https://npmjs.org/package/opentsdb-client\n\n[travis-image]: http://img.shields.io/travis/opentsdb-js/client/master.svg\n[travis-url]: https://travis-ci.org/opentsdb-js/client\n\n[coveralls-image]: https://img.shields.io/coveralls/opentsdb-js/client/master.svg\n[coveralls-url]: https://coveralls.io/r/opentsdb-js/client?branch=master\n\n[dependencies-image]: http://img.shields.io/david/opentsdb-js/client.svg\n[dependencies-url]: https://david-dm.org/opentsdb-js/client\n\n[dev-dependencies-image]: http://img.shields.io/david/dev/opentsdb-js/client.svg\n[dev-dependencies-url]: https://david-dm.org/dev/opentsdb-js/client\n\n[github-issues-image]: http://img.shields.io/github/issues/opentsdb-js/client.svg\n[github-issues-url]: https://github.com/opentsdb-js/client/issues\n","created":"2014-10-15T09:27:21.414Z","modified":"2016-03-16T10:04:01.667Z","lastPublisher":{"name":"kgryte","email":"kgryte@gmail.com"},"owners":[{"name":"kgryte","email":"kgryte@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"opentsdb-client","_nodeVersion":"4.2.3","_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/opentsdb-client-0.0.4.tgz_1458122641195_0.2907877790275961"},"_npmUser":{"name":"kgryte","email":"kgryte@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-68afd102beba7dbd4a886d1628668b88","_shasum":"583d5c2afadf27da2a4829ddb0ec7dcc80f92b35","author":{"name":"Athan Reines","email":"kgryte@gmail.com"},"bugs":{"url":"https://github.com/opentsdb-js/client/issues"},"contributors":[{}],"directories":{},"dist-tags":{"latest":"0.0.4"},"dist":{"shasum":"583d5c2afadf27da2a4829ddb0ec7dcc80f92b35","tarball":"http://registry.npmjs.org/opentsdb-client/-/opentsdb-client-0.0.4.tgz"},"maintainers":[{"name":"kgryte","email":"kgryte@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-16T10:04:01.667Z","created":"2014-10-15T09:27:21.414Z","0.0.0":"2014-10-15T09:27:21.414Z","0.0.1":"2014-10-15T19:02:50.481Z","0.0.2":"2014-10-15T19:26:04.965Z","0.0.3":"2015-02-04T20:54:29.562Z","0.0.4":"2016-03-16T10:04:01.667Z"}}}