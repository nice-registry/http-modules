{"name":"socketconnect","version":"0.0.1","description":"WebSocket wrapper with HTTP repeat request fallback, providing a shared API for sending and receiving data.","main":"index.js","license":"MIT","keywords":["WebSocket","REST","HTTP","fallback","repeat","poll"],"repository":"https://github.com/tomhardman0/socketconnect","gitHead":"16a671cc2ceb76b3e195a84d60bf151d4b0f54a4","homepage":"https://github.com/tomhardman0/socketconnect#readme","scripts":{},"versions":[{"number":"0.0.1","date":"2016-03-06T14:40:05.962Z"}],"readme":"# SocketConnect\nIncredibly simple and extendable WebSocket wrapper with an HTTP repeat request fallback providing a shared API for sending and receiving data. SocketConnect checks if WebSockets are available to the client, if so they perform as normal, if not it falls back to repeat HTTP requests. You can then compare responses and check for new data.\n\n# Documentation\n\n#### Import or load the module\n\n`var SocketConnect = require('socketconnect');`\n\n`import SocketConnect from 'socketconnect';`\n\n#### Create a new instance\n\n`var connection = new SocketConnect(websocketURL, httpFallbackURL);`\n\nIf your `websocketURL` works as a HTTP fallback by replacing `ws://` with `http://` there's no need for the second argument as SocketConnect will perform the replacement. However if that's not the case, the second argument is necessary for the HTTP fallback.\n\n### WebSocket / HTTP Shared API\n\n#### Sending messages\n\n`connection.send(data);`\n\n#### Handling data\n\n```javascript\nconnection.handleData = function(e) {\n  console.log('Data:', e);\n};\n```\n\n#### Set up custom handling environment\n\nThere are two flags for checking whether your SocketConnect has used websockets or the fallback. Use some logic like below to separate your custom event handling:\n\n```javascript\nif (connection.isWebSocket) {\n  // Custom WebSocket handling here\n} else if (connection.isHTTP) {\n  // Custom HTTP handling here\n}\n```\n\nThe below API is split is split into WS/HTTP, make sure you override them within the correct block of the above logic.\n\n### WebSocket\n\n#### Event handling\nYou'll want to override the native WebSocket event handlers, you can do this on `connection.ws.*event*`, e.g.:\n\n```javascript\nconnection.ws.onopen = function() {\n  console.info('Connected!');\n};\n```\n\nThe same applies for `onerror`, `onclose`, however you'll handle `onmessage` within the shared API `handleData`.\n\n**IMPORTANT**: You must set `connection.canSend = true;` within the `onopen` event, this ensures you cannot send messages before the connection is established.\n\n### HTTP\n\nSocketConnect falls back to HTTP repeat requests using `XMLHttpRequest`.\n\n#### Setting request interval\n\nThe request interval is set to 1000(ms) by default, but you can change that using:\n\n`connection.setReqInterval(5000); // 5 Seconds`\n\n#### Event Handling\n\nSocketConnect provides access to all status updates from `XMLHttpRequest`. You can add any event handler to them using the below:\n\n```javascript\n// Response code 0\nconnection.reqNotInit = function() {\n  console.log('Request not initialised.');\n};\n```\n\n| Response Code   | Meaning                            | SocketConnect Function |\n| ----------------|------------------------------------| -----------------------|\n| 0               | Request not initialised            | reqNotInit             |\n| 1               | Server connection established      | connectionEstablished  |\n| 2               | Request received                   | reqReceived            |\n| 3               | Processing request                 | processingReq          |\n\nResponse code 4 is dealt with within the shared API `handleData`.\n","created":"2016-03-06T14:40:05.962Z","modified":"2016-03-06T14:40:05.962Z","lastPublisher":{"name":"tomhardman0","email":"tomhardman0@gmail.com"},"owners":[{"name":"tomhardman0","email":"tomhardman0@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"socketconnect","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/socketconnect-0.0.1.tgz_1457275202879_0.310573952505365"},"_npmUser":{"name":"tomhardman0","email":"tomhardman0@gmail.com"},"_npmVersion":"3.3.6","_rev":"1-e13a8f94a316b47cda1ff33d071a9dc9","_shasum":"d487580794d5936386f3b7b67199a7281ba1dc9c","author":{"name":"Tom Hardman"},"bugs":{"url":"https://github.com/tomhardman0/socketconnect/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"d487580794d5936386f3b7b67199a7281ba1dc9c","tarball":"http://registry.npmjs.org/socketconnect/-/socketconnect-0.0.1.tgz"},"maintainers":[{"name":"tomhardman0","email":"tomhardman0@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-06T14:40:05.962Z","created":"2016-03-06T14:40:05.962Z","0.0.1":"2016-03-06T14:40:05.962Z"}}}