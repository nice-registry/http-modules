{"name":"dumb","version":"0.1.2","description":"Allows non-evented apps to subscribe to Node.js events over HTTP","repository":"https://github.com/tlhunter/dumbpubsub","keywords":["pubsub","http","server"],"bundleDependencies":["request"],"dependencies":{"request":"2.11.0"},"license":"Dual GPL/BSD","engines":{"node":">=0.6"},"readme":"DumbPubSub\n===\n\nThis module is for Node.js applications in a heterogeneus environment, where\nyou want your non long-running-process applications (such as a PHP app) to\nbe able to subscribe to events from your Node.js application.\n\nFor example, if a client updates their email address, and you want to alert\nyour PHP application so that it can perhaps change some memcache entry it\nuses, this module is what you are looking for.\n\nExternal apps can provide an event to bind on to, and a URL to listen on.\nWhen the event occurs, the relevant data is POSTed to said URL.\n\nLong term goals for this project include saving the subscription data to either\na Redis or MongoDB database. The first iteration will only save it to a local\nJSON file. There may eventually be so many entries that keeping it in Node memory\nwouldn't work, so will have to explore that.\n\nAlso, you wouldn't want to use this for inter-nodejs-app communications, for\nthat you would want to use someone elses library.\n\nExample Requests\n===\n\n    POST /subscribe\n    P:event\n    P:url\n    Success: 201 CREATED\n    Failure: 409 CONFLICT\n\n    DELETE /subscribe\n    (P/G:event)\n    (P/G:url)\n    Success: 200 OK\n    Failure: 404 NOT FOUND\n\n    GET /subscribe\n    (G:event)\n    (G:url)\n    Success: 200 OK\n\nExample Server Code\n===\n\n    var dumb = require('dumbpubsub');\n    // npm install express\n    var express = require('express');\n\n    var app = express(); // Create an Express app\n    app.use(express.bodyParser());\n\n    dumb.attach(app) // DumbPubSub will now use the existing Express app\n        .notifyEvent() // By default, we don't tell client what was run, we assume their URL will let them know\n        .persistOnExit() // Makes sure we save all subscriptions to disk when we quit\n        .restore('subscriptions.json') // Reads this file for subscription info\n        .setUrl('/subscribe') // Sets the URL which we listen on\n        .enable(); // Tells the express app that we want to listen on some URLs\n\n    // Normal application requests work as expected\n    app.get('/', function(req, res) {\n        res.send('hello world');\n    });\n\n    // Allows us to trigger an event using a browser, for testing purposes\n    app.get('/trigger/:event', function(req, res) {\n        dumb.emit(req.route.params.event, {\n            from: 'web'\n        });\n        res.send(200);\n    });\n\n    app.listen(3000); // Express (and DumbPubSub) both listen on the same port\n    console.log('Listening for incomming HTTP requests.');\n\n    // Emit an event after 10 seconds\n    setTimeout(function() {\n        dumb.emit('client-update', {\n            clientId: 230948230,\n            oldEmail: 'tlhunter@gmail.com',\n            newEmail: 'tlhunter+github@gmail.com'\n        });\n    }, 10000);\n\nExample subscriptions.json\n===\n\n    [\n        {\n            \"event\": \"client-update\",\n            \"url\": \"http://localhost/listener.php\n        }\n    ]\n\nDebugging\n===\n\nHere's a tool for Chrome that allows you to make various HTTP requests:\n\nhttps://chrome.google.com/webstore/detail/hgmloofddffdnphfgcellkdfbfbjeloo\n","versions":[{"number":"0.1.0","date":"2012-09-10T18:21:53.428Z"},{"number":"0.1.1","date":"2012-09-10T18:26:55.191Z"},{"number":"0.1.2","date":"2012-09-10T20:27:22.717Z"}],"created":"2012-09-10T18:21:52.631Z","modified":"2012-09-10T20:27:22.717Z","lastPublisher":{"name":"tlhunter","email":"tlhunter@gmail.com"},"owners":[{"name":"tlhunter","email":"tlhunter@gmail.com"}],"other":{"_attachments":{},"_id":"dumb","_npmUser":{"name":"tlhunter","email":"tlhunter@gmail.com"},"_npmVersion":"1.1.59","_rev":"1-d2b9b516f4bbdf02626788237c4606e2","author":{"name":"Thomas Hunter","email":"tlhunter@gmail.com"},"contributors":[{"name":"Thomas Hunter","email":"tlhunter@gmail.com"}],"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"f8d00b3b8849e59b3afa090b847682a7485cd246","tarball":"http://registry.npmjs.org/dumb/-/dumb-0.1.2.tgz"},"maintainers":[{"name":"tlhunter","email":"tlhunter@gmail.com"}],"time":{"modified":"2012-09-10T20:27:22.717Z","created":"2012-09-10T18:21:52.631Z","0.1.0":"2012-09-10T18:21:53.428Z","0.1.1":"2012-09-10T18:26:55.191Z","0.1.2":"2012-09-10T20:27:22.717Z"}}}