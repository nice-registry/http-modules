{"name":"passport-http-custom-bearer","version":"1.0.15","description":"HTTP Bearer authentication strategy using custom headers and field names for Passport.  Forked from https://github.com/jaredhanson/passport-http-bearer.","keywords":["passport","auth","authn","authentication","authz","authorization","http","bearer","token","oauth"],"repository":"https://github.com/wwwslinger/passport-http-custom-bearer","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib","dependencies":{"passport-strategy":"1.x.x"},"devDependencies":{"mocha":"1.x.x","chai":"1.x.x","chai-passport-strategy":"0.1.x"},"engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha --reporter spec --require test/bootstrap/node test/*.test.js"},"testling":{"browsers":["chrome/latest"],"harness":"mocha","files":["test/bootstrap/testling.js","test/*.test.js"]},"gitHead":"e51faca53fff4db3ac0080986cd3932de40ebb76","homepage":"https://github.com/wwwslinger/passport-http-custom-bearer#readme","versions":[{"number":"1.0.13","date":"2015-09-27T07:25:52.264Z"},{"number":"1.0.14","date":"2015-09-27T07:29:04.636Z"},{"number":"1.0.15","date":"2015-09-27T07:40:59.545Z"}],"readme":"# passport-http-custom-bearer\n\n[![NPM version](https://img.shields.io/npm/v/passport-http-custom-bearer.svg)](https://www.npmjs.org/package/passport-http-custom-bearer) [![Dependency Status](https://david-dm.org/wwwslinger/passport-http-custom-bearer.png)](https://david-dm.org/wwwslinger/passport-http-custom-bearer)  ![MIT License](http://img.shields.io/badge/license-MIT-green.svg)\n\n\nHTTP Bearer authentication strategy for [Passport](http://passportjs.org/) using a custom header field.\n\nThis module lets you authenticate HTTP requests using bearer tokens, as\nspecified by [RFC 6750](http://tools.ietf.org/html/rfc6750), in your Node.js\napplications, using either the recommended ``Authorization`` header name or\na custom name.  Bearer tokens are typically used protect API endpoints, and are\noften issued using OAuth 2.0.\n\nBy plugging into Passport, bearer token support can be easily and unobtrusively\nintegrated into any application or framework that supports\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\n[Express](http://expressjs.com/).\n\n## Install\n\n    $ npm install passport-http-custom-bearer\n\n## Usage\n\n#### Configure Strategy\n\nThe HTTP Bearer authentication strategy authenticates users using a bearer\ntoken.  The strategy requires a `verify` callback, which accepts that\ncredential and calls `done` providing a user.  Optional `info` can be passed,\ntypically including associated scope, which will be set by Passport at\n`req.authInfo` to be used by later middleware for authorization and access\ncontrol.\n\nFor example, to authenticate using a custom header ``X-APIAuth`` (the recommended ``X-`` prefix is automatically added), \nor a custom body field ``api_token``, or a custom query parameter ``api_token``:\n\n    var CustomBearerStrategy = require('passport-http-custom-bearer');\n    passport.use('api-bearer', new CustomBearerStrategy(\n      { headerName: 'APIAuth',\n        bodyName: 'api_token',\n        queryName: 'api_token'\n      },\n      function(token, done) {\n        User.findOne({ token: token }, function (err, user) {\n          if (err) { return done(err); }\n          if (!user) { return done(null, false); }\n          return done(null, user, { scope: 'all' });\n        });\n      }\n    ));\n\n#### Authenticate Requests\n\nUse ``passport.authenticate()``, specifying the ``'custom-bearer'`` strategy (or your named strategy), to\nauthenticate requests.  Requests containing bearer tokens do not require session\nsupport, so the ``session`` option can be set to ``false``.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication for the above example strategy:\n\n    app.get('/profile', \n      passport.authenticate('api-bearer', { session: false }),\n        function(req, res) {\n          res.json(req.user);\n      });\n\nAs a [policy](http://sailsjs.org/documentation/concepts/policies) in [Sails](http://sailsjs.org/), \nusing the above example strategy:\n\n    var passport = require('passport');\n\n    module.exports = function(req, res, next) {\n\n      passport.authenticate(\n        'api-bearer',\n        function(err, user, info)\n        {\n          console.log(\"Authentication via API Bearer\", info);\n          if ((err) || (!user)) {\n            res.send(401);\n            return;\n          }\n          if (info && info.queryName && info.queryName.length) delete req.query[info.queryName];\n          else delete req.query.access_token;\n          req.user = user;\n          return next();\n        }\n      )(req, res);\n    };\n\n#### Issuing Tokens\n\nBearer tokens are typically issued using OAuth 2.0.  [OAuth2orize](https://github.com/jaredhanson/oauth2orize)\nis a toolkit for implementing OAuth 2.0 servers and issuing bearer tokens.  Once\nissued, this module can be used to authenticate tokens as described above.\n\n## Examples\n\nFor a complete, working example using the defaults, refer to the [Bearer example](https://github.com/passport/express-4.x-http-bearer-example).\n\n## Related Modules\n\n- [OAuth2orize](https://github.com/jaredhanson/oauth2orize) â€” OAuth 2.0 authorization server toolkit\n\n## Tests\n\n    $ npm install\n    $ npm test\n\n## Credits\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n  - [Jason McInerney](http://github.com/wwwslinger)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2011-2013 Jared Hanson <[http://jaredhanson.net/](http://jaredhanson.net/)>\n","created":"2015-09-27T07:25:52.264Z","modified":"2015-09-27T07:40:59.545Z","lastPublisher":{"name":"wwwslinger","email":"wwwslinger@gmail.com"},"owners":[{"name":"wwwslinger","email":"wwwslinger@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"passport-http-custom-bearer","_nodeVersion":"0.12.7","_npmUser":{"name":"wwwslinger","email":"wwwslinger@gmail.com"},"_npmVersion":"2.11.3","_rev":"1-fe73a4108994a319be8e81bd9aa69808","_shasum":"f82639423f710f46cf2216e11d28e25c2e482800","author":{"name":"Jason McInerney","email":"wwwslinger@gmail.com","url":"http://github.com/wwwslinger/"},"bugs":{"url":"http://github.com/wwwslinger/passport-http-custom-bearer/issues"},"directories":{},"dist-tags":{"latest":"1.0.15"},"dist":{"shasum":"f82639423f710f46cf2216e11d28e25c2e482800","tarball":"http://registry.npmjs.org/passport-http-custom-bearer/-/passport-http-custom-bearer-1.0.15.tgz"},"maintainers":[{"name":"wwwslinger","email":"wwwslinger@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-27T07:40:59.545Z","created":"2015-09-27T07:25:52.264Z","1.0.13":"2015-09-27T07:25:52.264Z","1.0.14":"2015-09-27T07:29:04.636Z","1.0.15":"2015-09-27T07:40:59.545Z"}}}