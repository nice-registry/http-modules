{"name":"noradle-http","version":"0.13.2","description":"noradle http gateway for plsql servlet","main":"lib/handlerHTTP.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/noradle/noradle-http","engines":{"node":">=0.10.0"},"dependencies":{"debug":"~2.1.1","underscore":"^1.8.3","noradle-protocol":"^0.13.0","noradle-nodejs-client":"^0.13.1","noradle-resultsets":"^0.13.2","consolidate":"^0.13.1","formidable":">1.0.11"},"devDependencies":{},"optionalDependencies":{"consolidate":"^0.13.1","formidable":">1.0.11"},"keywords":["noradle","http","gateway"],"license":"ISC","homepage":"https://github.com/noradle/noradle-http","gitHead":"0889c43f9d926ab741638ce6aef905e23bed4a91","versions":[{"number":"0.13.0","date":"2015-12-16T03:24:15.233Z"},{"number":"0.13.1","date":"2015-12-16T08:47:07.991Z"},{"number":"0.13.2","date":"2015-12-17T06:11:40.998Z"}],"readme":"APIs\n==========\n\n* create a DBPool instance\n* embed noradle.handlerHTTP for a node http server\n* join static with expressjs\n* use with experssjs(static) / harp / socket.io example\n\ncreate a DBPool instance\n------------------------\n\n```javascript\nvar DBDriver = require('noradle-nodejs-client').DBDriver;\nvar dbPool = DBDriver.connect([port, host], {cid : 'client_identifier', passwd : 'password for the client'})\n```\n\n* [port,host] is the same parameters as [net.connect] API\n* 2nd parameter is cid:passwd, to allow noradle dispatcher to accept connection\n\nnoradle.HTTP for a node http server\n------------------------------------\n\n```javascript\nvar httpHandler = require('noradle-http')(dbPool, customizedReqBase, configOptions)\n```\n\n* dbPool is created by `require('noradle-nodejs-client').DBDriver.connect`\n* customizedReqBase is a constructor function who can set name-value pairs to send to oracle, like [internal ReqBase][]\n* configOptions is customized configuration object that set or override default options, all available cfg is [here][configuration]\n* what `require('noradle-http')` return is just a normal [node http handler][node http] like `function(request, response){...}`\n\njoin static with [express][express(en)]\n--------------------------------------------\n\n* noradle doesn't support static file service\n* you can use  [express][express(en)]'s static module or any static service module\n* you can use [express][express(en)] or other node http server module to set route to noradle servlet and static module, combine them in one http server\n\n```javascript\n...\nvar express = require('express')\n  , app = express()\n  ;\n\napp.use('/staticMountPoint/', express.static('/some-mount-point-for-static-files/noradle-demo/static'));\napp.use(require('noradle-http')(...));\napp.listen(1520);\n```\n\nexamples\n==========\n\na servlet only http server\n---------------------------\n\n* only dynamic plsql servlet server,  without static file service\n* use node's internal http module only, no [express][express(ch)] included\n* no customized ReqBase\n* use default configuration for noradle.HTTP\n\n```javascript\nvar DBDriver = require('noradle-nodejs-client').DBDriver\n  , dbPool = DBDriver.connect([8019, 'qhtapp1'], {cid : 'demo', passwd : 'demo'})\n  , pspHandler = require('noradle-http')(dbPool)\n  , http = require('http')\n  ;\nhttp.createServer(pspHandler).listen(1520);\n```  \n\na servlet only http server with customized ReqBase\n---------------------------------------------------\n\n* in customized ReqBase(a constructor function), set `this.name` to create or replace name-value pair that's about to send into oracle\n* some name like \"x$xxx\" have special meaning, that control the servlet processing behavior, see [oraReq-control-headers][]\n\n```javascript\nfunction myReqBase(req, cfg){\n  // set some name-value pair to oracle, in plsql, r.getc('name1') will get 'value1'\n  this.name1 = 'value1';\n  // map all request to plsql procedure \"basic_io_b.req.info\"\n  this.x$prog = 'basic_io_b.req_info';\n}\nvar DBDriver = require('noradle-nodejs-client').DBDriver\n  , dbPool = DBDriver.connect([8019, 'qhtapp1'], {cid : 'demo', passwd : 'demo'})\n  , pspHandler = require('noradle-http')(dbPool, myReqBase)\n  , http = require('http')\n  ;\nhttp.createServer(pspHandler).listen(1520);\n```  \n\na servlet only http server with customized config\n---------------------------------------------------\n\n* you can provide none-default [configuration][] (a object type) for noradle.HTTP\n\n```javascript\nvar DBDriver = require('noradle-nodejs-client').DBDriver\n  , dbPool = DBDriver.connect([8019, 'qhtapp1'], {cid : 'demo', passwd : 'demo'})\n  , pspHandler = require('noradle-http')(dbPool, {\n    static_url : 'http://noradle-demo.some-static-cdn.com',\n    upload_dir : __dirname + '/upload'\n  })\n  , http = require('http')\n  ;\nhttp.createServer(pspHandler).listen(1520);\n```  \n\na servlet and static server using [express][express(en)]\n--------------------------------------------------------\n\n* mount static handler for \"/demo1/\" first, avoid go through noradle.HTTP handler for every static request\n* in \"myReqBase\", tell noradle the base url for static url reference is \"/demo1/\"\n\n```javascript\nvar staticMountPoint = '/demo1/';\n\nfunction myReqBase(req, cfg){\n  this.y$static = staticMountPoint;\n}\n\nvar DBDriver = require('noradle-nodejs-client').DBDriver\n  , dbPool = DBDriver.connect([8019, 'qhtapp1'], {cid : 'demo', passwd : 'demo'})\n  , pspHandler = require('noradle-http')(dbPool, myReqBase)\n  , express = require('express')\n  , app = express()\n  ;\n\napp.use(staticMountPoint, express.static('/Users/cuccpkfs/dev/project/noradle-demo/static'));\napp.use(pspHandler);\napp.listen(1520);\n```\n\n  [express(ch)]: http://www.expressjs.com.cn/\n  [express(en)]: http://expressjs.com/\n  [oraReq-control-headers]: https://github.com/kaven276/noradle/wiki/oraReq-control-headers\n  [configuration]: https://github.com/kaven276/noradle/blob/master/lib/cfg.js\n  [net.connect]: https://nodejs.org/api/net.html\n  [internal ReqBase]: https://github.com/kaven276/noradle/blob/master/lib/ReqBase.js\n  [node http]: https://nodejs.org/api/http.html","starsCount":1,"created":"2015-12-16T03:24:15.233Z","modified":"2015-12-17T06:11:40.998Z","lastPublisher":{"name":"kaven276","email":"kaven276@vip.sina.com"},"owners":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"other":{"_attachments":{},"_from":".","_id":"noradle-http","_npmUser":{"name":"kaven276","email":"kaven276@vip.sina.com"},"_npmVersion":"1.4.28","_rev":"1-0fa5f27ef2fe372d685312a381b56104","_shasum":"3b93184e446acd3d366d7ab0f2e2c4977a99bffb","author":{"name":"kaven276@vip.sina.com"},"bugs":{"url":"https://github.com/noradle/noradle-http/issues"},"directories":{"lib":"./lib"},"dist-tags":{"latest":"0.13.2"},"dist":{"shasum":"3b93184e446acd3d366d7ab0f2e2c4977a99bffb","tarball":"http://registry.npmjs.org/noradle-http/-/noradle-http-0.13.2.tgz"},"maintainers":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"readmeFilename":"README.md","time":{"modified":"2015-12-17T06:11:40.998Z","created":"2015-12-16T03:24:15.233Z","0.13.0":"2015-12-16T03:24:15.233Z","0.13.1":"2015-12-16T08:47:07.991Z","0.13.2":"2015-12-17T06:11:40.998Z"},"users":{"kaven276":true}}}