{"version":"0.1.0","name":"jf-http-headers","description":"Class for manipulating HTTP headers.","keywords":["ajax","http","https","header","headers","request","response"],"license":"MIT","homepage":"http://www.joaquinfernandez.net","repository":"https://github.com/joaquinfq/jfHttpHeaders","scripts":{"test":"node test"},"gitHead":"9a7c1c3cd2ef1c60234212df0c1750dd35380c61","versions":[{"number":"0.1.0","date":"2017-03-22T21:18:33.061Z"}],"readme":"# jfHttpHeaders [![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nClass for manipulating HTTP headers.\n\n## Usage\n\n[![npm install jfHttpHeaders](https://nodei.co/npm/jf-http-headers.png?compact=true)](https://npmjs.org/package/jf-http-headers/)\n\n### Using response headers object (as in http.IncomingMessage, http.ServerResponse, etc.)\n\n```js\nconst jfHttpHeaders = require('jf-http-headers');\nconst httpHeaders   = new jfHttpHeaders(message.headers);\nconsole.log(httpHeaders.get('Content-Type')); // application/json\nconsole.log(httpHeaders.get('Host'));         // http://localhost:3333\n```\n\n### Using raw response headers as string\n\n```js\n/**\n * Server response is:\nHTTP/1.0 206 Partial Content\nContent-Length: 26012\nContent-Range: bytes 21010-47021/47022\nContent-Type: image/gif\nDate: Wed, 15 Feb 2017 06:25:24 GMT\nLast-Modified: Wed, 15 Feb 2017 04:58:08 GMT\n */\nconst jfHttpHeaders = require('jf-http-headers');\nconst httpHeaders   = new jfHttpHeaders();\nhttpHeaders.parse(response.headers.split('\\r\\n'));\nconsole.log(httpHeaders.get('Content-Range')); // bytes 21010-47021/47022\nconsole.log(httpHeaders.get('Date'));          // Wed, 15 Feb 2017 06:25:24 GMT\nconsole.log(httpHeaders.status); // { code : '206', text : 'Partial Content', version : { major : '1', minor : '0' } }\n```\n\n### Building headers and sending request using differents libraries\n\n`XMLHttpRequest` must be open before set headers, \n`http.request` needs headers as option, etc. So, each library use a different approach.\n\n\nUsing `jfHttpHeaders` you can split your logic in 2 parts:\n* Building body using a lib and setting headers using jfHttpHeaders and return \n  an instance of `jfHttpHeaders` as configuration ready for another lib.\n* Sending request using another lib. Before call send, you can set headers\n  iterating over jfHttpHeaders instance using for..of loop.\n\nUsing jfHttpHeaders as mediator can simplify your logic.\n\n```js\nconst jfHttpHeaders = require('jf-http-headers');\nconst httpHeaders   = new jfHttpHeaders();\n// Preparing body before sending request.\nbody = {...};\nhttpHeaders.set('Content-Type', 'application/json');\nhttpHeaders.set('X-Requested-With', 'jfAjax');\n//...\n//...\n//...\n// Now, send the request using an instance of XMLHttpRequest\n// jfHttpHeaders is iterable, so you can use for..of loop.\nfor (let header of httpHeaders)\n{\n    xhr.setRequestHeader(header, httpHeaders.get(header));\n}\nxhr.send(body);\n\n// Or you can use node too\nrequire('http').request(\n    {\n        ...\n        headers : httpHeaders.headers\n        ...\n    },\n    ...\n)\n```\n\nOr you can extend `jfHttpHeaders` and to add other methods for pass an instance of \nyour class bewteen your libraries.\n\n### More examples\n\nYou can view in `test.js` some examples more about use `jfHttpHeaders`.\n","created":"2017-03-22T21:18:33.061Z","modified":"2017-03-22T21:18:33.061Z","lastPublisher":{"name":"joaquinfq","email":"public@joaquinfernandez.net"},"owners":[{"name":"joaquinfq","email":"public@joaquinfernandez.net"}],"other":{"_attachments":{},"_from":".","_id":"jf-http-headers","_nodeVersion":"7.7.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jf-http-headers-0.1.0.tgz_1490217511176_0.8653217437677085"},"_npmUser":{"name":"joaquinfq","email":"public@joaquinfernandez.net"},"_npmVersion":"4.4.1","_rev":"1-133ed64989e6e0f0ac87906bf2acab49","_shasum":"d0234092894312b5094193528c978513b29f8460","author":{"name":"Joaquín Fernández"},"bugs":{"url":"https://github.com/joaquinfq/jfHttpHeaders/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"d0234092894312b5094193528c978513b29f8460","tarball":"https://registry.npmjs.org/jf-http-headers/-/jf-http-headers-0.1.0.tgz"},"maintainers":[{"name":"joaquinfq","email":"public@joaquinfernandez.net"}],"readmeFilename":"README.md","time":{"modified":"2017-03-22T21:18:33.061Z","created":"2017-03-22T21:18:33.061Z","0.1.0":"2017-03-22T21:18:33.061Z"}}}