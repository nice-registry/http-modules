{"name":"oniyi-http-plugin-credentials","version":"0.1.0","description":"A plugin for oniyi-http-client for automatic attachment of user credentials","homepage":"https://github.com/benkroeger/oniyi-http-plugin-credentials#readme","files":["lib"],"main":"lib/index.js","keywords":["loopback","passport","request","oauth","credentials","refresh","oniyi","http-client"],"dependencies":{"lodash":"^4.10.0","oniyi-logger":"^1.0.0","passport":"^0.3.2"},"devDependencies":{"eslint":"^3.5.0","eslint-config-oniyi":"^4.2.0","gulp":"^3.9.1","gulp-coveralls":"^0.1.4","gulp-eslint":"^2.0.0","gulp-exclude-gitignore":"^1.0.0","gulp-istanbul":"^0.10.4","gulp-mocha":"^2.2.0","gulp-nsp":"^2.4.0","gulp-plumber":"^1.1.0","lodash":"^4.15.0"},"repository":"https://github.com/benkroeger/oniyi-http-plugin-credentials","scripts":{"prepublish":"gulp prepublish","test":"gulp"},"license":"MIT","gitHead":"b8db6bb3a833794c91139c51eced33ee042ea28d","versions":[{"number":"0.0.1","date":"2016-02-25T11:09:37.961Z"},{"number":"0.0.2","date":"2016-04-12T20:38:08.664Z"},{"number":"0.1.0","date":"2016-11-07T16:23:49.779Z"}],"readme":"# oniyi-http-plugin-credentials [![NPM version][npm-image]][npm-url] [![Dependency Status][daviddm-image]][daviddm-url] [![Coverage percentage][coveralls-image]][coveralls-url]\n> A plugin for oniyi-http-client for automatic attachment of user credentials\n\nThis plugin is designed to work with the [third-party login component](https://docs.strongloop.com/pages/releaseview.action?pageId=3836277) of [loopback](https://docs.strongloop.com/display/public/LB/LoopBack).\nThe [third-party login component](https://docs.strongloop.com/pages/releaseview.action?pageId=3836277) is heavily based on [passportjs](http://passportjs.org/).\nTo make things work more broadly, I also wrote a [loopback](https://docs.strongloop.com/display/public/LB/LoopBack) extension to allow the usage of custom auth schemes [oniyi-loopback-passport-custom-schemes](https://github.com/benkroeger/oniyi-loopback-passport-custom-schemes).\n\n## Installation\n\n```sh\n$ npm install --save oniyi-http-plugin-credentials\n```\n\n## Usage\n\n```js\nconst OniyiHttpClient = require('oniyi-http-client');\nconst oniyiHttpPluginCredentials = require('oniyi-http-plugin-credentials');\n\nconst clientOptions = {};\nconst httpClient = new OniyiHttpClient(clientOptions);\n\nconst pluginOptions = {};\nconst plugin = oniyiHttpPluginCredentials(pluginOptions);\n\nhttpClient.use(plugin);\n```\n\n## Plugin Options\nThe `oniyi-http-plugin-credentials` module exports a factory function that takes a single options argument.\n\navailable options are: \n- **providerName**: undefined (string, required) - name of the passport-strategy to be used. *Note:* passport-strategy **must** be registered first\n- **removeUserProp**: true (boolean, optional) - indicates if the `user` property should be removed from the request options\n- **areCredentialsExpired**: (function, optional) - async function that checks if credentials are expired. Must take two arguments (`credentials`, `callback(err, isExpired)`)\n- **refreshCredentials**: (function, optional) - async function that provides refreshed credentials. Must take three arguments (`strategy`, `currentCredentials`, `callback(err, freshCredentials)`)\n- **makeAuthParams**: (function, optional) - async function that provides an object literal to be merged with request parameters. Must take two arguments (`credentials`, `callback(err, authParams)`)\n- **userRelationProp**: `/-link$/.test(pluginOptions.providerName) ? 'credentials' : 'identities'`, (string, optional) - name of the relation on `req.user` that we should search for user credentials\n- **credentialsProp**: 'credentials' (string, optional) - name of the property in the relation's document to be used for credentials\n\n\nAll options of type `function` have default values that can with OAuth2 strategies.\n\n## License\n\nMIT Â© [Benjamin Kroeger]()\n\n\n[npm-image]: https://badge.fury.io/js/oniyi-http-plugin-credentials.svg\n[npm-url]: https://npmjs.org/package/oniyi-http-plugin-credentials\n[travis-image]: https://travis-ci.org/benkroeger/oniyi-http-plugin-credentials.svg?branch=master\n[travis-url]: https://travis-ci.org/benkroeger/oniyi-http-plugin-credentials\n[daviddm-image]: https://david-dm.org/benkroeger/oniyi-http-plugin-credentials.svg?theme=shields.io\n[daviddm-url]: https://david-dm.org/benkroeger/oniyi-http-plugin-credentials\n[coveralls-image]: https://coveralls.io/repos/benkroeger/oniyi-http-plugin-credentials/badge.svg\n[coveralls-url]: https://coveralls.io/r/benkroeger/oniyi-http-plugin-credentials\n","created":"2016-02-25T11:09:37.961Z","modified":"2016-11-07T16:23:49.779Z","lastPublisher":{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"},"owners":[{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"oniyi-http-plugin-credentials","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/oniyi-http-plugin-credentials-0.1.0.tgz_1478535829241_0.5916657524649054"},"_npmUser":{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"},"_npmVersion":"3.10.8","_rev":"2-ae1821f214c7b4f5dd3ba22a920c2162","_shasum":"75cbe01172e89bc5632ab915c51ccfcb913a4c38","author":{"name":"Benjamin Kroeger","email":"benjamin.kroeger@gmail.com"},"bugs":{"url":"https://github.com/benkroeger/oniyi-http-plugin-credentials/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"75cbe01172e89bc5632ab915c51ccfcb913a4c38","tarball":"http://registry.npmjs.org/oniyi-http-plugin-credentials/-/oniyi-http-plugin-credentials-0.1.0.tgz"},"maintainers":[{"name":"bkroeger","email":"benjamin.kroeger@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-07T16:23:49.779Z","created":"2016-02-25T11:09:37.961Z","0.0.1":"2016-02-25T11:09:37.961Z","0.0.2":"2016-04-12T20:38:08.664Z","0.1.0":"2016-11-07T16:23:49.779Z"}}}