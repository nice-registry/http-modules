{"name":"moduleserve","version":"0.8.3","description":"Serve and transpile CommonJS modules over HTTP","main":"index.js","bin":{"moduleserve":"./bin/moduleserve.js"},"repository":"https://github.com/marijnh/moduleserve","keywords":["commonjs","module","http","development"],"license":"MIT","dependencies":{"ecstatic":"^1.4.0"},"gitHead":"75ea2d908914c5a45c3d9bf62e6d3966e9a25a0b","homepage":"https://github.com/marijnh/moduleserve#readme","scripts":{},"versions":[{"number":"0.2.0","date":"2016-01-21T14:35:04.053Z"},{"number":"0.3.0","date":"2016-01-21T14:43:30.712Z"},{"number":"0.4.0","date":"2016-01-21T16:03:35.657Z"},{"number":"0.5.0","date":"2016-01-22T09:40:03.236Z"},{"number":"0.6.0","date":"2016-01-22T21:00:48.655Z"},{"number":"0.6.1","date":"2016-01-28T08:14:20.498Z"},{"number":"0.6.2","date":"2016-02-10T12:13:53.110Z"},{"number":"0.6.3","date":"2016-02-11T11:52:48.234Z"},{"number":"0.6.4","date":"2016-02-11T15:02:54.719Z"},{"number":"0.7.0","date":"2016-02-24T10:22:35.441Z"},{"number":"0.7.1","date":"2016-03-07T20:59:09.361Z"},{"number":"0.8.0","date":"2016-06-10T08:36:31.037Z"},{"number":"0.8.1","date":"2016-11-16T16:33:19.933Z"},{"number":"0.8.2","date":"2016-12-02T08:04:55.556Z"},{"number":"0.8.3","date":"2016-12-07T10:09:35.097Z"}],"readme":"# Moduleserve\n\nThis is a shim HTTP server for directly running your CommonJS (or ES6)\nmodules for development and testing (without a bundling step, and with\nthe compilation/transformation integrated in the server shim).\n\n**Warnings:**\n\n * The server basically exposes your whole filesystem over HTTP. It\n   binds to `\"localhost\"` by default, but if you bind it to something\n   else or proxy in some uncautious way, you are putting yourself at\n   risk.\n\n * This does everything syncronously, both on client and server.\n\n * This is a hack that I am using for my own development, not\n   generally-useful, supported software. You might be able to make use\n   of it, but if you run into a problem, you should try to debug it\n   yourself, not ask me for help.\n\n * The code is likely to break if you do something that I'm not doing.\n   Pull requests welcome!\n\n## What it does\n\nYou run the server for a given directory...\n\n    moduleserve demo/ --port 8080\n\nIt will start up an HTTP server on the given port, serving the content\nof the `demo` directory statically. In addition, it exposes a URL\n`/moduleserve/load.js`, which you use to load your main module:\n\n    <script src=\"/moduleserve/load.js\" data-module=\"./mymodule\"></script>\n\nThat will pull in the client-side scaffolding and look for\n`./mymodule`, resolved relative to the directory that the server is\nrunning on. You can add a `data-require` attribute to the tag to have\nit set a global `require` variable, which you can use to load modules\nfrom the console.\n\nThat module is loaded as a\n[CommonJS](http://wiki.commonjs.org/wiki/Modules/1.1) module, and may\nuse `require` with the regular node.js conventions (implicit `.js` or\n`/index.js`, searching `node_modules`, etc). The intention is that,\ncontrary to systems like JSPM, you don't have to set up your project\nto please this tool, but you can just directly use it on an npm-style\ncodebase.\n\nYou can pass `moduleserve` a `--transform` option, which should point\nat a node module that defines a transformer. Such a transformer is\ncalled on a file before it is served. It should export a `transform`\nfunction that takes `(filename, text)` parameter and returns the\ntransformed text. If it also exports an `init` function, that is\ncalled once with the target directory of the server.\n\nIf you pass `--transform babel`, you get a built-in transformer that\nloads `babel` in the context of the target directory (i.e. you have to\nhave it installed locally there, or globally) that you're running the\ntool on, and uses it to transform any files whose path does not\ncontain `node_modules/`.\n\nThe client is going to make a request for every single module file, so\nfor a bigger project the initial load is bound to be slow, especially\nif you're using an expensive transform. The server then caches these\nand sends 302 responses whenever possible, so assuming localhost-level\nlatency, subsequent loads should be faster.\n\n## Source\n\nThis code is open-source under an MIT license. If you want to\ncontribute, create pull requests\n[on GitHub](https://github.com/marijnh/moduleserve/).\n","created":"2016-01-21T14:35:04.053Z","modified":"2016-12-07T10:09:35.097Z","lastPublisher":{"name":"marijn","email":"marijnh@gmail.com"},"owners":[{"name":"marijn","email":"marijnh@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"moduleserve","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/moduleserve-0.8.3.tgz_1481105374389_0.6750599315855652"},"_npmUser":{"name":"marijn","email":"marijnh@gmail.com"},"_npmVersion":"3.10.8","_rev":"4-4dac45043d09a897e97f878b99bd0954","_shasum":"47cb2e68358c33e9f8d28b0c5180164180f7a864","author":{"name":"Marijn Haverbeke","email":"marijnh@gmail.com"},"bugs":{"url":"https://github.com/marijnh/moduleserve/issues"},"directories":{},"dist-tags":{"latest":"0.8.3"},"dist":{"shasum":"47cb2e68358c33e9f8d28b0c5180164180f7a864","tarball":"http://registry.npmjs.org/moduleserve/-/moduleserve-0.8.3.tgz"},"maintainers":[{"name":"marijn","email":"marijnh@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-12-07T10:09:35.097Z","created":"2016-01-21T14:35:04.053Z","0.2.0":"2016-01-21T14:35:04.053Z","0.3.0":"2016-01-21T14:43:30.712Z","0.4.0":"2016-01-21T16:03:35.657Z","0.5.0":"2016-01-22T09:40:03.236Z","0.6.0":"2016-01-22T21:00:48.655Z","0.6.1":"2016-01-28T08:14:20.498Z","0.6.2":"2016-02-10T12:13:53.110Z","0.6.3":"2016-02-11T11:52:48.234Z","0.6.4":"2016-02-11T15:02:54.719Z","0.7.0":"2016-02-24T10:22:35.441Z","0.7.1":"2016-03-07T20:59:09.361Z","0.8.0":"2016-06-10T08:36:31.037Z","0.8.1":"2016-11-16T16:33:19.933Z","0.8.2":"2016-12-02T08:04:55.556Z","0.8.3":"2016-12-07T10:09:35.097Z"}}}