{"name":"http-five-o","description":"Express-based static HTTP server with basic auth.","version":"0.1.1","homepage":"https://github.com/blech75/http-five-o","repository":"https://github.com/blech75/http-five-o","licenses":[{"type":"MIT","url":"https://github.com/blech75/http-five-o/blob/master/LICENSE-MIT"}],"main":"./bin/http5o.js","bin":{"http5o":"./bin/http5o.js"},"engines":{"node":">= 0.8.0"},"devDependencies":{"grunt-contrib-jshint":"~0.6.4","grunt-contrib-watch":"~0.5.3","grunt":"~0.4.5"},"dependencies":{"basic-auth":"^1.0.3","express":"^4.13.3"},"keywords":["http","web","server","static","auth","authentication"],"gitHead":"51932f6a02465367c357266e999746c13b089026","scripts":{},"versions":[{"number":"0.1.0","date":"2015-08-26T20:08:14.721Z"},{"number":"0.1.1","date":"2015-08-26T20:17:54.436Z"}],"readme":"# http-five-o\n\nExpress-based static HTTP server with basic auth.\n\nMission: To Protect and Serve HTTP requests.\n\n## Background\n\n**http-five-o** exists because I could not locate a Node.js-based HTTP server that statisfied my two requirements: 1) served static files, and 2) protected them via [HTTP basic auth](https://en.wikipedia.org/wiki/Basic_access_authentication). I desired such a thing because I enjoy using [Heroku](https://www.heroku.com) and didn't want the overhead of Apache/Nginx.\n\nI wanted to build off an exisitng solution and [Express](http://expressjs.com) seemed like a nice enough framework to start from. I liked the concept of middleware—the key component being [express.static](http://expressjs.com/guide/using-middleware.html#express.static))—which, with minimal effort, allowed me to tack on a basic auth solution I cobbled together based on a some [code sample](https://davidbeath.com/posts/expressjs-40-basicauth.html).\n\n(As a fringe benefit, this whole process also allowed me to dig deeper into Node.js and npm, and not to mention publish my first npm package. Woohoo!)\n\n\n\n## Getting Started\nThe **http-five-o** package consists of a single executable, `http5o`. It is intended as a command line (cli) utility and thus does not (currently) expose itself as a proper Node.js module.\n\n**http-five-o** coexists comfortably as both a locally installed project dependency and a globally installed package. You probably want (and need) both options. The local dependency is used for serving your project when deployed; The global utility is for general cli use (serving arbitrary directories).\n\n**Note:** Since **http-five-o** is intended for serving pages, it should be considered a dependency (installed via `--save`), not a dev dependency (installed via `--save-dev`.)  This distinction is important for deploying to, say, Heroku, because you want **http-five-o** installed there.\n\n### Installing as a project dependency\n \n ```\n $ npm install --save http-five-o\n ```\n\n### Installing as a global utility\n\n```\n$ npm install -g http-five-o\n```\n\n## Usage\n\n**http-five-o** can be used in any combination of ways below.\n\n### Global Usage\n\nWhen installed as a global utility, you can call it from your shell like so:\n\n```\n$ http5o\n```\n\nBy default it will serve the current directory. See [Configuration Options](#configuration-options) below for more details.\n\n### Via npm scripts\n\nIf you did not install it as a global utility, but would like to use it to serve your project, you can utilize [npm scripts](https://docs.npmjs.com/misc/scripts) to launch `http5o` because [npm scripts can access the path to the locally installed executables](https://docs.npmjs.com/misc/scripts#path). To do this, add a `scripts` block to your `package.json`. Here's an example using `npm start`:\n\n```\n{\n  // ...\n  \"scripts\": {\n    \"start\": \"DISABLE_HTTP_AUTH=true http5o\"\n  },\n  // ...\n}\n```\n\nNotice the configuration set via environment variables. See [Configuration Options](#configuration-options) below for more details.\n\n\n### Via npm scripts & `heroku local` (`forego`)\n\nModify your package.json similar to above, but instead of calling http5o directly, call [`heroku local`](https://devcenter.heroku.com/articles/heroku-local):\n\n```\n{\n  // ...\n  \"scripts\": {\n    \"start\": \"heroku local\"\n  },\n  // ...\n}\n```\n\nThen, create a [`.env`](https://devcenter.heroku.com/articles/heroku-local#add-a-config-var-to-your-env-file) file in your project to store any desired [configuration](#configuration-options):\n\n```\nDISABLE_HTTP_AUTH=true\nDOCROOT=src\n```\n\n**WARNING:** Be sure to add `.env` to your `.gitignore` file.\n\n**NOTE:** If you're not a fan of Heroku or don't have their [toolbelt](https://toolbelt.heroku.com) installed, you can still benefit from the `.env` file and `Procfile` combo by using [Forego](https://github.com/ddollar/forego). In this case, you'd configure the `start` script to run `forego start`.\n\n**NOTE:** Going this route requires that you have `http5o` installed globally. This is because the [Heroku Toolbelt](https://toolbelt.heroku.com) uses [Forego](https://github.com/ddollar/forego) to run `http5o`, which is not aware of the local npm executable path (`$PROJECT_ROOT/node_modules/.bin/`).\n\n**NOTE:** Going this route also means you delegate the port selection to [Forego](https://github.com/ddollar/forego), which starts at port 5000 (unless you set it via `.env`).\n\n\n### Deploying to Heroku\n\nCreate a [`Procfile`](https://devcenter.heroku.com/articles/procfile) in the root of your project containing the following:\n```\nweb: http5o\n```\nThen [set the appropriate config variables for your Heroku app](https://devcenter.heroku.com/articles/config-vars).\n\n\n## Configuration Options\n\nYou can configure `http5o` by setting environment variables in the shell (or command line) that launches it. Here are the variables that control `http5o`:\n\n* `HTTP_USERNAME` (default value: `http5o`)\n* `HTTP_PASSWORD` (default value: `protectandserve`)\n* `HTTP_REALM` (default value: `Authorization Required`)\n* `DOCROOT` (default value: `.`)\n* `INDEX_FILE` (default value: `index.html`)\n* `PORT` (default value: `5000`)\n* `DISABLE_HTTP_AUTH` (default value: empty/`false`)\n\n\n## TODO\n\n* Implement command line arguments in addition to env vars.\n* Refactor code to allow exposure as node module.\n\n\n## Release History\n\n### v0.1.0\n\n* First stable release\n* Documentation\n\n\n## License\nCopyright (c) 2015 Justin Blecher  \nLicensed under the MIT license.\n","starsCount":1,"created":"2015-08-26T20:08:14.721Z","modified":"2015-08-26T20:17:54.436Z","lastPublisher":{"name":"wrksprfct","email":"justin@worksperfectly.net"},"owners":[{"name":"wrksprfct","email":"justin@worksperfectly.net"}],"other":{"_attachments":{},"_from":".","_id":"http-five-o","_npmUser":{"name":"wrksprfct","email":"justin@worksperfectly.net"},"_npmVersion":"1.4.28","_rev":"1-b90ad46b8d8e1e432642d2a784c7dc51","_shasum":"bfb9813ab7fba0f7153b7b2542ac8fb020284d7c","author":{"name":"Justin Blecher","email":"justin@worksperfectly.net"},"bugs":{"url":"https://github.com/blech75/http-five-o/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"bfb9813ab7fba0f7153b7b2542ac8fb020284d7c","tarball":"http://registry.npmjs.org/http-five-o/-/http-five-o-0.1.1.tgz"},"maintainers":[{"name":"wrksprfct","email":"justin@worksperfectly.net"}],"readmeFilename":"README.md","time":{"modified":"2015-08-26T20:17:54.436Z","created":"2015-08-26T20:08:14.721Z","0.1.0":"2015-08-26T20:08:14.721Z","0.1.1":"2015-08-26T20:17:54.436Z"},"users":{"jaredlevi":true}}}