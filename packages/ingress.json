{"name":"ingress","version":"3.0.0-beta2","description":"http server abstraction","main":"lib/server.js","repository":"https://github.com/calebboyd/ingress","typings":"lib/server.d.ts","files":["lib"],"scripts":{"lint":"tslint 'src/**'","prepublish":"npm test","test":"npm run lint && cross-env TS_NODE_PROJECT=test mocha"},"engines":{"node":">=4.0.0"},"keywords":["http","server"],"license":"MIT","devDependencies":{"@types/chai":"^3.4.31","@types/mocha":"^2.2.30","@types/node":"^6.0.38","@types/statuses":"^1.2.27","chai":"^3.2.0","cross-env":"^1.0.8","mocha":"^2.3.2","rimraf":"^2.5.0","ts-node":"^1.3.0","typescript":"^2.0.0"},"dependencies":{"app-builder":"^5.0.7","destroy":"^1.0.4","on-finished":"^2.3.0","statuses":"^1.3.0"},"gitHead":"8bba828f821bc9051d5cd8d62771cf8febbd7633","homepage":"https://github.com/calebboyd/ingress#readme","readme":"# ingress\n\ninstall: `npm i ingress`\n\nA small abstraction around the [http.Server] class that uses [promise-based middleware]\n\nIf you use javascript, just ignore the type annotations in the following example.\n\n```javascript\nimport ingress, { Context, DefaultMiddleware } from 'ingress'\n\nconst app = ingress<Context>()\n\napp\n.use(new DefaultMiddleware<Context>({\n  onError (context) {\n    console.log(context.error)\n  }\n}))\n.use((context, next) => {\n  context.body = \"Hello World\"\n  return next()\n})\n.listen(8080).then(() => console.log('Listening on port 8080'))\n```\n\n## Server\\<T extends DefaultContext\\<T\\>\\> (options?: ServerOptions): Class\n\n- **ServerOptions\\<T\\>** Object Interface:\n  - **server?: http.Server**\n    - provide an existing http server\n  - **contextFactory?: \\<T\\>({ req: IncomingMessage, res: ServerResponse}) => T**\n    - provide an alternate factory function for per-request context creation\n\n#### webserver: http(s).Server\n- Underlying http server implementation\n\n#### listen (...listenArguments): Promise\\<void\\>\n- The listen method takes the same arguments as the `net.Server.prototype.listen` method except it returns a promise, in lieu of accepting a callback.\n\n#### use (addon: MiddlewareAddon\\<T\\> | Addon\\<T\\> | MiddlewareOptions\\<T\\>): Server\\<T\\>\n\n- **MiddlewareAddon\\<T\\>** Function Interface:\n  - **(context: T, next: () => Promise\\<void\\>): any**\n  - **register?(server: Server\\<T\\>): Promise\\<void\\>**\n    - Optionally register a server addon. The resulting promise is waited upon, and resolved before binding the server to a port (`listen`)\n\n- **Addon\\<T\\>** Object Interface:\n  - **register (server: Server\\<T\\>): Promise\\<void\\>**\n    - Register a server addon. The resulting promise is waited upon, and resolved before binding the server to a port (`listen`)\n\n- **MiddlewareOptions\\<T\\>** Object Interface:\n  - **middleware: Middleware\\<T\\>**\n    - An object that exposes a bound (dereferencable) middleware function\n\n\n#### close (): Promise\\<void\\>\n- Shudown the server.\n\n## DefaultContext\\<T\\>: Object Interface\n- Baseclass implementation: **BaseContext\\<T\\>**. Implementation: **Context** (BaseContext\\<Context\\>),\n\n#### req: IncomingMessage & { context: T }\n\n#### res: ServerResponse & { context: T }\n\n#### error: Error | null | undefined\n\n#### body: any\n- Response body content\n\n#### handleError?: (error?: Error) => any | any\n\n#### handleResponse?: () => any\n\n\nThe `context` argument passed to the middleware functions includes `req` and `res` properties. Which are instances of [http.IncomingMessage] and [http.ServerResponse] respectively.\nThe `req` and `res` properties also have a `.context` property, a (circular) reference to the primary context object. The argument can be modified arbitrarily by the middleware functions and is created per request.\n\nIngress has the following exports\n- createServer (default)\n- Server\n- Ingress (Server alias)\n- Context\n- createContext\n- BaseContext\\<T\\>\n- DefaultMiddleware\\<T\\>\n\nAdditionally, the necessary TypeScript interfaces are exposed.\n\n#### Supported Middleware\n- [di.middleware](https://github.com/calebboyd/di.middleware)\n- [router.middleware](https://github.com/calebboyd/router.middleware)\n\n\n\n[http.IncomingMessage]: https://nodejs.org/api/http.html#http_class_http_incomingmessage\n[http.ServerResponse]: https://nodejs.org/api/http.html#http_class_http_serverresponse\n[http.Server]: https://nodejs.org/api/http.html#http_class_http_server\n[promise-based middleware]: https://github.com/calebboyd/app-builder\n\n","versions":[{"number":"1.0.0","date":"2015-06-04T07:13:04.629Z"},{"number":"1.0.1","date":"2016-07-20T15:29:53.098Z"},{"number":"1.0.2","date":"2016-07-20T15:42:06.037Z"},{"number":"1.0.3","date":"2016-07-20T15:42:53.653Z"},{"number":"1.0.4","date":"2016-08-31T05:00:47.756Z"},{"number":"1.0.5","date":"2016-09-03T19:58:16.996Z"},{"number":"2.0.0","date":"2016-09-09T05:53:42.807Z"},{"number":"2.0.1","date":"2016-09-20T14:16:51.795Z"},{"number":"2.0.2","date":"2016-09-20T14:17:29.329Z"},{"number":"2.1.0","date":"2016-10-09T08:48:45.564Z"},{"number":"2.2.0","date":"2016-11-22T04:12:53.517Z"},{"number":"2.2.1","date":"2016-11-22T04:21:45.250Z"},{"number":"3.0.0-beta1","date":"2016-11-29T05:42:21.128Z"},{"number":"3.0.0-beta2","date":"2016-11-29T06:45:36.175Z"}],"created":"2015-06-04T07:13:04.629Z","modified":"2016-11-29T06:45:36.175Z","lastPublisher":{"name":"calebboyd","email":"caleb.boyd@hotmail.com"},"owners":[{"name":"calebboyd","email":"caleb.boyd@hotmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ingress","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ingress-3.0.0-beta2.tgz_1480401935651_0.2804286372847855"},"_npmUser":{"name":"calebboyd","email":"caleb.boyd@hotmail.com"},"_npmVersion":"3.10.5","_rev":"5-3ff778f91182c2341a3e630c89bd315d","_shasum":"2afdaa51d5014f24b5acba0ae169333229e66e59","author":{"name":"Caleb Boyd","email":"caleb.boyd@hotmail.com","url":"https://github.com/calebboyd"},"bugs":{"url":"https://github.com/calebboyd/ingress/issues"},"directories":{},"dist-tags":{"latest":"3.0.0-beta2"},"dist":{"shasum":"2afdaa51d5014f24b5acba0ae169333229e66e59","tarball":"http://registry.npmjs.org/ingress/-/ingress-3.0.0-beta2.tgz"},"maintainers":[{"name":"calebboyd","email":"caleb.boyd@hotmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-29T06:45:36.175Z","created":"2015-06-04T07:13:04.629Z","1.0.0":"2015-06-04T07:13:04.629Z","1.0.1":"2016-07-20T15:29:53.098Z","1.0.2":"2016-07-20T15:42:06.037Z","1.0.3":"2016-07-20T15:42:53.653Z","1.0.4":"2016-08-31T05:00:47.756Z","1.0.5":"2016-09-03T19:58:16.996Z","2.0.0":"2016-09-09T05:53:42.807Z","2.0.1":"2016-09-20T14:16:51.795Z","2.0.2":"2016-09-20T14:17:29.329Z","2.1.0":"2016-10-09T08:48:45.564Z","2.2.0":"2016-11-22T04:12:53.517Z","2.2.1":"2016-11-22T04:21:45.250Z","3.0.0-beta1":"2016-11-29T05:42:21.128Z","3.0.0-beta2":"2016-11-29T06:45:36.175Z"}}}