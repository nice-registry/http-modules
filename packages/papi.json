{"name":"papi","version":"0.27.0","description":"Build HTTP API clients","main":"lib","devDependencies":{"async":"^2.0.0-rc.3","bluebird":"^3.1.1","debug":"^2.0.0","istanbul":"^0.4.0","jscs":"^3.0.3","jshint":"^2.5.5","lodash":"^4.11.2","mocha":"^2.1.0","nock":"^8.0.0","request":"^2.44.0","should":"^8.3.1","sinon":"^1.10.3"},"scripts":{"cover":"istanbul cover _mocha -- --recursive && open coverage/lcov-report/index.html","bench":"BENCHMARK=true mocha test/benchmark.js","test":"jshint lib test && jscs lib test && istanbul cover _mocha -- --recursive --check-leaks --globals Promise && istanbul check-coverage --statements 100 --functions 100 --branches 100 --lines 100"},"repository":"https://github.com/silas/node-papi","keywords":["api","client","http","rest"],"license":"MIT","homepage":"https://github.com/silas/node-papi","gitHead":"36feca54f44f7834f19c55d6f6b4bd97f2929586","versions":[{"number":"0.13.0","date":"2014-08-08T20:34:30.642Z"},{"number":"0.14.0","date":"2014-08-10T19:29:35.237Z"},{"number":"0.14.1","date":"2014-08-10T19:33:10.248Z"},{"number":"0.15.0","date":"2014-08-19T22:47:19.664Z"},{"number":"0.16.0","date":"2015-02-08T01:02:02.913Z"},{"number":"0.16.1","date":"2015-02-08T10:13:30.693Z"},{"number":"0.17.0","date":"2015-02-21T23:03:48.862Z"},{"number":"0.18.0","date":"2015-02-22T06:18:29.066Z"},{"number":"0.19.0","date":"2015-03-02T05:48:03.817Z"},{"number":"0.19.1","date":"2015-03-28T21:18:47.491Z"},{"number":"0.19.2","date":"2015-04-03T06:15:53.048Z"},{"number":"0.20.0","date":"2015-07-17T12:06:57.132Z"},{"number":"0.21.0","date":"2015-10-18T23:05:41.464Z"},{"number":"0.21.1","date":"2015-10-20T04:10:19.242Z"},{"number":"0.22.0","date":"2015-11-04T13:49:54.159Z"},{"number":"0.23.0","date":"2015-12-04T03:48:55.747Z"},{"number":"0.24.0","date":"2015-12-24T22:42:21.326Z"},{"number":"0.25.0","date":"2015-12-25T18:24:47.197Z"},{"number":"0.25.1","date":"2016-05-03T01:48:26.556Z"},{"number":"0.26.0","date":"2016-08-07T22:07:43.405Z"},{"number":"0.27.0","date":"2016-09-25T19:15:53.778Z"}],"readme":"# Papi [![Build Status](https://travis-ci.org/silas/node-papi.png?branch=master)](https://travis-ci.org/silas/node-papi)\n\nThis is a module for building HTTP API clients.\n\n * [Documentation](#documentation)\n * [Example](#example)\n * [License](#license)\n\n## Documentation\n\n * [Client](#client)\n * [Shortcuts](#shortcuts)\n\n<a name=\"client\"></a>\n### papi.Client([options])\n\nInitialize a new client.\n\nYour client should inherit the prototype methods from this constructor and call\nit in your client's constructor.\n\nOptions\n\n * baseUrl (String): base URL, should not include trailing slash\n * headers (Object&lt;String, String&gt;, optional): defaults headers to include in every request\n * type (String, optional, supports: form, json, text): default request body encoding type\n * encoders (Object&lt;String, Function&gt;, optional): an object that maps a mime type to a function. The function should accept an object and return a Buffer.\n * decoders (Object&lt;String, Function&gt;, optional): an object that maps a mime type to a function. The function should accept a Buffer or String (must support both) and return an object.\n * tags (String[], optional): tags included in `_log` calls\n * timeout (Number, optional): default number of milliseconds before request is aborted\n\nUsage\n\n``` javascript\nvar papi = require('papi');\nvar util = require('util');\n\nfunction GitHub(opts) {\n  opts = opts || {};\n  opts.baseUrl = 'https://api.github.com';\n  opts.header = { accept: 'application/vnd.github.v3+json' };\n  opts.timeout = 15 * 1000;\n\n  papi.Client.call(this, opts);\n}\n\nutil.inherits(GitHub, papi.Client);\n```\n\n<a name=\"client-request\"></a>\n### client.\\_request(request, [callback...], callback)\n\nMake an HTTP request.\n\nYour client should use this or the shortcut methods listed below to execute\nHTTP requests in your client methods.\n\nArguments\n\n * request (Object): request options\n * callback... (Function&lt;request, next&gt;, optional): middleware functions that can mutate `request.err` or `request.res`. Call `next` without arguments to continue execution, `next(err)` to break with an error, or `next(false, arguments...)` to trigger the final callback with the given arguments.\n * callback (Function&lt;err, res&gt;): request callback function.\n\nRequest\n\n * path (String): request path, can include variable segments defined by curly braces (ex: `/user/{id}`)\n * method (String): request method\n * headers (Object&lt;String, String&gt;, optional): request headers\n * params (Object&lt;String, String&gt;, optional): sets variables in request path\n * query (Object&lt;String, String|String[]&gt;, optional): query parameters\n * body (Object|Buffer|Readable, optional): request body\n * type (String, optional, supports: form, json, text): request body encoding type\n * ctx (EventEmitter, optional): emit `cancel` to abort request\n * timeout (Number, optional): number of milliseconds before request is aborted\n * tags (String[], optional): tags included in `_log` calls\n\nThere are also `_get`, `_head`, `_post`, `_put`, `_delete` (`_del`), `_patch`,\nand `_options` shortcuts with the same method signature as `_request`.\n\nUsage\n\n``` javascript\nGitHub.prototype.gists = function(username, callback) {\n  var opts = {\n    path: '/users/{username}/gists',\n    params: { username: username },\n  };\n\n  this._get(opts, function(err, res) {\n    if (err) return callback(err);\n\n    callback(null, res.body);\n  });\n};\n```\n\nResult\n\n```\nstatusCode 200\nbody [ { url: 'https://api.github.com/gists/9458207',\n...\n```\n\n### client.\\_log(tags, [data])\n\nEmit log events.\n\nArguments\n\n * tags (String[]): tags associated with event\n * data (optional): remaining arguments\n\nUsage\n\n``` javascript\nclient.on('log', function(tags) {\n  console.log({\n    tags: tags,\n    data: Array.prototype.slice.call(arguments, 1),\n  });\n});;\n\nclient._log(['github', 'gist'], 'silas');\n```\n\nResult\n\n```\n{ data: [ 'silas' ], tags: [ 'debug', 'github', 'gist' ] }\n```\n\n### client.\\_ext(event, callback)\n\nRegister an extension function.\n\nArguments\n\n * event (String): event name\n * callback (Function): function to execute at a specified point during the request\n\nUsage\n\n``` javascript\nclient._ext('onRequest', function(request, next) {\n  console.log('request', request.opts.method + ' ' + request.opts.path);\n\n  request.start = new Date();\n\n  next();\n});\n\nclient._ext('onResponse', function(request, next) {\n  var duration = new Date() - request.start;\n  var statusCode = request.res ? request.res.statusCode : 'none';\n\n  console.log('response', request.opts.method, request.opts.path, statusCode, duration + 'ms');\n\n  next();\n});\n```\n\nResult\n\n```\nrequest GET /users/{username}/gists\nresponse GET /users/{username}/gists 200 1141ms\n```\n\n### client.\\_plugin(plugin, options)\n\nRegister a plugin.\n\nArguments\n\n * plugin (Object): plugin module\n * options (Object, optional): plugin options\n\nUsage\n\n``` javascript\nclient._plugin(require('papi-retry'));\n```\n\n<a name=\"shortcuts\"></a>\n### papi.request(request, [callback...], callback)\n\nShortcuts for making one-off requests.\n\nSee [client request](#client-request) for full options list, with the exception\nthat `path` is replaced with `url`.\n\nRequest\n\n * url (String): request url (ex: `http://example.org/`)\n\nThere are also `get`, `head`, `post`, `put`, `delete` (`del`), `patch`, and\n`options` shortcuts with the same method signature as `request`.\n\nUsage\n\n``` javascript\nvar papi = require('papi');\n\npapi.get('https://api.github.com/users/silas/gists', function(err, res) {\n  if (err) throw err;\n\n  res.body.forEach(function(gist) {\n    console.log(gist.url);\n  });\n});\n```\n\n\n## Example\n\n``` javascript\n/**\n * Module dependencies.\n */\n\nvar papi = require('papi');\nvar util = require('util');\n\n/**\n * GitHub API client\n */\n\nfunction GitHub(opts) {\n  opts = opts || {};\n\n  if (!opts.baseUrl) {\n    opts.baseUrl = 'https://api.github.com';\n  }\n  if (!opts.headers) {\n    opts.headers = {};\n  }\n  if (!opts.headers.accept) {\n    opts.headers.accept = 'application/vnd.github.v3+json';\n  }\n  if (!opts.headers['user-agent']) {\n    opts.headers['user-agent'] = 'PapiGitHub/0.1.0';\n  }\n  if (opts.tags) {\n    opts.tags = ['github'].concat(opts.tags);\n  } else {\n    opts.tags = ['github'];\n  }\n  if (!opts.timeout) {\n    opts.timeout = 60 * 1000;\n  }\n\n  papi.Client.call(this, opts);\n\n  if (opts.debug) {\n    this.on('log', console.log);\n  }\n}\n\nutil.inherits(GitHub, papi.Client);\n\n/**\n * Get user gists\n */\n\nGitHub.prototype.gists = function(username, callback) {\n  var opts = {\n    path: '/users/{username}/gists',\n    params: { username: username },\n  };\n\n  return this._get(opts, callback);\n};\n\n/**\n * Print gists for user `silas`\n */\n\nfunction main() {\n  var github = new GitHub({ debug: true });\n\n  github.gists('silas', function(err, res) {\n    if (err) throw err;\n\n    console.log('----');\n\n    res.body.forEach(function(gist) {\n      if (gist.description) console.log(gist.description);\n    });\n  });\n}\n\n/**\n * Initialize\n */\n\nif (require.main === module) {\n  main();\n} else {\n  module.exports = GitHub;\n}\n```\n\n## License\n\nThis work is licensed under the MIT License (see the LICENSE file).\n","created":"2014-08-08T20:34:30.642Z","modified":"2016-09-25T19:15:53.778Z","lastPublisher":{"name":"silas","email":"silas@sewell.org"},"owners":[{"name":"silas","email":"silas@sewell.org"}],"other":{"_attachments":{},"_from":".","_id":"papi","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/papi-0.27.0.tgz_1474830952459_0.060172456316649914"},"_npmUser":{"name":"silas","email":"silas@sewell.org"},"_npmVersion":"3.10.7","_rev":"1-f9635b938f2d9cad774ce3373abdccf5","_shasum":"7392a38ebefa7fb67e98b363bca3d136827caf28","author":{"name":"Silas Sewell","email":"silas@sewell.org"},"bugs":{"url":"https://github.com/silas/node-papi/issues"},"directories":{},"dist-tags":{"latest":"0.27.0"},"dist":{"shasum":"7392a38ebefa7fb67e98b363bca3d136827caf28","tarball":"http://registry.npmjs.org/papi/-/papi-0.27.0.tgz"},"maintainers":[{"name":"silas","email":"silas@sewell.org"}],"readmeFilename":"README.md","time":{"modified":"2016-09-25T19:15:53.778Z","created":"2014-08-08T20:34:30.642Z","0.13.0":"2014-08-08T20:34:30.642Z","0.14.0":"2014-08-10T19:29:35.237Z","0.14.1":"2014-08-10T19:33:10.248Z","0.15.0":"2014-08-19T22:47:19.664Z","0.16.0":"2015-02-08T01:02:02.913Z","0.16.1":"2015-02-08T10:13:30.693Z","0.17.0":"2015-02-21T23:03:48.862Z","0.18.0":"2015-02-22T06:18:29.066Z","0.19.0":"2015-03-02T05:48:03.817Z","0.19.1":"2015-03-28T21:18:47.491Z","0.19.2":"2015-04-03T06:15:53.048Z","0.20.0":"2015-07-17T12:06:57.132Z","0.21.0":"2015-10-18T23:05:41.464Z","0.21.1":"2015-10-20T04:10:19.242Z","0.22.0":"2015-11-04T13:49:54.159Z","0.23.0":"2015-12-04T03:48:55.747Z","0.24.0":"2015-12-24T22:42:21.326Z","0.25.0":"2015-12-25T18:24:47.197Z","0.25.1":"2016-05-03T01:48:26.556Z","0.26.0":"2016-08-07T22:07:43.405Z","0.27.0":"2016-09-25T19:15:53.778Z"}}}