{"name":"express-req-logger","version":"1.0.7","description":"HTTP request logger middleware for Express.","main":"index.js","keywords":["express","HTTP","request","logger","middleware"],"repository":"https://github.com/pengng/express-req-logger","license":"MIT","dependencies":{"time-formater":"^1.0.1"},"gitHead":"370ce7e3c516130424dc92f70f2d4a727af95784","homepage":"https://github.com/pengng/express-req-logger#readme","scripts":{},"versions":[{"number":"1.0.0","date":"2017-05-14T16:49:11.842Z"},{"number":"1.0.1","date":"2017-05-14T16:54:32.021Z"},{"number":"1.0.3","date":"2017-05-14T16:59:23.032Z"},{"number":"1.0.4","date":"2017-05-14T17:01:07.362Z"},{"number":"1.0.5","date":"2017-05-14T17:02:15.427Z"},{"number":"1.0.6","date":"2017-05-14T17:07:36.270Z"},{"number":"1.0.7","date":"2017-05-21T13:36:30.145Z"}],"readme":"# express-req-logger\r\nHTTP request logger middleware for Express.\r\n## usage\r\n\r\n```\r\nnpm i -S express-req-logger\r\n```\r\n```javascript\r\nconst express = require('express');\r\nconst logger = require('express-req-logger');\r\n\r\nvar app = express();\r\n\r\napp.use(logger());\r\n\r\n// GET / HTTP/1.1 200 367ms\r\n```\r\n## API\r\n**logger(format, option)**\r\n\r\nThe `format` argument is a string, either `'tiny'`,`'normal'`, `'long'`, or something like that `':method :url HTTP/:httpVersion :status :duration'`.\r\n\r\n## `format`\r\n**normal** \r\nDefault style.\r\n```http\r\nGET / HTTP/1.1 200 218ms\r\n```\r\n\r\n**tiny** \r\nShort style.\r\n```http\r\nGET / 200\r\n```\r\n\r\n**long**\r\nLong style.\r\n```http\r\n[2017-05-14 21:03:25 周日] ::ffff:192.168.0.100 /index.html HTTP/1.1 304 23ms Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebkit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\r\n```\r\n\r\n#### :method\r\nHTTP request method. `GET`\r\n\r\n#### :url\r\nRequest path. `/index.html`\r\n\r\n#### :httpVersion\r\nHTTP version number. `1.1`\r\n\r\n#### :status\r\nRequest status code. `200`\r\n\r\n#### :duration\r\nRequest to respond to the duration of the unit, in milliseconds. `263ms`\r\n\r\n#### :ip\r\nRemote client IP address. `::ffff:192.168.0.100`\r\n\r\n#### :date\r\nCurrent date. `2017-05-14`\r\n\r\n#### :time\r\nCurrent time. `19:00:00`\r\n\r\n#### :day\r\nCurrent week. `周日`\r\n\r\n#### :userAgent\r\nRemote client user agent content.\r\n\r\n\r\n```javascript\r\nconst logger = require('express-req-logger');\r\nvar app = require('express')();\r\n\r\napp.use(logger(\r\n    '[:date :time] :method :url HTTP/:httpVersion :status'\r\n));\r\n\r\n// [2017-05-14 19:23:33] GET /index.html HTTP/1.1 200\r\n```\r\n\r\n## `option`\r\nUsed to modify the output of a field, or to add a field.\r\n```javascript\r\napp.use(logger(\r\n    '[:date :when :time] :method :url'\r\n), {\r\n\r\n  // Add the new when field and add it to the format parameter.\r\n  when: function (req, res) { // Can receive request and response object.\r\n    return (new Date().getHours() >= 12) ? 'PM' : 'AM';\r\n  },\r\n\r\n  // Rewrite the method function\r\n  method: function (req, res) {\r\n    return req.method.toLowerCase();\r\n  }\r\n\r\n});\r\n\r\n// [2017-05-14 上午 10:22:29] get /index.html\r\n```\r\n\r\n# express-req-logger\r\nExpress的HTTP请求日志中间件\r\n## 使用方法\r\n```\r\nnpm i -S express-req-logger\r\n```\r\n```javascript\r\nconst express = require('express');\r\nconst logger = require('express-req-logger');\r\n\r\nvar app = express();\r\n\r\napp.use(logger());\r\n```\r\n## 接口\r\n**logger(format, option)**\r\n\r\n`format`参数是一个字符串，可以是预设的配置`'tiny'`、`'normal'`、`'long'`或者是类似`':method :url HTTP/:httpVersion :status :duration'`。\r\n\r\n## `format`\r\n**normal** \r\n默认风格。如下所示\r\n```http\r\nGET / HTTP/1.1 200 218ms\r\n```\r\n\r\n**tiny** \r\n简短风格\r\n```http\r\nGET / 200\r\n```\r\n\r\n**long**\r\n长风格\r\n```http\r\n[2017-05-14 21:03:25 周日] ::ffff:192.168.0.100 /index.html HTTP/1.1 304 23ms Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebkit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36\r\n```\r\n\r\n#### :method\r\nHTTP请求方法。`GET`\r\n\r\n#### :url\r\n请求路径。`/index.html`\r\n\r\n#### :httpVersion\r\nHTTP版本。`1.1`\r\n\r\n#### :status\r\n请求状态码。`200`\r\n\r\n#### :duration\r\n请求到响应持续的时间，单位为毫秒。`263ms`\r\n\r\n#### :ip\r\n客户端IP地址。`::ffff:192.168.0.100`\r\n\r\n#### :date\r\n当前日期。`2017-05-14`,本项目首次提交时间。\r\n\r\n#### :time\r\n当前时间。`19:00:00`\r\n\r\n#### :day\r\n当前星期。`周日`\r\n\r\n#### :userAgent\r\n客户端用户代理内容。\r\n\r\n\r\n```javascript\r\nconst logger = require('express-req-logger');\r\nvar app = require('express')();\r\n\r\napp.use(logger(\r\n    '[:date :time] :method :url HTTP/:httpVersion :status'\r\n));\r\n\r\n// [2017-05-14 19:23:33] GET /index.html HTTP/1.1 200\r\n```\r\n\r\n## `option`\r\n用于修改字段的输出，或增加字段。\r\n```javascript\r\napp.use(logger(\r\n    '[:date :when :time] :method :url'\r\n), {\r\n\r\n  // 自己增加新的when字段，并加入到format参数中。\r\n  when: function (req, res) { // 可接收到request和response对象。\r\n    return (new Date().getHours() >= 12) ? '下午' : '上午';\r\n  },\r\n\r\n  // 重写method方法\r\n  method: function (req, res) {\r\n    return req.method.toLowerCase();\r\n  }\r\n  \r\n});\r\n\r\n// [2017-05-14 上午 10:22:29] get /index.html\r\n```","created":"2017-05-14T16:49:11.842Z","modified":"2017-05-21T13:36:30.145Z","lastPublisher":{"name":"pengengng","email":"870788308@qq.com"},"owners":[{"name":"pengengng","email":"870788308@qq.com"}],"other":{"_attachments":{},"_from":".","_id":"express-req-logger","_nodeVersion":"7.9.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/express-req-logger-1.0.7.tgz_1495373790019_0.9606127562001348"},"_npmUser":{"name":"pengengng","email":"870788308@qq.com"},"_npmVersion":"4.2.0","_rev":"7-202f559fe377619af0c6e327f568252d","_shasum":"8c19d4472177cab50f92b39ff2e27227c7da697a","author":{"name":"pengng"},"bugs":{"url":"https://github.com/pengng/express-req-logger/issues"},"directories":{},"dist-tags":{"latest":"1.0.7"},"dist":{"shasum":"8c19d4472177cab50f92b39ff2e27227c7da697a","tarball":"https://registry.npmjs.org/express-req-logger/-/express-req-logger-1.0.7.tgz"},"maintainers":[{"name":"pengengng","email":"870788308@qq.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-21T13:36:30.145Z","created":"2017-05-14T16:49:11.842Z","1.0.0":"2017-05-14T16:49:11.842Z","1.0.1":"2017-05-14T16:54:32.021Z","1.0.3":"2017-05-14T16:59:23.032Z","1.0.4":"2017-05-14T17:01:07.362Z","1.0.5":"2017-05-14T17:02:15.427Z","1.0.6":"2017-05-14T17:07:36.270Z","1.0.7":"2017-05-21T13:36:30.145Z"}}}