{"name":"simple-get","description":"Simplest way to make http get requests. Supports HTTPS, redirects, gzip/deflate, streams in < 100 lines.","version":"2.6.0","browser":{"unzip-response":false},"dependencies":{"once":"^1.3.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1"},"devDependencies":{"self-signed-https":"^1.0.5","standard":"*","string-to-stream":"^1.0.0","tape":"^4.0.0"},"homepage":"https://github.com/feross/simple-get","keywords":["request","http","GET","get request","http.get","redirects","follow redirects","gzip","deflate","https","http-https","stream","simple request","simple get"],"license":"MIT","main":"index.js","repository":"https://github.com/feross/simple-get","scripts":{"test":"standard && tape test/*.js"},"gitHead":"5c3a5704bb98b5db2c0154cac948daad25b6283b","versions":[{"number":"1.0.0","date":"2014-12-28T03:23:55.408Z"},{"number":"1.1.0","date":"2014-12-29T23:14:38.039Z"},{"number":"1.2.0","date":"2014-12-31T02:15:08.331Z"},{"number":"1.3.0","date":"2015-01-04T03:56:55.173Z"},{"number":"1.3.1","date":"2015-04-01T04:46:52.964Z"},{"number":"1.3.2","date":"2015-04-11T03:00:17.578Z"},{"number":"1.3.3","date":"2015-04-11T03:13:14.696Z"},{"number":"1.3.4","date":"2015-07-26T20:47:45.373Z"},{"number":"1.4.0","date":"2015-07-26T22:51:20.494Z"},{"number":"1.4.1","date":"2015-07-27T01:22:15.086Z"},{"number":"1.4.2","date":"2015-07-27T23:32:35.178Z"},{"number":"1.4.3","date":"2015-08-23T19:41:24.532Z"},{"number":"2.0.0","date":"2016-02-14T07:58:12.540Z"},{"number":"2.1.0","date":"2016-05-04T22:48:12.476Z"},{"number":"2.2.0","date":"2016-06-05T23:04:28.632Z"},{"number":"2.2.1","date":"2016-06-13T21:37:15.649Z"},{"number":"2.2.2","date":"2016-07-12T20:24:25.336Z"},{"number":"2.2.3","date":"2016-10-01T05:14:34.106Z"},{"number":"2.2.4","date":"2016-10-01T20:53:47.300Z"},{"number":"2.2.5","date":"2016-10-01T21:16:37.090Z"},{"number":"2.3.0","date":"2016-10-13T03:20:11.845Z"},{"number":"2.4.0","date":"2017-01-14T06:50:09.227Z"},{"number":"2.5.0","date":"2017-04-13T20:12:27.040Z"},{"number":"2.5.1","date":"2017-04-13T20:13:30.340Z"},{"number":"2.6.0","date":"2017-04-22T01:59:11.187Z"}],"readme":"# simple-get [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/feross/simple-get/master.svg\n[travis-url]: https://travis-ci.org/feross/simple-get\n[npm-image]: https://img.shields.io/npm/v/simple-get.svg\n[npm-url]: https://npmjs.org/package/simple-get\n[downloads-image]: https://img.shields.io/npm/dm/simple-get.svg\n[downloads-url]: https://npmjs.org/package/simple-get\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n### Simplest way to make http get requests\n\n## features\n\nThis module is the lightest possible wrapper on top of node.js `http`, but supporting these essential features:\n\n- follows redirects\n- automatically handles gzip/deflate responses\n- supports HTTPS\n- supports specifying a timeout\n- supports convenience `url` key so there's no need to use `url.parse` on the url when specifying options\n- composes well with npm packages for features like cookies, proxies, form data, & OAuth\n\nAll this in < 100 lines of code.\n\n## install\n\n```\nnpm install simple-get\n```\n\n## usage\n\nNote, all these examples also work in the browser with [browserify](http://browserify.org/).\n\n### simple GET request\n\nDoesn't get easier than this:\n\n```js\nconst get = require('simple-get')\n\nget('http://example.com', function (err, res) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\n### even simpler GET request\n\nIf you just want the data, and don't want to deal with streams:\n\n```js\nconst get = require('simple-get')\n\nget.concat('http://example.com', function (err, res, data) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  console.log(data) // Buffer('this is the server response')\n})\n```\n\n### POST, PUT, PATCH, HEAD, DELETE support\n\nFor `POST`, call `get.post` or use option `{ method: 'POST' }`.\n\n```js\nconst get = require('simple-get')\n\nconst opts = {\n  url: 'http://example.com',\n  body: 'this is the POST body'\n}\nget.post(opts, function (err, res) {\n  if (err) throw err\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\n#### A more complex example:\n\n```js\nconst get = require('simple-get')\n\nget({\n  url: 'http://example.com',\n  method: 'POST',\n  body: 'this is the POST body',\n\n  // simple-get accepts all options that node.js `http` accepts\n  // See: http://nodejs.org/api/http.html#http_http_request_options_callback\n  headers: {\n    'user-agent': 'my cool app'\n  }\n}, function (err, res) {\n  if (err) throw err\n\n  // All properties/methods from http.IncomingResponse are available,\n  // even if a gunzip/inflate transform stream was returned.\n  // See: http://nodejs.org/api/http.html#http_http_incomingmessage\n  res.setTimeout(10000)\n  console.log(res.headers)\n\n  res.on('data', function (chunk) {\n    // `chunk` is the decoded response, after it's been gunzipped or inflated\n    // (if applicable)\n    console.log('got a chunk of the response: ' + chunk)\n  }))\n\n})\n```\n\n### JSON\n\nYou can serialize/deserialize request and response with JSON:\n\n```js\nconst get = require('simple-get')\n\nconst opts = {\n  method: 'POST',\n  url: 'http://example.com',\n  body: {\n    key: 'value'\n  },\n  json: true\n}\nget.concat(opts, function (err, res, data) {\n  if (err) throw err\n  console.log(data.key) // `data` is an object\n})\n```\n\n### Timeout\n\nYou can set a timeout (in milliseconds) on the request with the `timeout` option.\nIf the request takes longer than `timeout` to complete, then the entire request\nwill fail with an `Error`.\n\n```js\nconst get = require('simple-get')\n\nconst opts = {\n  url: 'http://example.com',\n  timeout: 2000 // 2 second timeout\n}\n\nget(opts, function (err, res) {})\n```\n\n### One Quick Tip\n\nIt's a good idea to set the `'user-agent'` header so the provider can more easily\nsee how their resource is used.\n\n```js\nconst get = require('simple-get')\nconst pkg = require('./package.json')\n\nget('http://example.com', {\n  headers: {\n    'user-agent': `my-module/${pkg.version} (https://github.com/username/my-module)`\n  }\n})\n```\n\n### Proxies\n\nYou can use the [`tunnel`](https://github.com/koichik/node-tunnel) module with the\n`agent` option to work with proxies:\n\n```js\nconst get = require('simple-get')\nconst tunnel = require('tunnel')\n\nconst opts = {\n  url: 'http://example.com',\n  agent: tunnel.httpOverHttp({\n    proxy: {\n      host: 'localhost'\n    }\n  })\n}\n\nget(opts, function (err, res) {})\n```\n\n### Cookies\n\nYou can use the [`cookie`](https://github.com/jshttp/cookie) module to include\ncookies in a request:\n\n```js\nconst get = require('simple-get')\nconst cookie = require('cookie')\n\nconst opts = {\n  url: 'http://example.com',\n  headers: {\n    cookie: cookie.serialize('foo', 'bar')\n  }\n}\n\nget(opts, function (err, res) {})\n```\n\n### Form data\n\nYou can use the [`form-data`](https://github.com/form-data/form-data) module to\ncreate POST request with form data:\n\n```js\nconst fs = require('fs')\nconst get = require('simple-get')\nconst FormData = require('form-data')\nconst form = new FormData()\n\nform.append('my_file', fs.createReadStream('/foo/bar.jpg'))\n\nconst opts = {\n  url: 'http://example.com',\n  body: form\n}\n\nget.post(opts, function (err, res) {})\n```\n\n#### Or, include `application/x-www-form-urlencoded` form data manually:\n\n```js\nconst get = require('simple-get')\n\nconst opts = {\n  url: 'http://example.com',\n  form: {\n    key: 'value'\n  }\n}\nget.post(opts, function (err, res) {})\n```\n\n### OAuth\n\nYou can use the [`oauth-1.0a`](https://github.com/ddo/oauth-1.0a) module to create\na signed OAuth request:\n\n```js\nconst get = require('simple-get')\nconst crypto  = require('crypto')\nconst OAuth = require('oauth-1.0a')\n\nconst oauth = OAuth({\n  consumer: {\n    key: process.env.CONSUMER_KEY,\n    secret: process.env.CONSUMER_SECRET\n  },\n  signature_method: 'HMAC-SHA1',\n  hash_function: (baseString, key) => crypto.createHmac('sha1', key).update(baseString).digest('base64')\n})\n\nconst token = {\n  key: process.env.ACCESS_TOKEN,\n  secret: process.env.ACCESS_TOKEN_SECRET\n}\n\nconst url = 'https://api.twitter.com/1.1/statuses/home_timeline.json'\n\nconst opts = {\n  url: url,\n  headers: oauth.toHeader(oauth.authorize({url, method: 'GET'}, token)),\n  json: true\n}\n\nget(opts, function (err, res) {})\n```\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n","starsCount":4,"created":"2014-12-28T03:23:55.408Z","modified":"2017-04-22T01:59:11.187Z","lastPublisher":{"name":"feross","email":"feross@feross.org"},"owners":[{"name":"feross","email":"feross@feross.org"}],"other":{"_attachments":{},"_from":".","_id":"simple-get","_nodeVersion":"7.9.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/simple-get-2.6.0.tgz_1492826347834_0.33439312083646655"},"_npmUser":{"name":"feross","email":"feross@feross.org"},"_npmVersion":"4.5.0","_rev":"7-8712094275497c55833dd3c9b27daebf","_shasum":"bb01144db49b3d4c107615dcf48d3ee404b16e06","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/simple-get/issues"},"directories":{},"dist-tags":{"latest":"2.6.0"},"dist":{"shasum":"bb01144db49b3d4c107615dcf48d3ee404b16e06","tarball":"https://registry.npmjs.org/simple-get/-/simple-get-2.6.0.tgz"},"maintainers":[{"name":"feross","email":"feross@feross.org"}],"readmeFilename":"README.md","time":{"modified":"2017-04-22T01:59:11.187Z","created":"2014-12-28T03:23:55.408Z","1.0.0":"2014-12-28T03:23:55.408Z","1.1.0":"2014-12-29T23:14:38.039Z","1.2.0":"2014-12-31T02:15:08.331Z","1.3.0":"2015-01-04T03:56:55.173Z","1.3.1":"2015-04-01T04:46:52.964Z","1.3.2":"2015-04-11T03:00:17.578Z","1.3.3":"2015-04-11T03:13:14.696Z","1.3.4":"2015-07-26T20:47:45.373Z","1.4.0":"2015-07-26T22:51:20.494Z","1.4.1":"2015-07-27T01:22:15.086Z","1.4.2":"2015-07-27T23:32:35.178Z","1.4.3":"2015-08-23T19:41:24.532Z","2.0.0":"2016-02-14T07:58:12.540Z","2.1.0":"2016-05-04T22:48:12.476Z","2.2.0":"2016-06-05T23:04:28.632Z","2.2.1":"2016-06-13T21:37:15.649Z","2.2.2":"2016-07-12T20:24:25.336Z","2.2.3":"2016-10-01T05:14:34.106Z","2.2.4":"2016-10-01T20:53:47.300Z","2.2.5":"2016-10-01T21:16:37.090Z","2.3.0":"2016-10-13T03:20:11.845Z","2.4.0":"2017-01-14T06:50:09.227Z","2.5.0":"2017-04-13T20:12:27.040Z","2.5.1":"2017-04-13T20:13:30.340Z","2.6.0":"2017-04-22T01:59:11.187Z"},"users":{"ciceropablo":true,"wenbing":true,"s4g6":true,"emilbayes":true}}}