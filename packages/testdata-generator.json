{"name":"testdata-generator","description":"Creates trees of JSON data to be used for mocking HTTP requests from real data in unit tests","version":"0.2.0","homepage":"https://github.com/dariusriggins/testdata-generator","repository":"https://github.com/dariusriggins/testdata-generator","licenses":[{"type":"MIT","url":"https://github.com/dariusriggins/testdata-generator/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"dependencies":{"async":"*","lodash":">=2.3.0","request":"*","pretty-data":"*"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.1.2","pretty-data":"*","request":"*","grunt":"~0.4.0","lodash":">=2.3.0","async":"*"},"peerDependencies":{"grunt":"~0.4.0"},"keywords":["gruntplugin"],"versions":[{"number":"0.1.0","date":"2013-03-06T22:06:11.252Z"},{"number":"0.1.1","date":"2013-03-06T22:09:26.819Z"},{"number":"0.1.2","date":"2013-03-07T15:00:17.902Z"},{"number":"0.1.3","date":"2013-03-07T15:52:04.549Z"},{"number":"0.1.4","date":"2013-03-07T18:39:49.836Z"},{"number":"0.1.5","date":"2013-03-07T18:44:05.864Z"},{"number":"0.1.6","date":"2013-03-12T15:28:53.448Z"},{"number":"0.1.7","date":"2013-03-14T13:57:52.164Z"},{"number":"0.1.8","date":"2014-02-05T16:21:37.870Z"},{"number":"0.1.9","date":"2014-02-05T16:23:51.088Z"},{"number":"0.2.0","date":"2014-02-10T22:15:25.566Z"}],"readme":"# testdata-generator\n\n> Creates trees of JSON data to be used for mocking HTTP requests from real data in unit tests. Assumes that the environment you are generating over uses an X-Impersonate header in order to get data from the context of different users.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install testdata-generator --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('testdata-generator');\n```\n\n## The \"testdata\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `testdata` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  testdata: {\n    options: {\n      server: 'default server to pull data from, defaults to localhost'\n    },\n    dev: {\n      src: 'testdata-map.js',\n      dest: 'testdata.js',\n      users: ['driggins', 'HopeZ', 'Any other users to generate']\n    },\n  },\n})\n```\n\n### Usage Examples\n\n#### Test map\nThis is a comprehensive example, demonstrating all of the features used in one map.\n\n```js\nvar refdataSize = 1;\n\nfunction createSearchAddress(path) {\n  return function (node) {\n    return node.common.GET.search.data + path;\n  }\n}\n\nmodule.exports = {\n  common: {\n    GET: {\n      me: '/api/users/me',\n\n      search: '/api/search/nextavailableserver',\n\n      refData: {\n        divisions: createSearchAddress('division/_search?size=' + refdataSize),\n        networks: createSearchAddress('network/_search?size=' + refdataSize),\n        demographics: createSearchAddress('demographic/_search?size=' + refdataSize),\n        properties: createSearchAddress('property/_search?size=' + refdataSize),\n        rateCardTypes: createSearchAddress('ratecardtype/_search?size=' + refdataSize),\n        revenueTypes: createSearchAddress('revenuetype/_search?size=' + refdataSize),\n        productCategories: createSearchAddress('productcategory/_search?size=' + refdataSize),\n        priceBreaks: createSearchAddress('pricebreak/_search?size=' + refdataSize),\n        sellingPeriods: createSearchAddress('sellingperiod/_search?size=' + refdataSize)\n      },\n\n      brandSearch: {\n        address: function (node) {\n          return node.common.GET.search.data + 'division/_search?size=1';\n        }\n      }\n    }\n  },\n\n  dealHeader: {\n    POST: {\n      newDeal: '/api/deal'\n    }\n  }\n};\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n```0.1.1\nInitial release\n```\n```0.1.2\nBug Fixes\n```\n```0.1.3\nBug Fixes\n```\n```0.1.4\nSwitch to use dest/src and move to unit level for config\n```\n```0.1.5\nFix source path of config file\n```\n```0.1.6\nFix for functions returning null and reverting to base server\n```\n","starsCount":2,"created":"2013-03-06T22:06:10.374Z","modified":"2014-02-10T22:15:25.566Z","lastPublisher":{"name":"driggs","email":"dgr@outlook.com"},"owners":[{"name":"driggs","email":"dgr@outlook.com"}],"other":{"_attachments":{},"_from":".","_id":"testdata-generator","_npmUser":{"name":"driggs","email":"dgr@outlook.com"},"_npmVersion":"1.3.22","_rev":"1-9e9972c6f0e494516e5d84cc3f67b678","author":{"name":"Darius Riggins","email":"simovate@gmail.com"},"bugs":{"url":"https://github.com/dariusriggins/testdata-generator/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"5f0ee73102f0f8e5c5771c808c2295bfdf601aa3","tarball":"http://registry.npmjs.org/testdata-generator/-/testdata-generator-0.2.0.tgz"},"maintainers":[{"name":"driggs","email":"dgr@outlook.com"}],"readmeFilename":"README.md","time":{"modified":"2014-02-10T22:15:25.566Z","created":"2013-03-06T22:06:10.374Z","0.1.0":"2013-03-06T22:06:11.252Z","0.1.1":"2013-03-06T22:09:26.819Z","0.1.2":"2013-03-07T15:00:17.902Z","0.1.3":"2013-03-07T15:52:04.549Z","0.1.4":"2013-03-07T18:39:49.836Z","0.1.5":"2013-03-07T18:44:05.864Z","0.1.6":"2013-03-12T15:28:53.448Z","0.1.7":"2013-03-14T13:57:52.164Z","0.1.8":"2014-02-05T16:21:37.870Z","0.1.9":"2014-02-05T16:23:51.088Z","0.2.0":"2014-02-10T22:15:25.566Z"},"users":{"stonecypher":true,"mano.rajesh":true}}}