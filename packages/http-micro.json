{"name":"http-micro","version":"1.13.1","description":"Micro-framework on top of node's http module","main":"./lib/index.js","types":"./lib/index.d.ts","scripts":{"clean":"rimraf lib/*","build":"npm run clean && npm run tsc","tsc":"tsc","watch":"tsc -w","test":"echo \"No tests available.\" && exit 0","prepublishOnly":"npm run build","example":"nodemon --ext ts,tsx,js,jsx --watch ./ --exec ts-node --project ./examples/ ./examples/index.ts","autoplay":"nodemon --ext ts,tsx,js,jsx --watch ./ --exec ts-node --project ./playground/ ./playground/autoplay.ts"},"repository":"https://github.com/prasannavl/http-micro","keywords":["server","http","micro-framework"],"license":"Apache-2.0","devDependencies":{"@types/bluebird":"^3.5.2","bluebird":"^3.5.0","nodemon":"^1.11.0","rimraf":"^2.6.1","ts-node":"^3.0.2","typescript":"^2.2.2"},"dependencies":{"@types/accepts":"^1.3.2","@types/debug":"0.0.29","@types/http-errors":"^1.5.34","@types/node":"^6.0.69","@types/raw-body":"^2.1.4","@types/content-type":"^1.0.33","@types/mime-types":"^2.1.0","accepts":"^1.3.3","content-type":"^1.0.2","debug":"^2.6.3","http-errors":"^1.6.1","mime-types":"^2.1.15","path-to-regexp":"^1.7.0","raw-body":"^2.2.0","type-is":"^1.6.15"},"gitHead":"bdd77b62b34d14aeaa8488972e3e24ac4b3ba45c","homepage":"https://github.com/prasannavl/http-micro#readme","versions":[{"number":"1.0.0","date":"2017-04-18T16:29:32.355Z"},{"number":"1.0.1","date":"2017-04-24T12:01:32.410Z"},{"number":"1.0.2","date":"2017-04-24T12:04:01.638Z"},{"number":"1.1.0","date":"2017-04-27T05:29:33.499Z"},{"number":"1.1.1","date":"2017-04-27T06:33:14.731Z"},{"number":"1.2.0","date":"2017-05-01T12:10:12.717Z"},{"number":"1.3.0","date":"2017-05-05T08:02:57.666Z"},{"number":"1.4.0","date":"2017-05-05T09:01:51.407Z"},{"number":"1.5.0","date":"2017-05-05T13:25:13.404Z"},{"number":"1.5.1","date":"2017-05-05T14:19:55.495Z"},{"number":"1.5.2","date":"2017-05-05T14:49:02.241Z"},{"number":"1.5.3","date":"2017-05-07T04:43:27.398Z"},{"number":"1.5.4","date":"2017-05-07T04:46:15.902Z"},{"number":"1.5.5","date":"2017-05-07T06:00:14.905Z"},{"number":"1.6.0","date":"2017-05-10T09:51:42.829Z"},{"number":"1.6.1","date":"2017-05-10T10:03:48.345Z"},{"number":"1.7.0","date":"2017-05-12T09:30:23.316Z"},{"number":"1.7.1","date":"2017-05-12T10:42:48.442Z"},{"number":"1.7.2","date":"2017-05-12T10:53:43.565Z"},{"number":"1.8.0","date":"2017-05-22T16:46:17.194Z"},{"number":"1.8.1","date":"2017-05-22T16:59:37.068Z"},{"number":"1.8.2","date":"2017-05-22T17:05:48.564Z"},{"number":"1.8.3","date":"2017-05-22T17:16:29.711Z"},{"number":"1.8.4","date":"2017-05-25T02:09:33.890Z"},{"number":"1.9.0","date":"2017-05-25T21:40:36.607Z"},{"number":"1.9.1","date":"2017-05-27T06:49:38.344Z"},{"number":"1.9.2","date":"2017-05-27T09:35:15.122Z"},{"number":"1.9.3","date":"2017-05-27T09:40:54.370Z"},{"number":"1.9.4","date":"2017-05-28T19:31:25.804Z"},{"number":"1.10.0","date":"2017-05-29T07:30:11.651Z"},{"number":"1.11.0","date":"2017-05-30T07:03:49.564Z"},{"number":"1.12.0","date":"2017-05-31T03:32:44.984Z"},{"number":"1.13.0","date":"2017-06-09T08:46:28.801Z"},{"number":"1.13.1","date":"2017-06-13T01:32:47.963Z"}],"readme":"# http-micro\r\n\r\nMicro-framework on top of node's http module\r\n\r\n```js\r\napp.use((ctx) => {\r\n    ctx.res.end(\"Hello world!\");\r\n    return Promise.resolve();\r\n});\r\n```\r\n\r\n**Installation:** `npm install http-micro`\r\n\r\n### Highlights\r\n\r\n- Written in and works with Typescipt.\r\n- No monkey-patching Node's http module or any other module.\r\n- Koa-like contexts that can be generically typed in TS.\r\n- Promises for all middleware.\r\n- Provides middleware chaining and composition over core `http` module.\r\n- Awaitable `next` middlewares. So, parent middleware has complete\r\n  control over the execution of the next middleware.\r\n- Just use `async/await` and wrap in `try-catch` for error handling. No \r\n  special quirks or ugly special-case callbacks like Express.\r\n- High performance (Combined with bluebird promises,\r\n  performance is on par with node's raw http module).\r\n- Small code-base.\r\n\r\n### Example\r\n\r\n```js\r\nconst micro = require(\"http-micro\");\r\nconst url = require(\"url\");\r\nconst mount = micro.mount;\r\n\r\nlet app = new micro.Application();\r\n// When using Typescript, context can be \r\n// generically typed to one that implements\r\n// the IContext interface.\r\n// `let app = new micro.ApplicationCore<MyContext>();`\r\n\r\n// Raw node req, and res untouched.\r\n// Convenience functions are also provided, used\r\n// later in the example.\r\n\r\napp.use(async (ctx, next) => {\r\n    if (url.parse(ctx.req.url)\r\n        .pathname == \"/async\") {\r\n        ctx.res.end(\"Hello world from async!\");\r\n    } else {\r\n        await next();\r\n    }\r\n});\r\n\r\napp.use(async (ctx, next) => {\r\n    await next();\r\n})\r\n\r\napp.use(async (ctx, next) => {\r\n    if (url.parse(ctx.req.url)\r\n        .pathname == \"/async-await\") {\r\n        await Promise.resolve();\r\n        await Promise.resolve();\r\n        ctx.res.end(\"Hello world from awaited async!\");\r\n    } else {\r\n        await next();\r\n    }\r\n});\r\n\r\nlet router = new micro.Router();\r\n// When using Typescript, can again be generic,\r\n// `let router = new Router<MyContext>();`\r\n\r\nrouter.get(\"/hello\", (ctx) => {\r\n    ctx.sendText(\"Hello route!\");\r\n    return Promise.resolve();\r\n});\r\n\r\nrouter.get(\"/hello-string\", async (ctx) => {\r\n    ctx.sendText(\"Hello string!\");\r\n});\r\n\r\nrouter.get(\"/hello-object\", (ctx) => {\r\n    ctx.sendAsJson({ message: \"Hello world!\" });\r\n    return Promise.resolve();\r\n});\r\n\r\nrouter.get(\"/hello-data/:id\", (ctx, next) => {\r\n    ctx.sendAsJson(ctx.getRouteData().params);\r\n    return Promise.resolve();\r\n});\r\n\r\nlet router1 = new micro.Router();\r\n\r\nrouter1.get(\"/hello\", (ctx) => {\r\n    ctx.sendText(\"chain 1: hello!\");\r\n    return Promise.resolve();\r\n});\r\n\r\nlet router2 = new micro.Router();\r\n\r\nrouter2.get(\"/hello\", (ctx) => {\r\n    ctx.res.end(\"chain 2: hello!\");\r\n    return Promise.resolve();\r\n});\r\n\r\nrouter.use(mount(\"/r1\", router1, \"router1\"));\r\nrouter.use(mount(\"/r2/\", router2, \"router2\"));\r\n\r\napp.use(mount(\"/\", router, \"root-router\"));\r\n\r\napp.listen(8000, \"localhost\", () => {\r\n    console.log(\"listening\");\r\n});\r\n```\r\n","created":"2017-04-18T16:29:32.355Z","modified":"2017-06-13T01:32:47.963Z","lastPublisher":{"name":"prasannavl","email":"pvl@prasannavl.com"},"owners":[{"name":"prasannavl","email":"pvl@prasannavl.com"}],"other":{"_attachments":{},"_from":".","_id":"http-micro","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-micro-1.13.1.tgz_1497317566915_0.23192386468872428"},"_npmUser":{"name":"prasannavl","email":"pvl@prasannavl.com"},"_npmVersion":"4.6.1","_rev":"34-67bbe4a64d795e49919cc42f70294020","_shasum":"a1ef40d9d61b7742bd7ffa410810a27daf2caf55","author":{"name":"Prasanna V. Loganathar","email":"pvl@prasannavl.com","url":"https://www.prasannavl.com/"},"bugs":{"url":"https://github.com/prasannavl/http-micro/issues"},"directories":{},"dist-tags":{"latest":"1.13.1"},"dist":{"shasum":"a1ef40d9d61b7742bd7ffa410810a27daf2caf55","tarball":"https://registry.npmjs.org/http-micro/-/http-micro-1.13.1.tgz"},"maintainers":[{"name":"prasannavl","email":"pvl@prasannavl.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-13T01:32:47.963Z","created":"2017-04-18T16:29:32.355Z","1.0.0":"2017-04-18T16:29:32.355Z","1.0.1":"2017-04-24T12:01:32.410Z","1.0.2":"2017-04-24T12:04:01.638Z","1.1.0":"2017-04-27T05:29:33.499Z","1.1.1":"2017-04-27T06:33:14.731Z","1.2.0":"2017-05-01T12:10:12.717Z","1.3.0":"2017-05-05T08:02:57.666Z","1.4.0":"2017-05-05T09:01:51.407Z","1.5.0":"2017-05-05T13:25:13.404Z","1.5.1":"2017-05-05T14:19:55.495Z","1.5.2":"2017-05-05T14:49:02.241Z","1.5.3":"2017-05-07T04:43:27.398Z","1.5.4":"2017-05-07T04:46:15.902Z","1.5.5":"2017-05-07T06:00:14.905Z","1.6.0":"2017-05-10T09:51:42.829Z","1.6.1":"2017-05-10T10:03:48.345Z","1.7.0":"2017-05-12T09:30:23.316Z","1.7.1":"2017-05-12T10:42:48.442Z","1.7.2":"2017-05-12T10:53:43.565Z","1.8.0":"2017-05-22T16:46:17.194Z","1.8.1":"2017-05-22T16:59:37.068Z","1.8.2":"2017-05-22T17:05:48.564Z","1.8.3":"2017-05-22T17:16:29.711Z","1.8.4":"2017-05-25T02:09:33.890Z","1.9.0":"2017-05-25T21:40:36.607Z","1.9.1":"2017-05-27T06:49:38.344Z","1.9.2":"2017-05-27T09:35:15.122Z","1.9.3":"2017-05-27T09:40:54.370Z","1.9.4":"2017-05-28T19:31:25.804Z","1.10.0":"2017-05-29T07:30:11.651Z","1.11.0":"2017-05-30T07:03:49.564Z","1.12.0":"2017-05-31T03:32:44.984Z","1.13.0":"2017-06-09T08:46:28.801Z","1.13.1":"2017-06-13T01:32:47.963Z"}}}