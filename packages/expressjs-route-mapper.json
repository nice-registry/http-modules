{"name":"expressjs-route-mapper","version":"0.0.11","description":"HTTP dynamic routing with Express.js","homepage":"https://github.com/carlosmarte/expressjs-route-mapper","repository":"https://github.com/carlosmarte/expressjs-route-mapper","licenses":[{"type":"MIT","url":"https://github.com/carlosmarte/expressjs-route-mapper/blob/master/LICENSE-MIT"}],"main":"lib/main.js","scripts":{"test":"grunt test","pull":"git push origin master"},"engines":{"node":">= 0.8.0"},"license":"ISC","devDependencies":{"chai":"^1.9.1","chai-as-promised":"^4.1.1","coffee-errors":"^0.8.6","coffee-script":"^1.7.1","express":"^4.7.0","grunt":"^0.4.5","grunt-coffeelint":"0.0.10","grunt-concurrent":"^0.5.0","grunt-contrib-clean":"^0.5.0","grunt-contrib-coffee":"^0.10.1","grunt-contrib-watch":"^0.6.1","grunt-shell":"^0.7.0","load-grunt-tasks":"^0.6.0","mocha":"^1.20.1","should":"^4.0.4","superagent":"^0.18.0","supertest":"^0.13.0","time-grunt":"^0.3.2","request":"^2.40.0","serve-static":"^1.5.4","multer":"^0.1.4"},"dependencies":{"connect-multiparty":"^1.1.0","crypto":"0.0.3","lodash":"^2.4.1","q":"^1.0.1","express":"^4.8.6","vhost":"^2.0.0","walkdir":"0.0.7","method-override":"^2.2.0","body-parser":"^1.8.0","multer":"^0.1.4"},"keywords":["express","rest","restful","router","http","virtual host","domain"],"versions":[{"number":"0.0.1","date":"2014-07-27T19:10:57.443Z"},{"number":"0.0.2","date":"2014-07-28T06:49:39.863Z"},{"number":"0.0.3","date":"2014-08-29T02:25:35.802Z"},{"number":"0.0.4","date":"2014-08-29T04:06:33.953Z"},{"number":"0.0.5","date":"2014-08-29T04:25:29.804Z"},{"number":"0.0.6","date":"2014-08-29T05:08:47.870Z"},{"number":"0.0.7","date":"2014-08-29T06:42:41.578Z"},{"number":"0.0.8","date":"2014-08-29T07:05:44.419Z"},{"number":"0.0.9","date":"2014-08-31T14:31:37.889Z"},{"number":"0.0.10","date":"2014-09-06T14:24:48.939Z"},{"number":"0.0.11","date":"2014-09-06T16:55:07.469Z"}],"readme":"expressjs-route-mapper\n======================\n> HTTP dynamic routing with Express.js\n\n## About\n\n  The motivation for this module is to provide a high-level abstraction of routes in express.js. It is written in JavaScript, and is 100% MIT licensed.\n\n  * a simple, easy method for generating restful routes for a model.\n  * easy declaration of your \"root\" or \"home\" route.\n  * support virtualhost, domain specific routes\n  * support condition inheritance\n  * optional definition of a \"before wrapper\" function, which is called before request handling is made.\n  * optional support middleware\n\n## Install\n\n```js\nnpm install expressjs-route-mapper --save\n```\n\n## Supported HTTP methods:\n\n```\n  Method    Scope         Semantics\n  GET       collection    Retrieve all resources in a collection\n  GET       resource      Retrieve a single resource\n  HEAD      collection    Retrieve all resources in a collection (header only)\n  HEAD      resource      Retrieve a single resource (header only)\n  POST      collection    Create a new resource in a collection\n  PUT       resource      Update a resource\n  PATCH     resource      Update a resource\n  DELETE    resource      Delete a resource\n  COPY      resource      Clone/Copy of an existing resource.\n  PURGE     resource      pick out an object from the cache and discard\n  TRACE     resource      TRACE allows the client to see testing or diagnostic information.\n  OPTIONS   any Return available HTTP methods and other options\n```\n\n## Examples\nHere is an example on how to use it:\n\n#### Basic route\n\n```js\n  express = require(\"express\");\n  app = express();\n  require('expressjs-route-mapper').use(app);\n\n  app.routeMapper({\n    base: '/users/:user_id/tables/:table_id',\n    routes: {\n      '/stories': {\n        'get': function(req, res){ res.send('hello get'); },\n        'delete': function(req, res){ res.send('hello delete'); },\n        'put': function(req, res){ res.send('hello put'); },\n        'post': function(req, res){ res.send('hello post'); },\n      }\n    }\n  });\n\n```\n\nThese are the routes that will get created with the code above:\n\n    Method    URL\n    GET       /users/:user_id/tables/:table_id/stories\n    POST      /users/:user_id/tables/:table_id/stories\n    DELETE    /users/:user_id/tables/:table_id/stories\n    PUT       /users/:user_id/tables/:table_id/stories\n\n#### Basic route with before wrapper\n\n> Here we have route [IndexRoute] with before callback [IndexRoute.before] which run before the main route IndexRoute. This is useful for security check or validate a user before render the main route\n  * note: before condition inherits down to child routes\n\n```js\n  express = require(\"express\");\n  app = express();\n  require('expressjs-route-mapper').use(app);\n\n  IndexRoute = function(req, res){\n    return 'Hello World'\n  }\n\n  IndexRoute.before  = function(req, res){\n    return 'Hello World'\n  }\n\n  app.routeMapper({\n    base: '/home',\n    routes:\n      'get': function(req, res, next){\n        res.send('Hello World');\n      }\n  });\n\n```\n\n#### Basic route with base root\nDeclare your root or home url with the base options:\n```js\n  app.routeMapper({\n    base: '/product',\n    routes: {\n      'get': function(req, res, next){\n        res.send('Hello World');\n      },\n      '/category':{\n        'get': function(req, res, next){\n          res.send('Hello World');\n        }\n      }\n    }\n  });\n```\n\nThese are the routes that will get created with that method call:\n\n    Method  URL\n    GET     /product\n    GET     /product/category\n\n#### Route mapping with multiple layers\n\n```js\n  express = require(\"express\");\n  app = express();\n  require('expressjs-route-mapper').use(app);\n\n  app.routeMapper({\n    routes: {\n      '/product': {\n        'get': function(req, res){\n          return \"Hello World, I'm an http get method\"\n        },\n        'post': function(req, res){\n          return \"Hello World, I'm an http post method\"\n        },\n        '/byId':{\n          'get': function(req, res){\n            return \"my product id is 10\"\n          },\n          'delete': function(req, res){\n            return \"Hello World, I'm an http delete method\"\n          },\n        }\n      }\n    }\n  });\n\n```\nThese are the routes that will get created with that method call:\n\n    Method    URL\n    GET       /product\n    POST      /product\n    GET       /product/byId\n    Delete    /product/byId\n\n#### Virtual Host\ndomain specific routes\n\n```js\n  express = require(\"express\");\n  app = express();\n  require('expressjs-route-mapper').use(app);\n  myDomainServer = express();\n  myDomainServer.get('/', function(req, res){\n    res.send('hello one.lvh.me');\n  })\n\n  app.routeMapper({\n    host: 'one.lvh.me',\n    server: myDomainServer, //optional server\n    base: '/my-route',\n    routes: {\n      'get': function(req, res){ res.send('hello one.lvh.me/my-route'); },\n    }\n  });\n\n  app.routeMapper({\n    host: 'two.lvh.me',\n    base: '/your-route',\n    routes: {\n      'get': function(req, res){ res.send('hello two.lvh.me/your-route'); },\n    }\n  });\n\n```\nThese are the routes that will get created with that method call:\n\n    Method    URL          Domain\n    GET       /my-route    http://one.lvh.me/my\n    GET       /your-route  http://your-domain/your-domain\n\n\n## Supported domain patterns:\n\n```js\n  lvh.me        //domain www\n  www.lvh.me    //sub-domain www\n  *.lvh.me      //any sub-domain\n```\n\n## Todo\n* ways to customize, override and extend the generated restful routes\n\n## Notes\n  Inspired by [express.js examples](https://github.com/visionmedia/express/tree/master/examples)\n\n## License\n  [MIT](http://opensource.org/licenses/MIT) Â© [Carlos Marte](http://carlosmarte.me/)\n","starsCount":1,"created":"2014-07-27T19:10:57.443Z","modified":"2014-09-06T16:55:07.469Z","lastPublisher":{"name":"carlosmarte","email":"dev@carlosmarte.me"},"owners":[{"name":"carlosmarte","email":"dev@carlosmarte.me"}],"other":{"_attachments":{},"_from":".","_id":"expressjs-route-mapper","_npmUser":{"name":"carlosmarte","email":"dev@carlosmarte.me"},"_npmVersion":"1.4.3","_rev":"1-1465314fad67156425942c9592117e51","author":{"name":"Roberto Carlos Marte","email":"app@carlosmarte.me","url":"http://carlosmarte.me"},"bugs":{"url":"https://github.com/carlosmarte/expressjs-route-mapper/issues"},"directories":{},"dist-tags":{"latest":"0.0.11"},"dist":{"shasum":"b1ab913244dbe801a519ca87d2fba872dc5a0280","tarball":"http://registry.npmjs.org/expressjs-route-mapper/-/expressjs-route-mapper-0.0.11.tgz"},"maintainers":[{"name":"carlosmarte","email":"dev@carlosmarte.me"}],"readmeFilename":"README.md","time":{"modified":"2014-09-06T16:55:07.469Z","created":"2014-07-27T19:10:57.443Z","0.0.1":"2014-07-27T19:10:57.443Z","0.0.2":"2014-07-28T06:49:39.863Z","0.0.3":"2014-08-29T02:25:35.802Z","0.0.4":"2014-08-29T04:06:33.953Z","0.0.5":"2014-08-29T04:25:29.804Z","0.0.6":"2014-08-29T05:08:47.870Z","0.0.7":"2014-08-29T06:42:41.578Z","0.0.8":"2014-08-29T07:05:44.419Z","0.0.9":"2014-08-31T14:31:37.889Z","0.0.10":"2014-09-06T14:24:48.939Z","0.0.11":"2014-09-06T16:55:07.469Z"},"users":{"goliatone":true}}}