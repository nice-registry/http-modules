{"name":"nhttpsnoop","version":"1.0.0","description":"Trace Node.js GC and HTTP server and client activity","repository":"https://github.com/davepacheco/nhttpsnoop","keywords":["node","http","dtrace","trace","gc"],"license":"MIT","homepage":"https://github.com/davepacheco/nhttpsnoop","bin":{"nhttpsnoop":"./nhttpsnoop"},"versions":[{"number":"1.0.0","date":"2014-07-23T16:09:01.691Z"}],"readme":"# nhttpsnoop: Trace Node.js HTTP server activity\n\nSynopsis:\n\n    usage: nhttpsnoop [-cglns] [-t argtype] [-o col,...] [-p pid,...]\n\nnhttpsnoop traces Node.js HTTP client, server, and garbage collection activity.\nBy default, all requests for all Node.js HTTP servers on the system are traced,\nand information about each one is displayed as it completes:\n\nnhttpsnoop traces Node.js HTTP server activity.  By default, all requests from\nall Node.js servers on the system are traced, and each one is displayed as it\ncompletes:\n\n    # nhttpsnoop\n    TIME            PID PROBE     LATENCY METHOD PATH\n    [  0.440283]  73160 server    1.264ms GET    /uter\n    [  1.436516]  73160 server    1.475ms GET    /wendell\n    [  1.436611]  73160 server    1.435ms GET    /allison\n    [  1.436687]  73160 server    1.375ms GET    /uter\n\nWith -l, a record is emitted when requests are received as well in addition to\nwhen the response is sent:\n\n    # nhttpsnoop -l\n    TIME            PID PROBE        LATENCY METHOD PATH\n    [  0.814249]  73160 server ->          - GET    /allison\n    [  0.814426]  73160 server <-    0.177ms GET    /allison\n    [  3.201576]  73160 server ->          - GET    /wendell\n    [  3.202105]  73160 server ->          - GET    /allison\n    [  3.202607]  73160 server <-    1.030ms GET    /wendell\n    [  3.202745]  73160 server <-    0.639ms GET    /allison\n\nBesides server operations (shown by default, and also requested with \"-s\"), you\ncan trace client operations with \"-c\" and garbage collection operations with\n\"-g\".  These can be combined:\n\n    # nhttpsnoop -cgls\n    TIME            PID PROBE        LATENCY METHOD PATH\n    [  0.132371]  73160 client ->          - GET    /wendell\n    [  0.133475]  73160 server ->          - GET    /wendell\n    [  0.133887]  73160 server <-    0.411ms GET    /wendell\n    [  0.134267]  73160 client <-    1.895ms GET    /wendell\n    [  7.133776]  73160 gc     <-    0.831ms -      -\n\nYou can also select fields for display with -o, much like ps(1) and other\ntools:\n\n    # nhttpsnoop -otime,method,path\n    TIME         METHOD PATH\n    [  2.381936] GET    /wf_runners/869de259-5bdf-4efe\n    [  2.965854] GET    /search/wf_jobs\n    [  2.960546] GET    /agentprobes\n\nSee below for the list of columns available.\n\nFinally, you can select individual processes to trace using -p, also like ps(1).\n\n\n## Option summary\n\n    -c            Trace HTTP client activity (request/response pairs).\n                  See \"Notes\" below.\n\n    -g            Trace garbage collections.\n\n    -l            Display two lines, one each for the beginning and end of each\n                  HTTP request.  For server requests, these correspond with\n                  receiving the request and sending the response.  For client\n                  requests, these correspond with sending the request and\n                  receiving the response.\n\n                  This is useful when you want to see how operations are\n                  actually interleaved instead of just how long each one takes.\n\n    -n            Don't actually run DTrace, but instead just print out the D\n                  script that would be used.\n\n    -o col,...    Display the specified columns instead of the default output.\n                  Available columns include:\n\n                latency         time in microseconds between the request being\n                                received and the response being sent.\n\n                method          Request's HTTP method\n\n                path            Request's HTTP URL path\n                                (excludes query parameters)\n\n                pid             process identifier\n\n                probe           indicates the type of event\n                                (\"client\", \"server\", or \"gc\")\n\n                raddr           Remote host's IPv4 address\n\n                rport           Remote host's TCP port\n\n                time            relative time of the event from when $nhs_arg0\n                                started\n\n                url             Request's full HTTP URL, including query parameters\n\n                which           Indicates with an arrow whether this is an\n                                incoming or outgoing request.\n\n                  Some fields may not apply to all events.\n\n    -p pid,...    Only trace the specified processes.\n\n    -s            Trace HTTP server activity (request/response pairs).\n\n    -t ARGTYPE    Specify which probe arguments to use, which must be one of\n                  \"translated\" or \"simple\".  Translated arguments are more\n                  extensible, more efficient, and the only reliable approach on\n                  systems that support them.  Untranslated arguments are\n                  required on OS X, which doesn't support USDT translators.\n                  The default value is selected based on your system and you\n                  should never need to override this.\n\n\n## Selecting processes\n\n\"-p\" is the only way to select processes, but you can use this with pgrep(1)\nfor more sophisticated selections:\n\n    # nhttpsnoop -p \"$(pgrep -f restify)\"  # select only \"restify\" processes\n    # nhttpsnoop -p \"$(pgrep -z myzone)\"   # select processes in zone \"myzone\"\n    # nhttpsnoop -p \"$(pgrep -u dap)\"      # select processes with user \"dap\"\n\nWith \"-p\", all Node processes are actually traced, but only requests from the\nselected processes are printed.\n\n## Notes\n\nThis tool uses the Node.js DTrace provider and dtrace(1M).  You must have\npermissions to run dtrace(1M) and use this provider.  It works on illumos-based\nsystems and OS X systems with builds of Node with [Node issue\n3617](https://github.com/joyent/node/issues/3617) resolved.\n\nData for HTTP client requests is not reliable when multiple requests are issued\nconcurrently for the same remote server.  Unfortunately, there's no way to\nreliably associate request and response pairs in this case.  As a result, some\nrecords may be missing from the output, and others may have incorrect time and\nlatency information.\n\nIf you see an error like the following:\n\n    dtrace: failed to compile script /var/tmp/nhttpsnoop.81961.d: line 20: failed to resolve translated type for args[1]\n    nhttpsnoop: failed to invoke dtrace(1M)\n\nthen \"dtrace\" didn't find the expected Node translator file.  Node installs\nthis file into $PREFIX/lib/dtrace/node.d, but dtrace only knows about\n/usr/lib/dtrace/node.d.  So if you have installed Node into a prefix other than\n/usr, then you must specify this via DTRACE\\_OPTS in your environment:\n\n    # export DTRACE_OPTS='-L $PREFIX/lib/dtrace'\n\nwhere `$PREFIX` is where you've installed Node (e.g., \"/usr/local\" or\n\"/opt/local\").  nhttpsnoop passes DTRACE\\_OPTS to \"dtrace\", which in this case\ncauses \"dtrace\" to look for the node.d translator file in the directory\nspecified by -L.  See the \"-L\" option in dtrace(1M) for details.\n\nOn older versions of illumos, you may see errors like this:\n\n    # dtrace: error on enabled probe ID 34 (ID 67807: node6112:node:_ZN4node26DTRACE_HTTP_SERVER_REQUESTERKN2v89ArgumentsE:http-server-request): invalid kernel access in action #2 at DIF offset 348\n\nThis has been fixed in versions of SmartOS after 20120531T220306Z.  See \"uname\n-v\" to see what release you're running.\n","starsCount":1,"created":"2014-07-23T16:09:01.691Z","modified":"2014-07-23T16:09:01.691Z","lastPublisher":{"name":"dap","email":"dap@cs.brown.edu"},"owners":[{"name":"dap","email":"dap@cs.brown.edu"}],"other":{"_attachments":{},"_from":".","_id":"nhttpsnoop","_npmUser":{"name":"dap","email":"dap@cs.brown.edu"},"_npmVersion":"1.4.9","_rev":"1-33e356dd13670f207150d2e6aa481559","_shasum":"f490a1bacf5661906603dc4ccec9ef3ea0198b1a","author":{"name":"Dave Pacheco","email":"dap@cs.brown.edu"},"bugs":{"url":"https://github.com/davepacheco/nhttpsnoop/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"f490a1bacf5661906603dc4ccec9ef3ea0198b1a","tarball":"http://registry.npmjs.org/nhttpsnoop/-/nhttpsnoop-1.0.0.tgz"},"maintainers":[{"name":"dap","email":"dap@cs.brown.edu"}],"readmeFilename":"README.md","time":{"modified":"2014-07-23T16:09:01.691Z","created":"2014-07-23T16:09:01.691Z","1.0.0":"2014-07-23T16:09:01.691Z"},"users":{"vishwasc":true}}}