{"name":"pino-clf","version":"1.0.2","description":"Transform Pino HTTP logs into Common Log Format","main":"index.js","bin":{"pino-clf":"./cmd.js"},"scripts":{"test":"standard && tap -R=spec test/*.js","cov":"tap --cov test/*.js","cov-ui":"tap --cov --coverage-report=html test/*.js","ci":"standard && tap --cov --coverage-report=lcov test/*.js"},"license":"MIT","devDependencies":{"standard":"^7.1.2","tap":"^6.2.0"},"dependencies":{"fast-json-parse":"^1.0.2","minimist":"^1.2.0","pino-toke":"^1.0.0","pump":"^1.0.2","through2":"^2.0.3"},"repository":"https://github.com/pinojs/pino-clf","keywords":["common log format","common","log","format","clf","Apache","NCSA_HTTPd","NCSA","NCSA Common Log Format","Webalizer","Analog","Apache Common Log Format","Apache Common","Apache Combined","Pino","HTTP","pino-http","pino","express","koa","hapi","express-pino-logger","koa-pino-logger","hapi-pino"],"homepage":"https://github.com/pinojs/pino-clf#readme","gitHead":"461b7623cc39fddc1e38818183e20b9b6808ec85","versions":[{"number":"1.0.0","date":"2017-05-01T21:56:14.734Z"},{"number":"1.0.1","date":"2017-05-01T22:02:39.553Z"},{"number":"1.0.2","date":"2017-05-02T15:55:00.635Z"}],"readme":"# pino-clf &nbsp; &nbsp;[![stability][0]][1]\n[![npm version][2]][3] [![build status][4]][5] [![test coverage][6]][7] [![dependencies freshness][14]][15] [![js-standard-style][10]][11]\n\nTransform Pino HTTP logs into Common Log Format.\n\nThis CLI tool and module is a transform [transport](https://github.com/pinojs/pino/blob/master/docs/transports.md) for the [pino](http://npm.im/logger) which outputs [Common Log Format](https://en.wikipedia.org/wiki/Common_Log_Format).\n\n![demo](demo.gif)\n\n## Supports\n\n* [express-pino-logger](http://npm.im/express-pino-logger)\n* [restify-pino-logger](http://npm.im/restify-pino-logger)\n* [koa-pino-logger](http://npm.im/koa-pino-logger)\n* [pino-http](http://npm.im/pino-http)\n* [hapi-pino](http://npm.im/hapi-pino)\n\n## Usage\n\n```sh\n$ npm install -g pino-clf\n```\n\n```sh\n$ pino-clf -h\n```\n\n```sh\n  \n    pino-clf [-d] [-k] [-a] type\n\n    type                common | combined (default)\n\n    -d | --dest |       stderr | stdout (default) or Number or Array of Numbers\n    --destination       Specify file descriptor(s) to send log(s) to [access, referral, agent]\n    \n    -a | --ancillary    stderr | stdout or Number. Specify JSON logs fd\n    \n    -k | --keep         true | false (default) Retain transformed logs in ancillary output\n\n```\n\n### Common Log Format\n\nThe Common Log Format is a frequently used log format, that has a very mature and well \nestablished ecosystem built around it. \n\nIt takes two forms: \"Combined\" and \"Common\".\n\nWhen the type is \"Common\" this can break down into (up to) three separate log streams:\n\n* Access log (also known as Common log)\n* Referall log\n* Agent log\n\nAccess log example:\n\n```\n127.0.0.1 - Aladdin [21/Jul/2016:17:34:52 -0060] \"GET /api/activity/component HTTP/1.1\" 200 -\n```\n\nReferral log example:\n\n```\n[21/Jul/2016:17:34:52 -0060] \"http://localhost:20000/\"\n```\n\nAgent log example:\n\n```\n[21/Jul/2016:17:34:52 -0060] \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n```\n\nThe \"Combined\" format combines all three formats into one, for instance: \n\n```\n127.0.0.1 - Aladdin [21/Jul/2016:17:34:52 -0060] \"GET /api/activity/component HTTP/1.1\" 200 - \"http://localhost:20000/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n```\n\n\n### Example\n\nSpin up a server that uses a pino http logger (see the [Supports](#supports) section),\npipe it to `pino-clf` and desribe the format in tokenized form\n\n```sh\n$ node server | pino-clf\n127.0.0.1 - Aladdin [21/Jul/2016:17:34:52 -0060] \"GET /api/activity/component HTTP/1.1\" 200 - \"http://localhost:20000/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n```\n\nThe default output is Combined. To use three log output use the `-d` flag and specify\nup to three file descriptors (first is access log, second referral log, third agent log):\n\n```sh\nnode server | pino-clf -d [3,4,5] 3>> ./access.log 4>> ./referral.log 5>> ./agent.log\n```\n\nThe above will append the Access, Agent, and Referral logs to each corresponding log file.\n\nWe can skip the middle log (referall) by using an file desriptor of `0` or `null` as the \nmiddle element:\n\n```sh\nnode server | pino-clf -d [3,0,4] 3>> ./access.log 4>> ./agent.log\n```\n\n\n## Destination (`-d`)\n\nBy default, logs are output to STDOUT, however we can set the `-d` (alias, `--dest`, `--destination`), flag to a a `stderr`, or a number (`1` for stdout, `2` for stderr, `3` or more for custom file descriptor):\n\n```sh\n$ node server | pino-clf -d stderr\n```\n\nThe above is equivalent to:\n\n```sh\n$ node server | pino-clf -d 2 combined\n```\n\nWe can also direct formatted log output to custom file descriptors, but we *must*\nuse bash redirection (in some form) from that file descriptor, otherwise the process\nwill most likely immediately crash (this is to do with how unix works).\n\n```sh\n$ node server | pino-clf -d 8 8> ./combined.log\n```\n\n## Ancillary Output (`-a`)\n\nBy default, any logs which aren't an HTTP log (meaning, they don't have `req` and `res`\nproperties and the `msg` isn't \"request complete\") are filtered out.\n\nHowever, we can specify an ancillary (secondary) output for other log messages, using\nthe `-a` (alias `--ancillary`) flag.\n\nThe following will write reformatted HTTP logs to STDOUT and original JSON logs\nwhich *are not* HTTP logs to STDERR.\n\n```sh\n$ node server | pino-clf -a 2 -d 1\n```\n\n## Keep Original HTTP JSON Logs (`-k`)\n\nThe `-a` (`--ancillary`) flag can be coupled with the `-k` (`--keep`) flag so that\nraw HTTP JSON logs are also piped to the ancillary output stream, along with any\nfiltered output.\n\nThe following will pipe all formatted logs to the `4` file descriptor which is redirected to a file,\nwhile *all* original JSON logs (instead of non-HTTP logs) are written to STDOUT.\n\n```\n$ node server | pino-clf -k -a 1 -d 4 4> ./combined.logs\n```\n\n### Programmatic API\n\n#### clf(type?, destination?, ancillary?)\n\nReturns a stream that we write Pino JSON logs to.\n\n\n##### type (String | Object)\n\n* combined (default)\n* common \n\nIf object form type is `{type, keep}`\n\n* `keep` (Boolean, `false`) - preserve original HTTP Logs, as well as other JSON logs when writing to ancillary stream\n\n##### destination (Stream | Array<Stream>)\n\nStream or streams to write output to.\n\nIf the type is `common` destination can be an `array` of \nup to three streams, to enable the three log \noutput format. \n\n* destination[0] - access log\n* destination[1] - referral log\n* destination[2] - agent log\n\n##### ancillary (Stream)\n\nStream to output original JSON logs to.\n\n\n## LICENSE\n\nMIT\n\n## Acknowledgements\n\n* Inspired by the [`morgan`](http://npm.im/morgan) logger\n* Sponsored by [nearForm](http://nearform.com)\n\n\n\n[0]: https://img.shields.io/badge/stability-stable-green.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/pino-clf.svg?style=flat-square\n[3]: https://npmjs.org/package/pino-clf\n[4]: https://img.shields.io/travis/pinojs/pino-clf/master.svg?style=flat-square\n[5]: https://travis-ci.org/pinojs/pino-clf\n[6]: https://img.shields.io/codecov/c/github/pinojs/pino-clf/master.svg?style=flat-square\n[7]: https://codecov.io/github/pinojs/pino-clf\n[8]: http://img.shields.io/npm/dm/pino-clf.svg?style=flat-square\n[9]: https://npmjs.org/package/pino-clf\n[10]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[11]: https://github.com/feross/standard\n[12]: https://npm.im/debug\n[13]: https://npm.im/github/pinojs/pino\n[14]: https://david-dm.org/pinojs/pino-clf/status.svg\n[15]: https://david-dm.org/pinojs/pino-clf\n\n","created":"2017-05-01T21:56:14.734Z","modified":"2017-05-06T04:24:37.711Z","lastPublisher":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"owners":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"watson","email":"w@tson.dk"}],"other":{"_attachments":{},"_from":".","_id":"pino-clf","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/pino-clf-1.0.2.tgz_1493740498126_0.7967579609248787"},"_npmUser":{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},"_npmVersion":"3.10.10","_rev":"4-71d4a0e7ec564b3b49b9b86f135313a8","_shasum":"3e8ffea2f4bd07f794570c2daa1e012c17cff6bb","author":{"name":"David Mark Clements"},"bugs":{"url":"https://github.com/pinojs/pino-clf/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"3e8ffea2f4bd07f794570c2daa1e012c17cff6bb","tarball":"https://registry.npmjs.org/pino-clf/-/pino-clf-1.0.2.tgz"},"maintainers":[{"name":"davidmarkclements","email":"huperekchuno@googlemail.com"},{"name":"jsumners","email":"james.sumners@gmail.com"},{"name":"matteo.collina","email":"hello@matteocollina.com"},{"name":"watson","email":"w@tson.dk"}],"readmeFilename":"readme.md","time":{"modified":"2017-05-06T04:24:37.711Z","created":"2017-05-01T21:56:14.734Z","1.0.0":"2017-05-01T21:56:14.734Z","1.0.1":"2017-05-01T22:02:39.553Z","1.0.2":"2017-05-02T15:55:00.635Z"}}}