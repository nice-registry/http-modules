{"name":"quo","version":"1.0.3","description":"Simplify koa http handles","main":"quo","scripts":{"test":"macchiato test"},"repository":"https://github.com/sonewman/quo","license":"ISC","devDependencies":{"koa":"^1.1.2","macchiato":"^4.6.0","node-fetch":"^1.3.3"},"gitHead":"77572cf0f0f6e85989ff78737df6f80be1b6069c","homepage":"https://github.com/sonewman/quo#readme","versions":[{"number":"1.0.0","date":"2015-11-08T04:36:51.904Z"},{"number":"1.0.1","date":"2015-11-08T13:18:01.610Z"},{"number":"1.0.2","date":"2015-11-08T13:38:21.765Z"},{"number":"1.0.3","date":"2015-11-08T21:58:26.709Z"}],"readme":"# Quo\n\nSimple async responses in Koa\n\n### Install\n```bash\n$ npm i quo\n```\n\nThis module provides some syntactic sugar for simple asynchronous responses.\n```javascript\nconst app = new Koa();\napp.listen(8080);\n\n// fat arrow functions can be supplied\n// and the return value is set to `context.body`\napp.use(quo(() => 'abcd'));\n\nfetch('http://localhost:8080')\n  .then(res => res.text())\n  .then(d => /* d === 'abcd' */);\n```\n\nReturn async stuff:\n```javascript\napp.use(quo(() => Promise.resolve('abcd')));\n```\nIf you are using async functions:\n```javascript\napp.use(quo(async () => 'abcd'));\n```\n\nThe context is passed as the first argument:\n```javascript\napp.use(quo(async ctx => {\n  ctx.status = 418;\n  return 'I\\'m a teapot'\n}));\n```\n\nAdditionally a second function can be supplied to handle error conditions:\n```javascript\napp.use(\n  quo(\n    async () => {\n      throw new Error('blerg');\n    },\n    (err, ctx) => {\n      if (err.message === 'blerg') {\n        ctx.status = 510;\n        return 'Not Extended';\n      } else {\n        throw err;\n      }\n    }));\n```\n\n\n## Licence\nISC\n","created":"2015-11-08T04:36:51.904Z","modified":"2015-11-08T21:58:26.709Z","lastPublisher":{"name":"sonewman","email":"newmansam@outlook.com"},"owners":[{"name":"sonewman","email":"newmansam@outlook.com"}],"other":{"_attachments":{},"_from":".","_id":"quo","_nodeVersion":"4.2.1","_npmUser":{"name":"sonewman","email":"newmansam@outlook.com"},"_npmVersion":"3.3.6","_rev":"1-b85785f370855c44d23d795d57111f06","_shasum":"e11244a578dea34371168587d6322260bda4e52c","author":{"name":"Sam Newman"},"bugs":{"url":"https://github.com/sonewman/quo/issues"},"directories":{},"dist-tags":{"latest":"1.0.3"},"dist":{"shasum":"e11244a578dea34371168587d6322260bda4e52c","tarball":"http://registry.npmjs.org/quo/-/quo-1.0.3.tgz"},"maintainers":[{"name":"sonewman","email":"newmansam@outlook.com"}],"readmeFilename":"readme.md","time":{"modified":"2015-11-08T21:58:26.709Z","created":"2015-11-08T04:36:51.904Z","1.0.0":"2015-11-08T04:36:51.904Z","1.0.1":"2015-11-08T13:18:01.610Z","1.0.2":"2015-11-08T13:38:21.765Z","1.0.3":"2015-11-08T21:58:26.709Z"}}}