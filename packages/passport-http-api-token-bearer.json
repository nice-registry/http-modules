{"name":"passport-http-api-token-bearer","version":"1.0.1","description":"HTTP Bearer authentication strategy for Passport.","keywords":["passport","auth","authn","authentication","authz","authorization","http","bearer","token","oauth"],"repository":"https://github.com/mabc224/passport-http-api-token-bearer","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib","dependencies":{"passport-strategy":"1.x.x"},"engines":{"node":">= 0.4.0"},"gitHead":"0a81a00789cda4541d75173291d3dba0888d9776","homepage":"https://github.com/mabc224/passport-http-api-token-bearer#readme","scripts":{},"versions":[{"number":"1.0.1","date":"2015-10-20T09:31:46.712Z"}],"readme":"# passport-http-api-token-bearer\r\n\r\n\r\nHTTP Bearer authentication strategy for [Passport](http://passportjs.org/).\r\n\r\nThis module lets you authenticate HTTP requests using bearer tokens in your Node.js\r\napplications.  Bearer tokens are typically used protect API endpoints, and are\r\noften issued using OAuth 2.0.  You have to pass token in req.header, req.body and req.query, (priority is as mentioned)\r\n\r\nBy plugging into Passport, bearer token support can be easily and unobtrusively\r\nintegrated into any application or framework that supports\r\n[Connect](http://www.senchalabs.org/connect/)-style middleware, including\r\n[Express](http://expressjs.com/).\r\n\r\n## Install\r\n\r\n    $ npm install passport-http-api-token-bearer\r\n\r\n## Usage\r\n\r\n#### Configure Strategy\r\n\r\nThe HTTP Bearer authentication strategy authenticates users using a bearer\r\ntoken.  The strategy requires a `verify` callback, which accepts that\r\ncredential and calls `done` providing a user.  Optional `info` can be passed,\r\ntypically including associated scope or object.\r\n\r\n    This strategy will use default token name, which is `access_token`\r\n    passport.use(new BearerStrategy(\r\n      function(token, done) {\r\n        User.findOne({ token: token }, function (err, user) {\r\n          if (err) { return done(err); }\r\n          if (!user) { return done(null, false); }\r\n          return done(null, user, { scope: 'all' });\r\n        });\r\n      }\r\n    ));\r\n    \r\n    OR\r\n    \r\n    passport.use(new BearerStrategy({\r\n            access_token: 'x-access-token'      /// you can define custom access_token name here,\r\n        },\r\n      function(token, done) {\r\n        User.findOne({ token: token }, function (err, user) {\r\n          if (err) { return done(err); }\r\n          if (!user) { return done(null, false, {statusCode:404, error: true, message: \"Not Found\"}); }\r\n          return done(null, user, { scope: 'all' });\r\n        });\r\n      }\r\n    ));      \r\n\r\n#### Authenticate Requests\r\n\r\nUse `passport.authenticate()`, specifying the `'token-bearer'` strategy, to\r\nauthenticate requests.  Requests containing bearer tokens do not require session\r\nsupport, so the `session` option can be set to `false`.\r\n\r\nFor example, as route middleware in an [Express](http://expressjs.com/)\r\napplication:\r\n\r\n    app.get('/profile', \r\n      passport.authenticate('token-bearer', { session: false }),\r\n      function(req, res) {\r\n        res.json(req.user);\r\n      });\r\n\r\n      app.all('/api/*', function(req, res, next){\r\n          passport.authenticate('token-bearer', { session: false }, function(err, user, info) {\r\n            return res.status(info.statusCode).json({ error: info.error, message: info.message, result: info.result });\r\n          })(req, res);\r\n      });\r\n\r\n## Credits\r\n\r\n  - [Arsalan Bilal](http://github.com/mabc224)\r\n\r\n## License\r\n\r\n[The MIT License](http://opensource.org/licenses/MIT)\r\n","created":"2015-10-20T09:31:46.712Z","modified":"2015-10-20T09:31:46.712Z","lastPublisher":{"name":"mabc224","email":"mabc224@gmail.com"},"owners":[{"name":"mabc224","email":"mabc224@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"passport-http-api-token-bearer","_nodeVersion":"4.1.2","_npmUser":{"name":"mabc224","email":"mabc224@gmail.com"},"_npmVersion":"2.14.0","_rev":"1-aaf7d6f75747c34b93f104633b7687de","_shasum":"bf273e3387244c3ca2fe55c05b9aa48803140855","author":{"name":"Arsalan","email":"mabc224@gmail.com"},"bugs":{"url":"http://github.com/mabc224/passport-http-api-token-bearer/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"bf273e3387244c3ca2fe55c05b9aa48803140855","tarball":"http://registry.npmjs.org/passport-http-api-token-bearer/-/passport-http-api-token-bearer-1.0.1.tgz"},"maintainers":[{"name":"mabc224","email":"mabc224@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-10-20T09:31:46.712Z","created":"2015-10-20T09:31:46.712Z","1.0.1":"2015-10-20T09:31:46.712Z"}}}