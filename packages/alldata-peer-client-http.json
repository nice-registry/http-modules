{"name":"alldata-peer-client-http","version":"0.1.2","description":"AllData Peer HTTP client module","scripts":{"test":"node scripts/test.js"},"main":"index.js","devDependencies":{"nodeunit":"0.8.1"},"repository":"https://github.com/tristanls/alldata-peer-client-http","keywords":["alldata","peer","client","http"],"license":"MIT","readme":"# alldata-peer-client-http\n\n_Stability: 1 - [Experimental](https://github.com/tristanls/stability-index#stability-1---experimental)_\n\n[![NPM version](https://badge.fury.io/js/alldata-peer-client-http.png)](http://npmjs.org/package/alldata-peer-client-http)\n\nPeer Client HTTP module for [AllData](https://github.com/tristanls/alldata), a distributed master-less write-once immutable event store database implementing \"All Data\" part of [Lambda Architecture](http://www.slideshare.net/nathanmarz/runaway-complexity-in-big-data-and-a-plan-to-stop-it).\n\n## Usage\n\n```javascript\nvar AllDataPeerClient = require('alldata-peer-client-http');\nvar AllDataKeygen = require('alldata-keygen');\n\nvar allDataPeerClient = new AllDataPeerClient({\n    method: \"POST\",\n    path: \"/_put\",\n    port: 80 \n});\n\nvar event1 = {customer: 1, action: \"site visit\"};\nvar key1 = AllDataKeygen.createKey();\n\nallDataPeerClient._put({hostname: \"first.peer.com\"}, key1, event1, function (error) {\n    if (error) {\n        console.log(\"Saving event1 failed on first peer: \" + error.message);\n    } else {\n        console.log(\"Saving event1 succeeded on first peer.\");\n    }\n});\n\nallDataPeerClient._put({hostname: \"second.peer.com\"}, key1, event1, function (error) {\n    if (error) {\n        console.log(\"Saving event1 failed on second peer: \" + error.message);\n    } else {\n        console.log(\"Saving event1 succeeded on second peer.\");\n    }\n});\n```\n\n## Test\n\n    npm test\n\n## Overview\n\nAllDataPeerClient is a Peer HTTP client for [AllData](https://github.com/tristanls/alldata). Once configured, it generates `_put` requests to other peers via HTTP in order to implement various consistency levels for AllData.\n\n## Documentation\n\n### AllDataClient\n\n**Public API**\n\n  * [new AllDataPeerClient(options)](#new-alldatapeerclientoptions)\n  * [allDataPeerClient._put(options, key, event, callback)](#alldatapeerclient_putoptions-key-event-callback)\n\n### new AllDataPeerClient(options)\n\n  * `options`: _Object_\n    * `method`: _String_ _(Default: `POST`)_ HTTP method.\n    * `path`: _String_ _(Default: `/`)_ HTTP request path.\n    * `port`: _Number_ _(Default: 80)_ HTTP port of remote server.\n\nCreates a new instance of AllDataPeerClient.\n\n### allDataPeerClient._put(options, key, event, callback)\n\n  * `options`: _Object_ HTTP options specific to this `_put`.\n    * `hostname`: _String_ HTTP hostname of the AllData peer.\n    * `method`: _String_ _(Default: as specified in constructor `options.method`)_ HTTP method.\n    * `path`: _String_ _(Default: as specified in constructor `options.path`)_ HTTP request path.\n    * `port`: _Integer_ _(Default: as specified in constructor `options.port`)_ HTTP port of remote server.\n  * `event`: _Object_ JavaScript object representing the event to store.\n  * `callback`: _Function_ `function (error) {}` Callback to call in case of success or failure.\n\nAttempts to store the `event` with specified `key` at AllData peer specified in `options.hostname` via HTTP. `callback` must be provided and it will be called with an `Error` instance if an error occurs or with no parameters otherwise.\n\n```javascript\nallDataPeerClient.put({hostname: \"first.peer.com\"}, key1, event1, function (error) {\n    if (error) console.log('put failed: ' + error.message); \n});\n```","versions":[{"number":"0.1.0","date":"2013-10-16T04:40:05.913Z"},{"number":"0.1.1","date":"2013-10-16T04:40:56.176Z"},{"number":"0.1.2","date":"2013-10-16T04:49:43.308Z"}],"created":"2013-10-16T04:40:05.326Z","modified":"2013-10-16T04:49:43.308Z","lastPublisher":{"name":"tristanls","email":"tristan.slominski@gmail.com"},"owners":[{"name":"tristanls","email":"tristan.slominski@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"alldata-peer-client-http","_npmUser":{"name":"tristanls","email":"tristan.slominski@gmail.com"},"_npmVersion":"1.3.11","_rev":"1-52d6c70d5dbc34e0968b8dc4811ad2eb","author":{"name":"Tristan Slominski","email":"tristan.slominski@gmail.com"},"bugs":{"url":"https://github.com/tristanls/alldata-peer-client-http/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"f8c1f5d2c5ea890705cfc4dc2b98fa51de2da023","tarball":"http://registry.npmjs.org/alldata-peer-client-http/-/alldata-peer-client-http-0.1.2.tgz"},"maintainers":[{"name":"tristanls","email":"tristan.slominski@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2013-10-16T04:49:43.308Z","created":"2013-10-16T04:40:05.326Z","0.1.0":"2013-10-16T04:40:05.913Z","0.1.1":"2013-10-16T04:40:56.176Z","0.1.2":"2013-10-16T04:49:43.308Z"}}}