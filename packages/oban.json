{"name":"oban","version":"0.2.0","description":"Highland stream http server","main":"index.js","scripts":{"test":"make test"},"repository":"https://github.com/quarterto/Oban","keywords":["stream","highland","http","server"],"license":"MIT","homepage":"https://github.com/quarterto/Oban","devDependencies":{"LiveScript":"^1.2.0","concat-stream":"^1.4.6","highland":"^1.25.4","karma-sinon-expect":"^0.1.4","mocha":"^1.20.1"},"dependencies":{"highland":"git://github.com/quarterto/highland#otherwise","peat":"^0.1.0"},"versions":[{"number":"0.0.0","date":"2014-07-01T21:42:01.703Z"},{"number":"0.1.0","date":"2014-07-12T11:54:48.106Z"},{"number":"0.2.0","date":"2014-07-12T18:04:41.197Z"}],"readme":"# Oban [![Build Status](https://travis-ci.org/quarterto/Oban.svg?branch=master)](https://travis-ci.org/quarterto/Oban)\n\nHighland stream HTTP server. Builds on top of [`http`](https://nodejs.org/api/http.html) and [`highland`](http://highlandjs.org).\n\n`npm install oban`\n\n## Example\n\n[Peat](https://github.com/quarterto/Peat) gives our response builders, or you can use [Dram](https://github.com/quarterto/Dram) for a more expressive style.\n\n### Simple response\n```javascript\nvar handle = require('oban');\nvar http   = require('http');\nvar resp   = require('peat');\nvar stream = require('highland')\n\nhttp.createServer(handle(function(req) {\n\treturn stream([\n\t\tresp.Status(200),\n\t\tresp.Header('X-Powered-By', 'Oban'),\n\t\t'hello world'\n\t]);\n})).listen(8000);\n```\n\n### Remote service, stream transformation\n```javascript\nvar request = require('request');\n\nhandle(function(req) {\n\treturn stream([\n\t\tresp.Status(200)\n\t]).concat(\n\t\tstream(request('lorem.example.com'))\n\t\t.map(function(s) { return s.toUpperCase() })\n\t);\n});\n```\n\n## API\nOban provides two functions to handle responses, `handle` and `handleWithError`. The former is simply the latter partially applied with a default error handler, which you'll want to override.\n\n### `handleWithError :: (Error → Result) → (Request → Result) → Request → Response → ()`\nTakes a Stream error handler and a Request handler which return Result streams. A Result is a Highland stream containing [Oban response](/quarterto/Oban-response) objects, Strings or Buffers. String and Buffer chunks are sent as body to the client.\n\n### `handle :: (Request → Result) → Request → Response → ()`\nPartially applied version of `handleWithError` with a default error handler. Good enough for development, but you'll want to override it if (God forbid) you put this in production. It's the main export of Oban to make it simple to switch:\n\n```javascript\nvar handle = require('oban');\n```\n\nto\n\n```javascript\nvar oban = require('oban');\nvar handle = oban.handleWithError(customErrorHandler);\n```\n\n#### Default error handler\nThe default error handler that `handle` uses simply sets the status code to 500 and prints the stack trace of the error to the client.\n\n## Licence\nMIT.\n","created":"2014-07-01T21:42:01.703Z","modified":"2014-07-12T18:04:41.197Z","lastPublisher":{"name":"quarterto","email":"mwrbrennan@gmail.com"},"owners":[{"name":"quarterto","email":"mwrbrennan@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"oban","_npmUser":{"name":"quarterto","email":"mwrbrennan@gmail.com"},"_npmVersion":"1.4.10","_rev":"1-6984e5d2ec527e6c136213ce73d99cb2","_shasum":"711ffd4609db1a68b54f90c7d75e7e1669f3fd20","author":{"name":"Matt Brennan","email":"mwrbrennan@gmail.com","url":"http://blog.153.io/"},"bugs":{"url":"https://github.com/quarterto/Oban/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"711ffd4609db1a68b54f90c7d75e7e1669f3fd20","tarball":"http://registry.npmjs.org/oban/-/oban-0.2.0.tgz"},"maintainers":[{"name":"quarterto","email":"mwrbrennan@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2014-07-12T18:04:41.197Z","created":"2014-07-01T21:42:01.703Z","0.0.0":"2014-07-01T21:42:01.703Z","0.1.0":"2014-07-12T11:54:48.106Z","0.2.0":"2014-07-12T18:04:41.197Z"}}}