{"name":"lite-dev-server","version":"2.2.5","description":"This is http file server for develpment. This server supports livereload function and proxy function for your api server.","main":"index.js","scripts":{"build":"gulp build","test":"ava tests","all":"npm run build && npm test","prepublish":"npm run all"},"repository":"https://github.com/shadowwzw/lite-dev-server","license":"MIT","homepage":"https://github.com/shadowwzw/lite-dev-server","dependencies":{"chalk":"^1.1.3","fs-promise":"^2.0.2","mime-types":"^2.1.15","ws":"^2.1.0","babel-plugin-transform-runtime":"^6.23.0"},"keywords":["server","dev","livereload","http","proxy","development","autoreload"],"devDependencies":{"ava":"^0.18.2","babel-eslint":"^7.2.1","babel-plugin-transform-async-to-generator":"^6.22.0","babel-plugin-transform-class-properties":"^6.23.0","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-preset-es2015":"^6.24.0","babel-preset-es2017":"^6.22.0","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-eslint":"^3.0.1","gulp-if":"^2.0.2","gulp-uglify":"^2.1.2","pump":"^1.0.2","request":"^2.81.0","request-promise":"^4.2.0"},"gitHead":"3f315e37e178b97ed972ee670965529ca7351169","versions":[{"number":"0.0.1","date":"2017-02-25T20:29:10.926Z"},{"number":"0.0.2","date":"2017-02-25T20:37:39.669Z"},{"number":"0.0.3","date":"2017-02-25T20:40:38.915Z"},{"number":"0.0.4","date":"2017-02-25T20:54:01.759Z"},{"number":"0.0.5","date":"2017-02-25T21:02:04.741Z"},{"number":"0.0.6","date":"2017-02-25T21:05:48.536Z"},{"number":"0.0.7","date":"2017-02-26T09:11:41.891Z"},{"number":"0.0.8","date":"2017-02-26T12:17:50.318Z"},{"number":"0.1.8","date":"2017-02-26T18:39:59.916Z"},{"number":"0.1.9","date":"2017-02-27T03:51:54.133Z"},{"number":"0.1.10","date":"2017-02-28T14:50:31.632Z"},{"number":"0.1.11","date":"2017-02-28T15:00:51.464Z"},{"number":"0.1.12","date":"2017-02-28T15:10:38.653Z"},{"number":"0.1.13","date":"2017-02-28T17:05:04.705Z"},{"number":"0.2.13","date":"2017-03-05T17:39:08.921Z"},{"number":"0.2.14","date":"2017-03-05T20:08:10.524Z"},{"number":"0.2.15","date":"2017-03-09T17:08:23.160Z"},{"number":"0.2.16","date":"2017-03-09T17:14:43.093Z"},{"number":"0.3.16","date":"2017-03-25T15:55:08.487Z"},{"number":"0.3.17","date":"2017-03-25T16:55:46.035Z"},{"number":"0.3.18","date":"2017-03-25T17:06:58.560Z"},{"number":"0.3.19","date":"2017-03-25T17:16:20.215Z"},{"number":"0.3.20","date":"2017-03-25T17:20:14.829Z"},{"number":"0.3.21","date":"2017-03-25T17:24:40.633Z"},{"number":"0.3.22","date":"2017-03-25T17:28:11.471Z"},{"number":"0.3.23","date":"2017-03-25T17:29:39.184Z"},{"number":"0.3.24","date":"2017-03-25T17:40:02.423Z"},{"number":"0.3.25","date":"2017-03-25T17:44:12.626Z"},{"number":"0.4.25","date":"2017-03-26T07:22:08.168Z"},{"number":"1.4.25","date":"2017-03-26T07:49:42.982Z"},{"number":"1.4.26","date":"2017-03-26T08:42:41.375Z"},{"number":"1.4.27","date":"2017-03-26T12:17:58.455Z"},{"number":"1.4.28","date":"2017-03-26T12:23:58.442Z"},{"number":"1.5.28","date":"2017-03-26T12:34:12.439Z"},{"number":"1.5.29","date":"2017-03-26T12:40:13.404Z"},{"number":"1.5.30","date":"2017-03-26T12:50:24.752Z"},{"number":"1.5.31","date":"2017-03-26T13:00:51.128Z"},{"number":"1.5.32","date":"2017-03-26T13:04:50.094Z"},{"number":"1.5.33","date":"2017-03-26T13:08:27.423Z"},{"number":"1.5.34","date":"2017-03-26T13:12:50.694Z"},{"number":"1.5.35","date":"2017-03-29T18:54:23.583Z"},{"number":"1.6.35","date":"2017-03-30T16:49:07.255Z"},{"number":"1.7.35","date":"2017-03-30T19:18:07.335Z"},{"number":"1.7.36","date":"2017-03-30T19:25:04.915Z"},{"number":"1.7.37","date":"2017-03-30T19:55:32.247Z"},{"number":"1.7.39","date":"2017-03-31T08:07:34.089Z"},{"number":"1.7.40","date":"2017-03-31T09:49:45.274Z"},{"number":"1.8.40","date":"2017-03-31T10:35:53.511Z"},{"number":"2.0.0","date":"2017-03-31T11:43:48.857Z"},{"number":"2.0.1","date":"2017-03-31T11:51:18.579Z"},{"number":"2.1.1","date":"2017-03-31T12:05:42.866Z"},{"number":"2.1.2","date":"2017-03-31T12:08:17.915Z"},{"number":"2.2.2","date":"2017-04-01T06:09:10.046Z"},{"number":"2.2.3","date":"2017-04-01T06:29:54.989Z"},{"number":"2.2.4","date":"2017-04-04T13:45:28.434Z"},{"number":"2.2.5","date":"2017-04-04T18:11:30.379Z"}],"readme":"# lite-dev-server\nThis is http file server for develpment. This server supports livereload function and proxy function for your api server.\n\n[![Latest Stable Version](https://img.shields.io/npm/v/lite-dev-server.svg)](https://www.npmjs.com/package/lite-dev-server)\n[![License](https://img.shields.io/npm/l/lite-dev-server.svg)](https://www.npmjs.com/package/lite-dev-server)\n\n----------\n\n## [Video tutorial](https://youtu.be/x2N2jSCACzM)\n\nPerhaps you may be interested: [webpack-with-lite-dev-server-babel-koa-react](https://github.com/shadowwzw/webpack-with-lite-dev-server-babel-koa-react)\n\n## **Installation**\n\n```bash\n$ npm install lite-dev-server --save-dev\n```\nor\n```bash\n$ yarn add lite-dev-server -D\n```\n----------\n## **Usage (default port: 3000)**\n\n```js\nconst liteDevServer = require(\"lite-dev-server\");\nliteDevServer( { folder: \"public\", watchFolders: [\"public\"]} );\n// http://localhost:3000 response: index.html or index.htm from public folder.\n```\n----------\n\nAttention: If the html document does not contain a head tag, then liveReload will not work.\n\n## **Usage (on 3333 port)**\n\n```js\nconst liteDevServer = require(\"lite-dev-server\");\nliteDevServer( { folder: \"public\", watchFolders: [\"public\"], listen: 3333,} ); \n// http://localhost:3333 response: index.html or index.htm from public folder.\n```\n----------\n\n## **Usage (random port)**\n<p>If you want to OS set random port you can set listen option on 0.</p>\n<a href=\"https://nodejs.org/dist/latest-v6.x/docs/api/http.html#http_server_listen_port_hostname_backlog_callback\">More you can find here</a>\n\n```js\nconst liteDevServer = require(\"lite-dev-server\");\nconst server = liteDevServer( { folder: \"public\", watchFolders: [\"public\"], listen: 0,} ); \nconsole.log(server.address().port) // your port\n```\n----------\n\n## **Usage with proxy function for Express api server**\n\n```js\nconst liteDevServer = require(\"lite-dev-server\");\nliteDevServer({\n    folder: \"public\",\n    watchFolders: [\"public\", \"src\"],\n    proxy: [\n        { path: /\\/api/, host: \"localhost\", port: \"8888\" },\n        { path: /\\/api2/, host: \"localhost\", port: \"8888\" }\n    ]\n});\n// http://localhost:3000 response: index.html or index.htm from public folder.\n// http://localhost:3000/api/1 response: \"Hello World!!\" from express\n// http://localhost:3000/api2/person/1 response: \"person1\" from express\n\nconst express = require('express');\nconst app = express();\n\napp.get('/api/1', function (req, res) {\n    res.send('Hello World!!')\n});\n\napp.get('/api2/person/1', function (req, res) {\n    res.send('person1')\n});\napp.listen(8888);\n```\n----------\n\n## **Api**\n\n### **create liteDevServer**\n```js\nconst liteDevServer = require(\"lite-dev-server\");\nliteDevServer({\n    folder: \"public\",\n    watchFolders: [\"public\", \"src\"],\n    listen: 3000,\n    webSocketPort: 8080,\n    page404: null,\n    liveReload: true,\n    reloadDelay: 200,\n    autoInjectClientJS: true,\n    historyApiFallback: false,\n    reloadDelayOnClient: 1000,\n    giveDefaultPage: true,\n    defaultPageFirst: \"index.html\",\n    defaultPageSecond: \"index.htm\",\n    serverName: \"liteDevServer\",\n    pathRewrite: {\n      pattern: /\\/.+\\/(\\.*)/g,\n      replacement: \"/$1\",\n    },\n    proxy: [\n        { path: /\\/api/, host: \"localhost\", port: \"8888\" },\n        { path: /\\/api2/, host: \"localhost\", port: \"8888\" },\n        { path: /\\/gavrilov\\/project/, host: \"localhost\", port: \"3000\", pathRewrite: {\n            pattern: /\\/gavrilov\\/project/,\n            replacement: \"\",\n        }}\n    ]\n});\n```\n#### **Arguments**:\n\n* options (Object type):*\n\n  * folder (String) (default value: \"public\"): Folder for static files.\n\n  * watchFolders (Array of Strings) (default value: [\"public\"]): Folders for watching (for liveReload).\n\n  * proxy (Array of Objects) (default value: []): Proxy for API (Express, Koa, etc.).\n  \n  * listen (Integer) (default value: 3000): Port for development server (serve static files).\n  \n  * webSocketPort (Integer) (default value: 8080): For liveReload.\n  \n  * page404 (String | Null) (default value: null): Custom page.\n  \n  * liveReload (Boolean) (default value: true).\n  \n  * reloadDelayOnClient (Integer) (default value: 100): reload delay for liveReload (on client) (in milliseconds).\n  \n  * liveReloadDelay (Integer) (default value: 0): Delay before the page is reloaded (on server) (in milliseconds).\n  \n  * autoInjectClientJS (Boolean) (default value: true): Auto inject javascript in html documents (for liveReload).\n  \n  * historyApiFallback (Boolean) (default value: false): If you are using the HTML5 history API you probably need to serve your index.html in place of 404 responses, which can be done by setting historyApiFallback: true.\n\n  * giveDefaultPage (Boolean) (default value: true)\n\n  * defaultPageFirst (String) (default value: \"index.html\")\n\n  * defaultPageSecond (String) (default value: \"index.htm\")\n  \n  * serverName (String) (default value: \"liteDevServer\")\n  \n  * pathRewrite (Object | Array of Objects | Null) (default value: null)\n\n## **License**\n\nMIT License\n\nCopyright (c) 2017 Gavrilov Ruslan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","starsCount":1,"created":"2017-02-25T20:29:10.926Z","modified":"2017-04-04T18:11:30.379Z","lastPublisher":{"name":"shadowwzw","email":"miditab@yandex.ru"},"owners":[{"name":"shadowwzw","email":"miditab@yandex.ru"}],"other":{"_attachments":{},"_from":".","_id":"lite-dev-server","_nodeVersion":"7.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/lite-dev-server-2.2.5.tgz_1491329489724_0.5031045381911099"},"_npmUser":{"name":"shadowwzw","email":"miditab@yandex.ru"},"_npmVersion":"4.1.2","_rev":"57-22a25909ba6121fda11c46bd9609dc27","_shasum":"ed1cf15d317906d392dd1a223b78e8cb6dd763c6","author":{"name":"Gavrilov Ruslan shadowwzw","email":"miditab@yandex.ru"},"bugs":{"url":"https://github.com/shadowwzw/lite-dev-server/issues"},"directories":{},"dist-tags":{"latest":"2.2.5"},"dist":{"shasum":"ed1cf15d317906d392dd1a223b78e8cb6dd763c6","tarball":"https://registry.npmjs.org/lite-dev-server/-/lite-dev-server-2.2.5.tgz"},"maintainers":[{"name":"shadowwzw","email":"miditab@yandex.ru"}],"readmeFilename":"README.md","time":{"modified":"2017-04-04T18:11:30.379Z","created":"2017-02-25T20:29:10.926Z","0.0.1":"2017-02-25T20:29:10.926Z","0.0.2":"2017-02-25T20:37:39.669Z","0.0.3":"2017-02-25T20:40:38.915Z","0.0.4":"2017-02-25T20:54:01.759Z","0.0.5":"2017-02-25T21:02:04.741Z","0.0.6":"2017-02-25T21:05:48.536Z","0.0.7":"2017-02-26T09:11:41.891Z","0.0.8":"2017-02-26T12:17:50.318Z","0.1.8":"2017-02-26T18:39:59.916Z","0.1.9":"2017-02-27T03:51:54.133Z","0.1.10":"2017-02-28T14:50:31.632Z","0.1.11":"2017-02-28T15:00:51.464Z","0.1.12":"2017-02-28T15:10:38.653Z","0.1.13":"2017-02-28T17:05:04.705Z","0.2.13":"2017-03-05T17:39:08.921Z","0.2.14":"2017-03-05T20:08:10.524Z","0.2.15":"2017-03-09T17:08:23.160Z","0.2.16":"2017-03-09T17:14:43.093Z","0.3.16":"2017-03-25T15:55:08.487Z","0.3.17":"2017-03-25T16:55:46.035Z","0.3.18":"2017-03-25T17:06:58.560Z","0.3.19":"2017-03-25T17:16:20.215Z","0.3.20":"2017-03-25T17:20:14.829Z","0.3.21":"2017-03-25T17:24:40.633Z","0.3.22":"2017-03-25T17:28:11.471Z","0.3.23":"2017-03-25T17:29:39.184Z","0.3.24":"2017-03-25T17:40:02.423Z","0.3.25":"2017-03-25T17:44:12.626Z","0.4.25":"2017-03-26T07:22:08.168Z","1.4.25":"2017-03-26T07:49:42.982Z","1.4.26":"2017-03-26T08:42:41.375Z","1.4.27":"2017-03-26T12:17:58.455Z","1.4.28":"2017-03-26T12:23:58.442Z","1.5.28":"2017-03-26T12:34:12.439Z","1.5.29":"2017-03-26T12:40:13.404Z","1.5.30":"2017-03-26T12:50:24.752Z","1.5.31":"2017-03-26T13:00:51.128Z","1.5.32":"2017-03-26T13:04:50.094Z","1.5.33":"2017-03-26T13:08:27.423Z","1.5.34":"2017-03-26T13:12:50.694Z","1.5.35":"2017-03-29T18:54:23.583Z","1.6.35":"2017-03-30T16:49:07.255Z","1.7.35":"2017-03-30T19:18:07.335Z","1.7.36":"2017-03-30T19:25:04.915Z","1.7.37":"2017-03-30T19:55:32.247Z","1.7.39":"2017-03-31T08:07:34.089Z","1.7.40":"2017-03-31T09:49:45.274Z","1.8.40":"2017-03-31T10:35:53.511Z","2.0.0":"2017-03-31T11:43:48.857Z","2.0.1":"2017-03-31T11:51:18.579Z","2.1.1":"2017-03-31T12:05:42.866Z","2.1.2":"2017-03-31T12:08:17.915Z","2.2.2":"2017-04-01T06:09:10.046Z","2.2.3":"2017-04-01T06:29:54.989Z","2.2.4":"2017-04-04T13:45:28.434Z","2.2.5":"2017-04-04T18:11:30.379Z"},"users":{"shadowwzw":true}}}