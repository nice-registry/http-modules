{"name":"j-resource","version":"1.2.0","description":"http resource","main":"index.js","scripts":{"test":"mocha test/ --recursive --reporter spec","cover":"istanbul cover -- _mocha test/ --recursive --reporter spec"},"repository":"https://github.com/jangot/j-resource","keywords":["http-client","server","rest","resource","es6"],"license":"ISC","devDependencies":{"chai":"^3.5.0","chai-as-promised":"^5.2.0","mockery":"^1.4.0","sinon":"^1.17.3"},"dependencies":{"lodash":"*","request":"^2.69.0"},"gitHead":"e30ed01c55dc7f5a809f297330e5fb497d2cb780","homepage":"https://github.com/jangot/j-resource#readme","versions":[{"number":"0.0.1","date":"2016-02-16T13:13:02.560Z"},{"number":"0.0.2","date":"2016-02-16T14:03:10.528Z"},{"number":"0.0.3","date":"2016-02-17T17:48:29.199Z"},{"number":"0.0.4","date":"2016-02-17T18:06:32.871Z"},{"number":"0.0.5","date":"2016-02-17T18:13:03.981Z"},{"number":"0.1.0","date":"2016-02-17T18:26:43.953Z"},{"number":"0.1.1","date":"2016-02-18T12:09:33.489Z"},{"number":"0.1.2","date":"2016-02-18T13:08:58.878Z"},{"number":"0.1.3","date":"2016-02-18T14:27:33.779Z"},{"number":"0.1.4","date":"2016-02-18T14:37:25.353Z"},{"number":"0.2.0","date":"2016-02-19T10:54:44.672Z"},{"number":"0.2.1","date":"2016-02-19T11:44:12.764Z"},{"number":"0.2.2","date":"2016-02-19T18:17:49.853Z"},{"number":"0.2.3","date":"2016-02-19T18:37:59.496Z"},{"number":"0.2.4","date":"2016-02-20T08:45:12.524Z"},{"number":"0.2.7","date":"2016-02-20T09:44:37.034Z"},{"number":"0.2.8","date":"2016-02-20T09:47:11.693Z"},{"number":"0.2.9","date":"2016-02-20T09:49:26.702Z"},{"number":"0.2.10","date":"2016-02-20T09:56:04.564Z"},{"number":"0.2.11","date":"2016-02-24T14:39:23.475Z"},{"number":"0.2.12","date":"2016-02-25T09:58:31.994Z"},{"number":"0.2.13","date":"2016-02-25T10:58:23.346Z"},{"number":"0.2.14","date":"2016-02-25T12:40:06.369Z"},{"number":"0.2.15","date":"2016-02-25T13:17:27.094Z"},{"number":"0.2.16","date":"2016-02-25T13:23:32.944Z"},{"number":"1.0.0","date":"2016-02-26T10:30:42.681Z"},{"number":"1.0.1","date":"2016-02-29T15:55:28.637Z"},{"number":"1.0.2","date":"2016-02-29T16:22:08.547Z"},{"number":"1.0.3","date":"2016-02-29T16:24:56.519Z"},{"number":"1.0.4","date":"2016-03-01T13:28:44.101Z"},{"number":"1.2.0","date":"2016-03-31T14:03:36.742Z"}],"readme":"j-resource\n==========\n\nIt is a library like ngResource form angular.js\n\n# Use\n```js\nvar Resources = require('j-resource');\n\nvar config = {\n\n    // it is a config for request lib\n    query: {\n        uri: {\n            hostname: 'my.domain.com',\n            path: '/user',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'GET'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .query()\n    .then((result) => {\n        console.log(result);\n    });\n```\n\n# Extend behavior\n```js\nvar Resources = require('j-resource');\n\nResources.addInterceptor({\n    request: function(config) {\n        config = Object.assign({}, config);\n        var url = config.url;\n        delete config.url;\n\n        config.uri = {\n            hostname: 'my.domain.com',\n            path: url,\n            port: '80',\n            protocol: 'http:'\n        };\n\n        return config;\n    }\n});\n\nvar config = {\n\n    // it is a config for request lib\n    query: {\n        url: '/user',\n        method: 'GET'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .query()\n    .then((result) => {\n        console.log(result);\n    })\n    .catch((e) => {\n        console.log(e);\n    });\n```\n\n# Check response status\n```js\nvar Resources = require('j-resource');\n\nResources.addInterceptor({\n    response: function(result) {\n            switch (result.response.statusCode) {\n                case (200):\n                case (201):\n                case (202):\n                case (203):\n                case (204):\n                    return result;\n                    break;\n                default:\n                    throw result;\n            }\n        }\n});\n\nvar config = {\n\n    // it is a config for request lib\n    query: {\n        uri: {\n            hostname: 'my.domain.com',\n            path: '/user',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'GET'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .query()\n    .then((result) => {\n        console.log(result);\n    })\n    .catch((e) => {\n        console.log(e);\n    });\n```\n\n\n# Errors\n```js\nvar Resources = require('j-resource');\n\nResources.addInterceptor({\n    responseError: function(error) {\n        console.log(error);\n\n        var defaultData = {\n            string: 'foo'\n        };\n\n        return defaultData;\n    }\n});\n\nvar config = {\n\n    // it is a config for request lib\n    query: {\n        uri: {\n            hostname: 'bad.domain.com',\n            path: '/user',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'GET'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .query()\n    .then((result) => {\n        console.log(result);\n    })\n    .catch((e) => {\n        console.log(e);\n    });\n```\n\n# Sending data\n```js\nvar Resources = require('j-resource');\n\nvar config = {\n\n    // it is a config for request lib\n    add: {\n        uri: {\n            hostname: 'my.domain.com',\n            path: '/user',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'PUT'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .add({name: 'Matvei'})\n    .then((result) => {\n        console.log(result)\n    })\n```\n\n# Uri params\n```js\nvar Resources = require('j-resource');\n\nResources.addInterceptor('paramsToUri');\n\nvar config = {\n\n    // it is a config for request lib\n    getItem: {\n        uri: {\n            hostname: 'localhost',\n            path: '/user/:name',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'get'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .getItem({name: 'Matvei'})\n    .then((result) => {\n        console.log(result)\n    })\n```\n\n# Interceptors for one resource\n```js\nvar Resources = require('j-resource');\n\nResources.addInterceptor('paramsToUri');\n\n\nvar right = new Resources({\n    check: {\n        uri: {\n            hostname: 'right.domain.com',\n            path: '/:resource/:action',\n            port: '80',\n            protocol: 'http:'\n        }\n    }\n});\n\nvar config = {\n\n    // it is a config for request lib\n    add: {\n        uri: {\n            hostname: 'my.domain.com',\n            path: '/user/:name',\n            port: '80',\n            protocol: 'http:'\n        },\n        method: 'get',\n        interceptors: [{\n            request: function(config) {\n                return right\n                    .check({\n                        resource: 'user',\n                        action: 'get'\n                    })\n                    .then(() => {\n                        return config;\n                    });\n            }\n        }]\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .add({name: 'Matvei'})\n    .then((result) => {\n        console.log(result)\n    })\n    .catch(() => {\n        console.log(e);\n    });\n```\n\n# Change transport\nBy default `j-resourse` uses npm module `request` but you can change it.\n \n```js\nvar Resources = require('j-resource');\nvar myHttpLib = require('my-http-lib');\n\nsetTransport.setTransport(function(config) {\n    return new Promise(function(resolve, reject) {\n        if (config.type == 'save') {\n            myHttpLib.post('http://mydomian.com', config.params, cb);\n        } else if (config.type == 'find') {\n            myHttpLib.get('http://mydomian.com', config.params, cb);\n        } else {\n            cb('There is no type');\n        }\n        \n        function cb(err, result) {\n            if (err) {\n                reject(err);\n            } else {\n                resolve(result);\n            }\n        }\n    });\n});\n\nvar config = {\n    addMyModel: {\n        type: 'save'\n    },\n    getMyModel: {\n        type: 'faind'\n    }\n};\n\nvar user = new Resources(config);\n\nuser\n    .addMyModel()\n    .then((result) => {\n        console.log(result);\n    });\n```\n","starsCount":4,"created":"2016-02-16T13:13:02.560Z","modified":"2016-03-31T14:03:36.742Z","lastPublisher":{"name":"jangot","email":"pulin.pavel@gmail.com"},"owners":[{"name":"jangot","email":"pulin.pavel@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"j-resource","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/j-resource-1.2.0.tgz_1459433014325_0.4566563689149916"},"_npmUser":{"name":"jangot","email":"pulin.pavel@gmail.com"},"_npmVersion":"3.3.6","_rev":"1-aed1f4d769fdbb53574e0e1f23160d23","_shasum":"89ab3c69fd0f9e867ac071d7d3b9ba9522bf6319","author":{"name":"jangot"},"bugs":{"url":"https://github.com/jangot/j-resource/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"89ab3c69fd0f9e867ac071d7d3b9ba9522bf6319","tarball":"http://registry.npmjs.org/j-resource/-/j-resource-1.2.0.tgz"},"maintainers":[{"name":"jangot","email":"pulin.pavel@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-31T14:03:36.742Z","created":"2016-02-16T13:13:02.560Z","0.0.1":"2016-02-16T13:13:02.560Z","0.0.2":"2016-02-16T14:03:10.528Z","0.0.3":"2016-02-17T17:48:29.199Z","0.0.4":"2016-02-17T18:06:32.871Z","0.0.5":"2016-02-17T18:13:03.981Z","0.1.0":"2016-02-17T18:26:43.953Z","0.1.1":"2016-02-18T12:09:33.489Z","0.1.2":"2016-02-18T13:08:58.878Z","0.1.3":"2016-02-18T14:27:33.779Z","0.1.4":"2016-02-18T14:37:25.353Z","0.2.0":"2016-02-19T10:54:44.672Z","0.2.1":"2016-02-19T11:44:12.764Z","0.2.2":"2016-02-19T18:17:49.853Z","0.2.3":"2016-02-19T18:37:59.496Z","0.2.4":"2016-02-20T08:45:12.524Z","0.2.7":"2016-02-20T09:44:37.034Z","0.2.8":"2016-02-20T09:47:11.693Z","0.2.9":"2016-02-20T09:49:26.702Z","0.2.10":"2016-02-20T09:56:04.564Z","0.2.11":"2016-02-24T14:39:23.475Z","0.2.12":"2016-02-25T09:58:31.994Z","0.2.13":"2016-02-25T10:58:23.346Z","0.2.14":"2016-02-25T12:40:06.369Z","0.2.15":"2016-02-25T13:17:27.094Z","0.2.16":"2016-02-25T13:23:32.944Z","1.0.0":"2016-02-26T10:30:42.681Z","1.0.1":"2016-02-29T15:55:28.637Z","1.0.2":"2016-02-29T16:22:08.547Z","1.0.3":"2016-02-29T16:24:56.519Z","1.0.4":"2016-03-01T13:28:44.101Z","1.2.0":"2016-03-31T14:03:36.742Z"},"users":{"vigo5190":true,"jangot":true,"abuddington":true,"nilz3ro":true}}}