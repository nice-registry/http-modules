{"name":"service-call","version":"0.7.1","description":"DNS service discovery and HTTP request helper.","main":"src/index.js","scripts":{"coverage":"./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec --timeout 10000 ./test/*","lint":"eslint src test","test-mocha":"mocha -t 10000 test","test-travis":"npm run lint && npm run coverage","test":"npm run lint && npm run test-mocha"},"repository":{"type":"git","url":"github.com/pricewaiter/service-call"},"engines":{"node":">= 4.0.0"},"keywords":["service","discovery","dns","consul","http","json","microservice"],"license":"MIT","devDependencies":{"chai":"^4.0.2","coveralls":"^2.11.16","eslint":"^3.16.1","eslint-config-airbnb-base":"^11.1.0","eslint-plugin-import":"^2.2.0","istanbul":"^0.4.5","mocha":"^3.2.0"},"dependencies":{"debug":"^2.6.1","request":"^2.79.0","retry-promise":"^1.0.0"},"gitHead":"923cbf88fa932bf74e90b64dc902309402763eac","versions":[{"number":"0.6.0","date":"2016-06-27T22:53:24.898Z"},{"number":"0.6.1","date":"2016-06-28T22:21:09.234Z"},{"number":"0.6.2","date":"2016-07-07T22:21:29.528Z"},{"number":"0.7.1","date":"2017-06-22T21:01:17.511Z"}],"readme":"# Service Call\n\n[![npm package](https://nodei.co/npm/service-call.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/service-call/)\n\n[![Build status](https://img.shields.io/travis/pricewaiter/service-call/master.svg?style=flat-square)](https://travis-ci.org/pricewaiter/service-call)\n[![Coverage](https://img.shields.io/coveralls/pricewaiter/service-call.svg?style=flat-square)](https://coveralls.io/r/pricewaiter/service-call)\n[![Dependency Status](https://img.shields.io/david/pricewaiter/service-call.svg?style=flat-square)](https://david-dm.org/pricewaiter/service-call)\n\nPerform service lookups via DNS queries and make HTTP requests to those services. Designed for [consul]() and similar service registries.\n\nFor example you make have a service registered with consul named `stats` and available with the DNS name `service-stats.service.consul`.  Your consul DNS service should return the host and point of one or more services available in response to a `SRV` request.\n\n## GET Example:\n\n```javascript\n\nconst { serviceCall } = require('service-call');\n\nconst listProducts = serviceCall(process.env.PRODUCTS_DNS_NAME).get('/v1/products');\n\n// store_id will be used as a query string in the GET request\nconst options = {\n    query: {\n        store_id: 42,\n    },\n};\n\nlistProducts({}, options)\n    .then(({ res, body }) => console.log('Products for store 42:', body.items))\n    .catch(err => console.log('Service call failed!', err.message));\n```\n\n## CHAOS!\n\nIn development, you can introduce a controlled amount of failures & retries.\nSet the env `process.env.SERVICE_CALL_CHAOS_PERCENT` to a value between 0 and 1. Ex: `0.30` means 30% failure rate.\n\n## Retry options\n\nUsing the [retry-promise](https://github.com/olalonde/retry-promise) package, any DNS or HTTP failures will be retried.  The following retry options are available:\n\n```\n{\n    max: 10,\n    backoff: 1000,\n}\n```\n\n## POST example with more retrying\n\n```javascript\n\nconst { serviceCal }l = require('service-call');\n\nconst retryOptions = { max: 6, backoff: 500 };\nconst createProduct = serviceCall(process.env.PRODUCTS_DNS_NAME, retryOptions).post('/v1/products');\n\nconst payload = {\n    name: 'Example Name',\n    brand: 'Example Brand',\n};\n\ncreateProduct(payload)\n    .then(({ res, body }) => console.log('Product created!', body.id))\n    .catch(err => console.log('Service call failed!', err.message));\n```\n","created":"2016-06-27T22:53:24.898Z","modified":"2017-06-22T21:01:17.511Z","lastPublisher":{"name":"mikejestes","email":"mikejestes@gmail.com"},"owners":[{"name":"mikejestes","email":"mikejestes@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"service-call","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/service-call-0.7.1.tgz_1498165277319_0.20343408547341824"},"_npmUser":{"name":"mikejestes","email":"mikejestes@gmail.com"},"_npmVersion":"3.10.10","_rev":"2-458933e6c191da373cbbbdd527500e77","_shasum":"25c4941b083acdf421669578114af629b0a4ec3c","author":{"name":"PriceWaiter"},"directories":{},"dist-tags":{"latest":"0.7.1"},"dist":{"shasum":"25c4941b083acdf421669578114af629b0a4ec3c","tarball":"https://registry.npmjs.org/service-call/-/service-call-0.7.1.tgz"},"maintainers":[{"name":"mikejestes","email":"mikejestes@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-22T21:01:17.511Z","created":"2016-06-27T22:53:24.898Z","0.6.0":"2016-06-27T22:53:24.898Z","0.6.1":"2016-06-28T22:21:09.234Z","0.6.2":"2016-07-07T22:21:29.528Z","0.7.1":"2017-06-22T21:01:17.511Z"}}}