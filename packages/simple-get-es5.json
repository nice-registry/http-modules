{"name":"simple-get-es5","description":"Simplest way to make http get requests. Supports HTTPS, redirects, gzip/deflate, streams in < 100 lines.","version":"2.3.0","browser":{"unzip-response":false},"dependencies":{"once":"^1.3.1","simple-concat":"^1.0.0","unzip-response":"^2.0.1"},"devDependencies":{"self-signed-https":"^1.0.5","standard":"*","string-to-stream":"^1.0.0","tape":"^4.0.0"},"homepage":"https://github.com/feross/simple-get","keywords":["request","http","GET","get request","http.get","redirects","follow redirects","gzip","deflate","https","http-https","stream","simple request","simple get"],"license":"MIT","main":"index.js","repository":"https://github.com/feross/simple-get","scripts":{"test":"standard && tape test/*.js"},"gitHead":"b546696d52e81a9531dc1d25a71f36590a04bb9f","versions":[{"number":"2.3.0","date":"2016-11-28T20:14:05.570Z"}],"readme":"# simple-get-es5 [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url]\n\n[travis-image]: https://img.shields.io/travis/feross/simple-get/master.svg\n[travis-url]: https://travis-ci.org/feross/simple-get\n[npm-image]: https://img.shields.io/npm/v/simple-get.svg\n[npm-url]: https://npmjs.org/package/simple-get\n[downloads-image]: https://img.shields.io/npm/dm/simple-get.svg\n[downloads-url]: https://npmjs.org/package/simple-get\n\n### Simplest way to make http get requests, with an ES5 polyfill.\n\n## features\n\nThis module is designed to be the lightest possible wrapper on top of node.js `http`, but supporting:\n\n- follows redirects\n- automatically handles gzip/deflate responses\n- supports HTTPS\n- supports convenience `url` key so there's no need to use `url.parse` on the url when specifying options\n\nAll this in < 100 lines of code.\n\n## install\n\n```\nnpm install simple-get\n```\n\n## usage\n\nNote, all these examples also work in the browser with [browserify](http://browserify.org/).\n\n### simple GET request\n\nDoesn't get easier than this:\n\n```js\nvar get = require('simple-get')\n\nget('http://example.com', function (err, res) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\n### even simpler GET request\n\nIf you just want the data, and don't want to deal with streams:\n\n```js\nvar get = require('simple-get')\n\nget.concat('http://example.com', function (err, res, data) {\n  if (err) throw err\n  console.log(res.statusCode) // 200\n  console.log(data) // Buffer('this is the server response')\n})\n```\n\n### POST, PUT, PATCH, HEAD, DELETE support\n\nFor `POST`, call `get.post` or use option `{ method: 'POST' }`.\n\n```js\nvar get = require('simple-get')\n\nvar opts = {\n  url: 'http://example.com',\n  body: 'this is the POST body'\n}\nget.post(opts, function (err, res) {\n  if (err) throw err\n  res.pipe(process.stdout) // `res` is a stream\n})\n```\n\nA more complex example:\n\n```js\nvar get = require('simple-get')\n\nget({\n  url: 'http://example.com',\n  method: 'POST',\n  body: 'this is the POST body',\n\n  // simple-get accepts all options that node.js `http` accepts\n  // See: http://nodejs.org/api/http.html#http_http_request_options_callback\n  headers: {\n    'user-agent': 'my cool app'\n  }\n}, function (err, res) {\n  if (err) throw err\n\n  // All properties/methods from http.IncomingResponse are available,\n  // even if a gunzip/inflate transform stream was returned.\n  // See: http://nodejs.org/api/http.html#http_http_incomingmessage\n  res.setTimeout(10000)\n  console.log(res.headers)\n\n  res.on('data', function (chunk) {\n    // `chunk` is the decoded response, after it's been gunzipped or inflated\n    // (if applicable)\n    console.log('got a chunk of the response: ' + chunk)\n  }))\n\n})\n```\n\n### JSON\n\nYou can serialize/deserialize request and response with JSON:\n\n```js\nvar get = require('simple-get')\n\nvar opts = {\n  method: 'POST',\n  url: 'http://example.com',\n  body: {\n    key: 'value'\n  },\n  json: true\n}\nget.concat(opts, function (err, res, data) {\n  if (err) throw err\n  console.log(data.key) // `data` is an object\n})\n```\n\n### Forms\n\nYou can send `application/x-www-form-urlencoded` form data:\n\n```js\nvar get = require('simple-get')\n\nvar opts = {\n  method: 'POST',\n  url: 'http://example.com',\n  form: {\n    key: 'value'\n  }\n}\nget.concat(opts, function (err, res, data) {})\n```\n\n## license\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org).\n","created":"2016-11-28T20:14:05.570Z","modified":"2016-11-28T20:14:05.570Z","lastPublisher":{"name":"miserlou","email":"miserlou@gmail.com"},"owners":[{"name":"miserlou","email":"miserlou@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"simple-get-es5","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/simple-get-es5-2.3.0.tgz_1480364043431_0.5845693063456565"},"_npmUser":{"name":"miserlou","email":"miserlou@gmail.com"},"_npmVersion":"3.10.3","_rev":"1-f4db7838c112c4af787dbc8cefd0ef67","_shasum":"f77266389482288d42ed94bdf70294ac19b631bc","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/simple-get/issues"},"directories":{},"dist-tags":{"latest":"2.3.0"},"dist":{"shasum":"f77266389482288d42ed94bdf70294ac19b631bc","tarball":"http://registry.npmjs.org/simple-get-es5/-/simple-get-es5-2.3.0.tgz"},"maintainers":[{"name":"miserlou","email":"miserlou@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-28T20:14:05.570Z","created":"2016-11-28T20:14:05.570Z","2.3.0":"2016-11-28T20:14:05.570Z"}}}