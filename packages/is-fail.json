{"name":"is-fail","version":"0.1.1","description":"Tiny package implementing multiple strategies to verify if an HTTP request was failed","repository":"https://github.com/h2non/is-fail","license":"MIT","keywords":["fail","checker","check","http","status","retry","backoff","failed","error"],"engines":{"node":">= 0.8"},"scripts":{"test":"mocha --reporter spec --ui tdd"},"devDependencies":{"chai":"^3.2.0","mocha":"^2.2.5"},"gitHead":"8fb9a62cddbdd5ac117723c502f049e5ed98827d","homepage":"https://github.com/h2non/is-fail#readme","versions":[{"number":"0.1.0","date":"2015-07-20T16:23:43.970Z"},{"number":"0.1.1","date":"2015-07-21T22:02:46.633Z"}],"readme":"# is-fail [![Build Status](https://api.travis-ci.org/h2non/is-fail.svg?branch=master&style=flat)](https://travis-ci.org/h2non/is-fail) [![NPM](https://img.shields.io/npm/v/is-fail.svg)](https://www.npmjs.org/package/is-fail)\n\nTiny and dependency-free [node.js](http://nodejs.org)/[io.js](http://iojs.org) package implementing multiple strategies to verify if an HTTP request was failed, checking both error and HTTP response code.\n\nUseful to combine as part of a retry/backoff logic. Also allows you to plug in additional strategies.\n\n## Installation\n\n```\nnpm install is-fail --save\n```\n\n## Usage\n\nSimple usage as part of a retry mechanism\n```js\nconst http = require('http')\nconst isFail = require('is-fail')()\n\nfunction doRequest() {\n  http.request('http://inconsistent-server', function (res) {\n    if (isFail(null, res)) {\n      return doRequest() // retry!\n    }\n    console.error('Response received')\n  })\n  .on('error', function (err) {\n    if (isFail(err)) {\n      return doRequest() // retry!\n    }\n    console.error('The request failed')\n  })\n}\n\ndoRequest()\n```\n\nPlug in additional strategies\n\n```js\nconst http = require('http')\nconst isFail = require('is-fail')()\n\nfunction notFoundStrategy(err, res) {\n  return res.statusCode === 404\n}\n\nconst checkFail = isFail([ notFoundStrategy ])\n\nhttp.request('http://inconsistent-server', function (res) {\n  if (checkFail(null, res)) {\n    console.log('Failed request!')\n  }\n})\n```\n\n## API\n\n#### isFail([ strategies ]) `=>` Function(err, res) `=>` Boolean\n\n#### isFail.strategies `=` Array[ Strategy ]\n\n#### isFail.check(strategies, err, res) `=>` Boolean\n\n#### isFail.errors `=` Array[ ErrorStrategy ]\n\n#### isFail.status `=` Array[ StatusStrategy ]\n\n## License\n\nMIT - Tomas Aparicio\n","created":"2015-07-20T16:23:43.970Z","modified":"2015-07-21T22:02:46.633Z","lastPublisher":{"name":"h2non","email":"tomas@aparicio.me"},"owners":[{"name":"h2non","email":"tomas@aparicio.me"}],"other":{"_attachments":{},"_from":".","_id":"is-fail","_nodeVersion":"0.12.7","_npmUser":{"name":"h2non","email":"tomas@aparicio.me"},"_npmVersion":"2.11.3","_rev":"1-e9ae38b30860cedd9d6b03e3e09d9c8d","_shasum":"8d4127bd44d2e5fb239de154eeac7cc8f5f15268","author":{"name":"Tomas Aparicio"},"bugs":{"url":"https://github.com/h2non/is-fail/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"8d4127bd44d2e5fb239de154eeac7cc8f5f15268","tarball":"http://registry.npmjs.org/is-fail/-/is-fail-0.1.1.tgz"},"maintainers":[{"name":"h2non","email":"tomas@aparicio.me"}],"readmeFilename":"README.md","time":{"modified":"2015-07-21T22:02:46.633Z","created":"2015-07-20T16:23:43.970Z","0.1.0":"2015-07-20T16:23:43.970Z","0.1.1":"2015-07-21T22:02:46.633Z"}}}