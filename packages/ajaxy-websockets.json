{"name":"ajaxy-websockets","version":"0.0.1","description":"Enables you to route requests through websockets just like you would with HTTP or Express modules","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/haggy/Ajaxy-Websockets","keywords":["ajaxy-websockets","websockets","ajax"],"license":"MIT","homepage":"https://github.com/haggy/Ajaxy-Websockets","dependencies":{"path-to-regexp":"1.x.x"},"gitHead":"7b5fcb5c2e920c431b2fabdcff79cd2345699320","versions":[{"number":"0.0.1","date":"2015-05-26T11:47:44.271Z"}],"readme":"# AJAXy Websockets\n\nFamiliar with node http and Express web servers? AJAXy Websockets enables you to do things like this!\n\n```javascript\n/***** On the server *****/\nvar io = require('socket.io')(server);\nvar socketRouter = new AjaxySocketRouter(io);\n\n// This is using websockets, not HTTP!\nsocketRouter.get('/api/some_object/:id', function(req, res) {\n    res.send(\"Hello from ID \" + req.params.id);\n});\n\n\n/***** On the client *****/\n// Create the socket\nvar socket = new AjaxySocket({\n    socketURL: 'ws://127.0.0.1:3000'\n});\nsocket.start();\n\n// When user clicks the button, get data for ID 1234567 from websocket!\n$('#my-button').click(function() {\n    socket.get('/api/some_object/1234567', function(response) {\n        console.log(response.data); // \"Hello from ID 1234567\"\n    });\n});\n```\n\n### Gracefullly degrade to AJAX requests if sockets aren't available\nThe beautiful part about all this is that you can assign the exact same handler method for both sockets and AJAX!\n\n```javascript\nvar myRequestHandler = function(req, res) { \n    if(req.params.id) {\n        // Got an ID! Send back an \"object\"\n        res.json({\n            status: 'success',\n            obj: {id: req.params.id}\n        });\n    } else {\n        res.json({\n            status: 'failed',\n            message: 'Missing ID param!'\n        });\n    }\n};\n\n// Handle incoming socket requests\nsocketRouter.get('/api/some_object/:id', myRequestHandler);\n// Gracefully degrade to AJAX\nserver.get('/api/some_object/:id', myRequestHandler);\n```\n\n__Dev Note:__ This is still in it's early stages so take care if you plan to use this in production apps. See the roadmap\nbelow for what needs to be implemented.\n\n## Dependencies\n\n* [Socket.io](https://www.npmjs.com/package/socket.io)\n\n## The full setup\nThis solution does require the use of socket.io (shouldn't be a huge deal since it's the most popular sockets library on NPM).\nThis can be used with or without Express.\n\n__On the server:__\n\n```javascript\nvar AjaxySocketRouter = require('ajaxy-websockets');\n\n// Instantiate a basic web server\nvar server = require('http').createServer(function(request, response) {\n    // Regular req/response stuff goes here\n});\n\n// Require socket.io and pass it to an instance of ajaxy sockets\nvar io = require('socket.io')(server);\nvar socketRouter = new AjaxySocketRouter(io);\n\n```\n\n__On the client:__\n\n```html\n<!DOCTYPE html>\n<html>\n    <head lang=\"en\">\n        <meta charset=\"UTF-8\">\n        <title>Websockets routing!</title>\n\n        <!-- load in Socket.io client -->\n        <script src=\"https://cdn.socket.io/socket.io-1.1.0.js\"></script>\n        <!-- load in AjaxySocket -->\n        <script src=\"/my/path/to/ajaxy-websocket-client.js\"></script>\n    </head>\n    <body>\n        <button id=\"my-button\">Gimme socket data!</button>\n    </body>\n    <script>\n        // Your socket server address\n        var host = 'ws:127.0.0.1:8888';\n        var socket = new AjaxySocket({\n            socketURL: host\n        });\n        socket.start();\n\n        // Setup done. Start using it!\n\n        // When user clicks the button, get data for ID 1234567 from websocket!\n        $('#my-button').click(function() {\n            socket.get('/api/some_object/1234567', function(response) {\n                console.log(response.data); // \"Hello from ID 1234567\"\n            });\n        });\n    </script>\n</html>\n```\n\nThat's it! It can also be used with express.\n\n```javascript\nvar express = require('express');\n\n// Setup express app\nvar app = express();\napp.use( ... );\n\n// Now with express setup, just create an HTTP webserver \n// (passing it express app) and the rest is the same as before!\nvar server = require('http').createServer(app);\n\n// Require socket.io and pass it to an instance of ajaxy sockets\nvar io = require('socket.io')(server);\nvar socketRouter = new AjaxySocketRouter(io);\n\n```\n\nNeed to secure sockets with authentication using things like passport for Socket.io? No problem!\n\n```javascript\n// Basic socket.io setup\nvar io = require('socket.io')(server);\n\n// Use the socket.io bundle and passport libs\nvar socketIOBundle = require('socket.io-bundle');\nvar socketIOPassport = require('socket.io-passport');\n// Setup auth\nio.use(socketIOBundle.cookieParser());\nio.use(socketIOBundle.session({\n    secret: 'MY_SUPER_SECRET_STRING',\n    key: 'sid'\n}));\nio.use(socketIOPassport.initialize());\nio.use(socketIOPassport.session());\n\n// Create AjaxySocketRouter the regular way\nvar ajaxySocketsRouter = new AjaxySocketRouter(io);\n```\n\n## API\n\n### Server side AjaxySocketsRouter\n\n`constructor`\n\n* Params\n  * __Server__ server instance\n\n`get`\nSetup a handler for GET type requests\n\n* Params: \n  * __string__ route\n  * __function__ handler\n\n`post`\nSetup a handler for POST type requests\n\n* Params: \n  * __string__ route\n  * __function__ handler\n\n`patch`\nSetup a handler for PATCH type requests\n\n* Params: \n  * __string__ route\n  * __function__ handler\n\n`del`\nSetup a handler for DELETE type requests\n\n* Params: \n  * __string__ route\n  * __function__ handler\n\n### Client side AjaxySocket\n\n`constructor`\n\n* Params\n  * __string__ socketURL - The URI for websocket server (ex. ws://127.0.0.1:8888)\n\n`start`\nInits the websocket. Must be called when you want the socket to connect to the server.\n\n* Params NONE\n\n`get`\nMake a GET type request to the socket server\n\n* Params\n  * __string__ url - The request url\n  * __function__ callback - The callback which is executed when the socket receives a response\n\n`post`\nMake a POST type request to the socket server\n\n* Params\n  * __string__ url - The request url\n  * __function__ callback - The callback which is executed when the socket receives a response\n\n`patch`\nMake a PATCH type request to the socket server\n\n* Params\n  * __string__ url - The request url\n  * __function__ callback - The callback which is executed when the socket receives a response\n\n`del`\nMake a DELETE type request to the socket server\n\n* Params\n  * __string__ url - The request url\n  * __function__ callback - The callback which is executed when the socket receives a response\n\n`ajaxyRequest`\nMakes a request based on the options object passed to it (similiar to jQuery `$.ajax()` method)\n\n* Params\n  * __object__ options - An object with the following properties:\n    * __string__ url\n    * __string__ method - The request type (GET, POST, etc)\n    * __object__ data - (optional) The data to be passed with the request\n  * __function__ callback - Exectued when the response is received\n\n## Roadmap\n\n* Add good error handling\n* Promises!\n* Add various methods to request/response classes that are available in Express req/response\n","created":"2015-05-26T11:47:44.271Z","modified":"2015-05-26T11:47:44.271Z","lastPublisher":{"name":"haggy102","email":"haggy102@gmail.com"},"owners":[{"name":"haggy102","email":"haggy102@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ajaxy-websockets","_nodeVersion":"0.10.33","_npmUser":{"name":"haggy102","email":"haggy102@gmail.com"},"_npmVersion":"2.1.6","_rev":"1-53994faafe0e1118f8234034f9dadba2","_shasum":"f3b690c0aca2be99ec78bf34422fe3f2df35b74a","author":{"name":"Dave Hagman","email":"haggy102@gmail.com"},"bugs":{"url":"https://github.com/haggy/Ajaxy-Websockets/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"f3b690c0aca2be99ec78bf34422fe3f2df35b74a","tarball":"http://registry.npmjs.org/ajaxy-websockets/-/ajaxy-websockets-0.0.1.tgz"},"maintainers":[{"name":"haggy102","email":"haggy102@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-05-26T11:47:44.271Z","created":"2015-05-26T11:47:44.271Z","0.0.1":"2015-05-26T11:47:44.271Z"}}}