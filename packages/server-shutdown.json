{"name":"server-shutdown","version":"1.0.1","description":"Gracefully shutdown any number of HTTP and WebSocket servers in node","main":"src/index.js","engines":{"node":">=4.1.0"},"repository":"https://github.com/mitmaro/node-server-shutdown","scripts":{"test":"npm run test:unit:coverage && npm run lint","test:unit":"mocha","test:unit:coverage":"nyc mocha","test:coveralls":"cat ./coverage/lcov.info | coveralls","lint":"eslint ."},"keywords":["http-server","http","graceful-shutdown","graceful","shutdown","websockets"],"license":"ISC","dependencies":{"async":"^2.1.5","debug":"^2.6.1"},"devDependencies":{"chai":"^3.5.0","eslint":"^3.17.1","eslint-config-mitmaro":"^2.0.0","eslint-plugin-strict-newline":"^1.3.0","mocha":"^3.2.0","nyc":"^10.1.2","request":"^2.81.0","socket.io":"^1.7.3","socket.io-client":"^1.7.3"},"gitHead":"830cdabcd8fe4ce01d0149de4d1c9c2b9663fc83","homepage":"https://github.com/mitmaro/node-server-shutdown#readme","versions":[{"number":"0.1.0","date":"2016-10-18T19:35:50.855Z"},{"number":"0.2.0","date":"2016-10-20T12:37:20.723Z"},{"number":"0.3.0","date":"2016-10-25T18:48:21.030Z"},{"number":"1.0.0","date":"2017-03-10T19:23:09.204Z"},{"number":"1.0.1","date":"2017-05-27T15:16:22.011Z"}],"readme":"# Server Shutdown\n\n[![Dependency Status](https://david-dm.org/MitMaro/node-server-shutdown.svg)](https://david-dm.org/MitMaro/node-server-shutdown)\n[![Build Status](https://travis-ci.org/MitMaro/node-server-shutdown.svg?branch=master)](https://travis-ci.org/MitMaro/node-server-shutdown)\n[![Coverage Status](https://coveralls.io/repos/github/MitMaro/node-server-shutdown/badge.svg?branch=master)](https://coveralls.io/github/MitMaro/node-server-shutdown?branch=master)\n[![NPM version](https://img.shields.io/npm/v/server-shutdown.svg)](https://www.npmjs.com/package/server-shutdown)\n[![GitHub license](https://img.shields.io/badge/license-ISC-blue.svg)](https://raw.githubusercontent.com/MitMaro/node-server-shutdown/master/LICENSE.md)\n\nUsing just [`server.close`][1] only terminates the server once every connection is closed. This is problematic since,\n[by design][2], keep-alive connections can continue to hold the server open, and WebSockets can hold the connection open\nfor extended periods of time. A [naive solution][3] forcefully destroys all the sockets, interrupting any inflight requests.\nAnother solution is to [`server.unref`][4] the server, but this isn't a satisfactory solution as it does not allow the\n[`close`][5] event to be used.\n\nThis library solves this problem by tracking when a connection is busy, using [`request`][6] for HTTP connections, and hooking\ninto [`write`][7] in the case of WebSockets. The server shutdowns by first stopping any additional connections being made,\nclosing any idle HTTP and WebSocket connections, closing any busy HTTP connections once the inflight request has completed, and\nclosing WebSocket connections on finish of a write. \n\n## Install\n\n    npm install --save server-shutdown\n\n## Usage\n\n```ecmascript 6\nconst http = require('http');\nconst https = require('https');\nconst ServerShutdown = require('server-shutdown');\nconst serverShutdown = new ServerShutdown();\n\nconst httpServer = http.createServer((req, res) => {\n    res.end('HTTP response');\n}).listen(80);\n\nconst httpsServer = https.createServer((req, res) => {\n    res.end('HTTPS response');\n}).listen(443);\n\nserverShutdown.registerServer(httpServer);\nserverShutdown.registerServer(httpsServer);\n\nprocess.on('SIGTERM', () => {\n    serverShutdown.shutdown(() => {\n        console.log('All servers shutdown gracefully');\n    });\n});\n```\n## Adding Socket.io\n\n```ecmascript 6\n// continuing from basic uasge\nconst socketio = require('socket.io');\nconst io = socketio(httpServer);\nserverShutdown.registerServer(io, ServerShutdown.Adapters.socketio);\n```\n\n## API\n\n### Methods\n\n#### `ServerShutdown.registerServer(server[, adapterName = ServerShutdown.Adapters.http])`\n\nRegisters a server with the library. The adapter name argument is used to set the type of server being registered.\n\n#### `ServerShutdown.shutdown([callback])`\n\nShutdown all the servers registered. The `callback` is called once all connections are disconnected and servers\nare closed.\n\n#### `ServerShutdown.forceShutdown([callback])`\n\nShutdown all the servers registered with all connections forcefully disconnected. The `callback` is called once\nall connections are disconnected and servers are closed.\n\n#### `ServerShutdown.registerAdapter(name, adapter)`\n\nRegister a server adapter with the system. Name should be a string and adapter is an object that contains a\n`close(server, callback)` function that is responsible for closing the server and a `socketClose(socket)`\nfunction that is responsible for destroying the sockets the server creates.\n\n### Constants\n\n#### `ServerShutdown.Adapters.http`\n\nThe adapter name for the http adapter. Used with `ServerShutdown.registerAdapter`.\n\n#### `ServerShutdown.Adapters.socketio`\n\nThe adapter name for the Socket.io adapter. Used with `ServerShutdown.registerAdapter`.\n\n## Development\n\n### Debugging\n\nThis library uses [debug][8] to produce debugging output. To enable add `DEBUG=server-shutdown` before\nyour run command.\n\n## License\n\nThis project is released under the ISC license. See [LICENSE](LICENSE.md).\n\n\n[1]: https://nodejs.org/api/http.html#http_server_close_callback\n[2]: https://github.com/nodejs/node/issues/2642\n[3]: https://github.com/isaacs/server-destroy\n[4]: https://nodejs.org/api/net.html#net_server_unref\n[5]: https://nodejs.org/api/http.html#http_event_close\n[6]: https://nodejs.org/api/http.html#http_event_request\n[7]: https://nodejs.org/api/http.html#http_response_write_chunk_encoding_callback\n[8]: https://github.com/visionmedia/debug\n","created":"2016-10-18T19:35:50.855Z","modified":"2017-05-27T15:16:22.011Z","lastPublisher":{"name":"mitmaro","email":"mitmaro@gmail.com"},"owners":[{"name":"mitmaro","email":"mitmaro@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"server-shutdown","_nodeVersion":"6.10.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/server-shutdown-1.0.1.tgz_1495898181167_0.9152192431502044"},"_npmUser":{"name":"mitmaro","email":"mitmaro@gmail.com"},"_npmVersion":"3.10.10","_rev":"4-c55e0a896e742839226a6ad1b25afa9c","_shasum":"860f191340678b55ebc9ed3f0e596c4208b8be0f","author":{"name":"Tim Oram","email":"mitmaro@gmail.com"},"bugs":{"url":"https://github.com/MitMaro/node-server-shutdown/issues"},"contributors":[{"name":"Tim Oram","email":"mitmaro@gmail.com"},{"name":"Whymarrh Whitby","email":"whymarrh.whitby@gmail.com"},{"name":"Gautam Chaudhary","email":"gkcgautam@gmail.com"}],"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"860f191340678b55ebc9ed3f0e596c4208b8be0f","tarball":"https://registry.npmjs.org/server-shutdown/-/server-shutdown-1.0.1.tgz"},"maintainers":[{"name":"mitmaro","email":"mitmaro@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-27T15:16:22.011Z","created":"2016-10-18T19:35:50.855Z","0.1.0":"2016-10-18T19:35:50.855Z","0.2.0":"2016-10-20T12:37:20.723Z","0.3.0":"2016-10-25T18:48:21.030Z","1.0.0":"2017-03-10T19:23:09.204Z","1.0.1":"2017-05-27T15:16:22.011Z"}}}