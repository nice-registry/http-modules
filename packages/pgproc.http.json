{"name":"pgproc.http","license":"MIT","description":"Maps HTTP request to Postgresql stored procedures","version":"0.0.5","repository":"https://github.com/cthulhuology/pgproc.http.js","main":"./lib/pgproc.http.js","bin":{"pgproc":"./bin/pgproc"},"dependencies":{"express":">=3.4.3","pgproc":">=0.0.1"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":">= 0.10"},"gitHead":"95b994ee80bd69de9bd495d4692bee7c3dba8643","homepage":"https://github.com/cthulhuology/pgproc.http.js","scripts":{},"versions":[{"number":"0.0.1","date":"2013-12-05T16:49:01.670Z"},{"number":"0.0.2","date":"2013-12-06T21:19:11.784Z"},{"number":"0.0.3","date":"2014-01-13T15:42:14.546Z"},{"number":"0.0.4","date":"2015-04-24T14:12:46.834Z"},{"number":"0.0.5","date":"2015-04-24T15:48:09.367Z"}],"readme":"pgproc.http\n===========\n\nAutomagic Postgres HTTP API for stored procedures\n\nGetting Started\n---------------\n\nTo run the http interface simply invoke pgproc with the arguments as follows:\n\n\tpgproc postgresql://localhost:5432/mydatabase public 5555\n        \nThis will make all of the stored procedures in the public schema in mydatabase available via HTTP on port 5555.\n\n\nHow the API Works\n-----------------\n\nSay you have a stored procedure:\n\t\t\n\tpublic.create_widget( _class text, _properties json ) returns bool\n\nAnd you turn on pgproc on the port, you can curl data to it via:\n\n\tcurl -X POST http://localhost:5555/create_widget/button -d '{ \"width\": 300, \"height\" : 100, \"onclick\" : \"sayHi()\" }'\n\nThis will invoke the stored procedure as:\n\n\tcreate_widget('button','{ \"width\": 300, \"height\" : 100, \"onclick\" : \"sayHi()\" }')\n\nAnd will return the HTTP response of \n\n\t{ \"create_widget\" : true }\n\nAssuming your stored procedure returns true on success.  You could also call this stored procedure using a GET query:\n\n\tcurl http://localhost:5555/create_widget/button/%7b%20%22width%22:%20300%2c%20%22height%22%20:%20100%2c%20%22onclick%22%20:%20%22sayHi%28%29%22%20%7d\n\nBut posting stringified json is generally less desirable, but possibly necessary if you design a crappy api.\n\nThe rules are:\n\n\t* first path parameter is the stored procedure name\n\t* POST methods place their body as text or json in the last argument to the stored procedure\n\t* A JSON representation of the return type { \"function_name\" : return_value } will be returned\n\nComments Bugs & Contributions\n-----------------------------\n\nFeel free to send me you hate mail at <dave@dloh.org>\n","created":"2013-12-05T16:48:44.405Z","modified":"2015-04-24T15:48:09.367Z","lastPublisher":{"name":"cthulhuology","email":"dave@dloh.org"},"owners":[{"name":"cthulhuology","email":"dave@dloh.org"}],"other":{"_attachments":{},"_from":".","_id":"pgproc.http","_nodeVersion":"0.12.0","_npmUser":{"name":"cthulhuology","email":"dave@dloh.org"},"_npmVersion":"2.5.1","_rev":"1-f5a4a015a3edbf6c6e79487b580bad3c","_shasum":"46fce5b647cd14e0e67eacfd09d791401741250d","author":{"name":"David Goehrig"},"bugs":{"url":"https://github.com/cthulhuology/pgproc.http.js/issues"},"directories":{},"dist-tags":{"latest":"0.0.5"},"dist":{"shasum":"46fce5b647cd14e0e67eacfd09d791401741250d","tarball":"http://registry.npmjs.org/pgproc.http/-/pgproc.http-0.0.5.tgz"},"maintainers":[{"name":"cthulhuology","email":"dave@dloh.org"}],"readmeFilename":"README.md","time":{"modified":"2015-04-24T15:48:09.367Z","created":"2013-12-05T16:48:44.405Z","0.0.1":"2013-12-05T16:49:01.670Z","0.0.2":"2013-12-06T21:19:11.784Z","0.0.3":"2014-01-13T15:42:14.546Z","0.0.4":"2015-04-24T14:12:46.834Z","0.0.5":"2015-04-24T15:48:09.367Z"}}}