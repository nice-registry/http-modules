{"name":"angular2-cool-http","version":"2.3.0","description":"Cool features over angular Http Client.","main":"index.js","jsnext:main":"esm/index.js","typings":"index.d.ts","peerDependencies":{"rxjs":"^5.2.0","@angular/core":"^4.0.0","@angular/http":"^4.0.0"},"devDependencies":{"@angular/compiler":"^4.0.0","@angular/compiler-cli":"^4.0.0","@angular/platform-server":"^4.0.0","typescript":"^2.2.1"},"scripts":{"clean":"rm -rf ./dist","compile":"ngc","copy-files":"cp ./README.md ./dist/README.md && cp ./package.json ./dist/package.json","build":"npm run clean && npm run compile && npm run copy-files"},"repository":"https://github.com/Hacklone/angular2-cool-http","keywords":["angular2","angular","http","httpclient","interceptor","global","headers","interceptors","cool","cool-http","cookie","custom","header"],"license":"MIT","licenses":[{"type":"MIT","url":"https://github.com/Hacklone/angular2-cool-http/raw/master/LICENSE"}],"homepage":"https://github.com/Hacklone/angular2-cool-http#readme","versions":[{"number":"1.0.0","date":"2016-05-29T09:21:27.575Z"},{"number":"1.0.1","date":"2016-05-29T10:12:05.327Z"},{"number":"1.0.2","date":"2016-05-29T10:32:07.379Z"},{"number":"1.0.3","date":"2016-05-29T17:21:57.558Z"},{"number":"1.0.4","date":"2016-05-31T05:05:22.615Z"},{"number":"1.0.5","date":"2016-05-31T05:24:33.254Z"},{"number":"1.0.6","date":"2016-05-31T12:31:35.111Z"},{"number":"1.0.7","date":"2016-06-08T20:07:24.471Z"},{"number":"1.0.8","date":"2016-06-08T20:10:23.123Z"},{"number":"1.0.9","date":"2016-06-08T20:41:26.598Z"},{"number":"1.1.0","date":"2016-06-10T08:01:02.262Z"},{"number":"1.1.1","date":"2016-06-14T07:29:12.995Z"},{"number":"1.1.2","date":"2016-07-13T21:54:27.437Z"},{"number":"1.1.3","date":"2016-07-15T23:12:46.017Z"},{"number":"1.1.4","date":"2016-08-13T07:55:16.358Z"},{"number":"1.1.5","date":"2016-08-13T08:06:25.544Z"},{"number":"1.1.6","date":"2016-09-16T11:24:40.505Z"},{"number":"1.1.7","date":"2016-09-16T14:26:47.728Z"},{"number":"1.1.8","date":"2016-09-16T15:11:09.499Z"},{"number":"1.1.9","date":"2016-09-16T15:23:21.674Z"},{"number":"1.2.0","date":"2016-09-27T22:53:58.447Z"},{"number":"1.2.1","date":"2016-11-15T08:57:42.002Z"},{"number":"1.2.2","date":"2016-11-15T09:01:26.137Z"},{"number":"1.2.3","date":"2016-11-15T09:56:30.847Z"},{"number":"1.3.0","date":"2016-12-21T08:11:45.635Z"},{"number":"1.3.1","date":"2016-12-21T08:21:15.188Z"},{"number":"1.3.2","date":"2016-12-22T00:49:33.259Z"},{"number":"1.3.3","date":"2016-12-22T00:50:40.621Z"},{"number":"1.3.4","date":"2017-01-23T20:30:24.153Z"},{"number":"2.0.0","date":"2017-02-28T06:52:49.372Z"},{"number":"2.1.0","date":"2017-03-07T06:53:12.129Z"},{"number":"1.4.0","date":"2017-05-18T09:27:18.618Z"},{"number":"2.2.0","date":"2017-05-18T09:40:10.294Z"},{"number":"2.2.1","date":"2017-05-23T08:47:42.234Z"},{"number":"2.3.0","date":"2017-05-24T08:50:15.800Z"}],"readme":"[npm-url]: https://npmjs.org/package/angular2-cool-http\r\n[npm-image]: https://img.shields.io/npm/v/angular2-cool-http.svg\r\n[downloads-image]: https://img.shields.io/npm/dm/angular2-cool-http.svg\r\n[total-downloads-image]: https://img.shields.io/npm/dt/angular2-cool-http.svg\r\n\r\n# angular2-cool-http [![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url]  [![Total Downloads][total-downloads-image]][npm-url]\r\nCool features over angular2 HttpClient\r\n\r\n## Install \r\n> npm install --save angular2-cool-http\r\n\r\n## Setup\r\n```javascript\r\nimport { NgModule } from '@angular/core';\r\nimport { CoolHttpModule } from 'angular2-cool-http';\r\n\r\n@NgModule({\r\n    imports: [CoolHttpModule]\r\n})\r\nexport class MyAppModule {}\r\n```\r\n\r\n## Features\r\n### Global base url\r\nCoolHttp's api calls will always prefix your url with the baseUrl set (Great for cross origin websites)\r\n\r\n```javascript\r\ncoolHttp.registerBaseUrl('https://my.api.com/');\r\n```\r\n\r\n### Global withCredentials\r\nCoolHttp's api calls will always send cookies to cross domain requests (Great for cross origin websites)\r\n\r\n```javascript\r\ncoolHttp.setWithCredentials(true);\r\n```\r\n\r\n### Async Api calls\r\n- getAsync(url: string, options: RequestOptions): Promise<any>\r\n- postAsync(url: string, data: any, options: RequestOptions): Promise<any>\r\n- putAsync(url: string, data: any, options: RequestOptions): Promise<any>\r\n- deleteAsync(url: string, options: RequestOptions): Promise<any>\r\n- patchAsync(url: string, data: any, options: RequestOptions): Promise<any>\r\n- headAsync(url: string, options: RequestOptions): Promise<any>\r\n\r\n```javascript\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\nimport { CoolHttp } from 'angular2-cool-http';\r\n\r\n@Component({\r\n  selector: 'my-app'\r\n})\r\nexport class AppComponent implements OnInit { \r\n    coolHttp: CoolHttp;\r\n    \r\n    constructor(coolHttp: CoolHttp) {\r\n        this.coolHttp = coolHttp;   \r\n    }\r\n    \r\n    async ngOnInit() {\r\n        // await async api call\r\n        let response = await this.coolHttp.getAsync('/api/request');\r\n        \r\n        console.log(response);\r\n        \r\n        // or simply chain Promise\r\n        this.coolHttp.getAsync('/api/request')\r\n            .then(response => {\r\n                console.log(response);\r\n            });\r\n    }\r\n}\r\n```\r\n\r\n### Observable api calls\r\n- getObservable(url: string, options: RequestOptions): Observable<Response>\r\n- postObservable(url: string, data: any, options: RequestOptions): Observable<Response>\r\n- putObservable(url: string, data: any, options: RequestOptions): Observable<Response>\r\n- deleteObservable(url: string, options: RequestOptions): Observable<Response>\r\n- patchObservable(url: string, data: any, options: RequestOptions): Observable<Response>\r\n- headObservable(url: string, options: RequestOptions): Observable<Response>\r\n\r\n### Global headers\r\nCoolHttp's api calls will always send these globally registered headers. (Great for authentication)\r\n\r\n```javascript\r\nimport { CoolHttp, HttpHeader } from 'angular2-cool-http';\r\n\r\ncoolHttp.registerGlobalHeader(new HttpHeader('MyHttpHeader', 'MyHeadersValue'));\r\n```\r\n\r\n- registerGlobalHeader(header: HttpHeader): void\r\n- deregisterGlobalHeader(headerKey: string): boolean\r\n- removeAllRegisteredGlobalHeaders(): void\r\n\r\n### Request Interceptors\r\nCoolHttp's api calls will invoke the registered request interceptors before sending the request\r\n\r\n- registerRequestInterceptor(requestInterceptor: IRequestInterceptor): void\r\n- deregisterRequestInterceptor(requestInterceptor: IRequestInterceptor): boolean\r\n\r\n```javascript\r\ncoolHttp.registerRequestInterceptor({\r\n    beforeRequestAsync: function(url, method, data, headers) {\r\n        return new Promise((resolve, reject) => {\r\n            // do something \r\n            \r\n            // resolve with true to fully intercept request\r\n            // resolve with false to let the request continue\r\n            resolve(false);\r\n        });\r\n    }\r\n});\r\n```\r\n\r\n### Response Interceptors\r\nCoolHttp's api calls will invoke the registered response interceptors after receiving the response\r\n\r\n- registerResponseInterceptor(responseInterceptor: IResponseInterceptor): void\r\n- deregisterResponseInterceptor(responseInterceptor: IResponseInterceptor): boolean\r\n\r\n```javascript\r\ncoolHttp.registerResponseInterceptor({\r\n    afterResponseAsync: function(url, method, data, headers) {\r\n        return new Promise((resolve, reject) => {\r\n            //do something \r\n            \r\n            // resolve with true to fully intercept the response handling\r\n            // resolve with false to let the response handling continue\r\n            resolve(true);\r\n        });\r\n    }\r\n});\r\n```\r\n\r\n## Automatic cookie to custom header sending\r\nYou can configure CoolHttp to copy and send a cookie value in a custom http header.\r\n\r\n```javascript\r\ncoolHttp.sendCookieValueInCustomHeader(cookieName, headerName);\r\n```\r\n\r\n## License\r\n> The MIT License (MIT)\r\n\r\n> Copyright (c) 2016 Hacklone\r\n> https://github.com/Hacklone\r\n\r\n> Permission is hereby granted, free of charge, to any person obtaining a copy\r\n> of this software and associated documentation files (the \"Software\"), to deal\r\n> in the Software without restriction, including without limitation the rights\r\n> to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n> copies of the Software, and to permit persons to whom the Software is\r\n> furnished to do so, subject to the following conditions:\r\n\r\n> The above copyright notice and this permission notice shall be included in all\r\n> copies or substantial portions of the Software.\r\n\r\n> THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n> IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n> FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n> AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n> LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n> OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n> SOFTWARE.\r\n","created":"2016-05-29T09:21:27.575Z","modified":"2017-05-24T08:50:15.800Z","lastPublisher":{"name":"hacklone","email":"toakak@gmail.com"},"owners":[{"name":"hacklone","email":"toakak@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"angular2-cool-http","_nodeVersion":"7.9.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/angular2-cool-http-2.3.0.tgz_1495615814644_0.5941214128397405"},"_npmUser":{"name":"hacklone","email":"toakak@gmail.com"},"_npmVersion":"4.2.0","_rev":"15-085df64a31fb050e804c54b3aa6cbf5f","_shasum":"9c766743b826f1576b4d82b907adfeaa874de297","author":{"name":"Hacklone","email":"toakak@gmail.com"},"bugs":{"url":"https://github.com/Hacklone/angular2-cool-http/issues"},"directories":{},"dist-tags":{"latest":"2.3.0"},"dist":{"shasum":"9c766743b826f1576b4d82b907adfeaa874de297","tarball":"https://registry.npmjs.org/angular2-cool-http/-/angular2-cool-http-2.3.0.tgz"},"maintainers":[{"name":"hacklone","email":"toakak@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-24T08:50:15.800Z","created":"2016-05-29T09:21:27.575Z","1.0.0":"2016-05-29T09:21:27.575Z","1.0.1":"2016-05-29T10:12:05.327Z","1.0.2":"2016-05-29T10:32:07.379Z","1.0.3":"2016-05-29T17:21:57.558Z","1.0.4":"2016-05-31T05:05:22.615Z","1.0.5":"2016-05-31T05:24:33.254Z","1.0.6":"2016-05-31T12:31:35.111Z","1.0.7":"2016-06-08T20:07:24.471Z","1.0.8":"2016-06-08T20:10:23.123Z","1.0.9":"2016-06-08T20:41:26.598Z","1.1.0":"2016-06-10T08:01:02.262Z","1.1.1":"2016-06-14T07:29:12.995Z","1.1.2":"2016-07-13T21:54:27.437Z","1.1.3":"2016-07-15T23:12:46.017Z","1.1.4":"2016-08-13T07:55:16.358Z","1.1.5":"2016-08-13T08:06:25.544Z","1.1.6":"2016-09-16T11:24:40.505Z","1.1.7":"2016-09-16T14:26:47.728Z","1.1.8":"2016-09-16T15:11:09.499Z","1.1.9":"2016-09-16T15:23:21.674Z","1.2.0":"2016-09-27T22:53:58.447Z","1.2.1":"2016-11-15T08:57:42.002Z","1.2.2":"2016-11-15T09:01:26.137Z","1.2.3":"2016-11-15T09:56:30.847Z","1.3.0":"2016-12-21T08:11:45.635Z","1.3.1":"2016-12-21T08:21:15.188Z","1.3.2":"2016-12-22T00:49:33.259Z","1.3.3":"2016-12-22T00:50:40.621Z","1.3.4":"2017-01-23T20:30:24.153Z","2.0.0":"2017-02-28T06:52:49.372Z","2.1.0":"2017-03-07T06:53:12.129Z","1.4.0":"2017-05-18T09:27:18.618Z","2.2.0":"2017-05-18T09:40:10.294Z","2.2.1":"2017-05-23T08:47:42.234Z","2.3.0":"2017-05-24T08:50:15.800Z"}}}