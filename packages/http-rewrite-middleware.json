{"name":"http-rewrite-middleware","description":"Nginx-inspired (RegExp-based) HTTP Rewrite Middleware for the Connect and Express webservers.","version":"0.1.6","homepage":"https://github.com/viart/http-rewrite-middleware","repository":"https://github.com/viart/http-rewrite-middleware","licenses":[{"type":"MIT","url":"https://github.com/viart/http-rewrite-middleware/blob/master/LICENSE-MIT"}],"main":"index.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt test"},"devDependencies":{"grunt-contrib-jshint":"~0.7.1","grunt-contrib-nodeunit":"~0.1.2","grunt":"~0.4.1"},"keywords":["gruntplugin","grunt-contrib-connect","grunt-express","modrewrite","rewriterule","rewrite","route","connect","express"],"gitHead":"21d1d64dc091957b5352afe983189380bcddf2a9","versions":[{"number":"0.1.0","date":"2013-12-17T00:32:32.155Z"},{"number":"0.1.1","date":"2013-12-17T00:43:10.292Z"},{"number":"0.1.2","date":"2014-01-29T20:59:23.908Z"},{"number":"0.1.3","date":"2014-01-30T16:21:03.539Z"},{"number":"0.1.4","date":"2014-02-11T20:51:41.520Z"},{"number":"0.1.5","date":"2014-02-12T22:40:03.466Z"},{"number":"0.1.6","date":"2014-06-26T12:50:00.396Z"}],"readme":"# http-rewrite-middleware v0.1.5 [![Build Status](https://travis-ci.org/viart/http-rewrite-middleware.png?branch=master)](https://travis-ci.org/viart/http-rewrite-middleware)\n\n> This module makes it possible to redirect (rewrite internally or redirect using HTTP codes) User to the specific URL based on RegExp Rules.\n> The designated successor of [grunt-connect-rewrite](https://github.com/viart/grunt-connect-rewrite).\n\n## Getting Started\n* Install the middleware by running:\n\n    ```shell\n    npm install http-rewrite-middleware --save\n    ```\n\n* Include the module:\n\n    ```js\n    var rewriteModule = require('http-rewrite-middleware');\n    ```\n\n* Define your rules like:\n\n    ```js\n    var rewriteMiddleware = rewriteModule.getMiddleware([\n        // Internal rewrite\n        {from: '^/index_dev.html$', to: '/src/index.html'},\n        // Internal rewrite\n        {from: '^/js/(.*)$', to: '/src/js/$1'},\n        // 301 Redirect\n        {from: '^/old-stuff/(.*)$', to: '/new-cool-stuff/$1', redirect: 'permanent'},\n        // 302 Redirect\n        {from: '^/stuff/(.*)$', to: '/temporary-stuff/$1', redirect: 'temporary'}\n    ]);\n    ```\n\n* See examples of integration with Connect / Express / Grunt bellow.\n\n### Options\n\n##### Rule's format:\n\n`{from: '__from__', to: '__to__'[, redirect: 'permanent'|'temporary']}`\n\nWhere:\n* `__from__` - RegExp string to match.\n* `__to__` - String that replaces matched URL.\n* `redirect` - Optional parameter:\n    * When it is omitted then the Rule will be dispatched as an internal rewrite (aka proxified).\n    * If the value is set then Browser will receive HTTP `Location` Header with value of parsed `__to__` (`permanent` value will give `HTTP 301`, any other value will give `HTTP 302`).\n\n### Example of usage with Connect\n\n```js\nvar connect = require('connect'),\n    http = require('http'),\n    rewriteModule = require('http-rewrite-middleware');\n\nvar app = connect()\n    .use(rewriteModule.getMiddleware([\n        // ... list of rules here\n    ])\n    .use(connect.static('public'));\n\nhttp.createServer(app).listen(3000);\n```\n\n### Example of usage with Express\n\n```js\nvar express = require('express'),\n    app = express(),\n    rewriteModule = require('http-rewrite-middleware');\n\napp.use(rewriteModule.getMiddleware([\n    // ... list of rules here\n]);\n\n//...\napp.listen(3000);\n```\n\n### Example of usage with Grunt ([grunt-contrib-connect](https://github.com/gruntjs/grunt-contrib-connect))\n\n```js\nvar rewriteModule = require('http-rewrite-middleware');\n\ngrunt.initConfig({\n    connect: {\n        options: {\n            port: 9000,\n            hostname: 'localhost'\n        },\n        development: {\n            options: {\n                middleware: function (connect, options) {\n                    var middlewares = [];\n\n                    // RewriteRules support\n                    middlewares.push(rewriteModule.getMiddleware([\n                        // ... list of rules here\n                    ]));\n\n                    if (!Array.isArray(options.base)) {\n                        options.base = [options.base];\n                    }\n\n                    var directory = options.directory || options.base[options.base.length - 1];\n                    options.base.forEach(function (base) {\n                        // Serve static files.\n                        middlewares.push(connect.static(base));\n                    });\n\n                    // Make directory browse-able.\n                    middlewares.push(connect.directory(directory));\n\n                    return middlewares;\n                }\n            }\n        }\n    }\n});\n```\n\n\n## Debugging\n\nIn order to debug Rules just add 2nd parameter to the `getMiddleware(...)` call\nas `getMiddleware(..., {verbose: true})` this will enable logging of matched rules.\nThe message will explain which `__from__` rule was matched and what was the result of the rewrite.\n\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code.\n\n\n## Release History\n* 2014.02.13 `v0.1.6` Improve logging format\n* 2014.02.13 `v0.1.5` Fix NPM...\n* 2014.01.29 `v0.1.3` Add logging support\n* 2013.12.17 `v0.1.1` Initial Release\n","starsCount":2,"created":"2013-12-17T00:32:28.378Z","modified":"2017-06-23T16:28:48.607Z","lastPublisher":{"name":"viart","email":"artem@devart.in.ua"},"owners":[{"name":"viart","email":"artem@devart.in.ua"}],"other":{"_attachments":{},"_from":".","_id":"http-rewrite-middleware","_npmUser":{"name":"viart","email":"artem@devart.in.ua"},"_npmVersion":"1.4.16","_rev":"2-bf37fd37a6f52abff5824919ca2b5ac0","_shasum":"cb2965aafa91ebd4c610b99580aa187812da107c","author":{"name":"Artem Vitiuk","email":"artem@devart.in.ua"},"bugs":{"url":"https://github.com/viart/http-rewrite-middleware/issues"},"directories":{},"dist-tags":{"latest":"0.1.6"},"dist":{"shasum":"cb2965aafa91ebd4c610b99580aa187812da107c","tarball":"http://registry.npmjs.org/http-rewrite-middleware/-/http-rewrite-middleware-0.1.6.tgz"},"maintainers":[{"name":"viart","email":"artem@devart.in.ua"}],"readmeFilename":"README.md","time":{"modified":"2017-06-23T16:28:48.607Z","created":"2013-12-17T00:32:28.378Z","0.1.0":"2013-12-17T00:32:32.155Z","0.1.1":"2013-12-17T00:43:10.292Z","0.1.2":"2014-01-29T20:59:23.908Z","0.1.3":"2014-01-30T16:21:03.539Z","0.1.4":"2014-02-11T20:51:41.520Z","0.1.5":"2014-02-12T22:40:03.466Z","0.1.6":"2014-06-26T12:50:00.396Z"},"users":{"lamentchina":true,"plasticmind":true}}}