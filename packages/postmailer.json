{"name":"postmailer","version":"0.6.3","description":"HTTP POST -> SMTP proxy, as Express middleware","main":"index.js","repository":{"type":"git","url":"ssh://git@bitbucket.org/geraintluff/http-mail-express.git"},"keywords":["smtp","express","http","http-mail","post","proxy"],"license":"ISC","dependencies":{"body-parser":"~1.12.2","eventplus":"^1.0.3","express":"~4.12.3","fs-extra":"^0.26.2","mime":"~1.3.4","nodemailer":"~1.3.2","nodemailer-direct-transport":"~1.0.2","parse-http-header":"~1.0.0","uri-templates":"^0.1.7","ws":"^0.8.0","html-minifier":"^1.0.0"},"optionalDependencies":{"html-minifier":"^1.0.0"},"gitHead":"80772d76f819185935a623890ef876f99bb93c3d","scripts":{},"versions":[{"number":"0.2.0","date":"2015-05-23T10:11:35.454Z"},{"number":"0.2.1","date":"2015-05-23T10:13:44.017Z"},{"number":"0.2.2","date":"2015-05-23T10:14:47.557Z"},{"number":"0.3.1","date":"2015-05-23T10:29:00.613Z"},{"number":"0.3.2","date":"2015-05-23T10:39:45.654Z"},{"number":"0.3.3","date":"2015-05-24T11:17:14.464Z"},{"number":"0.3.4","date":"2015-05-24T11:25:56.614Z"},{"number":"0.3.5","date":"2015-05-24T11:37:39.441Z"},{"number":"0.4.0","date":"2015-05-25T14:50:42.089Z"},{"number":"0.4.1","date":"2015-05-25T15:00:00.857Z"},{"number":"0.4.2","date":"2015-05-25T15:22:30.912Z"},{"number":"0.4.3","date":"2015-05-25T18:56:58.997Z"},{"number":"0.4.4","date":"2015-05-27T02:31:30.992Z"},{"number":"0.4.5","date":"2015-05-27T15:24:23.932Z"},{"number":"0.5.0","date":"2015-10-06T13:54:24.799Z"},{"number":"0.5.1","date":"2015-10-06T17:49:46.414Z"},{"number":"0.5.2","date":"2015-10-09T16:47:22.984Z"},{"number":"0.5.3","date":"2015-11-04T18:32:26.175Z"},{"number":"0.5.4","date":"2015-11-05T12:44:13.230Z"},{"number":"0.6.0","date":"2015-11-05T20:47:34.114Z"},{"number":"0.6.2","date":"2015-11-09T17:10:41.245Z"},{"number":"0.6.3","date":"2015-11-14T19:59:08.200Z"}],"readme":"# postmailer\r\n\r\nAn Express middleware implementing the \"HTTP POST mail\" principle as an HTTP-to-SMTP proxy.\r\n\r\nThe principle is that all POST requests to a user's contact URL (e.g. `/~username`) should be received as messages by that user.  This module is a proxy to make this work using existing email infrastructure, by resending received messages using SMTP.\r\n\r\nThe module is an Express middleware, and accepts raw resources (e.g. text, HTML, images or other documents) or url-encoded forms.  Multipart messages/forms are not currently supported - any external resources should be referenced by URL or sent as separate messages.\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar express = require('express'), app = express();\r\nvar postmailer = require('postmailer');\r\n\r\napp.use(postmailer({\r\n\tmapping: {\r\n\t\turl: '/contact',\r\n\t\temail: 'someone@example.com'\r\n\t}\r\n}));\r\n```\r\n\r\nUnless `Content-Disposition:` is set to `attachment` in the POST request, plain-text and HTML are unchanged, and images are displayed inline in the email.  Otherwise, the document is included as an attachment.\r\n\r\n## Options\r\n\r\n* `options.mapping` - defines the mapping between URLs and email addresses. See below for more detail.\r\n* `options.domain` - a protocol+domain (or list of such) to be used as a prefix (e.g. `https://example.com`) for relative URLs\r\n* `options.transport` - *optional but recommended:* transport for `nodemailer` to use (see below), defaults to direct mailer\r\n* `options.maxInline` - *optional:* maximum size (in bytes) of inline content, where larger documents are sent as attachments.  Defaults to `500*1024` (500kb)\r\n* `options.form` - *optional:* whether a friendly page should be displayed on GET requests.  Defaults to `\"ajax\"`\r\n    * **false** - disable\r\n\t* **reserved string** - corresponding to built-in templates with various levels of interactivity: `\"plain\"` (no JavaScript), `\"ajax\"` (POST client) and `\"rich\"` (includes WebSocket chat if available).  The `\"ajax\"` and `\"rich\"` clients have a cut-down UI when embedded in an IFrame\r\n    * **string** - template file, with two parameters `{{username}}` and `{{url}}`\r\n    * **function** - template function, with two arguments `username` and `url`\r\n* `options.minifyForm` - *optional:* whether the web form should be minified (HTML/JS/CSS) using the `html-minifier` package.  Defaults to `false`\r\n\r\n## Transport\r\n\r\nYou can provide a custom transport for sending mail.  This is passed to `nodemailer.createTransport()`, and can therefore be either a transport (e.g. from one of the `nodemailer-*-transport` modules) or an object with parameters for the SMTP transport (default):\r\n\r\n```javascript\r\noptions.transport = {\r\n\thost: 'smtp.mailer.example.com',\r\n\tport: 25,\r\n\tauth: {\r\n\t\tuser: 'username',\r\n\t\tpass: 'password'\r\n\t}\r\n}\r\n```\r\n\r\nIf no details/transport is supplied, this module defaults to the [direct mailer](https://www.npmjs.com/package/nodemailer-direct-transport).  Direct SMTP connections (particularly from non-static IPs) are rejected by some mail services (e.g. Gmail) - if you want to send to these services, consider using a mailer such as [Mandrill](https://www.mandrill.com/) or [Mailgun](http://www.mailgun.com/).\r\n\r\n## Mapping\r\n\r\nThe `options.mapping` property can either be a mapping object, or an array of mapping objects.\r\n\r\nA mapping object (used in `options.mapping`) has the following properties:\r\n\r\n* `.url` - a URI Template (or array of templates) for the URLs\r\n* `.email` - a URI Template for the email address\r\n* `.acceptPost` - whether this mapping actually accepts POSTs (defaults to `true`).\r\n\r\nTo convert between URLs and email addresses, the template for one is deconstructed, and the same parameters applied to the other.  **Order matters**: when converting to URL(s), preference is given to mappings listed first, and when converting to email address, only the first is used.\r\n\r\nFor \"local\" URLs, it's simplest to use relative URLs with absolute paths (e.g. `/contact`).  These will be converted to/from absolute URLs when necessary, using the `options.domain` parameter.\r\n\r\n### `.acceptPost`\r\n\r\nIf `.acceptPost` is set to `false` for a mapping, the mapping will be used to replace URLs with email addresses when forwarding messages via SMTP (e.g. translating `From`/`CC`/`BCC` headers) but will not accept POST requests.\r\n\r\nThe idea is that you should have a \"catch-all\" mapping at the end of your mapping list:\r\n\r\n```javascript\r\n{\r\n\turl: \"{+url}\",\r\n\temail: \"post+{url}@mydomain.com\",\r\n\tallowPost: false\r\n}\r\n```\r\n\r\nIf you have a suitably configured SMTP->HTTP proxy (see below) then this allows replying to URLs using your email client (by translating reply emails from known addresses back into POSTs).\r\n\r\n## SMTP -> HTTP proxy\r\n\r\nThis module is only half of the puzzle: if you receive a message containing a URL in the `From` header and it is converted to an email, you should be able to reply to the email and the message is converted back to POSTs.\r\n\r\nYou would then need an SMTP-to-HTTP gateway that used the same mapping, and translated replies/etc. back into POST requests (the `allowPost: false` setting means that this proxy would only work if a known user was involved.).\r\n\r\nThis is currently under development.\r\n\r\n## Default web form\r\n\r\nThe default web form (provided on GET requests to a valid endpoint) contains a short description of what the endpoint is, some examples (with `curl`) and an AJAX interface to send messages directly from the browser.\r\n\r\nIt also detects (using JavaScript) whether it's embedded in an IFrame, and presents a cut-down UI with just two fields (email/message) and a \"send\" button, suitable for embedding as a contact form on other websites such as blogs.\r\n\r\n## TTD\r\n\r\n* bounce messages (both directions)\r\n","created":"2015-05-23T10:11:35.454Z","modified":"2015-11-14T19:59:08.200Z","lastPublisher":{"name":"geraintluff","email":"luffgd@gmail.com"},"owners":[{"name":"geraintluff","email":"luffgd@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"postmailer","_nodeVersion":"0.12.4","_npmUser":{"name":"geraintluff","email":"luffgd@gmail.com"},"_npmVersion":"2.10.1","_rev":"1-abb29763d68d2f66e0239fbfb30205b5","_shasum":"98fa436b1071f47e26b5e3ae480ef823f08fd513","author":{"name":"Geraint Luff"},"directories":{},"dist-tags":{"latest":"0.6.3"},"dist":{"shasum":"98fa436b1071f47e26b5e3ae480ef823f08fd513","tarball":"http://registry.npmjs.org/postmailer/-/postmailer-0.6.3.tgz"},"maintainers":[{"name":"geraintluff","email":"luffgd@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-11-14T19:59:08.200Z","created":"2015-05-23T10:11:35.454Z","0.2.0":"2015-05-23T10:11:35.454Z","0.2.1":"2015-05-23T10:13:44.017Z","0.2.2":"2015-05-23T10:14:47.557Z","0.3.1":"2015-05-23T10:29:00.613Z","0.3.2":"2015-05-23T10:39:45.654Z","0.3.3":"2015-05-24T11:17:14.464Z","0.3.4":"2015-05-24T11:25:56.614Z","0.3.5":"2015-05-24T11:37:39.441Z","0.4.0":"2015-05-25T14:50:42.089Z","0.4.1":"2015-05-25T15:00:00.857Z","0.4.2":"2015-05-25T15:22:30.912Z","0.4.3":"2015-05-25T18:56:58.997Z","0.4.4":"2015-05-27T02:31:30.992Z","0.4.5":"2015-05-27T15:24:23.932Z","0.5.0":"2015-10-06T13:54:24.799Z","0.5.1":"2015-10-06T17:49:46.414Z","0.5.2":"2015-10-09T16:47:22.984Z","0.5.3":"2015-11-04T18:32:26.175Z","0.5.4":"2015-11-05T12:44:13.230Z","0.6.0":"2015-11-05T20:47:34.114Z","0.6.2":"2015-11-09T17:10:41.245Z","0.6.3":"2015-11-14T19:59:08.200Z"}}}