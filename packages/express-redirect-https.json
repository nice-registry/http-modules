{"name":"express-redirect-https","version":"0.1.0","description":"Redirects requests from HTTP to HTTPS in Express","scripts":{"test":"node node_modules/mocha/bin/mocha --reporter spec --ui tdd --recursive test"},"repository":"https://github.com/belsrc/express-redirect-https","keywords":["ssl","tls","https","express","redirect","forward","forwarded","x-forwarded-proto","x-forwarded-ssl","x-real-proto","x-arr-ssl","RFC 7239","z-forwarded-proto","fastly-ssl"],"license":"MIT","homepage":"https://github.com/belsrc/express-redirect-https#readme","main":"index.js","devDependencies":{"chai":"^3.5.0","express":"^4.14.0","mocha":"^2.5.3","supertest":"^1.2.0"},"dependencies":{},"gitHead":"d9c8a4fb95382c9900b727145d3c2ff387ffc625","versions":[{"number":"0.1.0","date":"2016-08-19T15:45:01.582Z"}],"readme":"# express-redirect-https\n\nSimple middleware that redirects `GET` and `HEAD` requests to `https://` and sends a `403` for `POST`, `PUT`, `DELETE`, etc.\n\n### Install\n``` bash\n$ npm install --save express-redirect-https\n```\n\n### Options\n\n##### httpsPort\nDefaults to `443`. The `https://` port to use in the redirect.\n\n##### message\nDefaults to `Use HTTPS when submitting data`. The message passed with the `403` when submitting data over `http://`.\n\n##### allowRFCHeader\nDefaults to `false`. Whether or not to allow the `forwarded` RFC 7239 header.\n\n##### allowForwardForHeader\nDefaults to `false`. Whether or not to allow the `x-forwarded-proto` header.\n\n##### allowNginxAltHeader\nDefaults to `false`. Whether or not to allow the `x-real-proto` header.\n\n##### allowAzureHeader\nDefaults to `false`. Whether or not to allow the `x-arr-ssl` header.\n\n##### allowZscalerHeader\nDefaults to `false`. Whether or not to allow the `z-forwarded-proto` header.\n\n##### allowFastlyHeader\nDefaults to `false`. Whether or not to allow the `fastly-ssl` header.\n\n\n### Example\n``` javascript\nconst express = require('express');\nconst app     = express();\nconst http    = require('http');\nconst https   = require('https');\nconst fs      = require('fs');\n\nconst sslOptions  = {\n  key: fs.readFileSync('./ssl/privatekey.pem'),\n  cert: fs.readFileSync('./ssl/certificate.pem')\n};\n\nconst server    = http.createServer(app);\nconst sslServer = https.createServer(sslOptions, app);\n\nconst redirectHttps = require('express-redirect-https');\nlet redirectOptions = {\n  allowForwardForHeader: true,\n  httpsPort: 3043\n};\n\n\n// For all routes\napp.use(redirectHttps(redirectOptions));\napp.get('/', function(request, response, next) {\n  response.send('HTTPS ALL THE THINGS');\n});\n\n\n// Or for a single\napp.get('/', redirectHttps(redirectOptions), function(request, response, next) {\n  response.send('HTTPS ALL THE THINGS');\n});\n\n\nserver.listen(3000);\nsslServer.listen(3043);\n```\n\n### Testing\n\nNavigate to the `./test/ssl/` directory and generate keys for the ssl test server to use.\n\n``` bash\nopenssl genrsa -out privatekey.pem 1024\nopenssl req -new -key privatekey.pem -out certrequest.csr\nopenssl x509 -req -in certrequest.csr -signkey privatekey.pem -out certificate.pem\n```\n\nThen run `npm run test`.\n\n### License\n\nHeadgear is licensed under the MIT license.\n\nCopyright (c) 2016 Bryan Kizer\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","created":"2016-08-19T15:45:01.582Z","modified":"2016-08-19T15:45:01.582Z","lastPublisher":{"name":"belsrc","email":"bryan@bryanckizer.com"},"owners":[{"name":"belsrc","email":"bryan@bryanckizer.com"}],"other":{"_attachments":{},"_from":".","_id":"express-redirect-https","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/express-redirect-https-0.1.0.tgz_1471621500316_0.3574989312328398"},"_npmUser":{"name":"belsrc","email":"bryan@bryanckizer.com"},"_npmVersion":"2.15.9","_rev":"1-803d29e9764fdf986de04d45c5d896cf","_shasum":"ad559c5aea795baed2b7cf90206b1a0c5b8c86e6","author":{"name":"Bryan Kizer"},"bugs":{"url":"https://github.com/belsrc/express-redirect-https/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"ad559c5aea795baed2b7cf90206b1a0c5b8c86e6","tarball":"http://registry.npmjs.org/express-redirect-https/-/express-redirect-https-0.1.0.tgz"},"maintainers":[{"name":"belsrc","email":"bryan@bryanckizer.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-19T15:45:01.582Z","created":"2016-08-19T15:45:01.582Z","0.1.0":"2016-08-19T15:45:01.582Z"}}}