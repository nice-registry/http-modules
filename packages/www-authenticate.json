{"name":"www-authenticate","description":"Provides the functionality needed for a client to use HTTP Basic or Digest authentication.  Also provides primitives for parsing WWW-Authenticate and Authentication_Info headers.","version":"0.6.2","homepage":"https://github.com/randymized/www-authenticate","repository":"https://github.com/randymized/www-authenticate","licenses":[{"type":"MIT","url":"https://github.com/randymized/www-authenticate/blob/master/LICENSE-MIT"}],"main":"./index.js","engines":{"node":">= 0.8.0"},"scripts":{"test":"grunt simplemocha"},"devDependencies":{"mocha":"~1.9.0","should":"~1.2.2","grunt-contrib-jshint":"~0.4.0","grunt-simple-mocha":"git://github.com/yaymukund/grunt-simple-mocha.git","grunt-contrib-watch":"~0.3.1","grunt":"~0.4.1"},"keywords":["www-authenticate","HTTP","digest","authentication"],"readme":"# www-authenticate [![Build Status](https://secure.travis-ci.org/randymized/www-authenticate.png?branch=master)](http://travis-ci.org/randymized/www-authenticate)\n\n## Documentation\nProvides the functionality needed for a client to use HTTP Basic or Digest authentication.  Also provides primitives for parsing WWW-Authenticate and Authentication_Info headers.\n\nParses the content of a WWW-Authenticate header sent by a server. Interpret the authentication challenge posed. Then generate the credentials for Authorization headers for subsequent requests from the server.\n\n- Supports Basic and Digest authentication schemes.\n- Supports 'auth' quality of protection (qop) and challenges that do not include qop.\n- Supports MD5 and MD5-sess algorithms.\n- Assumes Node.js, but otherwise makes no assumtion about framework.\n\n## Limitations\n- Basic authetication scheme is untested.\n- Included tests only test Digest scheme against the rfc2617 example.\n- Most of the permutations of qop and algorithm have not been tested.\n- Little real-world testing.  That's where you can help!  Report any failures or submit a patch that resolves an authentication failure.\n- Will not parse WWW-Authenticate headers that contain more than one challenge.  Please send an example of one if you find one in the field or modify the parser to parse it.\n- Does not support auth-int qop, but will use auth qop if server allows either.  Support could surely be added in the future.\n- Response to challenges without qop have not been tested.\n\n## Getting Started\nInstall the module with: `npm install www-authenticate`\nSee examples below.\n\n## Examples\n```javascript\nvar www_authenticate = require('www-authenticate');\nvar on_www_authenticate= www_authenticate(username,password);\n\n// now wait for HTTP/1.1 401 Unauthorized and then parse the WWW_Authenticate header\nvar authenticator= on_www_authenticate(req.header.www_authenticate);\nif (authenticator.err) throw err; // or do something similarly drastic\n\n//... now, whenever you make a request, add an Authorization header:\nresponse.setHeader('authorize', authenticator.authorize('GET',url));\n```\n---\n```javascript\nvar parsers = require('www-authenticate').parsers;\nvar parsed= new parsers.WWW_Authenticate(request.headers['www-authenticate']);\nconsole.log(parsed.scheme);\nconsole.log(parsed.parms.nonce);\n\nvar parsed= new parsers.Authentication_Info(request.headers['authentication-info']);\nconsole.log(parsed.parms.nonce);\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n\n## License\nCopyright (c) 2013 Randy McLaughlin\nLicensed under the MIT license.\n","versions":[{"number":"0.1.0","date":"2013-08-02T17:38:27.340Z"},{"number":"0.1.1","date":"2013-08-03T23:19:01.769Z"},{"number":"0.2.0","date":"2013-08-04T02:52:57.306Z"},{"number":"0.3.0","date":"2013-08-05T03:10:17.397Z"},{"number":"0.4.0","date":"2013-08-14T16:34:06.272Z"},{"number":"0.5.0","date":"2013-08-20T15:55:09.415Z"},{"number":"0.5.1","date":"2013-08-20T16:36:41.044Z"},{"number":"0.5.2","date":"2013-08-20T16:59:57.161Z"},{"number":"0.6.0","date":"2013-08-22T21:14:46.552Z"},{"number":"0.6.1","date":"2013-08-23T03:24:14.732Z"},{"number":"0.6.2","date":"2013-08-30T20:55:50.158Z"}],"created":"2013-08-02T17:38:26.056Z","modified":"2013-08-30T20:55:50.158Z","lastPublisher":{"name":"randymized","email":"8b629a9884@snkmail.com"},"owners":[{"name":"randymized","email":"8b629a9884@snkmail.com"}],"other":{"_attachments":{},"_from":".","_id":"www-authenticate","_npmUser":{"name":"randymized","email":"8b629a9884@snkmail.com"},"_npmVersion":"1.2.18","_rev":"1-ebc24fd701f6cf6543f1cbf0dfb5c010","author":{"name":"Randy McLaughlin","email":"ot40ddj02@sneakemail.com"},"bugs":{"url":"https://github.com/randymized/www-authenticate/issues"},"directories":{},"dist-tags":{"latest":"0.6.2"},"dist":{"shasum":"b7a7d487bdc5a8b423a4d8fd5f9c661adde50ebf","tarball":"http://registry.npmjs.org/www-authenticate/-/www-authenticate-0.6.2.tgz"},"maintainers":[{"name":"randymized","email":"8b629a9884@snkmail.com"}],"readmeFilename":"README.md","time":{"modified":"2013-08-30T20:55:50.158Z","created":"2013-08-02T17:38:26.056Z","0.1.0":"2013-08-02T17:38:27.340Z","0.1.1":"2013-08-03T23:19:01.769Z","0.2.0":"2013-08-04T02:52:57.306Z","0.3.0":"2013-08-05T03:10:17.397Z","0.4.0":"2013-08-14T16:34:06.272Z","0.5.0":"2013-08-20T15:55:09.415Z","0.5.1":"2013-08-20T16:36:41.044Z","0.5.2":"2013-08-20T16:59:57.161Z","0.6.0":"2013-08-22T21:14:46.552Z","0.6.1":"2013-08-23T03:24:14.732Z","0.6.2":"2013-08-30T20:55:50.158Z"}}}