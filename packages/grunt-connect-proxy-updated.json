{"name":"grunt-connect-proxy-updated","description":"Provides a http proxy as middleware for grunt connect.","version":"0.2.1","homepage":"https://github.com/mrobert44/grunt-connect-proxy-updated","repository":"https://github.com/mrobert/grunt-connect-proxy-updated","licenses":[{"type":"MIT","url":"https://github.com/mrobert44/grunt-connect-proxy-updated/blob/master/LICENSE-MIT"}],"main":"Gruntfile.js","engines":{"node":">= 0.10.0"},"scripts":{"test":"grunt test"},"dependencies":{"http-proxy":"~1.11.0","lodash":"~0.9.0"},"devDependencies":{"grunt-contrib-jshint":"~0.1.1","grunt-contrib-clean":"~0.4.0","grunt-contrib-nodeunit":"~0.4.1","grunt":">=0.4.1","grunt-contrib-connect":"~0.5.0"},"peerDependencies":{"grunt":">=0.4.1"},"keywords":["gruntplugin","proxy","connect","http","grunt"],"gitHead":"9f1044d48a8edf3c34c81072a9b6416ea573c359","readme":"# grunt-connect-proxy-updated\r\n\r\n> Provides a http proxy as middleware for the grunt-contrib-connect plugin.\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `>=0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-connect-proxy-updated --save-dev\r\n```\r\n\r\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-connect-proxy-updated');\r\n```\r\n\r\n## Adapting the  \"connect\" task\r\n\r\n### Overview\r\n\r\n#### Proxy Configuration\r\nIn your project's Gruntfile, add a section named `proxies` to your existing connect definition.\r\n\r\n```js\r\ngrunt.initConfig({\r\n    connect: {\r\n        server: {\r\n            options: {\r\n                port: 9000,\r\n                hostname: 'localhost'\r\n            },\r\n            proxies: [\r\n                {\r\n                    context: '/cortex',\r\n                    host: '10.10.2.202',\r\n                    port: 8080,\r\n                    https: false,\r\n                    xforward: false,\r\n                    headers: {\r\n                        \"x-custom-added-header\": value\r\n                    },\r\n                    hideHeaders: ['x-removed-header']\r\n                }\r\n            ]\r\n        }\r\n    }\r\n})\r\n```\r\n#### Adding the middleware\r\n\r\n##### With Livereload\r\n\r\nAdd the middleware call from the connect option middleware hook\r\n```js\r\n        connect: {\r\n            livereload: {\r\n                options: {\r\n                    middleware: function (connect, options) {\r\n                        if (!Array.isArray(options.base)) {\r\n                            options.base = [options.base];\r\n                        }\r\n\r\n                        // Setup the proxy\r\n                        var middlewares = [require('grunt-connect-proxy-updated/lib/utils').proxyRequest];\r\n\r\n                        // Serve static files.\r\n                        options.base.forEach(function(base) {\r\n                            middlewares.push(connect.static(base));\r\n                        });\r\n\r\n                        // Make directory browse-able.\r\n                        var directory = options.directory || options.base[options.base.length - 1];\r\n                        middlewares.push(connect.directory(directory));\r\n\r\n                        return middlewares;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n##### Without Livereload\r\n\r\nIt is possible to add the proxy middleware without Livereload as follows:\r\n\r\n```js\r\n   // server\r\n    connect: {\r\n      server: {\r\n        options: {\r\n          port: 8000,\r\n          base: 'public',\r\n          logger: 'dev',\r\n          hostname: 'localhost',\r\n          middleware: function (connect, options, defaultMiddleware) {\r\n             var proxy = require('grunt-connect-proxy-updated/lib/utils').proxyRequest;\r\n             return [\r\n                // Include the proxy first\r\n                proxy\r\n             ].concat(defaultMiddleware);\r\n          }\r\n        },\r\n        proxies: [ /* as defined above */ ]\r\n      }\r\n  }\r\n```\r\n\r\n### Adding the configureProxy task to the server task\r\nFor the server task, add the configureProxies task before the connect task\r\n```js\r\n    grunt.registerTask('server', function (target) {\r\n        grunt.task.run([\r\n            'clean:server',\r\n            'compass:server',\r\n            'configureProxies:server',\r\n            'livereload-start',\r\n            'connect:livereload',\r\n            'open',\r\n            'watch'\r\n        ]);\r\n    });\r\n```\r\n\r\n**IMPORTANT**: You must specify the connect target in the `configureProxies` task.\r\n\r\n### Options\r\nThe available configuration options from a given proxy are generally the same as what is provided by the underlying [httpproxy](https://github.com/nodejitsu/node-http-proxy) library\r\n\r\n#### options.context\r\nType: `String` or `Array`\r\n\r\nThe context(s) to match requests against. Matching requests will be proxied. Should start with /. Should not end with /\r\nMultiple contexts can be matched for the same proxy rule via an array such as:\r\ncontext: ['/api', '/otherapi']\r\n\r\n#### options.host\r\nType: `String`\r\n\r\nThe host to proxy to. Should not start with the http/https protocol.\r\n\r\n#### options.port\r\nType: `Number`\r\nDefault: 80\r\n\r\nThe port to proxy to.\r\n\r\n#### options.https\r\nType: `Boolean`\r\nDefault: false\r\n\r\n if the proxy should target a https end point on the destination server\r\n\r\n#### options.secure\r\nType: `Boolean`\r\nDefault: true\r\n\r\n true/false, if you want to verify the SSL Certs (Avoids: SELF_SIGNED_CERT_IN_CHAIN errors when set to false)\r\n\r\nWhether to proxy with https\r\n\r\n#### options.xforward:\r\nType: `Boolean`\r\nDefault: false\r\n\r\nWhether to add x-forward headers to the proxy request, such as\r\n  \"x-forwarded-for\": \"127.0.0.1\",\r\n  \"x-forwarded-port\": 50892,\r\n  \"x-forwarded-proto\": \"http\"\r\n\r\n\r\n#### options.appendProxies\r\nType: `Boolean`\r\nDefault: true\r\n\r\nSet to false to isolate multi-task configuration proxy options from parent level instead of appending them.\r\n\r\n#### options.rewrite\r\nType: `Object`\r\n\r\nAllows rewrites of url (including context) when proxying. The object's keys serve as the regex used in the replacement operation. As an example the following proxy configuration will update the context when proxying:\r\n\r\n```js\r\nproxies: [\r\n    context: '/context',\r\n    host: 'host',\r\n    port: 8080,\r\n    rewrite: {\r\n        '^/removingcontext': '',\r\n        '^/changingcontext': '/anothercontext',\r\n        '^/updating(context)': function(match, p1) {\r\n            return '/new' + p1;\r\n        }\r\n    }\r\n]\r\n```\r\n\r\n#### options.headers\r\nType: `Object`\r\n\r\nA map of headers to be added to proxied requests.\r\n\r\n#### options.hostRewrite\r\nType: `String`\r\n\r\nRewrites the location hostname on 30X redirects.\r\n\r\n#### options.hideHeaders\r\nType: `Array`\r\n\r\nAn array of headers that should be removed from the server's response.\r\n\r\n#### options.errorHandler\r\nType: `Function`\r\n\r\nAnother middleware that will be called if proxy request fails.\r\nExample:\r\n```js\r\n    errorHandler: function(req, res, next, err) {\r\n        if (err.code === 404) {\r\n            res.send('Some error page');\r\n        } else {\r\n            next();\r\n        }\r\n    }\r\n```\r\n\r\n#### options.ws\r\nType: `Boolean`\r\nDefault: false\r\n\r\nSet to true to proxy websockets.\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n#### Multi-server proxy configuration\r\n\r\ngrunt-contrib-connect multi-server configuration is supported. You can define _proxies_ blocks in per-server options and refer to those blocks in task invocation.\r\n\r\n```js\r\ngrunt.initConfig({\r\n    connect: {\r\n            options: {\r\n                port: 9000,\r\n                hostname: 'localhost'\r\n            },\r\n            server2: {\r\n                proxies: [\r\n                    {\r\n                        context: '/cortex',\r\n                        host: '10.10.2.202',\r\n                        port: 8080,\r\n                        https: false,\r\n                    }\r\n                ]\r\n            },\r\n            server3: {\r\n                appendProxies: false,\r\n                proxies: [\r\n                    {\r\n                        context: '/api',\r\n                        host: 'example.org'\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n})\r\n\r\ngrunt.registerTask('e2etest', function (target) {\r\n    grunt.task.run([\r\n        'configureProxies:server2',\r\n        'open',\r\n        'karma'\r\n    ]);\r\n});\r\n```\r\n\r\n\r\n## Release History\r\n* 0.1.0 Initial release\r\n* 0.1.1 Fix changeOrigin\r\n* 0.1.2 Support multiple server definitions, bumped to grunt 0.4.1 (thanks to @lauripiispanen)\r\n* 0.1.3 Bumped http-proxy dependency to 0.10.2\r\n* 0.1.4 Added proxy rewrite support (thanks to @slawrence)\r\n* 0.1.5 Default rejectUnauthorized to false to allow self-signed certificates over SSL\r\n* 0.1.6 Add xforward option, added support for context arrays, added debug logging\r\n* 0.1.7 Added WebSocket support (thanks for @killfill), Headers support (thanks to @gadr), various docs fixed\r\n* 0.1.8 Minor websocket bug fix\r\n* 0.1.10 Minor bug fix\r\n* 0.1.11 Fix Websocket support on Node 0.10 - Bumped http-proxy dependency to 1.1.4, Removed unsupported http-proxy options (rejectUnauthorized, timeout, changeOrigin)\r\n* 0.2.0 Added hidden headers support\r\n* 0.2.1 Added support for Grunt version >= 0.4.1\r\n","versions":[{"number":"0.2.0","date":"2016-08-23T09:37:32.856Z"},{"number":"0.2.1","date":"2016-08-23T09:50:26.455Z"}],"created":"2016-08-23T09:37:32.856Z","modified":"2016-08-23T09:50:26.455Z","lastPublisher":{"name":"mrobert44","email":"mathieu.robert.sopra@gmail.com"},"owners":[{"name":"mrobert44","email":"mathieu.robert.sopra@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"grunt-connect-proxy-updated","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/grunt-connect-proxy-updated-0.2.1.tgz_1471945824562_0.8703289788682014"},"_npmUser":{"name":"mrobert44","email":"mathieu.robert.sopra@gmail.com"},"_npmVersion":"3.3.6","_rev":"1-f010c4f72665f2b56559760a01a5398b","_shasum":"7cf164bede89c4781605003ddbbb68d9e11ee486","author":{"name":"mrobert44","email":"mathieu.robert.sopra@gmail.com"},"bugs":{"url":"https://github.com/mrobert44/grunt-connect-proxy-updated/issues"},"directories":{},"dist-tags":{"latest":"0.2.1"},"dist":{"shasum":"7cf164bede89c4781605003ddbbb68d9e11ee486","tarball":"http://registry.npmjs.org/grunt-connect-proxy-updated/-/grunt-connect-proxy-updated-0.2.1.tgz"},"maintainers":[{"name":"mrobert44","email":"mathieu.robert.sopra@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-23T09:50:26.455Z","created":"2016-08-23T09:37:32.856Z","0.2.0":"2016-08-23T09:37:32.856Z","0.2.1":"2016-08-23T09:50:26.455Z"}}}