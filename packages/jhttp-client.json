{"name":"jhttp-client","version":"1.2.9","description":"node.js promise-based http client","main":"index.js","dependencies":{"chai":"^3.5.0","cheerio":"^0.20.0","cookie-manager":"0.0.16","iconv-lite":"^0.4.13","lzw-stream":"^1.0.0","mime":"^1.3.4","q":"^1.4.1","q-io":"^1.13.2","stream-que":"^1.0.2","user-agent-string-generator":"0.0.2"},"devDependencies":{"body-parser":"^1.15.0","compression-zlib":"^2.3.0","express":"^4.13.4","mocha":"^2.4.5","multer":"^1.1.0"},"scripts":{"test":"mocha"},"license":"ISC","gitHead":"83d9c9ea06aea5fe5b4621810183ff7805c5e935","versions":[{"number":"0.0.1","date":"2014-08-15T15:59:15.171Z"},{"number":"0.0.2","date":"2014-08-15T17:57:26.825Z"},{"number":"0.0.3","date":"2014-08-17T18:45:06.442Z"},{"number":"0.0.4","date":"2014-08-17T19:14:39.108Z"},{"number":"0.0.5","date":"2014-08-17T19:18:00.606Z"},{"number":"0.0.6","date":"2014-08-17T19:18:53.746Z"},{"number":"0.0.7","date":"2014-08-17T19:20:20.067Z"},{"number":"0.0.8","date":"2014-08-17T19:22:10.312Z"},{"number":"0.0.9","date":"2014-08-17T19:25:11.210Z"},{"number":"0.0.10","date":"2014-08-18T10:24:25.784Z"},{"number":"0.0.11","date":"2014-08-18T10:45:26.122Z"},{"number":"0.0.12","date":"2014-08-18T14:42:08.504Z"},{"number":"0.0.13","date":"2014-08-18T19:08:11.706Z"},{"number":"0.0.14","date":"2014-08-18T20:53:22.541Z"},{"number":"0.0.15","date":"2014-08-18T20:59:40.265Z"},{"number":"0.0.16","date":"2014-08-18T21:08:30.635Z"},{"number":"0.0.17","date":"2014-09-08T18:01:04.854Z"},{"number":"0.0.18","date":"2014-09-12T19:41:34.096Z"},{"number":"0.0.19","date":"2014-09-12T19:43:25.732Z"},{"number":"0.0.20","date":"2014-09-12T21:53:02.040Z"},{"number":"0.0.21","date":"2014-09-13T13:40:02.634Z"},{"number":"0.1.0","date":"2014-12-08T06:49:12.570Z"},{"number":"0.1.1","date":"2015-01-28T21:38:49.605Z"},{"number":"0.1.2","date":"2015-02-09T19:46:14.121Z"},{"number":"0.1.3","date":"2015-02-10T10:03:58.560Z"},{"number":"0.1.4","date":"2015-03-13T12:22:45.753Z"},{"number":"0.1.5","date":"2015-03-13T12:29:58.095Z"},{"number":"0.1.6","date":"2015-03-15T12:24:29.049Z"},{"number":"0.1.7","date":"2015-06-12T10:27:36.743Z"},{"number":"0.1.8","date":"2015-06-12T11:20:27.898Z"},{"number":"1.0.0","date":"2016-03-28T05:04:26.595Z"},{"number":"1.0.1","date":"2016-03-28T05:08:22.748Z"},{"number":"1.0.2","date":"2016-03-28T05:12:11.810Z"},{"number":"1.0.3","date":"2016-03-30T11:37:32.904Z"},{"number":"1.1.3","date":"2016-04-08T21:44:29.822Z"},{"number":"1.1.4","date":"2016-04-12T05:46:03.894Z"},{"number":"1.1.5","date":"2016-04-19T16:47:17.086Z"},{"number":"1.1.6","date":"2016-04-20T07:54:20.907Z"},{"number":"1.1.7","date":"2016-04-21T17:08:02.084Z"},{"number":"1.1.8","date":"2016-06-02T13:05:14.286Z"},{"number":"1.2.8","date":"2017-05-03T06:56:51.118Z"},{"number":"1.2.9","date":"2017-05-03T07:02:08.568Z"}],"readme":"#jhttp-client\n\nnode.js promise-based http client\n\n##features\n- HTTP & HTTPS\n- GET, POST, PUT, DELETE, HEAD, PATCH\n- built-in [cookie manager](https://www.npmjs.org/package/cookie-manager)\n- return string as response `body`\n- return jQuery like object as response `body` ([cheerio](https://www.npmjs.org/package/cheerio))\n- return json object as response `body`\n- return buffer as response `body`\n- support file upload or other arbitrary HTTP data transfer\n\n##install\n```javascript\nnpm install jhttp-client\n```\n\n##usage\n```javascript\n\nvar HTTPC = require(\"jhttp-client\");\nvar httpClient = HTTPC();\n\nhttpClient.request(\"google.com\")\n.then(function( response ){\n\n  console.log(response.request.url);\n  console.log(response.status);\n  console.log(response.headers);\n  console.log(response.body);    \n\n})\n.fail(function( response ){\n  \n  console.log(response.request.url);\n  console.log(response.status);\n  console.log(response.headers);\n  console.log(response.body);\n  console.log(response.text);\n\n});\n\n```\n\n---\n\n##Options\n```javascript\n// global options\nvar httpClient = HTTPC( options );\n\n// per-request options\n// will extend global options\nhttpClient.request( options );\n```\n\n###`options` [object]\n```javascript\n{\n  auth               : '',\n  accept             : 'text/html, text/plain, application/json, */*',\n  output             : 'string',\n  expect             : 200,\n  followRedirect     : true,\n  useCookie          : true,\n  method             : \"get\",\n  url                : \"example.com\",\n  data               : false,\n  charset            : \"utf-8\",\n  proxy              : '',\n  ssl                : {\n    rejectUnauthorized : false,\n  },\n  headers            : {\n    'user-agent'       : '',\n    'Accept-Encoding'  : 'gzip;q=0.9, deflate;q=0.5, identity;q=0.2'\n  },\n  agent          : {\n    keepAlive          : true\n  },\n  log          : false,\n  stream       : false\n}\n\n// above are the default values\n```\n\n**options.method** \"get\", \"post\", \"put\", \"delete\", \"head\", \"patch\".\n\n**options.url** \"http://domain.com/path\" or \"https://domain.com\" or \"domain.com\" or \"http://unix:/the/socket:/uri/path?par=stuff\".\n\n**options.accept** will be used in `Accept` headers.\n\n- `options.accept = \"*/*\"` will be overriden by <br />`options.output = \"json\"` or `options.output = \"$\"`.\n\n**options.output** \"string\", \"buffer\", \"json\", \"$\". The `$` will output jQuery-like object.\n\n- `options.output = \"json\"` will change `options.accept` from `*/*` to `application/json`.\n\n- `options.output = \"$\"` will change `options.accept` from `*/*` to `text/html`.\n\n**options.expect** HTTP status to expect. Will *reject* the *promise* if not fulfilled.\n\n- Use `options.expect = false` to accept every HTTP status\n\n**options.charset** will be used in `Accept` and `Accept-Charset` headers.\n\n**options.followRedirect**. If `true`, will not *reject* the *promise* on redirect status (3**).\n\n**options.useCookie** will save cookie and use them for future requests with the same domain.\n\n- `options.useCookie` Will be overriden by `options.headers.cookie` value.\n\n**options.auth** basic HTTP auth: \"user:password\".\n\n**options.proxy** To make request through a proxy, i.e. http://123.345.543.234:8080\n\n**options.stream** Use stream for request body.\n\n**options.ssl** is used in `tls.connect()`. Read more in the [documentation](http://nodejs.org/api/https.html#https_https_request_options_callback).\n\n**options.headers.accept** will override **options.accept** regardless of **options.output**.\n\n**options.headers[\"accept-charset\"]** will override **options.charset**.\n\n- `accept-encoding` headers will always be `gzip;q=0.9, deflate;q=0.5, identity;q=0.2`, unless overriden with `options.headers[\"accept-encoding\"]`.\n\n---\n\n##Stream\nUse **options.stream** to use stream in handling response body.\n```js\nvar req = httpClient.request({\n  url: 'http://example.com',\n  stream: true\n});\n\nreq.stream\n.on('redirect',function(url){\n  \n  \n\n}).on('headers',function(heads){\n  \n  console.log(heads);\n\n}).on('data',function(c){\n\n    process.stdout.write(c);\n\n}).on('end',function(){\n\n    console.log('--------------------------');\n    console.log('All data has been printed');\n\n});\n\n// You can still use promise for \nreq.then(function( res ){\n  \n  // res.body will be empty\n  console.log( res.body );\n\n})\n\n```\n\n##Data Transfer\n\nUse `options.data` object to transfer data. Below are some example of data transfers.\n\n**NOTE:** `GET` request will not use the `options.data` attribute.\n\n####HTML form upload\nThe following will create an `application/x-www-form-urlencoded` data transfer:\n```javascript\n{\n  content:{\n    name: 'JohnDoe',\n    occupation: 'Awesome Staff'\n  }\n}\n```\n\nWill create:\n```text\nPOST /path HTTP/1.1\nHost: domain.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 39\n\nname=JohnDoe&occupation=Awesome%20Staff\n```\n\nA `multipart/form-data` data transfer can also be created:\n```javascript\n{\n  content: {\n      name: 'JohnDoe',\n      occupation: 'Awesome Staff'\n  },\n  file:[\n    { \n      // will read the file and send it\n      name:'uploaded1',\n      filename: 'some/file.txt' \n    },\n    {\n      // construct your own\n      name:'uploadedFile',\n      filename: 'file2.jpg',\n      mime: 'image/jpg',\n      content: 'jpeg strings.....'\n    },\n    {\n      // use automatic MIME based on `filename` extension\n      name:'uploadedFile',\n      filename: 'file3.jpg',\n      content: 'jpeg strings.....'\n    }\n  ]\n}\n```\n\nWill create:\n```text\nPOST /path HTTP/1.1\nHost: domain.com\nContent-Type: multipart/form-data; boundary=o98aywaw74eyo\nContent-Length: 2234766\n\n--o98aywaw74eyo\nContent-Disposition: form-data; name=\"name\"\n\nJohnDoe\n--o98aywaw74eyo\nContent-Disposition: form-data; name=\"occupation\"\n\nAwesome Staff\n--o98aywaw74eyo\nContent-Disposition: form-data; name=\"uploaded1\"; filename=\"file.txt\"\nContent-Type: text/plain\n\ntext here\n--o98aywaw74eyo\nContent-Disposition: form-data; name=\"uploadedFile\"; filename=\"file2.jpg\"\nContent-Type: image/jpg\n\nfile2.jpg content here ...\n--o98aywaw74eyo\nContent-Disposition: form-data; name=\"uploadedFile\"; filename=\"file3.jpg\"\nContent-Type: image/jpg\n\nfile3.jpg content here ...\n--o98aywaw74eyo--\n```\n\n\n####Arbitrary Data Transfer\nYou can construct everything yourself:\n```javascript\n{\n  type : 'application/xml',\n  content: '<some>XML</some>'\n}\n```\nOr, using stream:\n```javascript\n{\n  type : 'text/csv',\n  filename: '/home/some/path/file.csv'\n}\n```\nRemember that using `options.data.type` will override `Content-Type` header.\n\nUse it only to send strings with `options.data.content` or `options.data.filename`, unless you know what you're doing..\n\n\n\ncheers,\n\n[jujiyangasli.com](http://jujiyangasli.com)\n","created":"2014-08-15T15:59:15.171Z","modified":"2017-05-03T07:02:08.568Z","lastPublisher":{"name":"jujiyangasli","email":"jujiyangasli@gmail.com"},"owners":[{"name":"jujiyangasli","email":"jujiyangasli@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"jhttp-client","_nodeVersion":"6.9.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/jhttp-client-1.2.9.tgz_1493794928327_0.11857601394876838"},"_npmUser":{"name":"jujiyangasli","email":"jujiyangasli@gmail.com"},"_npmVersion":"3.10.9","_rev":"3-e85821996e8b1e40ffca264861143322","_shasum":"320c6337537717deedffc96a3ab098e54ff9a078","author":"","directories":{"test":"test"},"dist-tags":{"latest":"1.2.9"},"dist":{"shasum":"320c6337537717deedffc96a3ab098e54ff9a078","tarball":"https://registry.npmjs.org/jhttp-client/-/jhttp-client-1.2.9.tgz"},"maintainers":[{"name":"jujiyangasli","email":"jujiyangasli@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-03T07:02:08.568Z","created":"2014-08-15T15:59:15.171Z","0.0.1":"2014-08-15T15:59:15.171Z","0.0.2":"2014-08-15T17:57:26.825Z","0.0.3":"2014-08-17T18:45:06.442Z","0.0.4":"2014-08-17T19:14:39.108Z","0.0.5":"2014-08-17T19:18:00.606Z","0.0.6":"2014-08-17T19:18:53.746Z","0.0.7":"2014-08-17T19:20:20.067Z","0.0.8":"2014-08-17T19:22:10.312Z","0.0.9":"2014-08-17T19:25:11.210Z","0.0.10":"2014-08-18T10:24:25.784Z","0.0.11":"2014-08-18T10:45:26.122Z","0.0.12":"2014-08-18T14:42:08.504Z","0.0.13":"2014-08-18T19:08:11.706Z","0.0.14":"2014-08-18T20:53:22.541Z","0.0.15":"2014-08-18T20:59:40.265Z","0.0.16":"2014-08-18T21:08:30.635Z","0.0.17":"2014-09-08T18:01:04.854Z","0.0.18":"2014-09-12T19:41:34.096Z","0.0.19":"2014-09-12T19:43:25.732Z","0.0.20":"2014-09-12T21:53:02.040Z","0.0.21":"2014-09-13T13:40:02.634Z","0.1.0":"2014-12-08T06:49:12.570Z","0.1.1":"2015-01-28T21:38:49.605Z","0.1.2":"2015-02-09T19:46:14.121Z","0.1.3":"2015-02-10T10:03:58.560Z","0.1.4":"2015-03-13T12:22:45.753Z","0.1.5":"2015-03-13T12:29:58.095Z","0.1.6":"2015-03-15T12:24:29.049Z","0.1.7":"2015-06-12T10:27:36.743Z","0.1.8":"2015-06-12T11:20:27.898Z","1.0.0":"2016-03-28T05:04:26.595Z","1.0.1":"2016-03-28T05:08:22.748Z","1.0.2":"2016-03-28T05:12:11.810Z","1.0.3":"2016-03-30T11:37:32.904Z","1.1.3":"2016-04-08T21:44:29.822Z","1.1.4":"2016-04-12T05:46:03.894Z","1.1.5":"2016-04-19T16:47:17.086Z","1.1.6":"2016-04-20T07:54:20.907Z","1.1.7":"2016-04-21T17:08:02.084Z","1.1.8":"2016-06-02T13:05:14.286Z","1.2.8":"2017-05-03T06:56:51.118Z","1.2.9":"2017-05-03T07:02:08.568Z"}}}