{"name":"summoner","version":"0.2.0","description":"A caching http requester for consuming APIs on the server.","main":"index.js","scripts":{"test":"./bin/test"},"repository":"https://github.com/OtterCode/summoner","keywords":["api","consumer","fetch","cache","simple","get","http","https"],"license":"MIT","homepage":"https://github.com/OtterCode/summoner#readme","dependencies":{"node-cache":"3.2.1","request":"2.71.0"},"devDependencies":{"http-server":"^0.9.0","tape":"^4.5.1"},"gitHead":"38ea207113859326d9d860353f3b31ff4e3e14eb","versions":[{"number":"0.1.0","date":"2016-04-18T22:00:19.922Z"},{"number":"0.2.0","date":"2016-04-19T19:33:39.098Z"}],"readme":"# Summoner\nA caching http requester for consuming APIs on the server.\n\n## What it is\nSummoner will get data from a server, parse it, cache it for a configurable length of time, and hand it back off to you as many times as you like until it expires.\n\nSummoner is not yet battle-hardened, so any error reports or pull requests are welcomed.\n\n## How to use it\n`summoner(opts || url, callback)`\n\nThe callback receives (err, response).\n\n````javascript\nvar summoner = require('summoner');\nsummoner('http://jsonplaceholder.typicode.com/posts/1', (err, json) => {\n  console.log(json) // All that wonderful JSON data, pre-parsed, as often as you like, almost guilt-free!\n})\n\nsummoner({url: 'http://www.google.com/humans.txt', type: \"text\"}, (err, raw) => {\n  console.log(raw) // Raw, fierce, unedited text!\n})\n````\nThe current options and defaults are as follows:\n### maxAttempts: 5\n  This is how many times summoner will try to get the data from the server before giving up and returning an error.\n### type: 'application/json'\n  The type of data we're getting, and the sort of processing that needs doing. This should get expanded over time. At the moment, anything other than 'application/json' or 'json' will get returned as plain text. Alternatively, you may add your own processing function by registering it with summoner:\n  ````javascript\n    summoner.register('myType', (body) => { /*do stuff, then return it.*/ } )\n    summoner({url: 'www.example.com', type: 'myType'}, callback)\n  ````\n### ttl: 60*60 (one hour)\n  Time To Live, how long in seconds the cache will keep ahold of the parsed data before fetching again from the server.\n### auth: undefined\n  Auth is an object, currently only useful for basic auth. The format is as follows:\n````\n{\n  \"user\": \"username\",\n  \"pass\": \"password\"\n}\n````\n\n\n## What it's made of\n[Node-cache](https://www.npmjs.com/package/node-cache) makes up the backbone of the beast, while the fabulous and extensive [request](https://www.npmjs.com/package/request) library is its sinews. The summoner's resolve is tested with the slim and deceptive [http-server](https://www.npmjs.com/package/http-server), and its wit is measured with [tape](https://www.npmjs.com/package/tape).\n","created":"2016-04-18T22:00:19.922Z","modified":"2016-04-19T19:33:39.098Z","lastPublisher":{"name":"ottercoder","email":"email@ottercode.io"},"owners":[{"name":"ottercoder","email":"email@ottercode.io"}],"other":{"_attachments":{},"_from":".","_id":"summoner","_nodeVersion":"5.10.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/summoner-0.2.0.tgz_1461094418633_0.036433084635064006"},"_npmUser":{"name":"ottercoder","email":"email@ottercode.io"},"_npmVersion":"3.8.3","_rev":"1-0a8ea08eee53c543ac0a847e5a96d3d0","_shasum":"0dcff8a77ef1a9eef251362d0b0a73f5830ff60d","author":{"name":"Emmett Raymond"},"bugs":{"url":"https://github.com/OtterCode/summoner/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"0dcff8a77ef1a9eef251362d0b0a73f5830ff60d","tarball":"http://registry.npmjs.org/summoner/-/summoner-0.2.0.tgz"},"maintainers":[{"name":"ottercoder","email":"email@ottercode.io"}],"readmeFilename":"README.md","time":{"modified":"2016-04-19T19:33:39.098Z","created":"2016-04-18T22:00:19.922Z","0.1.0":"2016-04-18T22:00:19.922Z","0.2.0":"2016-04-19T19:33:39.098Z"}}}