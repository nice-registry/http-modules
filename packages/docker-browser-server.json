{"name":"docker-browser-server","version":"1.2.0","description":"Spawn and expose docker containers over http and websockets","main":"index.js","dependencies":{"cors":"^2.4.2","docker-browser-console":"^5.0.0","freeport":"^1.0.3","minimist":"^1.1.0","pump":"^1.0.0","request":"^2.45.0","root":"^2.0.0","send":"^0.10.1","websocket-stream":"^1.0.2","ws":"^0.4.32"},"devDependencies":{},"bin":{"docker-browser-server":"./bin.js"},"scripts":{"start":"node bin.js"},"repository":"https://github.com/mafintosh/docker-browser-server","license":"MIT","homepage":"https://github.com/mafintosh/docker-browser-server","gitHead":"2e20faf450a0eaea3ee96e686170f84088ab746f","versions":[{"number":"1.0.0","date":"2014-10-23T16:01:31.526Z"},{"number":"1.0.1","date":"2014-10-25T11:33:32.137Z"},{"number":"1.0.2","date":"2014-10-25T14:02:55.979Z"},{"number":"1.1.0","date":"2015-04-07T15:11:03.628Z"},{"number":"1.2.0","date":"2015-09-16T13:35:12.899Z"}],"readme":"# docker-browser-server\n\nSpawn and expose docker containers over http and websockets\n\n```\nnpm install -g docker-browser-server\n```\n\nRunning the above will expose a command line tool called `docker-browser-server`.\nTo run the server do\n\n```\ndocker-browser-server docker-image-name --port 8080\n```\n\nMake sure you pulled `docker-image-name` from a docker registry first.\nRunning the above will start the server on port 8080\n\nVisit http://localhost:8080 after to attach to a container using a web browser.\n\n## Spawn a new container\n\nTo spawn a new container create a websocket to the server and pipe it to a [docker-browser-console](https://github.com/mafintosh/docker-browser-console) instance\n\n``` js\n// using browserify\nvar docker = require('docker-browser-console')\nvar websocket = require('websocket-stream')\n\nvar container = docker()\nvar socket = websocket('ws://localhost:8080')\n\ncontainer.appendTo(document.body)\n\nsocket.pipe(container).pipe(socket)\n```\n\nA demo interface is available if you simply visit http://localhost:8080 after starting the server\n\n## Expose filesystem\n\nIf you run [expose-fs](https://github.com/mafintosh/expose-fs) inside your container the containers\nfile system will be exposed using the following rest api\n\n* `GET /files/{container}/{path}` Get a file or directory listing\n* `PUT /files/{container}/{path}` Write a new file with the http body\n* `POST /files/{container}/{path}` Create a new directory\n\n## Expose a http server\n\nWhen you spawn a new container a special env var called `$HOST` will be set to a http address.\nIf you listen on port 80 inside the container all requests going to `$HOST` will be forwarded to this server.\n\n## Adventure time\n\nCheckout [maxogden/adventure-time](https://github.com/maxogden/adventure-time) for a complete client environment\nthat integrates with docker-browser-server.\n\nThe easiest way to create your own workshop is creating a new Dockerfile and inheriting from the [mafintosh/docker-browser-adventure](https://github.com/mafintosh/docker-adventure-time) image.\nThis will setup expose-fs and install node among other things\n\n```\nFROM mafintosh/docker-adventure-time\nRUN npm install -g your-workshop-stuff\n```\n\n## Programmatic usage\n\n``` js\nvar server = require('docker-browser-server')\n\nvar s = server('mafintosh/dev')\n\ns.on('spawn', function(container) {\n  console.log('spawned new container', container.id)\n})\n\ns.on('kill', function(container) {\n  console.log('killed container', container.id)\n})\n\ns.listen(8080)\n```\n\n## License\n\nMIT\n","created":"2014-10-23T16:01:31.526Z","modified":"2015-09-16T13:35:12.899Z","lastPublisher":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"owners":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"},{"name":"maxogden","email":"max@maxogden.com"}],"other":{"_attachments":{},"_from":".","_id":"docker-browser-server","_nodeVersion":"2.5.0","_npmUser":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"_npmVersion":"2.13.2","_rev":"1-bad327079e3d7a25c4c639fbb724e24d","_shasum":"eb4d18de6419f1564ae64917bcb907f3382c2f6f","author":{"name":"Mathias Buus","url":"@mafintosh"},"bugs":{"url":"https://github.com/mafintosh/docker-browser-server/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"eb4d18de6419f1564ae64917bcb907f3382c2f6f","tarball":"http://registry.npmjs.org/docker-browser-server/-/docker-browser-server-1.2.0.tgz"},"maintainers":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"},{"name":"maxogden","email":"max@maxogden.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-16T13:35:12.899Z","created":"2014-10-23T16:01:31.526Z","1.0.0":"2014-10-23T16:01:31.526Z","1.0.1":"2014-10-25T11:33:32.137Z","1.0.2":"2014-10-25T14:02:55.979Z","1.1.0":"2015-04-07T15:11:03.628Z","1.2.0":"2015-09-16T13:35:12.899Z"}}}