{"name":"spritepack.js","namespace":"spritepack.js","version":"1.0.0-beta1","description":"Spritepack.js is a Javascript code that will help minimize HTTP requests","main":"src/Spritepack.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/madjidtaha/Spritepack.js","keywords":["minimize","spritesheet","optimize","pack","concatenate","reduce","request","image","URI","blob","URL.createObjectURL","magipack.js","magipack-js","spritepack.js","spritepack-js"],"license":"MIT","homepage":"https://github.com/madjidtaha/Spritepack.js","gitHead":"d820323b696a5bef1e1c4b576ce12c92a13fdff7","readme":"Spritepack.js\n===========\n\n[Spritepack.js](https://github.com/madjidtaha/Spritepack.js) is a Javascript code that will help minimize HTTP requests.\nSpritepack.js is a fork of [Magipack.js](https://github.com/keitakun/Magipack.js)\n\nOne of the issues on HTTP load time usually are the number of requests and the preferred method to minimize HTTP requests are generating image [Spritesheets](https://www.google.com/search?q=spritesheet&oq=spritesheet&aqs=chrome..69i57j69i59j69i60.1687j0j7&sourceid=chrome&espv=210&es_sm=91&ie=UTF-8).\n\nThough, using Spritesheets you end up with some other issues such:\n\n* Can't use different compressions for each image\n* Can't use Spritesheets that exceeds 2048x2048 in most browsers\n* Hard to use Spritesheets in *IMG* elements\n* Needs repositioning *background-position* in CSS when Spritesheets changes\n\n### So what [Spritepack.js](https://github.com/madjidtaha/Spritepack.js) does better than Spritesheets?\nIt loads a single file which is a concatenation of binary data of the files you want and a json file which maps the position and the size of each file.\n\nThis way, you can pack up several images with different file formats in a single file without losing compression or metadatas.\n\nThe example files and a python script are in the [examples folder](https://github.com/madjidtaha/Spritepack.js/tree/master/examples) so you can easily generate the pack and config file.\n\n### So what [Spritepack.js](https://github.com/madjidtaha/Spritepack.js) does better than [Magipack.js](https://github.com/keitakun/Magipack.js)?\n\nSpritepack.js bring to Magipack.js Javascript Module support (AMD, CommonJS), it also drop weird IE9 and lower support.\n\n\nBrowser compatibility\n---------------------\nThis examples were tested in Chrome 32, IE10, Safari 7, Firefox 25, Safari iOS 7.\n\nSpritepack.js need browser support of [blob](http://caniuse.com/#search=blob) to work.\n\nThere wasn't any large scale testing for this project yet, so if you find any [issue, please report it](https://github.com/madjidtaha/Spritepack.js/issues).\n\nInstallation\n============\n\n- npm : `npm install -S spritepack.js`\n- bower : `bower install -S spritepack.js`\n\nExamples\n========\n\n[example1-static.html](http://madj.me/lib/Spritepack.js/examples/example1-static.html)\n\n[example2-instance.html](http://madj.me/lib/Spritepack.js/examples/example2-instance.html)\n\n[example3-preloadjs.html](http://madj.me/lib/Spritepack.js/examples/example3-preloadjs.html)\n\n[example4-browserify.html](http://madj.me/lib/Spritepack.js/examples/example4-browserify.html)\n\n### Using as static class\n```javascript\nSpritepack.init();\nSpritepack.onLoadComplete = function()\n{\n\tdocument.getElementById(\"i1\").src = Spritepack.getURI('forkit.gif');\n\tdocument.getElementById(\"i2\").src = Spritepack.getURI('mario.jpg');\n\tdocument.getElementById(\"i3\").src = Spritepack.getURI('Smile.png');\n\tdocument.getElementById(\"container\").style.backgroundImage = 'url(' + Spritepack.getURI('packman_ghost.gif') + ')';\n}\n\nSpritepack.load('images.pack', 'images.json');\n```\n\n### Using as an instance\n```javascript\nvar sp = new Spritepack();\nsp.onLoadComplete = function()\n{\n\t// Here you can use either the instance you created or `this` scope.\n\tdocument.getElementById(\"i1\").src = this.getURI('forkit.gif');\n\tdocument.getElementById(\"i2\").src = sp.getURI('mario.jpg');\n\tdocument.getElementById(\"i3\").src = sp.getURI('Smile.png');\n\tdocument.getElementById(\"container\").style.backgroundImage = 'url(' + sp.getURI('packman_ghost.gif') + ')';\n}\nsp.load('images.pack', 'images.json');\n```\n\n### Using with [Preload.js](http://www.createjs.com/#!/PreloadJS)\n``` javascript\nvar queue = new createjs.LoadQueue();\nqueue.on(\"complete\", handleComplete, this);\nqueue.loadManifest([\n\t{id: \"image\", src:\"images.pack\", type: 'binary'},\n\t{id: \"config\", src:\"images.json\"},\n]);\nfunction handleComplete() {\n\tvar sp = new Spritepack(queue.getResult('image'), queue.getResult('config'));\n\tdocument.getElementById(\"i1\").src = sp.getURI('forkit.gif');\n\tdocument.getElementById(\"i2\").src = sp.getURI('mario.jpg');\n\tdocument.getElementById(\"i3\").src = sp.getURI('Smile.png');\n\tdocument.getElementById(\"container\").style.backgroundImage = 'url(' + sp.getURI('packman_ghost.gif') + ')';\n}\n```\n\n### Using with [Browserify.js](http://browserify.org/)\n``` javascript\nvar Spritepack = require('spritepack.js');\n\nfunction App() {\n  console.log('app initialized');\n\n  var sp = new Spritepack();\n  sp.load('images.pack', 'images.json');\n\n  sp.onLoadComplete = function() {\n\n    document.getElementById(\"i1\").src = sp.getURI('forkit.gif');\n    document.getElementById(\"i2\").src = sp.getURI('mario.jpg');\n    document.getElementById(\"i3\").src = sp.getURI('Smile.png');\n    document.getElementById(\"container\").style.backgroundImage = 'url(' + sp.getURI('packman_ghost.gif') + ')';\n\n  }\n\n}\n\nmodule.exports = App;\n```\n\n### Packing images with packImages.py\nIn terminal, if you are in UNIX system, set permissions to execute script\n```\nchmod 0755 packImages.py\n```\n\nThen run it:\n```\n./packImages.py -p <path> -o <output>\n```\n\nBoth `path` and `output` are optional parameters and it will fallback to the same directory as the *packImages.py* script.\n\n\nPlanned features\n========================\n\n- Port packImages to Javascript\n- Make a gulp plugins to easily use Spritepack.js in your workflow\n- Make a [vue.js](http://vuejs.org) custom directive to set source of an image from the DOM\n\nCredits\n=======\n\n- [Keita Kuroki](https://github.com/keitakun) for [Magipack.js](https://github.com/keitakun/Magipack.js)\n- [Danilo Figueiredo](https://github.com/grifotv)\n- [Lucas Motta](https://github.com/lucasmotta)\n- [Arthur Muchir](https://github.com/arthurmuchir)\n- [Madjid Taha](https://madj.me)\n\nLicense\n=======\n\n[The MIT License (MIT)](http://opensource.org/licenses/MIT)","versions":[{"number":"1.0.0","date":"2015-03-20T14:58:37.571Z"},{"number":"1.0.0-beta","date":"2015-03-20T15:02:48.095Z"},{"number":"1.0.0-beta1","date":"2015-03-20T15:09:00.048Z"}],"created":"2015-03-20T14:58:37.571Z","modified":"2015-03-20T15:09:00.048Z","lastPublisher":{"name":"madjidtaha","email":"contact@madjidtaha.fr"},"owners":[{"name":"madjidtaha","email":"contact@madjidtaha.fr"}],"other":{"_attachments":{},"_from":".","_id":"spritepack.js","_nodeVersion":"0.10.33","_npmUser":{"name":"madjidtaha","email":"contact@madjidtaha.fr"},"_npmVersion":"2.5.1","_rev":"1-03470b3c82e0e510003294a58726a8c4","_shasum":"a907b506a5dc4f441a01ff0d7a07f64bca023821","author":{"name":"Keita Kuroki, Danilo Figueiredo, Lucas Motta, Arthur Muchir, Madjid Taha"},"bugs":{"url":"https://github.com/madjidtaha/Spritepack.js/issues"},"directories":{"example":"examples"},"dist-tags":{"latest":"1.0.0-beta1"},"dist":{"shasum":"a907b506a5dc4f441a01ff0d7a07f64bca023821","tarball":"http://registry.npmjs.org/spritepack.js/-/spritepack.js-1.0.0-beta1.tgz"},"maintainers":[{"name":"madjidtaha","email":"contact@madjidtaha.fr"}],"readmeFilename":"README.md","time":{"modified":"2015-03-20T15:09:00.048Z","created":"2015-03-20T14:58:37.571Z","1.0.0":"2015-03-20T14:58:37.571Z","1.0.0-beta":"2015-03-20T15:02:48.095Z","1.0.0-beta1":"2015-03-20T15:09:00.048Z"}}}