{"name":"dgate","description":"Domain gateway, a simple clustered HTTP virtual host router","version":"0.6.4","bin":{"dgate":"./bin/dgate"},"scripts":{"test":"mocha --reporter spec --timeout 10s --bail test/test.js"},"repository":"https://github.com/carlos8f/dgate","license":"MIT","dependencies":{"addr":"^1.0.1","commander":"^2.3.0","dish":"^1.0.4","dollop":"^0.4.1","href":"^0.1.1","http-proxy":"^1.4.3","minimatch":"^1.0.0","moment":"^2.8.3"},"keywords":["vhost","domain","gateway","cluster","http","proxy","hostfile","development","wildcard","dns","subdomain"],"devDependencies":{"mocha":"^1.21.4","request":"^2.44.0"},"gitHead":"95c5db824daba5bc2dc765026eb16f5cfa4a40d7","homepage":"https://github.com/carlos8f/dgate","versions":[{"number":"0.1.0","date":"2014-09-25T22:21:04.194Z"},{"number":"0.1.1","date":"2014-09-25T22:23:57.012Z"},{"number":"0.2.0","date":"2014-09-26T17:07:52.499Z"},{"number":"0.3.1","date":"2014-10-01T01:24:10.759Z"},{"number":"0.3.2","date":"2014-10-01T01:25:13.837Z"},{"number":"0.4.0","date":"2014-10-01T23:21:20.528Z"},{"number":"0.4.1","date":"2014-10-02T18:58:29.163Z"},{"number":"0.5.0","date":"2014-10-03T00:53:42.834Z"},{"number":"0.5.1","date":"2014-10-03T01:25:29.129Z"},{"number":"0.5.2","date":"2014-10-03T01:40:37.447Z"},{"number":"0.5.3","date":"2014-10-03T01:50:18.202Z"},{"number":"0.5.4","date":"2014-10-03T01:54:21.760Z"},{"number":"0.6.0","date":"2014-10-27T22:00:43.884Z"},{"number":"0.6.1","date":"2014-10-27T23:29:42.454Z"},{"number":"0.6.2","date":"2014-10-28T00:09:16.289Z"},{"number":"0.6.3","date":"2014-10-28T19:59:33.212Z"},{"number":"0.6.4","date":"2016-01-15T21:31:28.072Z"}],"readme":"# dgate\n\nDomain gateway, a simple clustered HTTP virtual host router\n\n## Purpose\n\n`dgate` is a Node.js-based HTTP gateway. It can proxy or redirect incoming requests to any host or port,\nbased on a flexible set of rules, defined as comments in your `/etc/hosts` file. `dgate` makes use\nof [cluster](http://nodejs.org/api/cluster.html) forking for better performance on a multi-core machine,\nand privilege separation for better security.\n\nFeatures:\n\n- serve an arbitrary number of web apps on a single port\n- SSL termination\n- virtual host matching on domain, subdomain, wildcard, or path\n- develop several apps locally, and use domains like `test.dev`\n- enforce canonical domains, SSL, or redirect certain domains/paths to arbitrary locations\n- central logging for all requests\n- use all your CPUs with flexible worker pool\n- simple hot-reloadable configuration via `/etc/hosts`\n\n## Install\n\n```\n$ [sudo] npm install -g dgate\n```\n\n## Start the server\n\n```\n$ sudo dgate --verbose --port 80\n```\n\nOn POSIX you can drop privileges for tighter security:\n\n```\n$ sudo dgate --port 80 --setuid nobody --setgid nogroup\n```\n\nTo enable SSL, use these options:\n\n```\n$ sudo dgate --port 443 --sslCert /path/to/server.pem --sslKey /path/to/server.key --setuid nobody --setgid nogroup\n```\n\n## Configuration\n\n`dgate` works by reading the domain -> IP mappings in your `/etc/hosts` file and turning them into virtual hosts.\nAdditionally you **MUST** provide a `#dgate` comment above each line you wish to enable as a virtual host:\n\n```\n#dgate option1=value1&option2=value2\n<ip1>     <hostname1> [hostname2...]\n\n#dgate option1=value1&option2=value2\n<ip2>     <hostname3> [hostname4...]\n```\n\n### /etc/hosts Example\n\n```\n# route traffic from my.dev to 127.0.0.1:3000\n#dgate port=3000\n127.0.0.1    my.dev\n\n# route traffic from *.myother.dev to 127.0.0.1:3001\n#dgate port=3001&wildcard=true\n127.0.0.1    myother.dev\n\n# route traffic from *.blah.dev to terraeclipse.com\n#dgate target=terraeclipse.com&wildcard=true\n127.0.0.1    blah.dev\n\n# make this the default vhost, with a canonical url (also force https)\n#dgate port=3002&default=true&canonical=s8f.org&https=true\n127.0.0.1    s8f.org www.s8f.org\n\n# redirect requests from mytemp.com to myreal.com/$path\n#dgate redirect=myreal.com__path\n127.0.0.1    mytemp.com\n```\n\n### Order of operations\n\n1. If a match is found, the one first defined is served\n2. else if defined, the default is served\n3. else a 404 response is generated.\n\nTo disable a rule, just add a space between `#` and `dgate`.\n\n### Virtual host options\n\nValues must be properly urlencoded, i.e. in JavaScript `encodeURIComponent(value)`\n\n- `port=number` (**required** unless using an alternative listed below) - the TCP port of the target to proxy to, appended to the IP from the `/etc/hosts` rule.\n- `target=host[:port]` (alternative to `port`) - the target host, and optional port to proxy to, i.e. `example.com:80` (supports token replacement, see below)\n- `redirect=url` (alternative to `port`) - redirect all requests to the specified url. (supports token replacement, see below)\n- `file=abspath` (alternative to `port`) - serve a file instead of proxying or redirecting. (path supports token replacement, see below)\n- `path=glob` - match the virtual host only if the incoming path matches the glob. i.e. `/some/**/path`\n- `canonical=host` - redirect requests to this hostname if the request's `Host` header doesn't match it. i.e. `www.example.com`\n- `wildcard=true` - also accept requests to subdomains of the matched hostname.\n- `default=true` - treat the virtual host as \"default\", falling back to it if no other matches are found.\n- `https=true` - force HTTPS by redirecting requests to `https://` version of URLs.\n- `sethost=host` - artificially set the `Host` header when forwarding requests to the proxy target. i.e. `specific.host.example.com`\n\n### Token replacement\n\nSome options such as `redirect` can contain placeholders to be filled in by request variables:\n\n```\n#dgate redirect=http%3A%2F%2Fwww.example.com%2F%3Fhref%3D__href_u\n127.0.0.1     mydomain.com\n```\n\nThis will redirect requests from mydomain.com to `http://www.example.com/?href=(urlencoded version of the originally requested absolute URL)`\n\n#### Auto URL encoding\n\n- For the raw token value, use `__[name]` (leading double underscore).\n- For the urlencoded token value, use `__[name]_u`\n- For the double-urlencoded token value, use `__[name]_uu`\n\n#### Supported tokens\n\n- `__protocol` The incoming protocol string, i.e. `https:`\n- `__auth` The incoming basic auth string, i.e. `my:pass`\n- `__host` The incoming host:port string, i.e. `example.com:3000`\n- `__port` The requested port, i.e. `3000`\n- `__hostname` The requested domain name, i.e. `example.com`\n- `__search` The requested query string including `?`, i.e. `?blah=1&foo=bar`\n- `__query` The requested query string, excluding `?` i.e. `blah=1&foo=bar`\n- `__pathname` The requested path, excluding query string, i.e. `/some/path`\n- `__path` The requested path, including query string, i.e. `/some/path?blah=1&foo=bar`\n- `__href` The requested absolute URL, i.e. `http://my:pass@localhost:3000/some/path?blah=1&foo=bar`\n- `__ip` The remote IP address, i.e. `127.0.0.1`\n\n## TODO\n\n- path rewriting, i.e. proxy `http://test.dev/myapp/*` to `http://127.0.0.1:3000/*`\n- option for redirect status code, 302 or 301\n- custom error pages\n- redundant targets + load balancing strategy\n","starsCount":1,"created":"2014-09-25T22:21:04.194Z","modified":"2016-01-15T21:31:28.072Z","lastPublisher":{"name":"carlos8f","email":"carlos@s8f.org"},"owners":[{"name":"carlos8f","email":"carlos@s8f.org"}],"other":{"_attachments":{},"_from":".","_id":"dgate","_npmUser":{"name":"carlos8f","email":"carlos@s8f.org"},"_npmVersion":"1.4.29","_rev":"1-7733cff259c3880b6e349a526afc1051","_shasum":"1a3a1a5d5a7da7c18b955df8703e9a309bad74a5","author":{"name":"Carlos Rodriguez","email":"carlos@s8f.org","url":"http://s8f.org/"},"bugs":{"url":"https://github.com/carlos8f/dgate/issues"},"directories":{},"dist-tags":{"latest":"0.6.4"},"dist":{"shasum":"1a3a1a5d5a7da7c18b955df8703e9a309bad74a5","tarball":"http://registry.npmjs.org/dgate/-/dgate-0.6.4.tgz"},"maintainers":[{"name":"carlos8f","email":"carlos@s8f.org"}],"readmeFilename":"README.md","time":{"modified":"2016-01-15T21:31:28.072Z","created":"2014-09-25T22:21:04.194Z","0.1.0":"2014-09-25T22:21:04.194Z","0.1.1":"2014-09-25T22:23:57.012Z","0.2.0":"2014-09-26T17:07:52.499Z","0.3.1":"2014-10-01T01:24:10.759Z","0.3.2":"2014-10-01T01:25:13.837Z","0.4.0":"2014-10-01T23:21:20.528Z","0.4.1":"2014-10-02T18:58:29.163Z","0.5.0":"2014-10-03T00:53:42.834Z","0.5.1":"2014-10-03T01:25:29.129Z","0.5.2":"2014-10-03T01:40:37.447Z","0.5.3":"2014-10-03T01:50:18.202Z","0.5.4":"2014-10-03T01:54:21.760Z","0.6.0":"2014-10-27T22:00:43.884Z","0.6.1":"2014-10-27T23:29:42.454Z","0.6.2":"2014-10-28T00:09:16.289Z","0.6.3":"2014-10-28T19:59:33.212Z","0.6.4":"2016-01-15T21:31:28.072Z"},"users":{"gavinengel":true}}}