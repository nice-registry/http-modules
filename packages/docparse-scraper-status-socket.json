{"name":"docparse-scraper-status-socket","version":"1.0.13","description":"Setups up an http express app for an single scraper. This app allows external services to get the status of the scraper and start new scrapes","main":"index.js","scripts":{"test":"make test"},"repository":"","keywords":["docparse",""],"license":"BSD","devDependencies":{"mocha":"~1.8.2","eyespect":"~0.1.8","nconf":"~0.6.7"},"dependencies":{"should":"~1.2.2","request":"~2.16.6","required-keys":"~1.0.4","express":"~3.1.1","loggly-console-logger":"~1.0.5","api-auth":"~1.0.4","seaport":"~1.5.0"},"readme":"# Scraper Status Socket\nAllow node.js based scrapers to connect to a status socket so that external services can query the current status of the scraper and check if it is running or stopped.\n\nWhen a scraper starts up, it registers a new service with seaport using the role **scraperStatusSupplierCode**. For example the NGrid Electric scraper has the supplierCode **NGE** so it would register with the role **scraperStatusNGE**\n\nThen this module will *connect* to an axon rep socket on the port returned by seaport.\n\n\n# Querying\nTo query the status of a scraper, get the port of the status socket from seaport and send a *status* request\n\n```javascript\nvar inspect = require('eyespect').inspector();\nvar config = require('nconf')\nvar supplierCode = 'NGE'\nvar seaConfig = config.get('seaport')\nvar seaHost = seaConfig.host\nvar seaPort = seaConfig.port\nvar ports = seaport.connect(seaHost, seaPort)\nvar role = 'scraperStatus' + supplierCode // eg \"scraperStatusNGE\"\nvar scraperStatusSockets = ports.query(role) // an array of services\nvar scraperSocketService = scraperStatusSockets[0] // use the first one as an example\nvar scraperSocketHost = scraperSocketService.host\nvar scraperSocketPort = scraperSocketService.port\n\nvar requestSocket = axon.socket('req')\nrequestSocket.format('json') // all sockets speak json\nrequestSocket.bind(scraperSocketPort, scraperSocketHost)\n\n// send the message\nrequestSocket.send('status', function (err, reply) {\n  if (err) { //should not happen\n    inspect(err, 'error getting status from NGE scraper status socket')\n    return\n  }\n  inspect(reply, 'NGE scraper status reply') // a json object with fields supplierCode & status\n})\n\n```\n","versions":[{"number":"1.0.0","date":"2013-03-26T17:50:51.415Z"},{"number":"1.0.2","date":"2013-03-26T18:19:39.086Z"},{"number":"1.0.3","date":"2013-03-26T18:25:05.697Z"},{"number":"1.0.4","date":"2013-03-26T18:49:32.083Z"},{"number":"1.0.6","date":"2013-03-26T18:59:49.075Z"},{"number":"1.0.7","date":"2013-03-26T19:02:06.279Z"},{"number":"1.0.8","date":"2013-03-26T19:58:56.727Z"},{"number":"1.0.9","date":"2013-03-26T20:14:48.406Z"},{"number":"1.0.10","date":"2013-03-26T21:09:47.645Z"},{"number":"1.0.11","date":"2013-03-28T03:40:41.645Z"},{"number":"1.0.12","date":"2013-04-08T19:11:09.960Z"},{"number":"1.0.13","date":"2013-05-03T18:10:20.684Z"}],"created":"2013-03-26T17:50:32.932Z","modified":"2013-05-03T18:10:20.684Z","lastPublisher":{"name":"clewfirst","email":"noah@nisaacson.com"},"owners":[{"name":"clewfirst","email":"noah@nisaacson.com"}],"other":{"_attachments":{},"_from":".","_id":"docparse-scraper-status-socket","_npmUser":{"name":"clewfirst","email":"noah@nisaacson.com"},"_npmVersion":"1.2.18","_rev":"1-9b98783935f4a0c70e510b1f5c33e3f6","author":{"name":"Noah Isaacson"},"directories":{},"dist-tags":{"latest":"1.0.13"},"dist":{"shasum":"1490a3ad80dd97c273d21e6c116c739c6a3ecc19","tarball":"http://registry.npmjs.org/docparse-scraper-status-socket/-/docparse-scraper-status-socket-1.0.13.tgz"},"maintainers":[{"name":"clewfirst","email":"noah@nisaacson.com"}],"readmeFilename":"README.md","time":{"modified":"2013-05-03T18:10:20.684Z","created":"2013-03-26T17:50:32.932Z","1.0.0":"2013-03-26T17:50:51.415Z","1.0.2":"2013-03-26T18:19:39.086Z","1.0.3":"2013-03-26T18:25:05.697Z","1.0.4":"2013-03-26T18:49:32.083Z","1.0.6":"2013-03-26T18:59:49.075Z","1.0.7":"2013-03-26T19:02:06.279Z","1.0.8":"2013-03-26T19:58:56.727Z","1.0.9":"2013-03-26T20:14:48.406Z","1.0.10":"2013-03-26T21:09:47.645Z","1.0.11":"2013-03-28T03:40:41.645Z","1.0.12":"2013-04-08T19:11:09.960Z","1.0.13":"2013-05-03T18:10:20.684Z"}}}