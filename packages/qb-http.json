{"name":"qb-http","version":"2.0.2","description":"http dialect for QB service framework","main":"index.js","scripts":{"test":"nodeunit tests"},"repository":{"type":"git","url":"git@github.com/Rafflecopter/node-qb-http"},"keywords":["qb"],"license":"MIT","homepage":"https://github.com/Rafflecopter/node-qb-http","dependencies":{"async":"0.9.0","basic-auth":"1.0.0","body-parser":"1.12.0","express":"4.12.2","request":"2.53.0","unix-listen":"0.1.1"},"devDependencies":{"qb":"^2.0.0","xtend":"4.0.0"},"versions":[{"number":"0.0.1","date":"2014-01-30T21:48:08.954Z"},{"number":"0.0.2","date":"2014-02-13T20:09:13.047Z"},{"number":"0.0.3","date":"2014-02-13T20:45:01.079Z"},{"number":"0.1.0","date":"2014-02-13T21:17:51.005Z"},{"number":"0.1.1","date":"2014-02-14T00:19:14.378Z"},{"number":"0.1.2","date":"2014-02-17T21:18:44.280Z"},{"number":"0.1.3","date":"2014-02-18T23:44:30.712Z"},{"number":"0.1.4","date":"2014-02-19T01:18:36.717Z"},{"number":"0.1.5","date":"2014-02-19T01:26:59.504Z"},{"number":"0.1.6","date":"2014-02-20T22:50:47.907Z"},{"number":"0.1.7","date":"2014-02-20T22:52:06.702Z"},{"number":"0.1.8","date":"2014-02-21T02:23:00.072Z"},{"number":"0.1.9","date":"2014-03-05T22:25:05.427Z"},{"number":"0.1.10","date":"2014-03-05T23:37:49.007Z"},{"number":"0.1.11","date":"2014-03-05T23:43:07.586Z"},{"number":"0.1.12","date":"2014-03-06T00:39:44.005Z"},{"number":"0.2.0","date":"2014-03-21T18:19:30.573Z"},{"number":"0.2.1","date":"2014-04-08T21:34:49.626Z"},{"number":"0.2.2","date":"2014-05-12T04:16:38.276Z"},{"number":"0.2.3","date":"2014-05-17T14:21:16.211Z"},{"number":"0.2.4","date":"2014-05-28T20:23:00.365Z"},{"number":"2.0.0-rc1","date":"2015-03-11T22:29:58.784Z"},{"number":"2.0.0","date":"2015-03-11T23:43:00.245Z"},{"number":"2.0.1","date":"2015-03-14T18:23:20.034Z"},{"number":"2.0.2","date":"2015-03-14T19:10:05.416Z"}],"readme":"# qb-http\n\nHTTP-based push and receive components for [qb](https://github.com/rafflecopter/node-qb). This allows you to use HTTP to communicate between service applications.\n\n## Usage\n\nThe http dialect is simple.\n\n```\nnpm install qb-http --save\n```\n\n```javascript\n  // Receive component\nqb.component(require('qb-http').receive, httpReceiveOptions)\n  .on('http-ready', function () {\n    console.log('http server is setup and ready to go')\n  })\n\n  // Push component\n  .component(require('qb-http').push, httpPushOptions)\n  .alias('foobar', 'http://my.other.service.com/api/v1/push/foobar')\n  .push('foobar', {baz: buzz})\n```\n\nAlso, here's the external API (if the `base` option is `/api/qb`:\n\n```\n$ curl http://server.domain.tld/api/qb/service-name -XPOST -H'Content-Type: application/json' -d'{\"task\": \"data\"}'\n```\n\n\n## Options\n\n### Push Options\n\n- `retry` Number of times to retry a http curl if an error is encountered.\n\n### Receive Options\n\n- `port` Port Number (if not present, server will not be started to listen)\n- `unix` A path to a unix socket (only listened on if `port` is falsy)\n- `app` Pass in an express app. If none is passed, one will be created.\n- `base` Base api prefix\n- `no_middleware` Dont attach middleware (body parser is the only required one. logging is suggested)\n- `auth` A `{user: '', pass: ''}` object for basic auth\n- `no_404_catch` Don't attach a catch-all at `base` to reply with a 404 Not Found\n- `reply` A `function (req, res, error)` to respond to requests. Default uses `jsonp`\n\nTo access the underlying express server, use `qb._http.app` and `qb._http.server`.\n\n## License\n\nMIT in LICENSE file\n","created":"2014-01-30T21:48:08.954Z","modified":"2015-03-14T19:10:05.416Z","lastPublisher":{"name":"yanatan16","email":"jon.m.eisen@gmail.com"},"owners":[{"name":"yanatan16","email":"jon.m.eisen@gmail.com"},{"name":"runningskull","email":"jr@juanpatten.com"},{"name":"leroix","email":"justin@rafflecopter.com"}],"other":{"_attachments":{},"_from":".","_id":"qb-http","_npmUser":{"name":"yanatan16","email":"jon.m.eisen@gmail.com"},"_npmVersion":"1.4.9","_rev":"1-b94966e7bac16edd4eda36641a5fa6f6","_shasum":"c07465ae10c78aabdc54aa635af51f52428e572a","author":{"name":"Jon Eisen","email":"jon@metricfeat.com"},"bugs":{"url":"https://github.com/Rafflecopter/node-qb-http/issues"},"directories":{},"dist-tags":{"latest":"2.0.2"},"dist":{"shasum":"c07465ae10c78aabdc54aa635af51f52428e572a","tarball":"http://registry.npmjs.org/qb-http/-/qb-http-2.0.2.tgz"},"maintainers":[{"name":"yanatan16","email":"jon.m.eisen@gmail.com"},{"name":"runningskull","email":"jr@juanpatten.com"},{"name":"leroix","email":"justin@rafflecopter.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-14T19:10:05.416Z","created":"2014-01-30T21:48:08.954Z","0.0.1":"2014-01-30T21:48:08.954Z","0.0.2":"2014-02-13T20:09:13.047Z","0.0.3":"2014-02-13T20:45:01.079Z","0.1.0":"2014-02-13T21:17:51.005Z","0.1.1":"2014-02-14T00:19:14.378Z","0.1.2":"2014-02-17T21:18:44.280Z","0.1.3":"2014-02-18T23:44:30.712Z","0.1.4":"2014-02-19T01:18:36.717Z","0.1.5":"2014-02-19T01:26:59.504Z","0.1.6":"2014-02-20T22:50:47.907Z","0.1.7":"2014-02-20T22:52:06.702Z","0.1.8":"2014-02-21T02:23:00.072Z","0.1.9":"2014-03-05T22:25:05.427Z","0.1.10":"2014-03-05T23:37:49.007Z","0.1.11":"2014-03-05T23:43:07.586Z","0.1.12":"2014-03-06T00:39:44.005Z","0.2.0":"2014-03-21T18:19:30.573Z","0.2.1":"2014-04-08T21:34:49.626Z","0.2.2":"2014-05-12T04:16:38.276Z","0.2.3":"2014-05-17T14:21:16.211Z","0.2.4":"2014-05-28T20:23:00.365Z","2.0.0-rc1":"2015-03-11T22:29:58.784Z","2.0.0":"2015-03-11T23:43:00.245Z","2.0.1":"2015-03-14T18:23:20.034Z","2.0.2":"2015-03-14T19:10:05.416Z"}}}