{"name":"eight-track","description":"Record and playback HTTP requests","version":"2.1.0","homepage":"https://github.com/uber/eight-track","repository":"https://github.com/uber/eight-track","licenses":[{"type":"MIT","url":"https://github.com/uber/eight-track/blob/master/LICENSE-MIT"}],"main":"lib/eight-track","engines":{"node":">= 0.8.0"},"scripts":{"test":"rm -r test/actual-files || true; grunt jshint && mocha"},"dependencies":{"request":"~2.30.0","underscore":"~1.5.2","mkdirp":"~0.3.5","concat-stream":"~1.2.1","async":"~0.2.10","clone":"~0.1.11","fs-memory-store":"~0.1.0"},"devDependencies":{"mocha":"~1.11.0","grunt":"~0.4.1","grunt-contrib-jshint":"~0.6.0","grunt-contrib-watch":"~0.4.0","chai":"~1.8.1","rimraf":"~2.2.5","express":"~3.4.7","grunt-cli":"~0.1.11","request-mocha":"~0.2.0","pem":"~1.4.0","raw-body":"~1.1.5"},"keywords":["http","record","playback","cassette","vcr","middleware","8-track"],"versions":[{"number":"0.1.0","date":"2014-01-05T02:33:34.870Z"},{"number":"0.2.0","date":"2014-01-06T01:51:09.485Z"},{"number":"1.0.0","date":"2014-01-27T20:13:09.447Z"},{"number":"1.1.0","date":"2014-01-27T20:42:00.072Z"},{"number":"1.2.0","date":"2014-01-27T21:02:21.920Z"},{"number":"1.3.0","date":"2014-01-27T21:13:42.069Z"},{"number":"1.3.1","date":"2014-02-02T00:35:36.629Z"},{"number":"1.4.0","date":"2014-02-11T03:25:09.946Z"},{"number":"1.4.1","date":"2014-02-11T03:39:15.227Z"},{"number":"1.5.0","date":"2014-03-03T21:59:38.194Z"},{"number":"1.6.0","date":"2014-03-20T22:18:11.853Z"},{"number":"1.6.1","date":"2014-03-25T01:49:39.478Z"},{"number":"1.7.0","date":"2014-04-01T04:48:36.750Z"},{"number":"1.8.0","date":"2014-04-18T02:46:49.600Z"},{"number":"1.9.0","date":"2014-04-18T04:54:33.969Z"},{"number":"1.9.1","date":"2014-04-18T20:44:25.799Z"},{"number":"2.0.0","date":"2014-04-21T18:27:16.972Z"},{"number":"2.1.0","date":"2014-05-16T20:29:20.464Z"}],"readme":"# eight-track [![Build status](https://travis-ci.org/uber/eight-track.png?branch=master)](https://travis-ci.org/uber/eight-track)\n\nRecord and playback HTTP requests\n\nThis is built to make testing against third party services a breeze. No longer will your test suite fail because an external service is down.\n\n> `eight-track` is inspired by [`cassette`][] and [`vcr`][]\n\n[`cassette`]: https://github.com/uber/cassette\n[`vcr`]: https://rubygems.org/gems/vcr\n\n## Getting Started\nInstall the module with: `npm install eight-track`\n\n```javascript\n// Start up a basic applciation\nvar express = require('express');\nvar eightTrack = require('eight-track');\nvar request = require('request');\nexpress().use(function (req, res) {\n  console.log('Pinged!');\n  res.send('Hello World!');\n}).listen(1337);\n\n// Create a server using a `eight-track` middleware to the original\nexpress().use(eightTrack({\n  url: 'http://localhost:1337',\n  fixtureDir: 'directory/to/save/responses'\n})).listen(1338);\n\n// Hits original server, triggering a `console.log('Pinged!')` and 'Hello World!' response\nrequest('http://localhost:1338/', console.log);\n\n// Hits saved response but still receieves 'Hello World!' response\nrequest('http://localhost:1338/', console.log);\n```\n\n## Documentation\n`eight-track` exposes `eightTrack` as its `module.exports`.\n\n### `eightTrack(options)`\nMiddleware creator for new `eightTrack's`. This *is not* a constructor.\n\n- options `Object` - Container for parameters\n    - url `String|Object` - URL of a server to proxy to\n        - If it is a string, it should be the base URL of a server\n        - If it is an object, it should be parameters for [`url.format`][]\n    - fixtureDir `String` - Path to load/save HTTP responses\n        - Files will be saved with the format `{{method}}_{{encodedUrl}}_{{hashOfRequestContent}}.json`\n        - An example filename is `GET_%2F_658e61f2a6b2f1ae4c127e53f28dfecd.json`\n    - normalizeFn `Function` - Function to adjust `request's` save location signature\n        - If you would like to make two requests resolve from the same response file, this is how.\n        - The function signature should be `function (info)` and can either mutate the `info` or return a fresh object\n        - `info` will have the following properties\n             - httpVersion `String` - HTTP version received from `request` (e.g. `1.0`, `1.1`)\n             - headers `Object` - Headers received by `request`\n             - trailers `Object` - Trailers received by `request`\n             - method `String` - HTTP method that was used (e.g. `GET`, `POST`)\n             - url `String` - Pathname that `request` arrived from\n             - body `Buffer` - Buffered body that was written to `request`\n        - Existing `normalizeFn` libraries (e.g. `multipart/form-data` can be found below)\n\n[`url.format`]: http://nodejs.org/api/url.html#url_url_format_urlobj\n\n`eightTrack` returns a middleware with the signature `function (req, res)`\n\n```js\n// Example of string url\neightTrack({\n  url: 'http://localhost:1337',\n  fixtureDir: 'directory/to/save/responses'\n});\n\n// Example of object url\neightTrack({\n  url: {\n    protocol: 'http:',\n    hostname: 'localhost',\n    port: 1337\n  },\n  fixtureDir: 'directory/to/save/responses'\n});\n```\n\nIf you need to buffer the data before passing it off to `eight-track` that is supported as well.\nThe requirement is that you record the data as a `Buffer` or `String` to `req.body`.\n\n#### `normalizeFn` libraries\n- `multipart/form-data` - Ignore randomly generated boundaries and consolidate similar `multipart/form-data` requests\n    - Website: https://github.com/twolfson/eight-track-normalize-multipart\n\n### `eightTrack.forwardRequest(req, cb)`\nForward an incoming HTTP request in a [`mikeal/request`][]-like format.\n\n- req `http.IncomingMessage` - Inbound request to an HTTP server (e.g. from `http.createServer`)\n    - Documentation: http://nodejs.org/api/http.html#http_http_incomingmessage\n- cb `Function` - Callback function with `(err, res, body)` signature\n    - err `Error` - HTTP error if any occurred (e.g. `ECONNREFUSED`)\n    - res `Object` - Container that looks like an HTTP object but simiplified due to saving to disk\n        - httpVersion `String` - HTTP version received from external server response (e.g. `1.0`, `1.1`)\n        - headers `Object` - Headers received by response\n        - trailers `Object` - Trailers received by response\n        - statusCode `Number` - Status code received from external server response\n        - body `Buffer` - Buffered body that was written to response\n    - body `Buffer` - Sugar variable for `res.body`\n\n[`mikeal/request`]: https://github.com/mikeal/request\n\n## Examples\n### Proxy server with subpath\n`eight-track` can talk to servers that are behind a specific path\n\n```js\n// Start up a server that echoes our path\nexpress().use(function (req, res) {\n  res.send(req.path);\n}).listen(1337);\n\n// Create a server using a `eight-track` middleware to the original\nexpress().use(eightTrack({\n  url: 'http://localhost:1337/hello',\n  fixtureDir: 'directory/to/save/responses'\n})).listen(1338);\n\n// Logs `/hello/world`, concatenated result of `/hello` and `/world` pathss\nrequest('http://localhost:1338/world', console.log);\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint via [grunt](https://github.com/gruntjs/grunt) and test via `npm test`.\n\n## License\nCopyright (c) 2014 Uber\n\nLicensed under the MIT license.\n","created":"2014-01-05T02:33:29.651Z","modified":"2014-08-16T05:44:15.128Z","lastPublisher":{"name":"twolfson","email":"todd@twolfson.com"},"owners":[{"name":"twolfson","email":"todd@twolfson.com"},{"name":"mlmorg","email":"matt@mlmorg.com"}],"other":{"_attachments":{},"_from":".","_id":"eight-track","_npmUser":{"name":"twolfson","email":"todd@twolfson.com"},"_npmVersion":"1.4.2","_rev":"1-5a88a3f07aee1aac88f8f0c76d8bf43a","author":{"name":"Todd Wolfson","email":"todd@twolfson.com","url":"http://twolfson.com/"},"bugs":{"url":"https://github.com/uber/eight-track/issues"},"directories":{},"dist-tags":{"latest":"2.1.0"},"dist":{"shasum":"d146a77d709a809d3d7ee27afae09d78955bb0c5","tarball":"http://registry.npmjs.org/eight-track/-/eight-track-2.1.0.tgz"},"maintainers":[{"name":"twolfson","email":"todd@twolfson.com"},{"name":"mlmorg","email":"matt@mlmorg.com"}],"readmeFilename":"README.md","time":{"modified":"2014-08-16T05:44:15.128Z","created":"2014-01-05T02:33:29.651Z","0.1.0":"2014-01-05T02:33:34.870Z","0.2.0":"2014-01-06T01:51:09.485Z","1.0.0":"2014-01-27T20:13:09.447Z","1.1.0":"2014-01-27T20:42:00.072Z","1.2.0":"2014-01-27T21:02:21.920Z","1.3.0":"2014-01-27T21:13:42.069Z","1.3.1":"2014-02-02T00:35:36.629Z","1.4.0":"2014-02-11T03:25:09.946Z","1.4.1":"2014-02-11T03:39:15.227Z","1.5.0":"2014-03-03T21:59:38.194Z","1.6.0":"2014-03-20T22:18:11.853Z","1.6.1":"2014-03-25T01:49:39.478Z","1.7.0":"2014-04-01T04:48:36.750Z","1.8.0":"2014-04-18T02:46:49.600Z","1.9.0":"2014-04-18T04:54:33.969Z","1.9.1":"2014-04-18T20:44:25.799Z","2.0.0":"2014-04-21T18:27:16.972Z","2.1.0":"2014-05-16T20:29:20.464Z"}}}