{"name":"godot-dash","version":"0.0.1","description":"HTTP dashboard for Nodejitsu's godot; A port of riemann-dash","main":"./index.js","scripts":{"start":"node ./bin/godot-dash","css":"lessc ./less/css.less ./public/css.css","engine.io-client":"curl https://raw.github.com/LearnBoost/engine.io-client/0.6.2/engine.io.js -o public/vendor/engine.io.js","test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/aphyr/riemann-dash","keywords":["godot","dash","dashboard"],"license":"MIT","dependencies":{"ecstatic":"~0.4.5","engine.io":"0.6.2","godot":"~0.5.3"},"devDependencies":{"less":"~1.4.0"},"versions":[{"number":"0.0.0","date":"2013-09-29T17:21:42.619Z"},{"number":"0.0.1","date":"2013-12-16T00:22:57.094Z"}],"readme":"# Godot-Dash\r\n\r\nA javascript, engine.io-powered dashboard for Godot. A port of riemann-dash\r\nfrom ruby/sinatra to node.js.\r\n\r\n# Get started\r\n\r\n``` bash\r\n$ sudo npm install godot-dash -g\r\n$ godot-dash\r\n```\r\n\r\nThen open http://localhost:1338 in a browser.\r\n\r\n# API\r\n\r\n## dash.createServer(options)\r\n\r\nUse this if you want to just create a dashboard server with minimal ceremony.\r\n\r\nTakes an options hash with the following properties:\r\n\r\n* mount: Where to mount the dashboard (defaults to `/`)\r\n* config: File location for the config file (defaults to\r\n  ./godot-dash/config.json )\r\n\r\nReturns an HTTP server with an extra method, `register`.\r\n\r\nUsage looks something like this:\r\n\r\n```js\r\nvar godot = require('godot'),\r\n    dash = require('godot-dash');\r\n\r\nvar dashboard = dash\r\n  .createServer()\r\n  .register(godot)\r\n;\r\n\r\ngodot.createServer({\r\n  type: 'tcp',\r\n  reactors: [\r\n    godot.reactor()\r\n      .dashboard()\r\n  ]\r\n}).listen(1337);\r\n\r\ndashboard.listen(1338);\r\n```\r\n\r\n### server.register(godot)\r\n\r\nRegister the dashboard reactor with godot, as \"dashboard\". Returns `server`.\r\n\r\n### dash.middleware(options)\r\n\r\nReturns a middleware. Options are the same as those of `dash.createServer`. You\r\ncan use this if you want to add the godot dashboard to an existing middleware\r\nstack without creating a new server.\r\n\r\n### dash.reactor(server)\r\n\r\nReturns a reactor constructor. Pass in an http server to attach\r\nengine.io to. You can use this in conjunction with `dash.middleware` to add the\r\ndashboard to an existing middleware stack.\r\n\r\nIn order to use a third-party godot reactor, one must register it with godot\r\nby running something like:\r\n\r\n```js\r\n\r\nvar Dashboard = dash.reactor(server); // server is an http server\r\n\r\ngodot.reactor.register('dashboard', Dashboard);\r\n```\r\n\r\n# License\r\n\r\nMIT\r\n","created":"2013-09-29T17:21:34.395Z","modified":"2015-02-23T19:41:01.595Z","lastPublisher":{"name":"yaniv","email":"yanivk@gmail.com"},"owners":[{"name":"yaniv","email":"yanivk@gmail.com"},{"name":"kessler","email":"yanivk@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"godot-dash","_npmUser":{"name":"yaniv","email":"yanivk@gmail.com"},"_npmVersion":"1.3.11","_rev":"1-645d32214cb630111726909a5883d2a5","author":{"name":"Joshua Holbrook"},"bugs":{"url":"https://github.com/aphyr/riemann-dash/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"d1ea0e9b46df155192b8b68c7554c934aa8eda12","tarball":"http://registry.npmjs.org/godot-dash/-/godot-dash-0.0.1.tgz"},"maintainers":[{"name":"yaniv","email":"yanivk@gmail.com"},{"name":"kessler","email":"yanivk@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-23T19:41:01.595Z","created":"2013-09-29T17:21:34.395Z","0.0.0":"2013-09-29T17:21:42.619Z","0.0.1":"2013-12-16T00:22:57.094Z"}}}