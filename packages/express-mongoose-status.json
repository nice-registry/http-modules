{"name":"express-mongoose-status","version":"0.0.3","description":"A simple lib to handle mongoose responses and convert them to correct HTTP status in a REST API using Express","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/ricardohbin/express-mongoose-status","keywords":["api","mongoose","express","rest","status","code"],"license":"MIT","homepage":"https://github.com/ricardohbin/express-mongoose-status","dependencies":{"lodash":"^3.5.0"},"gitHead":"84202bf62770a43a668604cef83c8ac8ea48a9df","versions":[{"number":"0.0.1","date":"2015-03-24T21:52:39.756Z"},{"number":"0.0.2","date":"2015-03-25T15:03:29.791Z"},{"number":"0.0.3","date":"2015-04-14T17:58:12.396Z"}],"readme":"# express mongoose status\n\nThis is a simple lib to handle mongoose responses and convert them to correct HTTP status in a REST API using Express\n\nunder continuous improvement....\n\n## Problems in common mongoose + express usage\nMany code around the web, you can see something like this (when the *err* has error handler...):\n```js\nroute.get(\"/some/route/:id\", function (req, res, next) {\n  MongooseModel.find({\"_id\": req.params.id }, function (err, data) {\n    if (err) {\n      return res.status(500).send(err.name); //or next(err), res.sendStatus(500) etc\n    }\n    res.send(data);\n  });\n});\n```\n### Whats the problem with follow approach?\n+ Any kind of error will throws status **500 Internal Error**\n+ If the **param.id** isn't a ObjectId, it will throw a **CastError** (instead of **404 not found** behavior)\n+ Any **ValidatorError** error will not throws a expected **400 Bad Request**\n+ Even with valid ObjectId in **param.id**, successful, but empty responses will throw a **200 OK**\n\n### Why not just abstract this? Why repeat yourself with a lot of validations? It can be so simple...\n```js\nvar statusHandler = require(\"express-mongoose-status\");\nroute.get(\"/some/route/:id\", function (req, res, next) {\n  MongooseModel.find({\"_id\": req.params.id }, function (err, data) {\n    statusHandler(err, res, data);\n  });\n});\n```\n\n### Installation\n```sh\nnpm install express-mongoose-status --save\n```\n\n### To be added\n+ Doc\n+ Samples\n+ Tests\n","created":"2015-03-24T21:52:39.756Z","modified":"2015-04-14T17:58:12.396Z","lastPublisher":{"name":"ricardohbin","email":"ricardohbin@gmail.com"},"owners":[{"name":"ricardohbin","email":"ricardohbin@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"express-mongoose-status","_nodeVersion":"0.12.0","_npmUser":{"name":"ricardohbin","email":"ricardohbin@gmail.com"},"_npmVersion":"2.5.1","_rev":"1-c47eb628619229f5b4227bd23b66e217","_shasum":"742cd025d05fa8a4ba339d2d74cf95a5805dc143","author":{"name":"Ricardo Bin","email":"ricardohbin@gmail.com"},"bugs":{"url":"https://github.com/ricardohbin/express-mongoose-status/issues"},"directories":{},"dist-tags":{"latest":"0.0.3"},"dist":{"shasum":"742cd025d05fa8a4ba339d2d74cf95a5805dc143","tarball":"http://registry.npmjs.org/express-mongoose-status/-/express-mongoose-status-0.0.3.tgz"},"maintainers":[{"name":"ricardohbin","email":"ricardohbin@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-04-14T17:58:12.396Z","created":"2015-03-24T21:52:39.756Z","0.0.1":"2015-03-24T21:52:39.756Z","0.0.2":"2015-03-25T15:03:29.791Z","0.0.3":"2015-04-14T17:58:12.396Z"}}}