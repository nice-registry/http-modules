{"name":"ciq-auth-header","version":"0.3.0","description":"For HTTP `Authorization` and `WWW-Authenticate` headers.","keywords":["http","express","basic","auth","authorization"],"license":"CC0-1.0","homepage":"https://github.com/creditiq/auth-header","repository":"https://github.com/creditiq/auth-header","main":"dist/index.js","scripts":{"test":"npm run lint && npm run spec","prepublish":"babel -s -d dist src","spec":"NODE_ENV=test ./node_modules/.bin/mocha --compilers js:babel-core/register -r adana-dump -R spec test/spec","lint":"eslint --ignore-path .gitignore ."},"dependencies":{"babel-core":"^6.4.5"},"devDependencies":{"adana-cli":"^0.1.1","adana-dump":"^0.1.0","adana-format-lcov":"^0.1.1","babel-cli":"^6.4.5","babel-core":"^6.4.5","babel-preset-metalab":"^0.2.0","eslint":"^1.10.3","eslint-config-metalab":"^2.0.0-beta.1","eslint-plugin-filenames":"^0.2.0","eslint-plugin-import":"^0.12.1","eslint-plugin-react":"^3.16.0","mocha":"^2.3.4","chai":"^3.4.1"},"gitHead":"43ed187deec4ecafa7f5115d1aeb10e82e6f062c","versions":[{"number":"0.3.0","date":"2016-03-10T22:39:02.842Z"}],"readme":"# auth-header\n\nDeal with obscene HTTP `Authorization` and `WWW-Authenticate` headers.\n\n![build status](http://img.shields.io/travis/izaakschroeder/auth-header.svg?style=flat&branch=master)\n![coverage](http://img.shields.io/coveralls/izaakschroeder/auth-header.svg?style=flat&branch=master)\n![license](http://img.shields.io/npm/l/auth-header.svg?style=flat&branch=master)\n![version](http://img.shields.io/npm/v/auth-header.svg?style=flat&branch=master)\n![downloads](http://img.shields.io/npm/dm/auth-header.svg?style=flat&branch=master)\n\n| Type          | Parse   | Format  |\n| ------------- | ------- | ------- |\n| Basic         |    ✓    |    ✓    |\n| Digest        |    ✓    |    ✓    |\n| AWS           |    ✓    |    ✓    |\n| Bearer/OAuth  |    ✓    |    ✓    |\n| [RFC7235]     |    ✓    |    ✓    |\n\n***Note***: If you're looking for an all-on-one solution to do authentication against these headers check out [express-authentication-header] which uses this library behind the scenes.\n\nThe HTTP `Authorization` and `WWW-Authenticate` family of headers are both pretty nightmareish; there has been, up until recently, no wide consensus about how they should be formatted and so parsing them is lots of fun if fun is pulling your hair out.\n\nThis library provides an implementation of [RFC7235] which allows for the parsing of many known existing authorization headers (like Basic and Digest) as well as any future ones which follow the standard. Noteably, this library is less strict than it could be to parse some of these legacy formats.\n\nIn addition to the format of the header itself being in flux, WWW-Authenticate has its own nasty surprise: sometimes multiple authentication prompts can appear in one header, sometimes they can appear in multiple headers; we _ONLY_ support the latter case since trying to disambiguate between a second prompt and parameters for the first is just about impossible.\n\n```javascript\nimport * as authorization from 'auth-header';\nimport express from 'express';\n\nconst app = express();\n\napp.get('/', function(req, res) {\n\n\t// Something messed up.\n\tfunction fail() {\n\t\tres.set('WWW-Authenticate', authorization.format('Basic'));\n\t\tres.status(401).send();\n\t}\n\n\t// Get authorization header.\n\tvar auth = authorization.parse(req.get('authorization'));\n\n\t// No basic authentication provided.\n\tif (auth.scheme !== 'Basic') {\n\t\treturn fail();\n\t}\n\n\t// Get the basic auth component.\n\tvar [un, pw] = Buffer(auth.token, 'base64').toString().split(':', 2);\n\n\t// Verify authentication.\n\tif (pw !== 'admin') {\n\t\treturn fail();\n\t}\n\n\t// We've reached the promise land.\n\tres.send('Hello world.');\n});\n```\n\n[RFC7235]: https://tools.ietf.org/html/rfc7235\n[express-authentication-header]: https://github.com/izaakschroeder/express-authentication-header\n","created":"2016-03-10T22:39:02.842Z","modified":"2016-03-10T22:39:02.842Z","lastPublisher":{"name":"creditiq","email":"aliatsis@creditiq.com"},"owners":[{"name":"creditiq","email":"aliatsis@creditiq.com"}],"other":{"_attachments":{},"_from":".","_id":"ciq-auth-header","_nodeVersion":"4.3.1","_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/ciq-auth-header-0.3.0.tgz_1457649542395_0.5126879985909909"},"_npmUser":{"name":"creditiq","email":"aliatsis@creditiq.com"},"_npmVersion":"3.8.0","_rev":"1-ada9bbe0dd11f8bb9c4f57e878760a71","_shasum":"6036a0d2f31ce1e23a05b968d8e6dd242e5efe5d","author":{"name":"Izaak Schroeder","email":"izaak.schroeder@gmail.com"},"bugs":{"url":"https://github.com/creditiq/auth-header/issues"},"directories":{},"dist-tags":{"latest":"0.3.0"},"dist":{"shasum":"6036a0d2f31ce1e23a05b968d8e6dd242e5efe5d","tarball":"http://registry.npmjs.org/ciq-auth-header/-/ciq-auth-header-0.3.0.tgz"},"maintainers":[{"name":"creditiq","email":"aliatsis@creditiq.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-10T22:39:02.842Z","created":"2016-03-10T22:39:02.842Z","0.3.0":"2016-03-10T22:39:02.842Z"}}}