{"name":"ssi-http-parser","version":"0.1.0","description":"Server Side Include(SSI) parser and ssi-http","keywords":["Adobe","npm module","SSI"],"homepage":"http://github.com/kingfolk/SSI","repository":"https://github.com/kingfolk/SSI","engines":{"node":"~0.10.28"},"main":"index","dependencies":{"underscore":"^1.6.0","colors":"latest"},"devDependencies":{},"license":"MIT","gitHead":"0a78b65fe94797e26ae0e6b275c7f85f902bcb1d","scripts":{},"versions":[{"number":"0.1.0","date":"2014-10-22T22:12:04.135Z"}],"readme":"** working in progress **\n\n\n# A SSI-Http Server powered by NodeJS\n\nA Server Side Include(SSI) **parser** and **ssi-http** are provided in `ssi-http-parser`.\n\n## Install\n\n`npm install ssi-http-parser`\n\n## Usage\n\nThe **parser** parse http string and return the replaced string. **The parser has to be initialized.**\n\n```js\nvar parser = require('ssi-parser-http').parser({\n  rootDomain: process.cwd(),\n  currentDocDir: process.cwd()\n}, {\n  HTTP_USER_AGENT: 'www.king.agent'\n});\n\n\nvar resHttpStr = parser.run(httpStr);\n\n\n```\n\nThe **ssi-http** is based on **http** package except it automatically check if the incoming request ends up with `.shtml`. To create server, `createServer` has to be called.\n\n```js\nvar ssiHttp = require('ssi-parser-http').http\n\nvar server = ssiHttp.createServer(callback, env).listen(port);\n```\n\nExplicitly specify listening port in `port` and static serving directory inside `env`. An example:\n\n\n```js\nvar ssiHttp = require('ssi-parser-http').http\n\nvar server = ssiHttp.createServer(function (req, res, opt) {\n  // 'opt' is invoked only if the 'GET' request is for 'shtml' page. 'opt' = 'resHttpStr'.\n}, {\n  ROOT_DIRECTORY: __dirname,\n  HTTP_USER_AGENT: 'www.king.agent'\n}).listen(8081);\n```\n\nTo enable DEBUG mode,\n\n```\nDEBUG=true node **.js\n```\n\n\n## Supported SSI Directives\n\n```http\n    <!--#include attribute = value -->\n    <!--#echo attribute = value -->\n```\n\n## Implementation (For Adobe reviewers)\n\nParsing directives is powered by regular expressions. A regexp `/<!\\-\\-#([a-z]+)\\s+([a-z]+)\\s*=\\s*([\"'])([^]*?)\\3\\s+\\-\\->/g` is sensitive enough for any `mod_include` syntax string. But this expression is not effective if multiple attributes in one directive, such as `<!--#directive attribute1=... attribute2... -->`. In `parser(settings, variables).run`, `settings` are context(so the process know where it is) for replacing the directive. `rootDomain` in `settings` is context for `virtual` attribute of `include` directive. `currentDocDir` is context for `file` attribute. `variables` are used for `echo` directive. `parser(settings, variables).run` function does directive replacement one by one until all supported format directives in document are replaced.\n\nThe **ssi-http** module basically extends the **node http** module with a wrapper function of `http.createServer` and minor changes to the resulting `server` instance. An `ssdMiddleWare` is used to filter `shtml` 'GET' request. The server also maintain the environment variables, which include `ROOT_DIRECTORY` the root directory in file system to serve. If it is not set, the current directory of running process will be treat as the `ROOT_DIRECTORY`. \n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)","created":"2014-10-22T22:12:04.135Z","modified":"2014-10-22T22:12:04.135Z","lastPublisher":{"name":"kingfolk","email":"jjlfolk@gmail.com"},"owners":[{"name":"kingfolk","email":"jjlfolk@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ssi-http-parser","_nodeVersion":"0.10.32","_npmUser":{"name":"kingfolk","email":"jjlfolk@gmail.com"},"_npmVersion":"2.1.2","_rev":"1-74db2e32294092c74ede90fa3d9907dc","_shasum":"c55d4afbc9ce0c1c34b88c67e46bdc2c01c38fe7","author":{"name":"J","email":"jialei.jin@epfl.ch"},"bugs":{"url":"https://github.com/kingfolk/SSI/issues"},"contributors":[{"name":"Jialei Jin","url":"http://github.com/kingfolk"}],"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"c55d4afbc9ce0c1c34b88c67e46bdc2c01c38fe7","tarball":"http://registry.npmjs.org/ssi-http-parser/-/ssi-http-parser-0.1.0.tgz"},"maintainers":[{"name":"kingfolk","email":"jjlfolk@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-10-22T22:12:04.135Z","created":"2014-10-22T22:12:04.135Z","0.1.0":"2014-10-22T22:12:04.135Z"}}}