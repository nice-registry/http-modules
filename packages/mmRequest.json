{"name":"mmRequest","version":"0.4.5","description":"The HTTP client for avalon.js","main":"dist/mmRequest.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/RubyLouvre/avalon-resource","dependencies":{"avalon-promise":"^0.4.0","avalon2":"~2.1.0"},"keywords":["ajax"],"license":"MIT","homepage":"https://github.com/RubyLouvre/avalon-resource#readme","devDependencies":{"webpack":"^1.13.1"},"gitHead":"bea5b6e82c89d1eb3fa229425452f2fe14978280","versions":[{"number":"0.4.0","date":"2016-07-02T07:29:11.663Z"},{"number":"0.4.1","date":"2016-07-02T17:03:01.675Z"},{"number":"0.4.2","date":"2016-07-02T17:21:20.159Z"},{"number":"0.4.3","date":"2016-07-09T14:03:49.564Z"},{"number":"0.4.4","date":"2016-07-12T17:54:30.471Z"},{"number":"0.4.5","date":"2016-07-25T03:22:53.004Z"}],"readme":"mmRequest\n=========\n\nmmRequest 为异步 HTTP（AJAX）请求提供了解决方案。就像 `jQuery.ajax()` 所做的那样。\n\nmmRequest 是 avalon 三柱臣之一（另外两个是 route 和 animation）。\n\n\n安装\n------------\n\n从 [bower](http://bower.io/) 安装：\n\n```\nbower install mm-request\n```\n从npm 安装\n\n```\nnpm install mmRequest --save\n```\n开始\n------------\n\nAvalon 遵循 [AMD](https://github.com/amdjs/amdjs-api) 规范。在引入 `avalon.js` 和 `mmRequest.js` 之后，你便可以像下面这样使用 mmRequest 了：\n\n```javascript\nrequire(['./mmRequest'], function(avalon) {\n    avalon.ajax({\n        url: '/foobar'\n    });\n});\n```\n\n文档\n-------------\n\nmmRequest 提供了如下方法：\n\n```javascript\n/*\n * avalon.ajax 需要传入一个拥有类似 url、type、dataType、type 等属性的对象参数；\n * avalon.ajax 的行为类似于 jQuery.ajax。\n */\navalon.ajax(opts)\n\n/*\n * 其他一些简写方法：\n */\navalon.get( url [, data ] [, success(data, textStatus, XHR) ] [, dataType ] )\navalon.post( url [, data ] [, success(data, textStatus, XHR) ] [, dataType ] )\navalon.upload( url, form [,data] [, success(data, textStatus, XHR)] [, dataType])\navalon.getJSON( url [, data ] [, success( data, textStatus, jqXHR ) ] )\navalon.getScript( url [, success(script, textStatus, jqXHR) ] )\n\navalon可以在配置对象使用headers来指定头部, \n```javascript\navalon.ajax({\n\ttype: \"POST\",\n\turl: \"your-path\",\n\theaders: {\n      xxx: \"yyy\"\n\n   },\n   success: function(){}\n\n})\n\n```\n\n/*\n * 一些有用的工具类方法：\n */\n// 将一个对象转换成一个用于 URL 中传递请求参数的字符串\navalon.param(obj)\n// 将一个用于 URL 中传递请求参数的字符串转换成一个对象\navalon.unparam(str)\n// 将一个元素中的表单元素编码成字符串\navalon.serialize(element)\n```\n\n更多信息请参考 `/docs`。\n\n示例\n----\n\n安装依赖：\n\n```\ncd demo/ && npm install\n```\n\n如果你很幸运地在中国，试试 [cnpm](http://cnpmjs.org/)。\n\n开启服务：\n\n```\ncd ../ && npm start\n```\n\n现在，打开你的浏览器访问 `http://127.0.0.1:3000` 这个地址，你将会看到例子。你可以在 `demo/bin/www` 这个文件中配置端口。\n\n在测试跨域请求之前，你需要模拟一个跨域的环境。你可以将这个项目复制到另外的路径并用另一个端口开启服务作为后端服务（这个例子中，后端服务的端口是 `9000`）。\n\n祝你愉快。:grin:\n\n贡献\n------------\n\n请在 `src/` 目录下开发相应的模块。\n\nmmRequest 使用 [gulp](http://gulpjs.com/) 构建，请先安装依赖模块：\n\n```\nnpm install\n```\n\n然后开启 `gulp`，监听 `src/` 下的变化并自动合并文件至 `public/`：\n\n```\ngulp\n```\n\n更新日志\n------------\n\n见 [CHANGELOG.md](CHANGELOG.md)\n\n","created":"2016-07-02T07:29:11.663Z","modified":"2016-07-25T03:22:53.004Z","lastPublisher":{"name":"rubylouvre","email":"cheng19840218@gmail.com"},"owners":[{"name":"rubylouvre","email":"cheng19840218@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"mmRequest","_nodeVersion":"4.1.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/mmRequest-0.4.5.tgz_1469416972752_0.608601878862828"},"_npmUser":{"name":"rubylouvre","email":"cheng19840218@gmail.com"},"_npmVersion":"3.5.3","_rev":"1-5931652e66e4841177d1779ba47dcd4e","_shasum":"d9690960c388014536380cb2ba34cfe0280bee80","author":{"name":"RubyLouvre"},"bugs":{"url":"https://github.com/RubyLouvre/avalon-resource/issues"},"directories":{},"dist-tags":{"latest":"0.4.5"},"dist":{"shasum":"d9690960c388014536380cb2ba34cfe0280bee80","tarball":"http://registry.npmjs.org/mmRequest/-/mmRequest-0.4.5.tgz"},"maintainers":[{"name":"rubylouvre","email":"cheng19840218@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-07-25T03:22:53.004Z","created":"2016-07-02T07:29:11.663Z","0.4.0":"2016-07-02T07:29:11.663Z","0.4.1":"2016-07-02T17:03:01.675Z","0.4.2":"2016-07-02T17:21:20.159Z","0.4.3":"2016-07-09T14:03:49.564Z","0.4.4":"2016-07-12T17:54:30.471Z","0.4.5":"2016-07-25T03:22:53.004Z"}}}