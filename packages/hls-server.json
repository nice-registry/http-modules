{"name":"hls-server","version":"1.0.2","description":"HTTP middleware for serving HTTP Live Streaming (HLS) compatible media streams","main":"src/index.js","scripts":{"test":"standard --fix && tape test/*.js"},"license":"MIT","devDependencies":{"standard":"^8.6.0","tape":"^4.6.3"},"dependencies":{"http-attach":"^1.0.0"},"gitHead":"6210d79c48261faf7c8d0be7fe1647ab5f8a0684","versions":[{"number":"1.0.0","date":"2017-03-25T06:14:12.033Z"},{"number":"1.0.1","date":"2017-03-25T06:21:44.791Z"},{"number":"1.0.2","date":"2017-04-05T22:55:41.378Z"}],"readme":"# hls-server\n[![Build Status](https://travis-ci.org/RationalCoding/hls-server.svg?branch=master&nonce=1937)](https://travis-ci.org/RationalCoding/hls-server) [![Standard - JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)  \n\nSimple HTTP middleware for serving HTTP Live Streaming (HLS) compatible media streams.  \n*This package aims to be a complete yet concise HLS streaming solution when it is complete.*  \n\n- [X] Input from video files (webm, mp4, mov, etc)\n- [ ] Input from existing live streams (RTMP, RTSP, MPEG-DASH, etc)\n- [ ] Input from streaming clients (FFMPEG, OBS, Adobe FMLE, etc)\n- [X] Output as HLS live stream\n\n## Usage\nFirst you need a compatible media stream (see [Producing Streams](#producing-streams))\n\nFast way:\n```javascript\nrequire('hls-server')(8000)\n```\n\nDetailed way:\n```javascript\nvar HLSServer = require('hls-server')\nvar http = require('http')\n\nvar server = http.createServer()\nvar hls = new HLSServer(server, {\n  path: '/streams',     // Base URI to output HLS streams\n  dir: 'public/videos'  // Directory that input files are stored\n})\nserver.listen(8000)\n```\n\n### Producing Streams\nHLS can only stream files that have been properly encoded and segmented. FFMPEG is great for this.  \nHere is how to do it with [node-fluent-ffmpeg](https://github.com/fluent-ffmpeg/node-fluent-ffmpeg).\n\n```javascript\nvar ffmpeg = require('fluent-ffmpeg')\n\nfmpeg('input.mp4', { timeout: 432000 }).addOptions([\n    '-profile:v baseline',\n    '-level 3.0',\n    '-s 640x360',\n    '-start_number 0',\n    '-hls_time 10',\n    '-hls_list_size 0',\n    '-f hls'\n  ]).output('output.m3u8').on('end', callback).run()\n```\n\n### TODO:\n- Publishing from streams instead of files.\n","created":"2017-03-25T06:14:12.033Z","modified":"2017-04-05T22:55:41.378Z","lastPublisher":{"name":"rationalcoding","email":"thomasmullendesign@gmail.com"},"owners":[{"name":"rationalcoding","email":"thomasmullendesign@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"hls-server","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/hls-server-1.0.2.tgz_1491432939493_0.39846928091719747"},"_npmUser":{"name":"rationalcoding","email":"thomasmullendesign@gmail.com"},"_npmVersion":"3.10.3","_rev":"3-e660ba2156c4d0fa9dc29171f76bd7bf","_shasum":"600031329607388a013525c62e99a2fbafcf667e","author":{"name":"Thomas Mullen"},"directories":{"test":"test"},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"600031329607388a013525c62e99a2fbafcf667e","tarball":"https://registry.npmjs.org/hls-server/-/hls-server-1.0.2.tgz"},"maintainers":[{"name":"rationalcoding","email":"thomasmullendesign@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-05T22:55:41.378Z","created":"2017-03-25T06:14:12.033Z","1.0.0":"2017-03-25T06:14:12.033Z","1.0.1":"2017-03-25T06:21:44.791Z","1.0.2":"2017-04-05T22:55:41.378Z"}}}