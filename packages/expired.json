{"name":"expired","version":"1.3.12","description":"Calculate when HTTP responses expire from the cache headers","main":"src/index.js","scripts":{"test":"nyc ava","lint":"xo","coverage":"nyc report --reporter=text-lcov | coveralls"},"repository":"https://github.com/lukechilds/expired","keywords":["calculate","HTTP","response","expires","expire","expirey","cache","headers","pure"],"license":"MIT","homepage":"https://github.com/lukechilds/expired","dependencies":{"date-fns":"1.28.5","parse-headers":"2.0.1"},"devDependencies":{"ava":"^0.19.0","coveralls":"^2.11.15","date-fns":"^1.28.3","nyc":"^10.0.0","timekeeper":"^1.0.0","xo":"^0.19.0"},"gitHead":"6ea483c640d2c520d4b62c706f7b17927dab2eff","versions":[{"number":"0.0.1","date":"2016-12-22T11:53:48.487Z"},{"number":"0.1.0","date":"2016-12-22T12:35:12.129Z"},{"number":"1.0.0","date":"2016-12-23T06:59:43.005Z"},{"number":"1.1.0","date":"2016-12-29T07:35:57.530Z"},{"number":"1.1.1","date":"2016-12-29T07:44:38.690Z"},{"number":"1.2.0","date":"2017-01-07T11:02:02.431Z"},{"number":"1.2.1","date":"2017-01-07T11:17:01.653Z"},{"number":"1.3.0","date":"2017-01-08T04:22:29.393Z"},{"number":"1.3.1","date":"2017-01-08T06:48:45.527Z"},{"number":"1.3.2","date":"2017-01-14T08:47:27.982Z"},{"number":"1.3.3","date":"2017-01-16T15:34:03.987Z"},{"number":"1.3.4","date":"2017-01-17T03:35:39.043Z"},{"number":"1.3.5","date":"2017-02-27T10:59:22.386Z"},{"number":"1.3.6","date":"2017-03-20T10:52:59.742Z"},{"number":"1.3.7","date":"2017-03-23T02:36:23.324Z"},{"number":"1.3.8","date":"2017-03-23T02:59:14.428Z"},{"number":"1.3.9","date":"2017-03-28T05:38:48.384Z"},{"number":"1.3.10","date":"2017-04-17T11:09:51.659Z"},{"number":"1.3.11","date":"2017-04-27T17:20:06.822Z"},{"number":"1.3.12","date":"2017-05-21T09:15:35.298Z"}],"readme":"# expired\n\n> Calculate when HTTP responses expire from the cache headers\n\n[![Build Status](https://travis-ci.org/lukechilds/expired.svg?branch=master)](https://travis-ci.org/lukechilds/expired)\n[![Coverage Status](https://coveralls.io/repos/github/lukechilds/expired/badge.svg?branch=master)](https://coveralls.io/github/lukechilds/expired?branch=master)\n[![npm](https://img.shields.io/npm/v/expired.svg)](https://www.npmjs.com/package/expired)\n\n`expired` accepts HTTP headers as an argument and will return information on when the resource will expire. `Cache-Control` and `Expires` headers are supported, if both exist `Cache-Control` takes priority ([Why?](http://stackoverflow.com/a/7549558/5625059)).\n\n## Install\n\n```shell\nnpm install --save expired\n```\n\n## Usage\n\n```js\nconst expired = require('expired');\n\nconst headers = `\nAge: 0\nCache-Control: public, max-age=300\nContent-Encoding: gzip\nContent-Type: application/json;charset=utf-8\nDate: Fri, 23 Dec 2016 05:50:31 GMT\nLast-Modified: Fri, 23 Dec 2016 05:23:23 GMT`;\n\nexpired(headers);\n// false\n\nexpired.in(headers);\n// 500000\n\nexpired.on(headers);\n// Date('2016-12-23T05:55:31.000Z')\n\ndelay(600000).then(() => {\n\n  expired(headers);\n  // true\n\n  expired.in(headers);\n  // -100000\n\n  expired.on(headers);\n  // Date('2016-12-23T05:55:31.000Z')\n\n});\n```\n\nMany HTTP modules will parse response headers into an object for you. `expired` will also accept headers in this format:\n\n```js\nconst expired = require('expired');\n\nconst headers = {\n  'age': '0',\n  'cache-control': 'public, max-age=300',\n  'content-encoding': 'gzip',\n  'content-type': 'application/json;charset=utf-8',\n  'date': 'Fri, 23 Dec 2016 05:50:31 GMT',\n  'last-modified': 'Fri, 23 Dec 2016 05:23:23 GMT'\n};\n\nexpired(headers);\n// false\n```\n\n## Pure Usage\n\nYou can make the functions pure by passing in a JavaScript `Date` object to compare to instead of depending on `new Date()`. This isn't necessary for `expired.on` as it doesn't compare dates and is already pure.\n\nThe following are all pure functions:\n\n```js\nconst headers = `...`;\nconst date = new Date();\n\nexpired(headers, date);\nexpired.in(headers, date);\nexpired.on(headers);\n```\n\n## API\n\n### expired(headers, [date])\n\nReturns a boolean relating to whether the resource has expired or not. `true` means it's expired, `false` means it's fresh.\n\n### expired.in(headers, [date])\n\nReturns the amount of milliseconds from the current date until the resource will expire. If the resource has already expired it will return a negative integer.\n\n### expired.on(headers)\n\nReturns a JavaScript `Date` object for the date the resource will expire.\n\n## License\n\nMIT Â© Luke Childs\n","starsCount":1,"created":"2016-12-22T11:53:48.487Z","modified":"2017-05-21T09:15:35.298Z","lastPublisher":{"name":"lukechilds","email":"lukechilds123@gmail.com"},"owners":[{"name":"lukechilds","email":"lukechilds123@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"expired","_nodeVersion":"6.7.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/expired-1.3.12.tgz_1495358134754_0.14371915999799967"},"_npmUser":{"name":"lukechilds","email":"lukechilds123@gmail.com"},"_npmVersion":"3.10.3","_rev":"21-09ad6829e0ab4f6d58f3a4e38582b729","_shasum":"d6352cb01d2c47a5052e2bd8df1340852f5714c1","author":{"name":"Luke Childs","email":"lukechilds123@gmail.com","url":"http://lukechilds.co.uk"},"bugs":{"url":"https://github.com/lukechilds/expired/issues"},"directories":{},"dist-tags":{"latest":"1.3.12"},"dist":{"shasum":"d6352cb01d2c47a5052e2bd8df1340852f5714c1","tarball":"https://registry.npmjs.org/expired/-/expired-1.3.12.tgz"},"maintainers":[{"name":"lukechilds","email":"lukechilds123@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-21T09:15:35.298Z","created":"2016-12-22T11:53:48.487Z","0.0.1":"2016-12-22T11:53:48.487Z","0.1.0":"2016-12-22T12:35:12.129Z","1.0.0":"2016-12-23T06:59:43.005Z","1.1.0":"2016-12-29T07:35:57.530Z","1.1.1":"2016-12-29T07:44:38.690Z","1.2.0":"2017-01-07T11:02:02.431Z","1.2.1":"2017-01-07T11:17:01.653Z","1.3.0":"2017-01-08T04:22:29.393Z","1.3.1":"2017-01-08T06:48:45.527Z","1.3.2":"2017-01-14T08:47:27.982Z","1.3.3":"2017-01-16T15:34:03.987Z","1.3.4":"2017-01-17T03:35:39.043Z","1.3.5":"2017-02-27T10:59:22.386Z","1.3.6":"2017-03-20T10:52:59.742Z","1.3.7":"2017-03-23T02:36:23.324Z","1.3.8":"2017-03-23T02:59:14.428Z","1.3.9":"2017-03-28T05:38:48.384Z","1.3.10":"2017-04-17T11:09:51.659Z","1.3.11":"2017-04-27T17:20:06.822Z","1.3.12":"2017-05-21T09:15:35.298Z"},"users":{"rocket0191":true}}}