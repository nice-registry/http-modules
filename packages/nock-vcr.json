{"name":"nock-vcr","version":"0.0.0","description":"Automate the recording and play-back of HTTP requests with the nock framework.","main":"lib/nock-vcr.js","scripts":{"test":"cake test"},"repository":"https://github.com/carbonfive/nock-vcr","keywords":["mock","http","vcr"],"license":"BSD","dependencies":{"nock":"git://github.com/rudyjahchan/nock.git"},"devDependencies":{"coffee-script":"1.4.x","mocha":"1.x","chai":"1.4.x"},"versions":[{"number":"0.0.0","date":"2013-01-28T06:29:52.413Z"}],"readme":"#Nock-VCR\n\nLike the Ruby [VCR][VCR] gem, record your test-suite's HTTP interactions\nand replay them during future runs for speedy, deterministic, and\naccurate tests. Built atop [nock][nock]'s testing and recording\ncapability.\n\n## Installation\n\n```sh\nnpm install nock-vcr\n```\n\n## Usage\n\nIn your tests, require nock-vcr. Then use <code>insertCassette</code> to\nmark the start of where recording - and later playback - should begin\nand <code>ejectCassette</code> where it should end. Recorded \"cassettes\"\n\\- [nock][nock] code to mock the transactions - will be saved under\n<code>test/cassettes</code>!\n\nFor example:\n\n```coffeescript\nnvcr = require 'nock-vcr'\n\nfs = require 'fs'\nhttp = require 'http'\n\nrequestComplete = false\n\ndescribe 'using nock-vcr', ->\n  context 'insert a cassette, and eject it when it is done', ->\n    beforeEach (done)->\n      nvcr.insertCassette 'Your cassette name here'\n      options = method: 'GET', host: 'google.com', port: 80, path: '/'\n      http.request(options, (res)=>\n        res.on 'end', =>\n          requestComplete = true\n          nvcr.ejectCassette()\n          done()\n      ).end()\n\n    it 'creates a cassette', ->\n      expect(requestComplete).to.be.true\n```\n\nYou can force nock-vcr to record all the time by passing and setting a\n<code>record</code> option of <code>insertCassette</code> to the string\n<code>'ALL'</code>, or by setting the environment variable\n<code>NOCK_VCR_MODE</code> to the same value.\n\n## Notes\n\nCurrently this runs on top of [a modified version of nock][my-nock]\nthat corrects a bug in the code generated during recording as well as a\nway to re-activate mocking after a restore.\n\n## Upcoming Features\n\n* More options that can affect the recording behavior.\n* Hooks into popular testing frameworks.\n\n  [my-nock]: http://github.com/rudyjahchan/nock\n  [nock]: http://github.com/flatiron/nock\n  [vcr]: http://github.com/vcr/vcr\n","starsCount":0,"created":"2013-01-28T06:29:51.589Z","modified":"2014-09-23T01:12:29.604Z","lastPublisher":{"name":"rudy","email":"rudy@carbonfive.com"},"owners":[{"name":"rudy","email":"rudy@carbonfive.com"}],"other":{"_attachments":{},"_id":"nock-vcr","_npmUser":{"name":"rudy","email":"rudy@carbonfive.com"},"_npmVersion":"1.1.69","_rev":"1-e0faf0af352be85bcd790505b0004301","author":{"name":"Rudy Jahchan","email":"rudy@carbonfive.com"},"directories":{},"dist-tags":{"latest":"0.0.0"},"dist":{"shasum":"c54895144001e6160a544ad1760cff89f8919ea6","tarball":"http://registry.npmjs.org/nock-vcr/-/nock-vcr-0.0.0.tgz"},"maintainers":[{"name":"rudy","email":"rudy@carbonfive.com"}],"readmeFilename":"README.md","time":{"modified":"2014-09-23T01:12:29.604Z","created":"2013-01-28T06:29:51.589Z","0.0.0":"2013-01-28T06:29:52.413Z"},"users":{}}}