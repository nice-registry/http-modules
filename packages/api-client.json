{"name":"api-client","description":"Object Oriented library for HTTP Web API clients","version":"1.1.3","homepage":"https://github.com/seifertd/api-client","keywords":["request","rest","web service","api","client"],"repository":"https://github.com/seifertd/api-client","scripts":{"test":"cake test"},"dependencies":{"config":"~0.4.35","request":"~2","underscore":"~1"},"devDependencies":{"testutil":"~0.7.0","coffee-script":"~1.7.1","mocha":"~1.18.2","chai":"~1.9.1","async":"~0.7.0","growl":"~1.7.0","fs-extra":"~0.8.1","path-extra":"~0.1.1","bondjs":"~1.1.0"},"engines":{"node":"*"},"versions":[{"number":"0.0.1","date":"2013-04-24T00:43:17.304Z"},{"number":"0.0.2","date":"2013-04-24T00:55:35.528Z"},{"number":"0.0.3","date":"2013-04-24T01:00:31.680Z"},{"number":"0.0.4","date":"2013-04-25T21:15:14.395Z"},{"number":"0.0.5","date":"2013-04-25T23:03:10.675Z"},{"number":"0.0.7","date":"2013-04-26T19:43:30.245Z"},{"number":"0.0.8","date":"2013-04-30T21:07:35.627Z"},{"number":"1.0.0","date":"2013-05-01T17:33:52.996Z"},{"number":"1.0.1","date":"2013-05-01T22:29:15.818Z"},{"number":"1.0.2","date":"2013-05-13T21:02:52.328Z"},{"number":"1.0.3","date":"2013-05-13T21:17:36.942Z"},{"number":"1.0.4","date":"2013-05-16T18:38:54.595Z"},{"number":"1.0.6","date":"2013-05-16T20:08:15.331Z"},{"number":"1.0.10","date":"2013-11-21T20:57:12.341Z"},{"number":"1.0.12","date":"2014-01-13T19:08:30.520Z"},{"number":"1.0.14","date":"2014-01-14T21:25:21.225Z"},{"number":"1.1.0","date":"2014-01-14T22:37:44.935Z"},{"number":"1.1.2","date":"2014-04-09T20:49:41.635Z"},{"number":"1.1.3","date":"2014-08-07T22:23:33.099Z"}],"readme":"api-client\n==========\n\nnode.js _request_ library wrapper and configuration management\n\nWhy?\n----\n\nNeeded a driver for the _request_ library that clearly separated configuration\nof web service API endpoints from the code that consumed them.\n\n\n\nInstallation\n------------\n\n    npm install api-client\n\nUsage\n-----\n\napi-client manages configuration and creation of a set of named api\nendpoints.  Endpoint configuration can be achieved in one of three ways:\n\n  1.  The configuration can be supplied explicitly to the library by\n      clients\n  1.  The library can load a configuration using the *node_config*\n      (See https://github.com/lorenwest/node-config) module.\n  1.  Configuration can be added piecemeal by registering endpoint\n      objects and corresponding configuration by calling a function\n\nIn the first two cases, the api-client library expects the config object\nto have a single attribute, 'endpoints', pointing at a object.  The object\nin turn contains any number endpoint configuration objects as attributes:\n\n```coffeescript\nendpoints:\n  twitter:\n    type: 'TwitterClient'\n    host: 'api.twitter.com'\n    options:\n      protocol: 'https'\n  other_api:\n    host: 'other.com'\n```\n\nThe above configuration object defines configuration of two named \nendpoints, 'twitter' and 'other_api'.  The configurations can be\nreferred to by name when creating instances of ApiClient for sending\nrequests to the web service api.  The configuration may specify a\n'type' attribute, whose value is the name of a registered or \npre-configured api client object.\n\nConfiguration\n-------------\n\nEach endpoint configuration object has the following layout:\n\n```coffeescript\nhost: 'some.host.com'       # The only required attribute\nport: '232'                 # Defaults to 80 or 443, depending on the\n                            #   options.protocol attribute\ntype: 'StringClassName'     # Defaults to 'ApiClient'\noptions:\n  protocol: 'http|https'    # Either 'http' or 'https', defaults to 'http'\n  base_path: '/apibase'     # The base of all url paths for the service, defaults to ''\n  username: 'user'          # Defaults to null, use to configure HTTP basic auth\n  password: 'pass'          # Defaults to null, use to configure HTTP basic auth\n  version: 'API_VERSION'    # Defaults to null, appended to base_path to form url, only\nrequest_options:\n  timeout:                # Defaults to 2000, request fails if it takes longer than this\n```\n\nThe request_options object can be used to specify any option\nallowed by the node.js request library.  See https://github.com/mikeal/request.\n\nThe url formed by the api-client will therefore be:\n\n\"#{options.protocol}://#{host}:#{port}#{base_path}[/#{version}]\"\n\n### Using the default configuration\n\n```coffeescript\n{ApiClient} = require 'api-client'\n\nApiClient.load null\nconsole.log \"Loaded API Client\"\n\n# Create an instance of TwitterClient.\ntwitter = ApiClient.create 'twitter'\n  \ntwitter.user_info(1, 'TwitterAPI', {include_entities: true}, (err, response, body) ->\n  console.log \"Got Twitter JSON data: \" + body\n```\n\n### Client supplied configuration\n\n```coffeescript\n{ApiClient} = require 'api-client'\nmy_config =\n  endpoints:\n    foo_client:\n      host: 'foo.com'\n\nApiClient.load my_config\nconsole.log \"Loaded API Client\"\n\nfoo_client = ApiClient.create('foo_client')\n\nfoo_client.get({...})\n```\n\n### Registering client created ApiClient subclasses\n\n```coffeescript\n{ApiClient} = require 'api-client'\n\nclass FooClient extends ApiClient\n  test: ->\n    console.log \"Foo request: \" + @url()\n\nApiClient.register('foo', FooClient, 'FooClient', {\n  host: 'foo.com',\n  type: 'FooClient',\n  options:\n    base_path: '/fooapi'\n})\n\nconsole.log \"Registered FooClient, config = \" + util.inspect(ApiClient.config)\n\nfc = ApiClient.create('foo')\n\nfc.test()\n```\n\nVersioned Api Client\n--------------------\n\nThe library also exports a subclass of ApiClient called VersionedApiClient\nthat allows automatic handling of an API version in the request path.\nThis is of limited use, because the base_path configuration option can\njust as well handle it.  To use it, provide endpoint config like the\nfollowing:\n\n```coffeescript\nendpoints:\n  versioned:\n    type: 'VersionedApiClient'\n    host: 'somehost.com'\n    options:\n      base_path: '/api'\n      version: 'v2'\n```\n\nStubbing and Testing\n--------------------\n\nThe api-client library is written to support testing against it by stubbing\nrequests by url regex.  Stubs can be set using the configuration mechanism\nor set explicitly on an instance of the ApiClient class.\n\nVia configuration:\n\n```coffeescript\nendpoints:\n  myclient:\n    type: 'ApiClient'\n    host: 'somehost.com'\n    options:\n      base_path: '/foo'\n    stubs: [\n      [ /.*/, null, null, 'stub body' ]\n    ] \n```\n\nor programatically:\n\n```coffeescript\nmyClient = ApiClient.create 'myclient'\nmyClient.stub_request [ /.*/, null, null, 'stub body' ]\n```\n\nThe stub definition consists of an array of four objects:\n\n  1. A regex that will test the url.  If the test is true, this stub will be used\n  1. An error object to return if the stub is used\n  1. A response object to return if the stub is used\n  1. A body object to return if the stub is used.\n\nIn either of the above cases, any @get call against the client would result\nin 'stub body' being returned as the body because the regex would match any\nurl.\n\nThe stub body can be either a static string, or an object with a 'file' attribute.\nIn the latter case, the file attribute is the path name of a file whose contents\nare used as the stub body.\n\nLicense\n-------\n\nMIT Licensed\n\nCopyright (c) 2013-14 Douglas A. Seifert\n\n","created":"2013-04-24T00:43:16.349Z","modified":"2014-08-07T22:23:33.099Z","lastPublisher":{"name":"doug","email":"doug@dseifert.net"},"owners":[{"name":"doug","email":"doug@dseifert.net"}],"other":{"_attachments":{},"_from":".","_id":"api-client","_npmUser":{"name":"doug","email":"doug@dseifert.net"},"_npmVersion":"1.4.3","_rev":"1-0f8ce577912977634b818a3d880d5374","author":{"name":"Douglas A. Seifert","email":"doug@dseifert.net","url":"http://www.dseifert.net"},"bugs":{"url":"https://github.com/seifertd/api-client/issues"},"directories":{},"dist-tags":{"latest":"1.1.3"},"dist":{"shasum":"fc36afb2494dc53e7367024c113df9d9763ad40f","tarball":"http://registry.npmjs.org/api-client/-/api-client-1.1.3.tgz"},"maintainers":[{"name":"doug","email":"doug@dseifert.net"}],"readmeFilename":"README.md","time":{"modified":"2014-08-07T22:23:33.099Z","created":"2013-04-24T00:43:16.349Z","0.0.1":"2013-04-24T00:43:17.304Z","0.0.2":"2013-04-24T00:55:35.528Z","0.0.3":"2013-04-24T01:00:31.680Z","0.0.4":"2013-04-25T21:15:14.395Z","0.0.5":"2013-04-25T23:03:10.675Z","0.0.7":"2013-04-26T19:43:30.245Z","0.0.8":"2013-04-30T21:07:35.627Z","1.0.0":"2013-05-01T17:33:52.996Z","1.0.1":"2013-05-01T22:29:15.818Z","1.0.2":"2013-05-13T21:02:52.328Z","1.0.3":"2013-05-13T21:17:36.942Z","1.0.4":"2013-05-16T18:38:54.595Z","1.0.6":"2013-05-16T20:08:15.331Z","1.0.10":"2013-11-21T20:57:12.341Z","1.0.12":"2014-01-13T19:08:30.520Z","1.0.14":"2014-01-14T21:25:21.225Z","1.1.0":"2014-01-14T22:37:44.935Z","1.1.2":"2014-04-09T20:49:41.635Z","1.1.3":"2014-08-07T22:23:33.099Z"}}}