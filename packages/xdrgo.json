{"name":"xdrgo","version":"0.0.5","main":"xdrgo","license":"MIT","repository":"https://github.com/iambumblehead/xdrgo","keywords":["http","xhr","xdr","cors","rest","request","json"],"dependencies":{"xhrgo":"^0.1.2"},"devDependencies":{"compareobj":">=0.0.3","jasmine-node":">=1.3.0"},"scripts":{"test":"node node_modules/jasmine-node/bin/jasmine-node --verbose test/"},"description":"cross-site http requests in your browser script","gitHead":"ad9506e17ded440d1bb48341a684eeff0e3693a0","homepage":"https://github.com/iambumblehead/xdrgo#readme","versions":[{"number":"0.0.1","date":"2013-10-16T16:17:17.923Z"},{"number":"0.0.2","date":"2015-12-10T06:28:59.007Z"},{"number":"0.0.5","date":"2017-05-06T07:52:54.565Z"}],"readme":"xdrgo\n=====\n**(c)[Bumblehead][0], 2013** [MIT-license](#license)\n\n_CORS is not supported by IE < 8._\n\n__xdrgo is beta and is not for production use__\n\nhttps://stripe.com/blog/stripejs-and-jsonp \nno need for iframes as well as jsonp\n\n\nhttp://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\nxdr limitations:\n - only GET and POST may be used\n - no header customisation\n - *only* text/plain is supported as a Content-Type\n - no authentication or cookies may be sent with request\n\n\nSimple/dumb `xhr` (`xdr` for IE) object for performing cross-domain requests, using [CORS][5] when available or [xdr][8] as a fallback.\n\nAnother way to make cross-domain requests is [JSONP][6]. JSONP exploits unintended browser functionality. You may want to use JSONP rather than CORS if you need to support older browsers (lt IE8).\n\nCORS and xdr supports the full range of REST methods (GET, POST, DELETE, etc.). CORS provides complete error handling. It limits access a malicious page would have to remote server data. It does not expose clients to remote server vulnerabilities.\n\nxdrgo is not a comprehensive solution for xhr/xdr usage. It's perfect for the most common type of request using non-chunked json, html and [form-urlencoded][3] data formats. It assumes there is one 'success' response, `200`.\n\nxdrgo uses the node.js callback convention.\n\n\n[5]: http://en.wikipedia.org/wiki/Cross-origin_resource_sharing \"cors\"\n[6]: http://en.wikipedia.org/wiki/JSONP                        \"jsonp\"\n[7]: http://en.wikipedia.org/wiki/Cross-site_request_forgery    \"xsrf\"\n[0]: http://www.bumblehead.com                            \"bumblehead\"\n[3]: https://npmjs.org/package/form-urlencoded    \"www-urlformencoded\"\n[8]: http://msdn.microsoft.com/en-us/library/ie/cc288060%28v=vs.85%29.aspx \"xdr\"\n\n - **xdrgo.JSON( _type_, _url_, _data_, _token_, _fn_, _time_ )**\n \n   The first two parameters are required. Data is sent and received in the JSON format. Data is passed to and returned from the method in the form of an object.\n \n   ```javascript\n   xdrgo.JSON('POST', '/hi', {hi:'b'}, null, function (err, res) {\n     if (err) return fn(new Error(err));     \n     fn(null, res);\n   }, 1000);\n   ```\n\n - **xdrgo.JSONU( _type_, _url_, _data_, _token_, _fn_, _time_ )**\n\n   Calls `xdrgo.JSON` after adding a unique parameter to the url. Used to avoid cached responses.\n\n - **xdrgo.getTextHTML( _url_, _fn_, _time_ )**\n \n   This method makes 'GET' requests with \"Content-Type\" \"text/html\". Useful for requesting static template and text files.\n\n   ```javascript\n   xdrgo.getTextHTML(htmlUrl, function (err, template) {\n     if (err) return fn(new Error('failed load html: ' + htmlUrl));        \n     fn(null, template);\n   });\n   ```\n   \n - **xdrgo.getTextHTMLU( _url_, _fn_, _time_ )**\n\n   Calls `xdrgo.getTextHTML` after adding a unique parameter to the url. Used to avoid cached responses.\n\n - **xdrgo.newRequest( )**\n \n   Returns a browser-supported xhr object. For most browser's the value returned by this method is `new XMLHttpRequest()`\n\n - **xdrgo.getUriAsUnique( _url_ )**\n \n   Returns a new url with a unique parameter added.\n\n   ```javascript\n   xdrgo.getUriAsUnique('/a.html'); // \"/a.html?uid=1377988402490\"\n   ```\n\n - **xdrgo.addKeyVal( _url_, _k_, _v_ )**\n \n   Returns a new url with key/val parameters added.\n   \n   ```javascript\n   var url = '/resource';\n   url = xdrgo.addKeyVal(url, 'a', '1'); // \"/resource?a=1\"\n   url = xdrgo.addKeyVal(url, 'b', '2'); // \"/resource?a=1&b=2\"\n   ```\n\n - **xdrgo.getArgsObjAsUriStr( _argsObj_ )**\n \n   Top-level properties of the object are returned as a key/value string. Each value is encoded. The keys are joined in alphabetical order. \n\n   For more comprehensive object serialization use [url-formencoded][2].\n\n   ```javascript\n   xdrgo.getArgsObjAsUriStr({\n     modified : 137798840249,\n     currency : 'usd'\n   }); \n   // \"currency=usd&modifed=137798840249\"\n   ```\n\n - **xdrgo.getUriStrAsArgsObj( _uriStr_ )**\n \n   Retuns an object with properties named and defined with values from the url. `vanillaUri` and `hash` are always named properties on the object returned.\n\n   ```javascript\n   xdrgo.getUriStrAsArgsObj(\n     \"/resource/currency=usd&time=137798840249#hashvalue\"\n   }); \n   // {\n   //   vanillaUri : '/resource/currency=usd&time=137798840249#val',\n   //   hash : 'val',\n   //   lastmodified : 137798840249,\n   //   currency : 'usd'\n   // }\n   ```\n\n[2]: http://github.com/iambumblehead/url-formencoded     \"formencoded\"\n\n------------------------------------------------------------------------------\n#### <a id=\"license\">License:\n\n ![scrounge](https://github.com/iambumblehead/scroungejs/raw/master/img/hand.png) \n\n(The MIT License)\n\nCopyright (c) 2012 [Bumblehead][0] <chris@bumblehead.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","created":"2013-10-16T16:17:16.496Z","modified":"2017-05-06T07:52:54.565Z","lastPublisher":{"name":"bumblehead","email":"chris@bumblehead.com"},"owners":[{"name":"bumblehead","email":"chris@bumblehead.com"}],"other":{"_attachments":{},"_from":".","_id":"xdrgo","_nodeVersion":"6.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xdrgo-0.0.5.tgz_1494057174339_0.5644468378741294"},"_npmUser":{"name":"bumblehead","email":"chris@bumblehead.com"},"_npmVersion":"3.10.10","_rev":"2-0a98d8eed4b4c8cae19ec76571cb8046","_shasum":"175878ee6065a2860ef9689cbc0dfbc3e347478a","bugs":{"url":"https://github.com/iambumblehead/xdrgo/issues"},"directories":{},"dist-tags":{"latest":"0.0.5"},"dist":{"shasum":"175878ee6065a2860ef9689cbc0dfbc3e347478a","tarball":"https://registry.npmjs.org/xdrgo/-/xdrgo-0.0.5.tgz"},"maintainers":[{"name":"bumblehead","email":"chris@bumblehead.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-06T07:52:54.565Z","created":"2013-10-16T16:17:16.496Z","0.0.1":"2013-10-16T16:17:17.923Z","0.0.2":"2015-12-10T06:28:59.007Z","0.0.5":"2017-05-06T07:52:54.565Z"}}}