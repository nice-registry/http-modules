{"name":"cache-immutable","description":"set HTTP response headers to cache for a long time","version":"1.0.2","devDependencies":{"defence-cli":"^2.0.0","replace-require-self":"^1.1.1","standard":"^8.0.0"},"files":["index.js"],"license":"MIT","repository":"https://github.com/kemitchell/cache-immutable.js","scripts":{"test":"defence README.md | replace-require-self | node","lint":"standard"},"gitHead":"b363ae56a89c435d7bba54356c7200eb0f5753ee","homepage":"https://github.com/kemitchell/cache-immutable.js#readme","versions":[{"number":"1.0.0","date":"2016-05-31T05:15:33.274Z"},{"number":"1.0.1","date":"2016-05-31T05:16:32.503Z"},{"number":"1.0.2","date":"2016-08-27T00:40:55.053Z"}],"readme":"```javascript\nvar assert = require('assert')\nvar http = require('http')\n\nvar cacheImmutable = require('cache-immutable')\n\nvar receivedResponse = false\n\nhttp.createServer()\n.on('request', function (request, response) {\n  // Call the function with a Node.js http.ServerResponse argument.\n  cacheImmutable(response)\n  response.end()\n})\n.listen(0 /* random high port */, function () {\n  var server = this\n  var port = server.address().port\n  http.request({port: port})\n  .on('response', function (response) {\n    var headers = response.headers\n    // RFC 2616 (HTTP 1.1), section 14.21\n    assert.equal(headers['cache-control'], 'max-age=31536000')\n    // 31536000\n    // = 365 * 24 * 60 * 60\n    // ~= a (non-leap) year's worth of seconds\n    // HTTP 1.0 headers.  See note below.\n    assert.equal('expires' in headers, false)\n    assert.equal('pragma' in headers, false)\n    receivedResponse = true\n    server.close()\n  })\n  .end()\n})\n\nprocess.on('exit', function () {\n  assert.equal(receivedResponse, true)\n  console.log('Tests passed')\n})\n```\n\nHTTP 1.0 defines the Expires header, and HTTP 1.1 (RFC 2616 section\n14.21) mentions:\n\n> To mark a response as \"never expires,\" an origin server sends an\n> Expires date approximately one year from the time the response is\n> sent. HTTP/1.1 servers SHOULD NOT send Expires dates more than one\n> year in the future.\n\nCache-Control is much simpler; there are all kinds of\nquirks to deal with generating and parsing the \"HTTP-date\" format for\nExpires, while max-age is just a number of seconds.\n\nFortunately, section 14.9.3 clarifies:\n\n> Furthermore If a response includes both an Expires header and a\n> max-age directive, the max-age directive overrides the Expires header,\n> even if the Expires header is more restrictive. This rule allows an\n> origin server to provide, for a given response, a longer expiration\n> time to an HTTP/1.1 (or later) cache than to an HTTP/1.0 cache.\n\nFortunately, many \"HTTP 1.0\" clients actually support Cache-Control,\nlike nearly all recent clients. Mark Nottingham [notes][Nottingham]\nthat's actually legit under RFC 2145. Section 2.2 says:\n\n[Nottingham]: https://www.mnot.net/blog/2007/05/15/expires_max-age\n\n> For example, an HTTP/1.1 server may send a \"Cache-control\" header to\n> an HTTP/1.0 client; this may be useful if the immediate recipient is\n> an HTTP/1.0 proxy, but the ultimate recipient is an HTTP/1.1 client.\n","created":"2016-05-31T05:15:33.274Z","modified":"2016-08-27T00:40:55.053Z","lastPublisher":{"name":"kemitchell","email":"kyle@kemitchell.com"},"owners":[{"name":"kemitchell","email":"kyle@kemitchell.com"}],"other":{"_attachments":{},"_from":".","_id":"cache-immutable","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cache-immutable-1.0.2.tgz_1472258452969_0.47092231921851635"},"_npmUser":{"name":"kemitchell","email":"kyle@kemitchell.com"},"_npmVersion":"3.10.6","_rev":"1-fe30ab0d784c3e4309aa2de8691a1adf","_shasum":"3abc989fd8312463895fd0a517230668c7c20130","author":{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com/"},"bugs":{"url":"https://github.com/kemitchell/cache-immutable.js/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"3abc989fd8312463895fd0a517230668c7c20130","tarball":"http://registry.npmjs.org/cache-immutable/-/cache-immutable-1.0.2.tgz"},"maintainers":[{"name":"kemitchell","email":"kyle@kemitchell.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-27T00:40:55.053Z","created":"2016-05-31T05:15:33.274Z","1.0.0":"2016-05-31T05:15:33.274Z","1.0.1":"2016-05-31T05:16:32.503Z","1.0.2":"2016-08-27T00:40:55.053Z"}}}