{"name":"n4store","description":"simple nodejs http client for 4store","versions":[{"number":"0.0.1","date":"2012-11-22T14:37:07.949Z"},{"number":"0.0.2","date":"2012-11-22T14:42:58.932Z"},{"number":"0.0.3","date":"2012-11-25T08:22:34.678Z"},{"number":"0.0.4","date":"2012-12-07T09:34:39.777Z"},{"number":"0.0.5","date":"2012-12-07T09:44:53.278Z"},{"number":"0.0.6","date":"2013-02-14T15:59:34.086Z"},{"number":"0.0.5-a","date":"2013-01-22T12:37:28.647Z"},{"number":"0.0.5-c","date":"2013-02-14T15:29:18.593Z"},{"number":"0.0.5-d","date":"2013-02-14T15:32:32.817Z"},{"number":"0.0.5-e","date":"2013-02-14T15:36:49.650Z"},{"number":"0.0.6-b","date":"2013-02-14T17:30:15.578Z"},{"number":"0.0.6-c","date":"2013-02-14T17:52:56.110Z"}],"readme":"\n\n\n# n4store\n\nn4store is a simple http client for 4store\n\n# Installation \n\n    $ npm install n4store\n\n# Usage \n\nCreate a 4store kb \n\n    $ 4s-backend-setup demo\n    $ 4s-backend demo\n    $ 4s-httpd -p 10000 demo\n\n## Create client\n\n```coffeescript\n# 4store endPoint\nendPoint = \"http://0.0.0.0:10000\"\n\n# create the 4store client\nn4store = require('n4store').createClient endPoint\n```\n\n\n## SPARQL GET request\n```coffeescript\n# GET: sparql query\nn4store.get \"\"\"\n  SELECT ?s ?p ?o \n  WHERE {\n    ?s ?p ?o\n  }\n\"\"\"\n, (err, sparql) ->\n  # sparql is json results\n  console.log sparql\n```\n\n\n## SPARQL UPDATE POST request\n```coffeescript\nn4store.post \"\"\"\n  INSERT {\n    GRAPH <urn:agraph> {\n      <urn:aresource> <urn:apredicate> \"a literal\"\n    }\n  }\n\"\"\"\n, (err, body) ->\n  console.log body\n```\n\n\n## DELETE request\n```coffeescript\n# delete a graph\nn4store.delete <urn:agraph>, (err) ->\n  # graph is deleted\n```\n\n\n## Append data to a graph\n```coffeescript\nn4store.postData \"\"\"\n  <urn:aresource> <urn:apredicate> \"a literal\"\n\"\"\"\n, \"urn:agraph\"\n, (err) ->\n  # data is appended to the graph\n, \"turtle\" # format\n```\n\n\n## postFile\n```coffeescript\n# append local file content to a graph\nn4store.postFile \"my-file.ttl\"\n, \"urn:agraph\" # if null graph will be <urn:my-file.tll>\n, (err) ->\n  # file content is appended to the graph\n, \"turtle\" # format\n```\n\n\n## postFiles\n```coffeescript\n# postFiles: append local files content to a graph\nn4store.postFiles [\"my-file.ttl\", \"my-other-file.ttl\"]\n, \"urn:agraph\" # if null graph will be <urn:*.tll>\n, (err) ->\n  # files content is appended to the graph\n, \"turtle\" # format\n```\n\n\n## PUT\n```coffeescript\n# replace data in a graph\nn4store.put \"\"\"\n  <urn:aresource> <urn:apredicate> \"a literal\"\n\"\"\"\n, \"urn:agraph\"\n, (err) ->\n  # data is replaced\n, \"turtle\" # format\n```\n\n\n## putFile\n```coffeescript\n# replace the content of a graph by the file content\nn4store.putFile \"my-file.ttl\"\n, \"urn:agraph\" # if null graph will be <urn:my-file.tll>\n, (err) ->\n  # file content is replaced in the graph\n, \"turtle\" # format\n```\n\n\n## putFiles\n```coffeescript\n# replace the content of graphs by the files content\nn4store.putFiles [\"my-file.ttl\", \"my-other-file.ttl\"]\n, null\n, (err) ->\n  # files content is replaced in graphs\n, \"turtle\" # format\n```\n\n\n## CONSTRUCT\n```coffeescript\n# return a turtle graph\nn4store.construct \"\"\"\n  CONSTRUCT {\n    ?s ?p ?o\n  }\n  WHERE {\n   ?s ?p ?o \n  }\n\"\"\"\n, (err, turtle) ->\n  console.log turtle\n```\n\n\n## ASK\n```coffeescript\n# ASK request\nn4store.ask \"\"\"\n  ASK {\n    ?s foaf:name \"Alice\"\n  }\n\"\"\", (err, bool) ->\n  console.log bool # true or false\n```\n\n\n## helpers\n\n```coffeescript\n# getGraphs: return an array of graphs URIs\nn4store.getGraphs (err, uris) ->\n  # array of all graphs URIs\n\n# getTypes: return an array of types URIs\nn4store.getTypes (err, uris) ->\n  # array of all types URIs\n\n# setPrefix add a new prefix in the client prefixes list\nn4store.setPrefix 'test', 'http://test.com/', (err) ->\n\n# prefixes: object of prefixes used for queries\nconsole.log n4store.prefixes \n```\n\n","repository":"https://github.com/ouvanous/n4store","created":"2012-11-22T14:37:06.177Z","modified":"2013-02-14T17:52:56.110Z","owners":[{"name":"ouvanous","email":"samuel.morello@ouvanous.com"}],"other":{"_attachments":{},"_id":"n4store","_rev":"1-55004d771a89529b3a91e3698e18123b","author":{"name":"Samuel Morello","email":"samuel.morello@ouvanous.com"},"dist-tags":{"latest":"0.0.6-c"},"maintainers":[{"name":"ouvanous","email":"samuel.morello@ouvanous.com"}],"time":{"modified":"2013-02-14T17:52:56.110Z","created":"2012-11-22T14:37:06.177Z","0.0.1":"2012-11-22T14:37:07.949Z","0.0.2":"2012-11-22T14:42:58.932Z","0.0.3":"2012-11-25T08:22:34.678Z","0.0.4":"2012-12-07T09:34:39.777Z","0.0.5":"2012-12-07T09:44:53.278Z","0.0.6":"2013-02-14T15:59:34.086Z","0.0.5-a":"2013-01-22T12:37:28.647Z","0.0.5-c":"2013-02-14T15:29:18.593Z","0.0.5-d":"2013-02-14T15:32:32.817Z","0.0.5-e":"2013-02-14T15:36:49.650Z","0.0.6-b":"2013-02-14T17:30:15.578Z","0.0.6-c":"2013-02-14T17:52:56.110Z"}}}