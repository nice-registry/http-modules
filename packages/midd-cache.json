{"name":"midd-cache","description":"http cache middleware for midd","version":"0.1.4","scripts":{},"main":"dist/index.js","files":["dist/"],"engines":{"node":">= 4"},"dependencies":{"etag":"^1.7.0","fresh":"^0.4.0"},"devDependencies":{"midd":"^0.1.4","midd-send":"^0.1.4"},"homepage":"https://github.com/tianjianchn/midd/tree/master/packages/midd-cache","repository":"https://github.com/tianjianchn/midd/tree/master/packages/midd-cache","license":"MIT","keywords":["midd","cache"],"versions":[{"number":"0.1.0","date":"2017-02-09T09:50:39.842Z"},{"number":"0.1.1","date":"2017-02-10T03:42:09.026Z"},{"number":"0.1.2","date":"2017-02-18T16:11:07.043Z"},{"number":"0.1.3","date":"2017-02-22T04:28:01.002Z"},{"number":"0.1.4","date":"2017-02-22T08:22:06.027Z"}],"readme":"# HTTP cache middleware for midd\n\n\n### Usage\n```js\nconst middCache = require('midd-cache');\napp.use(middCache())\n```\n\n#### Manually check cache fresh when request coming\nAfter cache expired in the client(browser), client will send a revalidate request with `If-Modified-Since` or `If-None-Match` headers. \nUse `req.fresh(status)` to check that, and if cache is fresh, it will response 304 and return true, otherwise it will return false.\nThe `status` is current resource state about `Last-Modified` or `ETag`. \nIt could have two keys(keys name is case insensitive):\n* `Last-Modified` or `LastModified`: number(ms) or string(utc) or Date. The string format is like `date.toUTCString()`\n* `ETag`: the etag string\n\nExample:\n```js\napp.use((req, resp, next)=>{\n  let lastMod = getRecordLastModified(req.params.id);\n  if(req.fresh({'Last-Modified': lastMod})) return;\n  resp.send(updatedRecord)\n})\n```\n\n#### Auto check cache fresh when using `resp.send`\nThis mechanism must be used with `midd-send` middleware and only effective on `resp.send` method. You should attch `midd-send` first.\nWhen you call `resp.send(body)` method, it will generate `ETag` from the body, and get `Last-Modified` from the headers.\nThen use them to compare with the request's `If-Modified-Since` or `If-None-Match`. If the cache is fresh, respond 304, otherwise respond the body with `ETag` and `Last-Modified` headers.\n\n#### Set cache headers for response\n`resp.setCache(options)`\nOptions have:\n* `maxAge`: number, milliseconds. Used in `Cache-Control` header\n* `private`: boolean. Used in `Cache-Control` header\n* `Last-Modified` or `LastModified`: number(ms) or string(utc) or Date. The key name is case insensitive.\n* `ETag`: the etag string. The key name is case insensitive.\n\n### License\n\nLicensed under MIT\n\nCopyright (c) 2017 [Tian Jian](https://github.com/tianjianchn)\n","created":"2017-02-09T09:50:39.842Z","modified":"2017-02-22T08:24:08.655Z","lastPublisher":{"name":"tianjianchn","email":"tianjianchn@qq.com"},"owners":[{"name":"kiliwalk","email":"tianjianchn@qq.com"},{"name":"tianjianchn","email":"tianjianchn@qq.com"}],"other":{"_attachments":{},"_from":".","_id":"midd-cache","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/midd-cache-0.1.4.tgz_1487751725800_0.9415927068330348"},"_npmUser":{"name":"tianjianchn","email":"tianjianchn@qq.com"},"_npmVersion":"4.1.2","_rev":"15-64c21809cb6cc91fd9cff92744daef61","_shasum":"c7d572cca2749e3ddfc982e2491317ff29dc5f64","author":{"name":"Tian Jian","email":"tianjianchn@qq.com"},"bugs":{"url":"https://github.com/tianjianchn/midd/issues"},"directories":{},"dist-tags":{"latest":"0.1.4"},"dist":{"shasum":"c7d572cca2749e3ddfc982e2491317ff29dc5f64","tarball":"https://registry.npmjs.org/midd-cache/-/midd-cache-0.1.4.tgz"},"maintainers":[{"name":"kiliwalk","email":"tianjianchn@qq.com"},{"name":"tianjianchn","email":"tianjianchn@qq.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-22T08:24:08.655Z","created":"2017-02-09T09:50:39.842Z","0.1.0":"2017-02-09T09:50:39.842Z","0.1.1":"2017-02-10T03:42:09.026Z","0.1.2":"2017-02-18T16:11:07.043Z","0.1.3":"2017-02-22T04:28:01.002Z","0.1.4":"2017-02-22T08:22:06.027Z"}}}