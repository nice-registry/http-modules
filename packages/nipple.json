{"name":"nipple","description":"HTTP Client Utilities","version":"2.5.6","repository":"https://github.com/hapijs/nipple","main":"index","keywords":["utilities","http","client"],"engines":{"node":">=0.10.30"},"dependencies":{"hoek":"2.x.x","boom":"2.x.x"},"devDependencies":{"lab":"4.x.x"},"scripts":{"test":"make test-cov"},"licenses":[{"type":"BSD","url":"http://github.com/hapijs/nipple/raw/master/LICENSE"}],"gitHead":"3d31214b61a1947b5eb17f177e63240f0be8e485","homepage":"https://github.com/hapijs/nipple","versions":[{"number":"0.0.1","date":"2013-12-22T09:42:08.101Z"},{"number":"1.0.0","date":"2013-12-22T20:44:30.187Z"},{"number":"2.0.0","date":"2014-01-06T06:41:07.095Z"},{"number":"2.1.0","date":"2014-01-19T06:39:04.292Z"},{"number":"2.2.0","date":"2014-01-25T20:33:22.606Z"},{"number":"2.3.0","date":"2014-03-12T16:12:09.368Z"},{"number":"2.4.0","date":"2014-03-12T22:11:32.744Z"},{"number":"2.5.0","date":"2014-04-11T04:28:51.777Z"},{"number":"2.5.1","date":"2014-04-28T20:35:54.525Z"},{"number":"2.5.2","date":"2014-05-20T22:23:46.144Z"},{"number":"2.5.3","date":"2014-06-03T22:15:31.180Z"},{"number":"2.5.4","date":"2014-08-03T07:12:43.447Z"},{"number":"2.5.5","date":"2014-08-10T20:36:59.983Z"},{"number":"2.5.6","date":"2014-08-19T16:59:44.285Z"}],"readme":"#This project has been renamed to [wreck](http://npmjs.org/package/wreck).  Please update your references and use the new package.\n\n\n![nipple Logo](https://raw.github.com/hapijs/nipple/master/images/nipple.png)\n\nHTTP Client Utilities\n\n[![Build Status](https://secure.travis-ci.org/hapijs/nipple.png)](http://travis-ci.org/hapijs/nipple)\n\nLead Maintainer: [Wyatt Preul](https://github.com/wpreul)\n\n## Usage\n### Basic\n```javascript\nvar Nipple = require('nipple');\n\nNipple.get('https://google.com/', function (err, res, payload) {\n    /* do stuff */\n});\n```\n\n### Advanced\n```javascript\nvar Nipple = require('nipple');\n\nvar method = 'GET'; // GET, POST, PUT, DELETE\nvar uri    = 'https://google.com/';\nvar readableStream = Nipple.toReadableStream('foo=bar');\n\n// all attributes are optional\nvar options = {\n    payload:   readableStream || 'foo=bar' || new Buffer('foo=bar'),\n    headers:   { /* http headers */ },\n    redirects: 3,\n    timeout:   1000,    // 1 second, default: unlimited\n    maxBytes:  1048576, // 1 MB, default: unlimited\n    rejectUnauthorized: true || false,\n    downstreamRes: null,\n    agent: null         // Node Core http.Agent\n};\n\nvar optionalCallback = function (err, res) {\n\n    // buffer the response stream\n    Nipple.read(res, function (err, body) {\n        /* do stuff */\n    });\n};\n\nNipple.request(method, uri, options, optionalCallback);\n```\n\n\n### `request(method, uri, [options], [callback])`\n\nInitiate an HTTP request.\n- `method` - A string specifying the HTTP request method, defaulting to 'GET'.\n- `uri` - The URI of the requested resource.\n- `options` - An optional configuration object with the following optional keys:\n    - `payload` - The request body as string, Buffer, or Readable Stream.\n    - `headers` - An object containing request headers.\n    - `rejectUnauthorized` - [TLS](http://nodejs.org/api/tls.html) flag indicating\n      whether the client should reject a response from a server with invalid certificates.\n    - `redirects` - The maximum number of redirects to follow.\n    - `agent` - Node Core [http.Agent](http://nodejs.org/api/http.html#http_class_http_agent).\n    - `timeout` - The number of milliseconds to wait without receiving a response\n    before aborting the request. Defaults to unlimited.\n- `callback` - The optional callback function using the signature `function (err, response)` where:\n    - `err` - Any error that may have occurred during the handling of the request.\n    - `response` - The [HTTP Incoming Message](http://nodejs.org/api/http.html#http_http_incomingmessage)\n       object, which is also a readable stream.\n\n### `read(response, [options], callback)`\n- `response` - An HTTP Incoming Message object.\n- `options` - An optional configuration object with the following optional keys:\n    - `timeout` - The number of milliseconds to wait while reading data before\n    aborting handling of the response. Defaults to unlimited.\n    - `json` - A flag indicating whether the payload should be parsed as JSON\n    if the response indicates a JSON content-type.\n    - `maxBytes` - The maximum allowed response payload size. Defaults to unlimited.\n- `callback` - The callback function using the signature `function (err, payload)` where:\n    - `err` - Any error that may have occurred while reading the response.\n    - `payload` - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).\n\n### `get(uri, [options], callback)`\n\nConvenience method for GET operations.\n- `uri` - The URI of the requested resource.\n- `options` - Optional config object containing settings for both `request` and\n  `read` operations.\n- `callback` - The callback function using the signature `function (err, response, payload)` where:\n    - `err` - Any error that may have occurred during handling of the request.\n    - `response` - The [HTTP Incoming Message](http://nodejs.org/api/http.html#http_http_incomingmessage)\n       object, which is also a readable stream.\n    - `payload` - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).\n\n### `post(uri, [options], callback)`\n\nConvenience method for POST operations.\n- `uri` - The URI of the requested resource.\n- `options` - Optional config object containing settings for both `request` and\n  `read` operations.\n- `callback` - The callback function using the signature `function (err, response, payload)` where:\n    - `err` - Any error that may have occurred during handling of the request.\n    - `response` - The [HTTP Incoming Message](http://nodejs.org/api/http.html#http_http_incomingmessage)\n       object, which is also a readable stream.\n    - `payload` - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).\n\n### `put(uri, [options], callback)`\n\nConvenience method for PUT operations.\n- `uri` - The URI of the requested resource.\n- `options` - Optional config object containing settings for both `request` and\n  `read` operations.\n- `callback` - The callback function using the signature `function (err, response, payload)` where:\n    - `err` - Any error that may have occurred during handling of the request.\n    - `response` - The [HTTP Incoming Message](http://nodejs.org/api/http.html#http_http_incomingmessage)\n       object, which is also a readable stream.\n    - `payload` - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).\n\n### `delete(uri, [options], callback)`\n\nConvenience method for DELETE operations.\n- `uri` - The URI of the requested resource.\n- `options` - Optional config object containing settings for both `request` and\n  `read` operations.\n- `callback` - The callback function using the signature `function (err, response, payload)` where:\n    - `err` - Any error that may have occurred during handling of the request.\n    - `response` - The [HTTP Incoming Message](http://nodejs.org/api/http.html#http_http_incomingmessage)\n       object, which is also a readable stream.\n    - `payload` - The payload in the form of a Buffer or (optionally) parsed JavaScript object (JSON).\n\n\n### `toReadableStream(payload, [encoding])`\n\nCreates a [readable stream](http://nodejs.org/api/stream.html#stream_class_stream_readable)\nfor the provided payload and encoding.\n- `payload` - The Buffer or string to be wrapped in a readable stream.\n- `encoding` - The encoding to use. Must be a valid Buffer encoding, such as 'utf8' or 'ascii'.\n\n```javascript\nvar stream = Nipple.toReadableStream(new Buffer('Hello', 'ascii'), 'ascii');\nvar read = stream.read();\n// read -> 'Hello'\n```\n\n### `parseCacheControl(field)`\n\nParses the provided *cache-control* request header value into an object containing\na property for each directive and it's value. Boolean directives, such as \"private\"\nor \"no-cache\" will be set to the boolean `true`.\n- `field` - The header cache control value to be parsed.\n\n```javascript\nvar  result = Nipple.parseCacheControl('private, max-age=0, no-cache');\n// result.private -> true\n// result['max-age'] -> 0\n// result['no-cache'] -> true\n```\n","starsCount":2,"created":"2013-12-22T09:42:06.298Z","modified":"2014-08-19T16:59:44.285Z","lastPublisher":{"name":"wyatt","email":"wpreul@gmail.com"},"owners":[{"name":"hueniverse","email":"eran@hueniverse.com"},{"name":"wyatt","email":"wpreul@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"nipple","_npmUser":{"name":"wyatt","email":"wpreul@gmail.com"},"_npmVersion":"1.4.21","_rev":"1-36b5e22502ea20954eb778b604361523","_shasum":"becc0258a9a8bd7e55faf85dd6c1e0bb5b981a42","bugs":{"url":"https://github.com/hapijs/nipple/issues"},"contributors":[{"name":"Eran Hammer","email":"eran@hammer.io","url":"http://hueniverse.com"},{"name":"Wyatt Preul","email":"wpreul@gmail.com","url":"http://jsgeek.com"}],"directories":{},"dist-tags":{"latest":"2.5.6"},"dist":{"shasum":"becc0258a9a8bd7e55faf85dd6c1e0bb5b981a42","tarball":"http://registry.npmjs.org/nipple/-/nipple-2.5.6.tgz"},"maintainers":[{"name":"hueniverse","email":"eran@hueniverse.com"},{"name":"wyatt","email":"wpreul@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-08-19T16:59:44.285Z","created":"2013-12-22T09:42:06.298Z","0.0.1":"2013-12-22T09:42:08.101Z","1.0.0":"2013-12-22T20:44:30.187Z","2.0.0":"2014-01-06T06:41:07.095Z","2.1.0":"2014-01-19T06:39:04.292Z","2.2.0":"2014-01-25T20:33:22.606Z","2.3.0":"2014-03-12T16:12:09.368Z","2.4.0":"2014-03-12T22:11:32.744Z","2.5.0":"2014-04-11T04:28:51.777Z","2.5.1":"2014-04-28T20:35:54.525Z","2.5.2":"2014-05-20T22:23:46.144Z","2.5.3":"2014-06-03T22:15:31.180Z","2.5.4":"2014-08-03T07:12:43.447Z","2.5.5":"2014-08-10T20:36:59.983Z","2.5.6":"2014-08-19T16:59:44.285Z"},"users":{"sleistner":true,"ruiquelhas":true}}}