{"name":"shape-proxy","version":"0.1.0","description":"simple http proxy for development purposes only","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["proxy"],"license":"","dependencies":{"bunyan":"0.22.3","debug":"0.8.1","lodash":"2.4.1","http-proxy":"0.10.3"},"gitHead":"93eae27ef6182a9eb035d7dabcab53b0ae6a503f","versions":[{"number":"0.1.0","date":"2015-07-07T06:07:06.267Z"}],"readme":"Simple proxy middleware for express. An adaptation of the `grunt-connect-proxy` module. Typically used in a development workflow only; not intended for use in production.\n\n### Basic usage\n\n```js\nvar express = require('express');\nvar proxy = require('shape-proxy');\n\nvar app = express();\nvar options = [\n    {\n        \"context\": \"/api\",\n        \"host\": \"localhost\",\n        \"port\": 7778,\n        \"https\": false,\n        \"changeOrigin\": false\n    }\n];\napp.use(proxy(options));\n```\n\n### Options\nThe available configuration options from a given proxy are generally the same as what is provided by the underlying [http-proxy](https://github.com/nodejitsu/node-http-proxy) library.\n\n#### options.context\nType: `String` or `Array`\n\nThe context(s) to match requests against. Matching requests will be proxied. Should start with a \"/\". Should not end with a \"/\".<br/>\n```\"context\": \"/api\"```\n\nMultiple contexts can be matched for the same proxy rule via an array such as:<br/>\n```\"context\": [\"/api\", \"/otherapi\"]```\n\n#### options.host\nType: `String`\n\nThe host to proxy to. Should not start with the http/https protocol.<br/>\n```\"host\": \"localhost\"```\n\n#### options.port\nType: `Number`\nDefault: 80\n\nThe port to proxy to.\n\n#### options.https\nType: `Boolean`\nDefault: false\n\nWhether to proxy with https\n\n#### options.changeOrigin\nType: `Boolean`\nDefault: false\n\nWhether to change the origin on the request to the proxy, or keep the original origin.\n\n#### options.rejectUnauthorized:\nType: `Boolean`\nDefault: false\n\nWhether to reject self-signed certificates when https: true is set. Defaults to accept self-signed certs since proxy is meant for development environments.\n\n#### options.xforward:\nType: `Boolean`\nDefault: false\n\nWhether to add x-forward headers to the proxy request, such as<br/>\n  \"x-forwarded-for\": \"127.0.0.1\",<br/>\n  \"x-forwarded-port\": 50892,<br/>\n  \"x-forwarded-proto\": \"http\"<br/>\n\n\n#### options.appendProxies\nType: `Boolean`\nDefault: true\n\nSet to false to isolate multi-task configuration proxy options from parent level instead of appending them.\n\n#### options.rewrite\nType: `Object`\n\nAllows rewrites of url (including context) when proxying. The object's keys serve as the regex used in the replacement operation. As an example the following proxy configuration will remove the context when proxying:\n\n```js\nproxies: [\n    context: '/context',\n    host: 'host',\n    port: 8080,\n    rewrite: {\n        '^/removingcontext': '',\n        '^/changingcontext': '/anothercontext'\n    }\n]\n```","created":"2015-07-07T06:07:06.267Z","modified":"2015-07-07T06:07:06.267Z","lastPublisher":{"name":"mjasso","email":"manuel_jasso@yahoo.com"},"owners":[{"name":"mjasso","email":"manuel_jasso@yahoo.com"}],"other":{"_attachments":{},"_from":".","_id":"shape-proxy","_nodeVersion":"0.12.5","_npmUser":{"name":"mjasso","email":"manuel_jasso@yahoo.com"},"_npmVersion":"2.12.0","_rev":"1-b8327679273ce40de03ba971d5a1a475","_shasum":"3df04d3dd5f6c30811dbda609fde579b9080f4e0","author":{"name":"StubHub, Inc.","email":"DL-SH-UI-Arch@stubhub.com"},"contributors":[{"name":"Edward Maesen","email":"emaesen@stubhub.com"}],"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"3df04d3dd5f6c30811dbda609fde579b9080f4e0","tarball":"http://registry.npmjs.org/shape-proxy/-/shape-proxy-0.1.0.tgz"},"maintainers":[{"name":"mjasso","email":"manuel_jasso@yahoo.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-07T06:07:06.267Z","created":"2015-07-07T06:07:06.267Z","0.1.0":"2015-07-07T06:07:06.267Z"}}}