{"name":"request-multi-streams","version":"0.0.4","description":"Make multiple http requests. Receive response progress indicators, pipe streams.","main":"index.js","repository":"https://github.com/luisantunesdeveloper/request-multi-streams","license":"MIT","dependencies":{"request":"^2.79.0","request-progress":"^3.0.0"},"devDependencies":{"chalk":"^1.1.3","proxyquire":"^1.7.10","tap":"^8.0.1","tap-spec":"^4.1.1","tape":"^4.6.3"},"scripts":{"example":"node ./examples","test":"node ./tests/*.js | tap-spec","test-cov":"tap tests/**/*.js --cov --coverage-report=lcov"},"homepage":"https://github.com/luisantunesdeveloper/request-multi-streams#readme","keywords":["http","download","request","streams","multiple","multiple-streams","multi-streams"],"gitHead":"7ee41df84aa57bc1feaf18af1a4159a80b01d123","versions":[{"number":"0.0.0","date":"2017-01-03T23:40:31.895Z"},{"number":"0.0.1","date":"2017-01-04T00:01:53.096Z"},{"number":"0.0.2","date":"2017-01-04T01:05:40.617Z"},{"number":"0.0.3","date":"2017-01-04T11:32:51.319Z"},{"number":"0.0.4","date":"2017-01-04T23:09:23.317Z"}],"readme":"[![Build Status](https://travis-ci.org/luisantunesdeveloper/request-multi-streams.svg?branch=master)](https://travis-ci.org/luisantunesdeveloper/request-multi-streams)\n[![Test Coverage](https://codeclimate.com/github/luisantunesdeveloper/request-multi-streams/badges/coverage.svg)](https://codeclimate.com/github/luisantunesdeveloper/request-multi-streams/coverage)  \n# request-multi-streams  \nThis library wraps multiple http get requests using request/request and IndigoUnited/node-request-progress to different locations at the same time. The streams are handed and can be piped as they come, along with the progress. You can even repeat a request multiple times.\n\n## Install\nyarn add request-multi-streams\n\n## Usage\nSee examples and tests to get more detail about the requests and responses.  \n\n### Requests\nSince this module wraps request and request-progress, it supports the same options for both.\n```\nconst req1 = {\n\toptions: {\n\t\turl: 'https://cdn.pixabay.com/photo/2014/03/27/21/10/waterfall-299685_1280.jpg'\n\t},\n\tnumberOfRequests: 1000 // Not the same as retries\n};\n\nconst req2 = {\n\toptions: {\n\t\turl: 'https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcS2bZdzOUGStsuLVzH79PTGHMoJ0B_ZpUcJylVdveVd4p5oyywvSCRaHSg'\n\t},\n\tprogressOptions: {\n\t    throttle: 0,                    // Throttle the progress event to 2000ms, defaults to 1000ms \n\t    delay: 10,                       // Only start to emit after 1000ms delay, defaults to 0ms \n\t    // lengthHeader: 'x-transfer-length'  // Length header to use, defaults to content-length \n\t},\n\tnumberOfRequests: 10 // Not the same as retries, request-multi-streams internal usage.\n};\n\n// receives an array of requests\nconst streamEmitters = httpMultiStreams.streams([req1, req2]);\n```\n\n### Responses\nYou can do whatever you want with the streams. In this case we are piping the streams for the request name 'http://www.textfiles.com/fun/acronym.txt' to a file. See examples folder for more info.\n```\nfor(var name in emitters) {\n\t//listen the events\n\temitters[name].on('progress', (data) => {\n\t\tconsole.log(chalk.yellow(`Request ${data.reqNumber} for ${data.args.options.url}: ${Number((data.progress.percent * 100).toFixed(1))}% complete`));\n\t});\n\n\temitters[name].on('response', (data) => {\n\t\tconsole.log(chalk.yellow(`Request ${data.reqNumber} for ${data.args.options.url}: got a response`));\n\t\tif (name === 'http://www.textfiles.com/fun/acronym.txt') {\n\t\t\tdata.stream.pipe(fs.createWriteStream(`${__dirname}/${data.reqNumber}`));\n\t\t}\n\t});\n}\n```\n\n### Major dependencies\nhttps://www.npmjs.com/package/request  \nhttps://www.npmjs.com/package/request-progress\n\n### Works with node > 4.5\n\n","created":"2017-01-03T23:40:31.895Z","modified":"2017-01-04T23:09:23.317Z","lastPublisher":{"name":"luisantunesdeveloper","email":"luisantunes.developer@gmail.com"},"owners":[{"name":"luisantunesdeveloper","email":"luisantunes.developer@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"request-multi-streams","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/request-multi-streams-0.0.4.tgz_1483571361116_0.4863304172176868"},"_npmUser":{"name":"luisantunesdeveloper","email":"luisantunes.developer@gmail.com"},"_npmVersion":"2.15.9","_rev":"5-3ec5598efbe6906148409b583d613460","_shasum":"7d90b59fafb8f134bb22ac3b2684f9893dd54d19","author":{"name":"Luis Antunes","email":"luisantunes.developer@gmail.com"},"bugs":{"url":"https://github.com/luisantunesdeveloper/request-multi-streams/issues"},"directories":{},"dist-tags":{"latest":"0.0.4"},"dist":{"shasum":"7d90b59fafb8f134bb22ac3b2684f9893dd54d19","tarball":"http://registry.npmjs.org/request-multi-streams/-/request-multi-streams-0.0.4.tgz"},"maintainers":[{"name":"luisantunesdeveloper","email":"luisantunes.developer@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-04T23:09:23.317Z","created":"2017-01-03T23:40:31.895Z","0.0.0":"2017-01-03T23:40:31.895Z","0.0.1":"2017-01-04T00:01:53.096Z","0.0.2":"2017-01-04T01:05:40.617Z","0.0.3":"2017-01-04T11:32:51.319Z","0.0.4":"2017-01-04T23:09:23.317Z"}}}