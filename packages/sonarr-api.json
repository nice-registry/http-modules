{"name":"sonarr-api","version":"0.2.0","description":"Simple wrapper for querying against HTTP API on Sonarr","main":"lib/api.js","dependencies":{"request":"^2.80.0"},"devDependencies":{"eslint":"^3.17.0"},"scripts":{"test":"eslint lib/*"},"files":["lib"],"repository":"https://github.com/onedr0p/sonarr-api","keywords":["sonarr","api"],"engines":{"node":">=7.6"},"license":"MIT","homepage":"https://github.com/onedr0p/sonarr-api#readme","gitHead":"eef16353d158977008d7e29e98ba03006aa2bd91","versions":[{"number":"0.1.2","date":"2015-12-16T03:23:27.705Z"},{"number":"0.2.0","date":"2017-03-09T23:00:20.916Z"}],"readme":"# sonarr-api\r\n\r\nSmall module which helps you query the Sonarr HTTP API.\r\n\r\nPlease refer to the [Sonarr API documentation](https://github.com/Sonarr/Sonarr/wiki/API) for futher explainations and endpoints, most if not all are cover below.\r\n\r\n## Usage\r\n\r\n**SonarrAPI(options)**\r\n\r\nInstantiate a SonarrAPI client.\r\n\r\nOptions:\r\n\r\n-   **hostname**: hostname where Sonarr runs (required)\r\n-   **apiKey**: Your API to access Sonarr (required)\r\n-   **port**: port number Sonarr is listening on (optional, default: 8989)\r\n-   **urlBase**: URL Base of Sonarr (optional, default: null)\r\n-   **ssl**: Set to true if you are connecting via SSL (default: false)\r\n-   **username**: HTTP Auth username (default: null)\r\n-   **password**: HTTP Auth password (default: null)\r\n\r\n## Methods\r\n\r\n```js\r\nget - send a GET request to the Sonarr API - if available returns json\r\npost - send a POST request to the Sonarr API - if available returns json\r\nput - send a PUT request to the Sonarr API - if available returns json\r\n```\r\n\r\n## Examples\r\n\r\n```js\r\nvar SonarrAPI = require('./lib/sonarr-api');\r\n\r\nvar sonarr = new SonarrAPI({\r\n\t\thostname: 'localhost',\r\n\t\tapiKey: '(insert your API key here)',\r\n\t\tport: 9000,\r\n\t\turlBase: '/sonarr'\r\n});\r\n\r\n// get Sonarr Status\r\nsonarr.get(\"system/status\").then(function (result) {\r\n \t// result will be json a response\r\n}).catch(function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n```\r\n\r\n## More examples\r\n\r\n```js\r\n/*\r\n * Calendar example\r\n */\r\n\r\nvar today = new Date();\r\nvar yesterday = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 1);\r\nvar tomorrow = new Date(today.getFullYear(), today.getMonth(), today.getDate() + 1);\r\n\r\nsonarr.get(\"calendar\", { \"start\": yesterday.toISOString(), \"end\": tomorrow.toISOString() }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n    throw new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Command example - * note use of POST method *\r\n */\r\nsonarr.post(\"command\", { \"name\": \"RefreshSeries\", \"seriesId\": 1 }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Diskspace example\r\n */\r\nsonarr.get(\"diskspace\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n    throw new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Episode example\r\n */\r\nsonarr.get(\"episode\", { \"seriesId\": 1 }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\nsonarr.get(\"episode/23\", { \"seriesId\": 1 }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * EpisodeFile example\r\n */\r\nsonarr.get(\"episodefile\", { \"seriesId\": 1 }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n    throw new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\nsonarr.get(\"episodefile/23\", { \"seriesId\": 1 }).then(function (result) {\r\n \tconsole.log(result);\r\n}, function (err) {\r\n \tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * History example\r\n */\r\nsonarr.get(\"history\", { \"page\": 1, \"pageSize\": 20, \"sortkey\": \"series.title\", \"sortDir\": \"desc\" }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Wanted example\r\n */\r\nsonarr.get(\"wanted/missing\", { \"page\": 1, \"pageSize\": 20, \"sortkey\": \"series.title\", \"sortDir\": \"desc\" }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Queue example\r\n */\r\nsonarr.get(\"queue\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Profile example\r\n */\r\nsonarr.get(\"profile\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Release example\r\n */\r\nsonarr.get(\"release\", { \"episodeId\": 23 }).then(function (result) {\r\n  \tconsole.log(result);\r\n}, function (err) {\r\n  \tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Root folder example\r\n */\r\nsonarr.get(\"rootfolder\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\n/*\r\n * Series example\r\n */\r\nsonarr.get(\"series\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\nsonarr.get(\"series/1\").then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n\r\nsonarr.get(\"series/lookup\", { \"term\": \"america\" }).then(function (result) {\r\n\tconsole.log(result);\r\n}, function (err) {\r\n\tthrow new Error(\"There was a error processing the request: \" + err);\r\n});\r\n```\r\n\r\n## Changelog\r\n\r\n### v0.2.0\r\n\r\n-   Rewrote module to utilize ES6 classes / promises\r\n\r\n### v0.1.1\r\n\r\n-   Minor code clean up\r\n\r\n### v0.1.0\r\n\r\n-   Initial release\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2015 Devin Buhl <mailto:devin.kray@gmail.com>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","starsCount":1,"created":"2015-12-16T03:23:27.705Z","modified":"2017-03-09T23:00:20.916Z","lastPublisher":{"name":"onedr0p","email":"devin.kray@gmail.com"},"owners":[{"name":"onedr0p","email":"devin.kray@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"sonarr-api","_nodeVersion":"7.4.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/sonarr-api-0.2.0.tgz_1489100418903_0.3645386518910527"},"_npmUser":{"name":"onedr0p","email":"devin.kray@gmail.com"},"_npmVersion":"4.0.5","_rev":"2-5d5be21cfd9bfb4a28d46c7164ad262d","_shasum":"b9ee5173778cc806c5bf761bdaf62c396debaa15","author":{"name":"Devin Buhl","email":"devin.kray@gmail.com"},"bugs":{"url":"https://github.com/onedr0p/sonarr-api/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"b9ee5173778cc806c5bf761bdaf62c396debaa15","tarball":"https://registry.npmjs.org/sonarr-api/-/sonarr-api-0.2.0.tgz"},"maintainers":[{"name":"onedr0p","email":"devin.kray@gmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2017-03-09T23:00:20.916Z","created":"2015-12-16T03:23:27.705Z","0.1.2":"2015-12-16T03:23:27.705Z","0.2.0":"2017-03-09T23:00:20.916Z"},"users":{"olehumborstad":true}}}