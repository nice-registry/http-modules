{"name":"fluent-request","version":"1.2.1","description":"A fluent interface for HTTP requests in Node.js","main":"lib/request.js","scripts":{"test":"istanbul cover --report html node_modules/.bin/_mocha -- -R spec"},"repository":"https://github.com/bakerface/fluent-request","keywords":["fluent","interface","http","request"],"license":"MIT","homepage":"https://github.com/bakerface/fluent-request","devDependencies":{"coveralls":"^2.11.2","istanbul":"^0.3.7","mocha":"^2.2.1","nock":"^1.1.0","should":"^5.1.0"},"dependencies":{"when":"^3.7.2"},"gitHead":"61217294de3cda3fef15a870b18777cb1f6c0975","versions":[{"number":"1.0.0","date":"2015-03-11T20:43:48.428Z"},{"number":"1.1.0","date":"2015-03-12T14:49:01.433Z"},{"number":"1.2.0","date":"2015-03-12T20:58:25.898Z"},{"number":"1.2.1","date":"2015-03-12T21:08:54.010Z"}],"readme":"[![Build Status](https://travis-ci.org/bakerface/fluent-request.svg)](https://travis-ci.org/bakerface/fluent-request) [![Coverage Status](https://coveralls.io/repos/bakerface/fluent-request/badge.svg)](https://coveralls.io/r/bakerface/fluent-request)\n\n# fluent-request\n**A fluent interface for HTTP requests in Node.js**\n\n### Table of Contents\n- [request(options)](#requestoptions)\n- [request.del(options)](#requestdeloptions)\n- [request.get(options)](#requestgetoptions)\n- [request.head(options)](#requestheadoptions)\n- [request.merge(options)](#requestmergeoptions)\n- [request.patch(options)](#requestpatchoptions)\n- [request.post(options)](#requestpostoptions)\n- [request.put(options)](#requestputoptions)\n- [request.withContent(content)](#requestwithcontentcontent)\n- [request.withContentType(type)](#requestwithcontenttypetype)\n- [request.withForm(form)](#requestwithformform)\n- [request.withHeader(key, value)](#requestwithheaderkeyvalue)\n- [request.withJSON(json)](#requestwithjsonjson)\n- [request.withMethod(method)](#requestwithmethodmethod)\n- [request.withPath(path)](#requestwithpathpath)\n- [request.withPathSection(index, section)](#requestwithpathsectionindexsection)\n- [request.withUserAgent(userAgent)](#requestwithuseragentuseragent)\n- [request.withQuery(key, value)](#requestwithquerykeyvalue)\n\n### request(options)\nSends a request with the specified *options*. The *options* may be a string or an object. If *options* is a string, it will be parsed immediately with [url.parse()](https://nodejs.org/api/url.html#url_url_parse_urlstr_parsequerystring_slashesdenotehost). If *options* is an object, it should have the following properties:\n\n- **protocol**: The transmission protocol (defaults to ```'http:'```).\n- **hostname**: A domain name or IP address of the server (defaults to ```'localhost'```).\n- **port**: The port of the server (defaults to ```80``` for http and ```443``` for https).\n- **method**: The request method (defaults to ```'GET'```).\n- **path**: The request path including the query string (defaults to ```'/'```).\n- **headers**: An object containing the request headers (defaults to ```{}```).\n\n``` javascript\nvar request = require('fluent-request');\n\nvar options = {\n  protocol: 'https:',\n  hostname: 'api.github.com',\n  port: 443,\n  method: 'GET',\n  path: '/repos/bakerface/fluent-request',\n  headers: {\n    'User-Agent': 'bakerface'\n  }\n};\n\nrequest(options)\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.del(options)\nSends a DELETE request with the specified *options*. This is a convenience method for ```request(options).withMethod('DELETE')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.del('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.get(options)\nSends a GET request with the specified *options*. This is a convenience method for ```request(options).withMethod('GET')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.get('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.head(options)\nSends a HEAD request with the specified *options*. This is a convenience method for ```request(options).withMethod('HEAD')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.head('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.merge(options)\nSends a MERGE request with the specified *options*. This is a convenience method for ```request(options).withMethod('MERGE')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.merge('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.patch(options)\nSends a PATCH request with the specified *options*. This is a convenience method for ```request(options).withMethod('PATCH')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.post(options)\nSends a POST request with the specified *options*. This is a convenience method for ```request(options).withMethod('POST')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.post('https://api.github.com')\n  .withPath('/user/repos')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.put(options)\nSends a PUT request with the specified *options*. This is a convenience method for ```request(options).withMethod('PUT')```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.put('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withContent(content)\nSets the content for the HTTP request. This must be UTF8 encoded string. This must be used in combination with [withContentType](#requestwithcontenttypetype).\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withContentType('application/json')\n  .withContent('{\"name\":\"fluent-request\",\"description\":\"A fluent interface for HTTP requests in Node.js\"}')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withContentType(type)\nSets the ```'Content-Type'``` header for the HTTP request. This must be used in combination with [withContent](#requestwithcontentcontent).\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withContentType('application/json')\n  .withContent('{\"name\":\"fluent-request\",\"description\":\"A fluent interface for HTTP requests in Node.js\"}')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withForm(form)\nSets the form content for the HTTP request. This is a convenience method for ```request.withContentType('application/x-www-form-urlencoded').withContent(url.encode(form))```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.post('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withForm({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withHeader(key, value)\nSets the header for the HTTP request. The *key* must be a string. The *value* is transformed to a string with ```toString()```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.get('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withHeader('User-Agent', 'bakerface')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withJSON(json)\nSets the JSON content for the HTTP request. This is a convenience method for ```request.withContentType('application/json').withContent(JSON.stringify(json))```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withMethod(method)\nSets the method for the HTTP request. This function allows for custom HTTP verbs that are not supplied as a convenience function.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest('https://api.github.com')\n  .withMethod('PATCH')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withPath(path)\nSets the path for the HTTP request. This must not include the query string.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withPathSection(index, section)\nModifies the path for the HTTP request by changing a section of the path.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/:repo')\n  .withPathSection(2, 'fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withUserAgent(userAgent)\nSets the ```'User-Agent'``` header for the HTTP request.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.patch('https://api.github.com')\n  .withPath('/repos/bakerface/fluent-request')\n  .withUserAgent('bakerface')\n  .withJSON({\n    name: 'fluent-request',\n    description: 'A fluent interface for HTTP requests in Node.js'\n  })\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n\n### request.withQuery(key, value)\nSets the query parameter for the HTTP request. The *key* must be a string. The *value* is transformed to a string with ```toString()```.\n\n``` javascript\nvar request = require('fluent-request');\n\nrequest.get('https://api.github.com')\n  .withPath('/user/repos')\n  .withQuery('page', 1)\n  .withQuery('per_page', 100)\n  .withUserAgent('bakerface')\n  .then(function(response) {\n    // the http response object\n  })\n  .catch(function(reason) {\n    // an error occurred\n  });\n```\n","created":"2015-03-11T20:43:48.428Z","modified":"2015-03-12T21:08:54.010Z","lastPublisher":{"name":"bakerface","email":"mail.chris.baker@gmail.com"},"owners":[{"name":"bakerface","email":"mail.chris.baker@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fluent-request","_nodeVersion":"0.10.32","_npmUser":{"name":"bakerface","email":"mail.chris.baker@gmail.com"},"_npmVersion":"2.0.2","_rev":"1-a132b33fb269b05836a8439c0168ac96","_shasum":"092514c12787204e2878300e23e8acf24d3183fc","author":{"name":"Christopher M. Baker"},"bugs":{"url":"https://github.com/bakerface/fluent-request/issues"},"directories":{},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"092514c12787204e2878300e23e8acf24d3183fc","tarball":"http://registry.npmjs.org/fluent-request/-/fluent-request-1.2.1.tgz"},"maintainers":[{"name":"bakerface","email":"mail.chris.baker@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-12T21:08:54.010Z","created":"2015-03-11T20:43:48.428Z","1.0.0":"2015-03-11T20:43:48.428Z","1.1.0":"2015-03-12T14:49:01.433Z","1.2.0":"2015-03-12T20:58:25.898Z","1.2.1":"2015-03-12T21:08:54.010Z"}}}