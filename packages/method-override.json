{"name":"method-override","description":"Override HTTP verbs","version":"2.3.9","license":"MIT","repository":"https://github.com/expressjs/method-override","dependencies":{"debug":"2.6.8","methods":"~1.1.2","parseurl":"~1.3.1","vary":"~1.1.1"},"devDependencies":{"eslint":"3.19.0","eslint-config-standard":"10.2.1","eslint-plugin-import":"2.2.0","eslint-plugin-markdown":"1.0.0-beta.6","eslint-plugin-node":"4.2.2","eslint-plugin-promise":"3.5.0","eslint-plugin-standard":"3.0.1","istanbul":"0.4.5","mocha":"2.5.3","supertest":"1.1.0"},"files":["LICENSE","HISTORY.md","index.js"],"engines":{"node":">= 0.8.0"},"scripts":{"lint":"eslint --plugin markdown --ext js,md .","test":"mocha --check-leaks --reporter spec --bail test/","test-cov":"istanbul cover node_modules/mocha/bin/_mocha -- --check-leaks --reporter dot test/","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --check-leaks --reporter spec test/"},"gitHead":"a3b1bf25bcf8d129f559585b79b0a7f0bed58dc7","homepage":"https://github.com/expressjs/method-override#readme","versions":[{"number":"1.0.0","date":"2014-03-03T08:06:43.918Z"},{"number":"1.0.1","date":"2014-05-18T01:57:30.782Z"},{"number":"1.0.2","date":"2014-05-23T00:59:35.975Z"},{"number":"2.0.0","date":"2014-06-01T19:12:57.143Z"},{"number":"2.0.1","date":"2014-06-02T23:51:39.448Z"},{"number":"2.0.2","date":"2014-06-05T14:59:03.016Z"},{"number":"2.1.0","date":"2014-07-09T05:30:58.438Z"},{"number":"2.1.1","date":"2014-07-12T00:33:22.724Z"},{"number":"2.1.2","date":"2014-07-22T23:47:03.224Z"},{"number":"2.1.3","date":"2014-08-10T21:25:51.890Z"},{"number":"2.2.0","date":"2014-09-03T01:46:50.419Z"},{"number":"2.3.0","date":"2014-10-17T00:52:00.953Z"},{"number":"2.3.1","date":"2014-12-31T05:17:17.568Z"},{"number":"2.3.2","date":"2015-03-15T04:39:39.164Z"},{"number":"2.3.3","date":"2015-05-13T03:40:59.898Z"},{"number":"2.3.4","date":"2015-07-15T03:05:49.244Z"},{"number":"2.3.5","date":"2015-07-31T18:46:37.701Z"},{"number":"2.3.6","date":"2016-05-21T02:26:55.819Z"},{"number":"2.3.7","date":"2016-11-20T03:21:22.782Z"},{"number":"2.3.8","date":"2017-03-25T02:05:16.700Z"},{"number":"2.3.9","date":"2017-05-20T03:59:17.449Z"}],"readme":"# method-override\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n[![Gratipay][gratipay-image]][gratipay-url]\n\nLets you use HTTP verbs such as PUT or DELETE in places where the client doesn't support it.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```sh\n$ npm install method-override\n```\n\n## API\n\n**NOTE** It is very important that this module is used **before** any module that\nneeds to know the method of the request (for example, it _must_ be used prior to\nthe `csurf` module).\n\n### methodOverride(getter, options)\n\nCreate a new middleware function to override the `req.method` property with a new\nvalue. This value will be pulled from the provided `getter`.\n\n- `getter` - The getter to use to look up the overridden request method for the request. (default: `X-HTTP-Method-Override`)\n- `options.methods` - The allowed methods the original request must be in to check for a method override value. (default: `['POST']`)\n\nIf the found method is supported by node.js core, then `req.method` will be set to\nthis value, as if it has originally been that value. The previous `req.method`\nvalue will be stored in `req.originalMethod`.\n\n#### getter\n\nThis is the method of getting the override value from the request. If a function is provided,\nthe `req` is passed as the first argument, the `res` as the second argument and the method is\nexpected to be returned. If a string is provided, the string is used to look up the method\nwith the following rules:\n\n- If the string starts with `X-`, then it is treated as the name of a header and that header\n  is used for the method override. If the request contains the same header multiple times, the\n  first occurrence is used.\n- All other strings are treated as a key in the URL query string.\n\n#### options.methods\n\nThis allows the specification of what methods(s) the request *MUST* be in in order to check for\nthe method override value. This defaults to only `POST` methods, which is the only method the\noverride should arrive in. More methods may be specified here, but it may introduce security\nissues and cause weird behavior when requests travel through caches. This value is an array\nof methods in upper-case. `null` can be specified to allow all methods.\n\n## Examples\n\n### override using a header\n\nTo use a header to override the method, specify the header name\nas a string argument to the `methodOverride` function. To then make\nthe call, send  a `POST` request to a URL with the overridden method\nas the value of that header. This method of using a header would\ntypically be used in conjunction with `XMLHttpRequest` on implementations\nthat do not support the method you are trying to use.\n\n```js\nvar express = require('express')\nvar methodOverride = require('method-override')\nvar app = express()\n\n// override with the X-HTTP-Method-Override header in the request\napp.use(methodOverride('X-HTTP-Method-Override'))\n```\n\nExample call with header override using `XMLHttpRequest`:\n\n<!-- eslint-env browser -->\n\n```js\nvar xhr = new XMLHttpRequest()\nxhr.onload = onload\nxhr.open('post', '/resource', true)\nxhr.setRequestHeader('X-HTTP-Method-Override', 'DELETE')\nxhr.send()\n\nfunction onload () {\n  alert('got response: ' + this.responseText)\n}\n```\n\n### override using a query value\n\nTo use a query string value to override the method, specify the query\nstring key as a string argument to the `methodOverride` function. To\nthen make the call, send  a `POST` request to a URL with the overridden\nmethod as the value of that query string key. This method of using a\nquery value would typically be used in conjunction with plain HTML\n`<form>` elements when trying to support legacy browsers but still use\nnewer methods.\n\n```js\nvar express = require('express')\nvar methodOverride = require('method-override')\nvar app = express()\n\n// override with POST having ?_method=DELETE\napp.use(methodOverride('_method'))\n```\n\nExample call with query override using HTML `<form>`:\n\n```html\n<form method=\"POST\" action=\"/resource?_method=DELETE\">\n  <button type=\"submit\">Delete resource</button>\n</form>\n```\n\n### multiple format support\n\n```js\nvar express = require('express')\nvar methodOverride = require('method-override')\nvar app = express()\n\n// override with different headers; last one takes precedence\napp.use(methodOverride('X-HTTP-Method'))          // Microsoft\napp.use(methodOverride('X-HTTP-Method-Override')) // Google/GData\napp.use(methodOverride('X-Method-Override'))      // IBM\n```\n\n### custom logic\n\nYou can implement any kind of custom logic with a function for the `getter`. The following\nimplements the logic for looking in `req.body` that was in `method-override@1`:\n\n```js\nvar bodyParser = require('body-parser')\nvar express = require('express')\nvar methodOverride = require('method-override')\nvar app = express()\n\n// NOTE: when using req.body, you must fully parse the request body\n//       before you call methodOverride() in your middleware stack,\n//       otherwise req.body will not be populated.\napp.use(bodyParser.urlencoded())\napp.use(methodOverride(function (req, res) {\n  if (req.body && typeof req.body === 'object' && '_method' in req.body) {\n    // look in urlencoded POST bodies and delete it\n    var method = req.body._method\n    delete req.body._method\n    return method\n  }\n}))\n```\n\nExample call with query override using HTML `<form>`:\n\n```html\n<!-- enctype must be set to the type you will parse before methodOverride() -->\n<form method=\"POST\" action=\"/resource\" enctype=\"application/x-www-form-urlencoded\">\n  <input type=\"hidden\" name=\"_method\" value=\"DELETE\">\n  <button type=\"submit\">Delete resource</button>\n</form>\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/method-override.svg\n[npm-url]: https://npmjs.org/package/method-override\n[travis-image]: https://img.shields.io/travis/expressjs/method-override/master.svg\n[travis-url]: https://travis-ci.org/expressjs/method-override\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/method-override/master.svg\n[coveralls-url]: https://coveralls.io/r/expressjs/method-override?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/method-override.svg\n[downloads-url]: https://npmjs.org/package/method-override\n[gratipay-image]: https://img.shields.io/gratipay/dougwilson.svg\n[gratipay-url]: https://www.gratipay.com/dougwilson/\n","starsCount":73,"created":"2014-03-03T08:06:43.918Z","modified":"2017-06-02T09:00:02.160Z","lastPublisher":{"name":"dougwilson","email":"doug@somethingdoug.com"},"owners":[{"email":"shtylman@gmail.com","name":"defunctzombie"},{"email":"jonathanrichardong@gmail.com","name":"jongleberry"},{"email":"doug@somethingdoug.com","name":"dougwilson"},{"email":"tj@vision-media.ca","name":"tjholowaychuk"},{"email":"mscdex@mscdex.net","name":"mscdex"},{"email":"fishrock123@rocketmail.com","name":"fishrock123"}],"other":{"_attachments":{},"_from":".","_id":"method-override","_nodeVersion":"6.10.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/method-override-2.3.9.tgz_1495252756424_0.4638487577904016"},"_npmUser":{"name":"dougwilson","email":"doug@somethingdoug.com"},"_npmVersion":"3.10.10","_rev":"28-806dd915802336e37df26e81c97557bb","_shasum":"bd151f2ce34cf01a76ca400ab95c012b102d8f71","bugs":{"url":"https://github.com/expressjs/method-override/issues"},"contributors":[{"name":"Douglas Christopher Wilson","email":"doug@somethingdoug.com"},{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"}],"directories":{},"dist-tags":{"latest":"2.3.9"},"dist":{"shasum":"bd151f2ce34cf01a76ca400ab95c012b102d8f71","tarball":"https://registry.npmjs.org/method-override/-/method-override-2.3.9.tgz"},"maintainers":[{"email":"shtylman@gmail.com","name":"defunctzombie"},{"email":"jonathanrichardong@gmail.com","name":"jongleberry"},{"email":"doug@somethingdoug.com","name":"dougwilson"},{"email":"tj@vision-media.ca","name":"tjholowaychuk"},{"email":"mscdex@mscdex.net","name":"mscdex"},{"email":"fishrock123@rocketmail.com","name":"fishrock123"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T09:00:02.160Z","created":"2014-03-03T08:06:43.918Z","1.0.0":"2014-03-03T08:06:43.918Z","1.0.1":"2014-05-18T01:57:30.782Z","1.0.2":"2014-05-23T00:59:35.975Z","2.0.0":"2014-06-01T19:12:57.143Z","2.0.1":"2014-06-02T23:51:39.448Z","2.0.2":"2014-06-05T14:59:03.016Z","2.1.0":"2014-07-09T05:30:58.438Z","2.1.1":"2014-07-12T00:33:22.724Z","2.1.2":"2014-07-22T23:47:03.224Z","2.1.3":"2014-08-10T21:25:51.890Z","2.2.0":"2014-09-03T01:46:50.419Z","2.3.0":"2014-10-17T00:52:00.953Z","2.3.1":"2014-12-31T05:17:17.568Z","2.3.2":"2015-03-15T04:39:39.164Z","2.3.3":"2015-05-13T03:40:59.898Z","2.3.4":"2015-07-15T03:05:49.244Z","2.3.5":"2015-07-31T18:46:37.701Z","2.3.6":"2016-05-21T02:26:55.819Z","2.3.7":"2016-11-20T03:21:22.782Z","2.3.8":"2017-03-25T02:05:16.700Z","2.3.9":"2017-05-20T03:59:17.449Z"},"users":{"83057396":true,"summer":true,"markymark":true,"mahboob":true,"mswanson1524":true,"kabomi":true,"jerone":true,"daviddias":true,"silverbeetle":true,"dvk":true,"tsm91":true,"javimaravillas":true,"dlpowless":true,"andreaspag":true,"docksteaderluke":true,"dongxu":true,"flyslow":true,"nhutle":true,"sanketss84":true,"damianof":true,"drewigg":true,"gochomugo":true,"jota":true,"m412c0":true,"fotooo":true,"hema":true,"devdebonair":true,"davincho":true,"wangnan0610":true,"crazyjingling":true,"elessarkrin":true,"bian17888":true,"richardcfelix":true,"gollojs":true,"keanodejs":true,"hyteer":true,"ansuman":true,"mazimuhlari":true,"monjer":true,"dpjayasekara":true,"sammok2003":true,"asm2hex":true,"ghe1219":true,"wkaifang":true,"dishwad":true,"rochejul":true,"juangotama":true,"marcobiedermann":true,"kikna":true,"jcarlos":true,"kistoryg":true,"writeosahon":true,"tonyljl526":true,"mr-smiley":true,"langri-sha":true,"adamdreszer":true,"adeelp":true,"panlw":true,"xieranmaya":true,"jon_shen":true,"wesleylhandy":true,"chinjon":true,"milan322":true,"jaguarj":true,"davidjsalazarmoreno":true,"bengi":true,"tomchao":true,"rocket0191":true,"cognivator":true,"zahra120":true,"alek-s":true,"chiaychang":true,"asaupup":true}}}