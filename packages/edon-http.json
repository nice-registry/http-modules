{"name":"edon-http","version":"0.0.2","description":"A Route-less Node HTTP Server - the simplest way possible.","main":"edon-http.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/gbuilt/edon-http","keywords":["HTTP","http","server","http-server","node-server","web-server","route","router","routes","route-less","auto-route","static-route","port","custom-port"],"license":"ISC","homepage":"https://github.com/gbuilt/edon-http","gitHead":"dd7c785ec7a3c85f9be9313d5065fd7480f5faf4","versions":[{"number":"0.0.1","date":"2016-01-10T02:07:36.185Z"},{"number":"0.0.2","date":"2016-01-10T03:04:03.469Z"}],"readme":"# edon-http\nA Route-less Node HTTP Server - the simplest way possible. Old-school is so cool...\n\n\nRoute-less structure:\n\n\tTwo key directories: '/private/' and '/public/'.\n\n\t\t'/private/'\n\t\t\tServer-side Nodejs files go here\n\t\t\tin whatever vanilla, MVC, clean\n\t\t\tor crazy directory structure you want.\n\t\t\tExample: a url of 'htp://site.com/login'\n\t\t\twill hit the nodejs file '/private/login.js'\n\t\t\tNothing inside the /private/ directory\n\t\t\tcan be accessed accidentally like a\n\t\t\tclient-side .js file. Your source is safe.\n\n\t\t'/public/'\n\t\t\tClient-side files go here, like:\n\t\t\t/public/scripts/jquery.min.js\n\t\t\t/public/styles/global-styles.css\n\t\t\t/public/images/cat.gif.\n\t\t\tThese will use their /public/ base,\n\t\t\tmeaning: <link type=\"text/css\" rel=\"stylesheet\" href=\"/public/styles/global-styles.css\">\n\n\t\tYour default landing page when nothing is specified in the URL, ie. 'http://site.com/' will hit 'private/index.js'.\n\n\n\nA basic node http server start file:\n\n\tHere is a sample server.js file which you would start by running \"node server\".\n\tIn this example below you can specify the port to listen on \"node server 8080\" or \"sudo node server 80\".\n\n\t------------------------------------------------------------------------------------\n\t// File: server.js\n\t// Created: January 2016\n\n\tvar Edon = require(\"./edon-http.js\"),\n\t\tHttp = require(\"http\");\n\n\t// Make 'Edon' accessible EVERYWHERE\n\tglobal.edon = new Edon();\n\n\tvar svr = Http.createServer(global.edon.listener),\n\t\tport = 8888;\n\n\tconsole.log(process.argv);\n\tif (process.argv.length > 2 && !isNaN(process.argv[2]) && process.argv[2] >= 80) {\n\t\tport = process.argv[2];\n\t}\n\n\tsvr.listen(port);\n\n\tconsole.log(\"Edon Server is running!\\n\\nListening on port: \" + port + \".\\n\\n\\n\")\n\t------------------------------------------------------------------------------------\n\n\n\n\nThere are additional functions in edon-http for static file usage:\n\n\tReferencing 'global.edon = new Edon();' from the sample 'server.js' shown above:\n\n\tINC - to include static file content:\n\t\tresponse.write(global.edon.inc(\"./views/login_form.html\"));\n\n\tREQR - to include nodejs file functions\n\t\tself.reqr(path.resolve(global.edon.serverDir + \"error/404notfound.js\"));  // self.serverDir = '/private/'\n\n\tQS2OBJ\n\t\trequest.reqUrlParams = global.edon.qs2obj(request.reqUrl.query);\n\n\n","created":"2016-01-10T02:07:36.185Z","modified":"2016-01-10T03:04:03.469Z","lastPublisher":{"name":"gbuilt","email":"gwbach@gmail.com"},"owners":[{"name":"gbuilt","email":"gwbach@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"edon-http","_nodeVersion":"5.2.0","_npmUser":{"name":"gbuilt","email":"gwbach@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-319834a5bbaa585735423f1021fd4610","_shasum":"c562364e00eb484296808560c202282fc0859776","author":{"name":"GBuilt"},"bugs":{"url":"https://github.com/gbuilt/edon-http/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"c562364e00eb484296808560c202282fc0859776","tarball":"http://registry.npmjs.org/edon-http/-/edon-http-0.0.2.tgz"},"maintainers":[{"name":"gbuilt","email":"gwbach@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-10T03:04:03.469Z","created":"2016-01-10T02:07:36.185Z","0.0.1":"2016-01-10T02:07:36.185Z","0.0.2":"2016-01-10T03:04:03.469Z"}}}