{"name":"frau-http-telemetry","version":"1.5.0","description":"Send logs via http POST","main":"src/telemetry.js","scripts":{"test":"eslint . && mocha"},"keywords":["d2l","free-range","telemetry"],"license":"Apache-2.0","dependencies":{"extend":"^3.0.0","lie":"^3.0.2","superagent":"^1.8.3"},"devDependencies":{"chai":"^3.5.0","chai-as-promised":"^5.3.0","eslint":"^2.5.3","frau-ci":"^1.25.0","mocha":"^2.4.5","sinon":"^1.17.3"},"gitHead":"21acf40a64932a1b9a819e694ca7f8928885ddb0","versions":[{"number":"1.2.0","date":"2016-03-31T19:43:47.693Z"},{"number":"1.3.0","date":"2016-03-31T20:01:16.192Z"},{"number":"1.4.0","date":"2016-05-30T18:04:05.857Z"},{"number":"1.5.0","date":"2016-12-07T18:10:52.487Z"}],"readme":"# frau-http-telemetry [![](https://travis-ci.com/Brightspace/frau-http-telemetry.svg?token=j49EiZ7SfjXGxfx4r21i)](https://travis-ci.com/Brightspace/frau-http-telemetry)\r\n\r\nSimple module to POST an object to an HTTP endpoint\r\n\r\n`npm i frau-http-telemetry --save`\r\n\r\n```js\r\nvar Telemetry = require('frau-http-telemetry');\r\n\r\n// Set endpoint\r\nTelemetry.endpoint('http://db.com/logs');\r\n\r\n// Set values for all messages\r\nTelemetry.context('appName', 'exampleApp');\r\n\r\n// Asynchronously POST message to http://db.com/logs\r\nTelemetry.track('appLoad', {user: 'user1'});\r\n\r\n// The payload below is what was sent by Telemetry.track\r\nvar sent = {\r\n  appName: 'exampleApp',\r\n  user: 'user1',\r\n  name: 'appLoad',\r\n  ts: 1459351569 // object creation time\r\n};\r\n\r\n// You can also POST anything you want\r\nTelemetry.raw({data: 'this obj is sent without modification or context'});\r\n```\r\n\r\n## API        \r\n        \r\n* `Telemetry.endpoint(endpoint)`\r\n    * Sets the endpoint for the global telemetry instance, overwriting the current endpoint.\r\n\r\n\r\n* `Telemetry.context(key, value)`\r\n    * Sets a key-value pair to be sent on all calls to `Telemetry.track`.\r\n    * Overwritten by `localContext`.\r\n\r\n    \r\n* `Telemetry.track(name[, localContext])`\r\n    * POSTs payload to the configured endpoint. The payload is determined by `name`, `localContext`, and `context`.\r\n    * `localContext` fields will overwrite `context` fields of the same name.\r\n    * `Telemetry.track` will add two fields that cannot be overwritten:\r\n        * `name` from the parameter of the function\r\n        * `ts` which is the unix epoch time the object was created (seconds)\r\n    * Returns a `Promise` containing the response of the POST on success, or the error on failure.\r\n\r\n\r\n* `Telemetry.enable()`\r\n* `Telemetry.disable()`\r\n    * When telemetry is disabled, `Telemetry.track` will **not** POST and will return a rejected `Promise` with an appropriate error message instead.\r\n    * You should use caution when deciding to call this method as this will affect all telemetry instances. For example, calling this in a dependency will disable telemetry for the entire application.\r\n\r\n\r\n* `Telemetry.clearContext()`\r\n    * Deletes **all** context associated with the global telemetry object.\r\n    * You should use caution when deciding to call this method as this will affect all telemetry instances. For example, calling this in a dependency will clear the context for the entire application.\r\n\r\n\r\n* `Telemetry.raw(obj)`\r\n    * Will POST `obj` to `endpoint` without modifications or context.\r\n    * Returns a `Promise` containing the response of the POST on success, or the error on failure.\r\n    * Use this method if `Telemetry.track` does not fit your needs.\r\n    \r\n    \r\n* `Telemetry.create(name[, localContext])`\r\n    * Returns the object created by `Telemetry.track` without POSTing it.\r\n","created":"2016-03-31T19:43:47.693Z","modified":"2016-12-07T18:10:52.487Z","lastPublisher":{"name":"d2l-travis-deploy","email":"d2ltravisdeploy@d2l.com"},"owners":[{"name":"d2l-travis-deploy","email":"d2ltravisdeploy@d2l.com"}],"other":{"_attachments":{},"_from":".","_id":"frau-http-telemetry","_nodeVersion":"4.2.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/frau-http-telemetry-1.5.0.tgz_1481134250361_0.5300249303691089"},"_npmUser":{"name":"d2l-travis-deploy","email":"d2ltravisdeploy@d2l.com"},"_npmVersion":"2.14.7","_rev":"2-8b8b10362581a0b93b02b3716dab7393","_shasum":"467dd8c7c1c3dddffc9d457691549637a84037cd","author":{"name":"D2L Corporation"},"directories":{},"dist-tags":{"latest":"1.5.0"},"dist":{"shasum":"467dd8c7c1c3dddffc9d457691549637a84037cd","tarball":"http://registry.npmjs.org/frau-http-telemetry/-/frau-http-telemetry-1.5.0.tgz"},"maintainers":[{"name":"d2l-travis-deploy","email":"d2ltravisdeploy@d2l.com"}],"readmeFilename":"readme.md","time":{"modified":"2016-12-07T18:10:52.487Z","created":"2016-03-31T19:43:47.693Z","1.2.0":"2016-03-31T19:43:47.693Z","1.3.0":"2016-03-31T20:01:16.192Z","1.4.0":"2016-05-30T18:04:05.857Z","1.5.0":"2016-12-07T18:10:52.487Z"}}}