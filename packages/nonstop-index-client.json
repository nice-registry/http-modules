{"name":"nonstop-index-client","version":"0.2.0","description":"Library for communicating with the nonstop index HTTP API.","main":"src/index.js","scripts":{"test":"gulp test"},"repository":"https://github.com/LeanKit-Labs/nonstop-index-client","keywords":["nonstop","ci","build"],"license":"MIT","publishConfig":{"registry":"https://registry.npmjs.org/"},"homepage":"https://github.com/LeanKit-Labs/nonstop-index-client","devDependencies":{"autohost":"~0.5.0","gulp":"^3.8.7","gulp-mocha":"^1.0.0","hyped":"~0.5.0","nock":"^0.50.0","nonstop-package-resource":"~0.1.13","should":"^4.0.4","sinon":"^1.10.3"},"dependencies":{"configya":"~0.2.1","debug":"^2.0.0","fount":"~0.1.0","halon":"~0.4.0","lodash":"~3.8.0","machina":"~1.0.0","mkdirp":"^0.5.0","nonstop-pack":"~0.1.6","request":"~2.48.0","when":"~3.7.3"},"gitHead":"f764eb1c6c1cd62b61943173af67630b2691390c","versions":[{"number":"0.1.0-4","date":"2014-11-17T03:45:21.116Z"},{"number":"0.1.0-5","date":"2014-11-20T22:04:40.985Z"},{"number":"0.1.0-6","date":"2014-11-21T03:47:57.389Z"},{"number":"0.1.0","date":"2014-12-20T06:43:45.974Z"},{"number":"0.1.1","date":"2015-08-12T22:00:51.274Z"},{"number":"0.1.2","date":"2015-08-13T03:58:21.519Z"},{"number":"0.1.3","date":"2015-08-16T20:26:47.662Z"},{"number":"0.1.5","date":"2015-08-21T11:17:37.784Z"},{"number":"0.1.6","date":"2015-11-18T13:58:37.096Z"},{"number":"0.2.0","date":"2015-11-24T18:48:34.604Z"}],"readme":"## nonstop-index-client\nLibrary for communicating with the nonstop index HTTP API. \n\nBuilt around hypermedia with [hyped](https://github.com/LeanKit-Labs/hyped) and [halon](https://github.com/LeanKit-Labs/halon).\n\n## Use\nTo get a configured instance of the server API, you can use one of the following approaches:\n\n### Configuration hash\nSee the Configuration section for a detailed explanation of the possible configuration values\n```javascript\n// for uploading\nvar server = require( 'nonstop-index-client' )( {\n\tindex: {\n\t\thost: 'my-index',\n\t\tport: 443,\n\t\tssl: true\n\t}\n} );\n\n// for getting package lists/downloading\nvar server = require( 'nonstop-index-client' )( {\n\tindex: {\n\t\thost: 'my-index',\n\t\tport: 443,\n\t\tssl: true\n\t},\n\tpackage: {\n\t\tproject: 'test',\n\t\towner: 'arobson',\n\t\tbranch: 'master'\n\t}\n} );\n\n// package lists will use the following URL (note - architecture and platform are set automatically)\n// https://my-index:443/api/package/list?project=test&owner=arobson&branch=master&platform=darwin&architecture=x64\n```\n\n### Daedalus - Service and Configuration\nThis example is a bit over-simplified. See [daedalus](https://gitindex.com/LeanKit-Labs/daedalus) for more advanced use patterns. The point is to show how you can easily use this library in conjunction with daedalus and fount to auto-discover the nonstop-index end point from Consul.\n\n__index.js__\n```javascript\nvar daedalus = require( 'daedalus' )();\nvar server;\n\ndaedalus.initialize( {\n\tindex: {\n\t\tservice: 'conitnua-index',\n\t\tmodule: './index-client.js',\n\t\tconfig: 'index-client'\n\t}\n} )\n.then( function( fount ) {\n\tfount.resolve( 'index', function( index ) { server = index; } );\n} );\n```\n\n__index-client.js__\n```javascript\n// the format of the function returned from the module matches\n// what daedalus expects\nmodule.exports = require( 'nonstop-index-client' );\n```\n\n## Configuration\nThe configuration hash can contain a lot of information. Depending on your use case, the required minimum information changes to ensure proper function. Defaults are shown for most values except where noted.\n\n```javascript\n{\n\tindex: {\n\t\thost: 'localhost',\n\t\tapi: '/api',\n\t\tpackages: '/nonstop/package', // URL segment where packages available for download are located\n\t\tport: 12321,\n\t\tssl: false,\n\t\ttoken: '' // API token used to connect to the index\n\t},\n\tpackage: {\n\t\tarchitecture: , // defaults to your system's architecture, x86 or x64\n\t\tbranch: undefined,\n\t\tbuild: undefined,\n\t\tdownloads: './downloads', // where to download packages\n\t\towner: undefined,\n\t\tplatform: sysInfo.platform, // defaults to the platform of your OS: 'win32', 'linux' or 'darwin'\n\t\tproject: undefined,\n\t\treleaseOnly: false, // indicates you only want to see releases when requesting the latest\n\t\tversion: undefined\n\t}\n}\n```\n\nBecause this library uses [configya](https://gitindex.com/LeanKit-Labs/configya), you can provide environment variables to override any of the values above. Here is a list for convenience:\n\n * NONSTOP_INDEX_HOST\n * NONSTOP_INDEX_API\n * NONSTOP_INDEX_PACKAGES\n * NONSTOP_INDEX_PORT\n * NONSTOP_INDEX_SSL\n * NONSTOP_INDEX_TOKEN\n * NONSTOP_PACKAGE_ARCHITECTURE\n * NONSTOP_PACKAGE_BRANCH\n * NONSTOP_PACKAGE_BUILD\n * NONSTOP_PACKAGE_FILES\n * NONSTOP_PACKAGE_OWNER\n * NONSTOP_PACKAGE_PLATFORM\n * NONSTOP_PACKAGE_PROJECT\n * NONSTOP_PACKAGE_RELEASE\n * NONSTOP_PACKAGE_VERSION\n\n> Note: if you will be requesting package lists, you must provide project, owner and branch in the config. There are no defaults for these values.\n\n### Uploading Packages (cli/build agent)\nThe only required information can be provided via the service argument from [daedalus](https://gitindex.com/LeanKit-Labs/daedalus) or via the config argument.\n\n```javascript\nvar index = require( 'nonstop-index-client' )( { host: 'my-index', port: 80 } );\n```\n\n### Listing and Downloading Packages (bootstrapper)\nListing and downloading require the project, owner and branch to be specified (at least). The platform and architecture are automatically populated based on the machine the code is running on.\n\n```javascript\nvar server = require( 'nonstop-index-client' )( { \n\tindex: {\n\t\thost: 'my-index',\n\t\tport: 80,\n\t\tproject: 'test',\n\t\towner: 'arobson',\n\t\tbranch: 'master',\n\t\ttoken: 'yourAPIToken'\n\t}\n} );\n```\n\n## Server API\nOnce you have access to the server instance, you can find the latest package version available, download a package or upload a package.\n\n### Changing the package filter\nThe parameters you set during configuration which change what packages will be \"available\" when getting latest can be changed during runtime by accessing the filter. The filter exposes a chainable set of calls for each of the parameters.\n\n```javascript\n// changing the owner and branch of the package\nindex.config.filter.owner( 'mainRepo' ).branch( 'production' );\n```\n\nThese changes will take affect the very next time `getLatest` is called.\n\n### download( package )\nDownloads the target package. The file will be downloaded to the path specified by the `downloads` property of the config hash (default is './downloads'). Returns a promise that resolves to an object with the format:\n\n```javascript\n\t{ \n\t\tpath: /* path where the file was downloaded */, \n\t\tinstallPath: /* path where packages should be unpacked */, \n\t\tfile: /* the file that was downloaded */\n\t}\n```\n\n```javascript\n// target - the full package name to download\nindex.download( 'test~arobson~master~0.1.0~1~darwin~any~any~x64.tar.gz' )\n\t.then( function( info ) {\n\t\t// on success\n\t} );\n```\n\n### getLatest( ignore )\nGets information for the latest available package given the package properties set by config (or by the set calls). Returns a promise that resolves to a package information object with the format:\n\n```javascript\n\t{\n\t\tfile: 'proj1~owner1~branch2~0.1.0~1~darwin~OSX~10.9.2~x64.tar.gz'\n\t\tproject: 'test',\n\t\towner: 'arobson',\n\t\tbranch: 'master',\n\t\tversion: '0.1.0-1',\n\t\tbuild: '1',\n\t\tplatform: 'darwin',\n\t\tosName: 'any',\n\t\tosVersion: 'any',\n\t\tarchitecture: 'x64'\n\t}\n```\n\nMost likely, the property you need from this object will be the `file` property - supplying this to the `download` call will allow your application to download the latest package matching the configured filter.\n\n```javascript\n// ignore - an array of versions that should be ignored when determining the latest package\nindex.getLatest( [] )\n\t.then( function( latest ) {\n\t\tindex.download( latest.file )\n\t\t\t.then( function( info ) {\n\t\t\t\t...\n\t\t\t} ) \n\t} );\n```\n\n### upload( file )\nUploads a package. Returns a promise that resolves to the package information on success (statusCode === 200).\n\n```javascript\nindex.upload( './path/proj1~owner1~branch2~0.1.0~1~darwin~OSX~10.9.2~x64.tar.gz' )\n\t.then( function( packageInfo ) {\n\t\t// on success\n\t} );\n```\n\n## Dependencies\nThis would not have been possible without several great Node modules:\n\n * configya\n * debug\n * fount\n * halon\n * lodash\n * machina\n * mkdirp\n * nonstop-pack\n * request\n * when\n\n## Dependents\nThe following nonstop projects rely on this library:\n\n * [build cli](https://gitindex.com/LeanKit-Labs/nonstop)\n * [build agent](https://gitindex.com/LeanKit-Labs/nonstop-agent)","created":"2014-11-17T03:45:21.116Z","modified":"2015-11-24T18:48:34.604Z","lastPublisher":{"name":"arobson","email":"asrobson@gmail.com"},"owners":[{"name":"arobson","email":"asrobson@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"nonstop-index-client","_nodeVersion":"0.12.7","_npmUser":{"name":"arobson","email":"asrobson@gmail.com"},"_npmVersion":"2.11.3","_rev":"1-2005a05beeea9d205c0a4dd3c137eeab","_shasum":"fe225d6c541da34ce9ba2f46a298367c442ebfbe","author":{"name":"LeanKit"},"bugs":{"url":"https://github.com/LeanKit-Labs/nonstop-index-client/issues"},"contributors":[{"name":"Alex Robson","url":"http://nerdventure.io"}],"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"fe225d6c541da34ce9ba2f46a298367c442ebfbe","tarball":"http://registry.npmjs.org/nonstop-index-client/-/nonstop-index-client-0.2.0.tgz"},"maintainers":[{"name":"arobson","email":"asrobson@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-11-24T18:48:34.604Z","created":"2014-11-17T03:45:21.116Z","0.1.0-4":"2014-11-17T03:45:21.116Z","0.1.0-5":"2014-11-20T22:04:40.985Z","0.1.0-6":"2014-11-21T03:47:57.389Z","0.1.0":"2014-12-20T06:43:45.974Z","0.1.1":"2015-08-12T22:00:51.274Z","0.1.2":"2015-08-13T03:58:21.519Z","0.1.3":"2015-08-16T20:26:47.662Z","0.1.5":"2015-08-21T11:17:37.784Z","0.1.6":"2015-11-18T13:58:37.096Z","0.2.0":"2015-11-24T18:48:34.604Z"}}}