{"name":"http-noupgrade","version":"0.0.0","description":"merge upgrade requests back into the request listener","main":"index.js","bin":{},"dependencies":{},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":"https://github.com/substack/http-noupgrade","homepage":"https://github.com/substack/http-noupgrade","keywords":["http","server","experiment","upgrade","request"],"license":"MIT","readme":"# http-noupgrade\n\nmerge `'upgrade'` requests back into the `'request'` listener\n\n[![build status](https://secure.travis-ci.org/substack/http-noupgrade.png)](http://travis-ci.org/substack/http-noupgrade)\n\n# example\n\n``` js\nvar http = require('http-noupgrade');\n\nvar server = http.createServer(function (req, res) {\n    if (req.headers.upgrade) {\n        repl.start({ input : req, output : res });\n    }\n    else res.end('beep boop');\n});\nserver.listen(8000);\n```\n\n***\n\n```\n$ nc localhost 8000\nGET / HTTP/1.1\nUpgrade: true\n\nHTTP/1.1 200 OK\nDate: Sun, 09 Sep 2012 23:57:43 GMT\nConnection: close\n\n# repl party server\n> 1+2\n3\n> 'abc'\n'abc'\n> 4+5+2*5\n19\n> ^C\n```\n\n# hypothesis\n\nEmitting an `'upgrade'` event with `(request, socket, head)` parameters makes\nusing and writing websocket server handlers much more complicated than it needs\nto be. Because the necessary events are spread out across both `'upgrade'` and\n`'request'`, websocket libraries tend to have an `install()` mechanism for\nadding the listeners themselves. This is unfortunate because it obscures the\ncorrespondence between the original http request and the resulting duplex\nstream. Instead of just passing a `(req,res)` explicitly to a handler after\nperforming session checks, the websocket or fallback abstraction takes control\nof the http server by punching methods, events, and otherwise being hacky and\nbrittle.\n\nSince http request and response objects can already be paired to make a full\nduplex connection, have well-understood and expected semantics, and more\nadequately describe the actual http protocol in the case of an upgrade, we\nshould just let the `'request'` listener handle `'upgrade'` events instead of\nusing a separate event.\n","versions":[{"number":"0.0.0","date":"2012-09-22T14:06:38.559Z"}],"created":"2012-09-22T14:06:37.105Z","modified":"2012-09-22T14:06:38.559Z","lastPublisher":{"name":"substack","email":"mail@substack.net"},"owners":[{"name":"substack","email":"mail@substack.net"}],"other":{"_attachments":{},"_id":"http-noupgrade","_npmUser":{"name":"substack","email":"mail@substack.net"},"_npmVersion":"1.1.59","_rev":"1-578f02c7e4546300609bae8b90795e94","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"directories":{"example":"example","test":"test"},"dist-tags":{"latest":"0.0.0"},"dist":{"shasum":"405dd340dcd43000dd6b7ae5ed9e64aab560095d","tarball":"http://registry.npmjs.org/http-noupgrade/-/http-noupgrade-0.0.0.tgz"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"time":{"modified":"2012-09-22T14:06:38.559Z","created":"2012-09-22T14:06:37.105Z","0.0.0":"2012-09-22T14:06:38.559Z"}}}