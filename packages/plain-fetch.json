{"name":"plain-fetch","description":"Easy way to construct simple http fetch requests","version":"0.2.0","main":"index.js","repository":"https://github.com/robin-drexler/simple-fetch","license":"MIT","scripts":{"test":"jest"},"devDependencies":{"jest":"^19.0.2"},"dependencies":{"fetch":"^1.1.0","isomorphic-fetch":"^2.2.1"},"engines":{"node":">=6"},"engineStrict":true,"gitHead":"9b6198d64e5fd5c90005b101b725dec5fdda8914","homepage":"https://github.com/robin-drexler/simple-fetch#readme","versions":[{"number":"0.1.0","date":"2017-04-13T19:18:09.890Z"},{"number":"0.2.0","date":"2017-04-15T13:00:13.372Z"}],"readme":"# plain-fetch\n\n> Easy way to construct simple http fetch requests\n\nMost http requests are fairly simple.\n\n```\nPOST /post                     // request line (method and url)\nHost: https://httpbin.org      // headers (optional)\nContent-Type: application/json\nX-Foo: bar\n\n{\"hello\": \"world\"}             // body (optional)\n\n```\n\nThis library allows you to write simple http requests in the same way.\n\n```js\nconst plainFetch = require('plain-fetch');\n\nplainFetch(`\n  POST https://httpbin.org/post\n  Content-Type: application/json\n\n  {\"a\": 1}\n`).then(res => console.log(res.ok)) // returns fetch Response object\n\n```\n\nThere's one difference to the example above.\nInstead providing the path in the request line and the host in the  `Host` header, the entire URL is passed in the request line.\n\nThe result of `plainFetch` is a [fetch response object](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n\n\n### more examples\n\nGet wind data for Chicago from Yahoo weather.\n\n```js\nconst plainFetch = require('plain-fetch');\n\nplainFetch(`\n  GET https://query.yahooapis.com/v1/public/yql?q=select%20wind%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22chicago%2C%20il%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys\n`)\n.then(res => res.json())\n.then(data => console.log(data.query.results.channel.wind))\n\n```\n\nsend headers to httpbin\n\n```js\nconst plainFetch = require('plain-fetch');\n\nplainFetch(`\n  GET https://httpbin.org/headers\n  Hello: world\n  User-Agent: yolo\n`)\n.then(res => res.text())\n.then(data => console.log(data))\n\n```\n\nOmitting the method will default to GET requests.\n\n```js\nconst plainFetch = require('plain-fetch');\n\nplainFetch(`https://query.yahooapis.com/v1/public/yql?q=select%20wind%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22chicago%2C%20il%22)&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys`)\n.then(res => res.json())\n.then(data => console.log(data.query.results.channel.wind))\n\n```\n\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/)\n\n```sh\n$ npm i plain-fetch --save\n```\n\n## Running tests\n\n\n```sh\n$ npm i -d && npm test\n```\n","created":"2017-04-13T19:18:09.890Z","modified":"2017-04-15T13:00:13.372Z","lastPublisher":{"name":"robin-drexler","email":"drexler.robin@gmail.com"},"owners":[{"name":"robin-drexler","email":"drexler.robin@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"plain-fetch","_nodeVersion":"7.5.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/plain-fetch-0.2.0.tgz_1492261212699_0.15442226640880108"},"_npmUser":{"name":"robin-drexler","email":"drexler.robin@gmail.com"},"_npmVersion":"4.1.2","_rev":"2-48305da7470bec4e7e4bd232f717ce82","_shasum":"463edfa7fe6508406c327ab17bffc126bd3abc87","author":{"name":"Robin Drexler"},"bugs":{"url":"https://github.com/robin-drexler/simple-fetch/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"463edfa7fe6508406c327ab17bffc126bd3abc87","tarball":"https://registry.npmjs.org/plain-fetch/-/plain-fetch-0.2.0.tgz"},"maintainers":[{"name":"robin-drexler","email":"drexler.robin@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-15T13:00:13.372Z","created":"2017-04-13T19:18:09.890Z","0.1.0":"2017-04-13T19:18:09.890Z","0.2.0":"2017-04-15T13:00:13.372Z"}}}