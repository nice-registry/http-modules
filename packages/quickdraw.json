{"name":"quickdraw","description":"High performance http client and server output caching for node.js express","version":"0.2.7","keywords":["cache","node cache","express cache","http cache","etag","cache-control","vary","static cache"],"license":"MIT","repository":"https://github.com/frisB/quickdraw","dependencies":{"lru-cache":"2.3.x"},"main":"./index","engines":{"node":">= 0.8.x"},"homepage":"https://github.com/frisB/quickdraw","versions":[{"number":"0.2.1","date":"2013-09-25T09:32:37.182Z"},{"number":"0.2.2","date":"2013-09-25T09:43:54.663Z"},{"number":"0.2.3","date":"2013-09-25T14:05:41.530Z"},{"number":"0.2.4","date":"2013-09-25T14:21:26.449Z"},{"number":"0.2.5","date":"2013-09-25T14:27:39.622Z"},{"number":"0.2.6","date":"2013-09-25T14:36:28.537Z"},{"number":"0.2.7","date":"2014-05-04T09:51:22.544Z"}],"readme":"quickdraw\n===\n\n[![npm status badge](https://nodei.co/npm/quickdraw.png?stars=true&downloads=true)](https://nodei.co/npm/quickdraw/)\n\nquickdraw applies high performance http client and server output caching for blazing fast content delivery to the browser.\n\npartially inspired by [etagify](https://github.com/lloyd/connect-etagify) and a general community requirement for simplified cache control, quickdraw leverages @isaacs' [node-lru-cache](https://github.com/isaacs/node-lru-cache) for cache item storage limits and ttl.\n\nquickdraw offers a frictionless interface for applying instant cacheability to node.js express applications.\n\ncontributions are welcome of course.\n\n## features\n\n* `simple api` - Enhances existing express functions.\n* `vary` - Vary by headers and querystring parameters.\n* `conditional headers` - ETag and Last-Modified.\n* `lru` - node-lru-cache under the hood.\n* `file dependencies` - For static and dynamic output.\n* `server side output cache` - For fast output delivery.\n* `all verbs` - GET / POST / PUT.\n* `versioned url support` - For browser cached url invalidation.\n* `static cache` - Custom cache for static files.\n\n## examples\n\n### Cache-Control: private\n\ncache on the server and client only for 60 seconds, varying by \"User-Agent\" header and \"Test\" querystring parameter\n\n``` js\nvar express = require('express');\nvar http = require('http');\n\nvar app = express();\n\n// instantiate between middleware (preferably below compress and above router)\napp.use(express.compress());\n\nvar quickdraw = require('quickdraw')(app);\n\napp.use(app.router);\n\napp.get('/', function(req, res) {\n    res.send('output generated ' + new Date().toUTCString());\n}, {\n    'cache-control': 'private',     // only cache on the browser, not intermediate proxies\n    maxAge: 60,                     // 60sec\n    varyByHeaders: 'User-Agent',    // vary by browser useragent\n    varyByParams: 'Test',           // also vary by querystring param Test\n    cacheOutput: true               // cache rendered output so not re-rendered for the next <maxAge> seconds\n});\n\nhttp.createServer(app).listen(3333, function() {\n  console.log('Express server listening on port ' + 3333);\n});\n```\n\n\n### Cache-Control: public with a fileDependency and static cache middleware\n\ncache downstream for 15 seconds, with no vary\n\n``` js\nvar express = require('express');\nvar http = require('http');\n\nvar app = express();\n\n// instantiate between middleware (preferably below compress and above router)\napp.use(express.compress());\n\nvar quickdraw = require('quickdraw')(app);\n\napp.use(app.router);\n\n// use instead of express.static for custom cacheability\napp.use(quickdraw.static(path.join(__dirname, 'public'), {\n    'cache-control': 'public',                      // cache on browser and intermediate proxies\n    maxAge: 60 * 60 * 24 * 7,                       // expires after 7 days\n    cacheOutput: true                               // cache output so ouput from memory for the next <maxAge> seconds\n}));\n\napp.get('/', function(req, res) {\n    res.send('output generated ' + new Date().toUTCString());\n}, {\n    'cache-control': 'public',                      // cache on browser and intermediate proxies\n    maxAge: 15,                                     // 15sec\n    cacheOutput: false,                             // do not cache rendered output\n    dependencies: ['/path/to/views/layout.jade']    // depend on view template layout file\n});\n\nhttp.createServer(app).listen(3333, function() {\n  console.log('Express server listening on port ' + 3333);\n});\n```\n\n### wiring up events\n\n``` js\nquickdraw.on('added', function(cache) {\n    console.log('added ' + cache.vary.aggregateKey)\n});\n\nquickdraw.on('removed', function(cache) {\n    console.log('removed ' + cache.vary.aggregateKey)\n});\n```\n\n## installation\n\n```\n  npm install quickdraw\n```\n\n## License\n\n(The MIT License)\n\nCopyright (c) frisB.com &lt;play@frisb.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n","starsCount":0,"created":"2013-09-25T09:32:28.989Z","modified":"2014-05-04T09:51:22.544Z","lastPublisher":{"name":"ashleybrener","email":"ashley@frisb.com"},"owners":[{"name":"ashleybrener","email":"ashley@frisb.com"}],"other":{"_attachments":{},"_from":".","_id":"quickdraw","_npmUser":{"name":"ashleybrener","email":"ashley@frisb.com"},"_npmVersion":"1.3.21","_rev":"1-f6da529dd2b7ed1e3044c9bba73962a2","bugs":{"url":"https://github.com/frisB/quickdraw/issues"},"contributors":[{"name":"ashley brener","email":"ashley@frisb.com","url":"www.frisb.com"}],"directories":{},"dist-tags":{"latest":"0.2.7"},"dist":{"shasum":"f6cbd4bd2fa49d2bd7e5358e7c701800f133b127","tarball":"http://registry.npmjs.org/quickdraw/-/quickdraw-0.2.7.tgz"},"maintainers":[{"name":"ashleybrener","email":"ashley@frisb.com"}],"readmeFilename":"README.md","time":{"modified":"2014-05-04T09:51:22.544Z","created":"2013-09-25T09:32:28.989Z","0.2.1":"2013-09-25T09:32:37.182Z","0.2.2":"2013-09-25T09:43:54.663Z","0.2.3":"2013-09-25T14:05:41.530Z","0.2.4":"2013-09-25T14:21:26.449Z","0.2.5":"2013-09-25T14:27:39.622Z","0.2.6":"2013-09-25T14:36:28.537Z","0.2.7":"2014-05-04T09:51:22.544Z"},"users":{}}}