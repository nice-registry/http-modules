{"name":"pika-serville","version":"1.4.1","description":"An ES6 module fork of Serville, the fast and easy HTTP API library for NodeJS.","module":"module.js","scripts":{"test":"eslint dev","fix":"eslint dev --fix","dev":"node dev/test.js","build":"babili dev/serville.js -o module.js"},"keywords":["http","server","serville","api","pika-package"],"repository":"https://github.com/FredKSchott/serville","license":"MIT","devDependencies":{"babili":"^0.1.2","eslint":"^3.19.0"},"gitHead":"7f8a3a3230ca2adfeafb47d0f9e25e405830b728","homepage":"https://github.com/FredKSchott/serville#readme","versions":[{"number":"1.4.0","date":"2017-06-03T23:07:20.855Z"},{"number":"1.4.1","date":"2017-06-07T17:21:21.327Z"}],"readme":"> `pika-serville` is an ES6 module fork of Serville.  It matches the original Serville module described below, except that it is loaded via module `import` instead of Node's commonjs `require()`. See the updated code snippets below for the new import syntax.\n\n<h1 align=\"center\">Serville</h1>\n\n---\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/emctague/serville\"><img src=\"https://img.shields.io/travis/emctague/serville.svg?style=flat-square\" alt=\"Travis\"></a>\n  <a href=\"https://www.npmjs.com/package/serville\"><img src=\"https://img.shields.io/npm/v/serville.svg?style=flat-square\" alt=\"npm\"></a>\n  <a href=\"https://spdx.org/licenses/MIT\"><img src=\"https://img.shields.io/npm/l/serville.svg?style=flat-square\" alt=\"MIT license\"></a>\n  <a href=\"https://github.com/emctague/serville/issues\"><img src=\"https://img.shields.io/github/issues-raw/emctague/serville.svg?style=flat-square\" alt=\"issues\"></a>\n  <a href=\"https://gitter.im/_serville\"><img src=\"https://img.shields.io/gitter/room/_serville/serville.svg?style=flat-square\" alt=\"Gitter\"></a>\n</p>\n\nServille is a **fast, tiny, and opinionated** HTTP library for NodeJS.\n\nServille is **perfect for your REST API** - it serves up JSON, and it does it\nwell! **It takes just minutes to set it up and give it a whirl.**\n\n**Set It Up:**\n\n```sh\nnpm i --save pika-serville\n```\n\n```js\nimport Serville from 'pika-serville';\n\nconst app = Serville();\napp.listen('8080');\n\napp.at('/', (q) => ({ message: \"Hello!\" }));\n// GET localhost:8080/\n// => { \"message\": \"Hello!\" }\n```\n\n**URL Parameters:**\n\nURL parameters can be specified by putting a colon before\ntheir name in the path. Their values will show up later in\nthe `params` property.\n\n```js\napp.at('/say/:text', (q) => ({ text: q.params.text }));\n// GET localhost:8080/say/hello\n// => { \"text\": \"hello\" }\n```\n\n**Optional Trailing Slash:**\n\nWant to allow an optional trailing slash at the end of a URL?\nAdd a question mark after it to make it optional!\n\n```js\napp.at('/either/way/?', (q) => ({ message: \"Hey there! \"}));\n// GET localhost:8080/either/way\n// => { \"message\": \"Hey there!\" }\n// GET localhost:8080/either/way/\n// => { \"message\": \"Hey there!\" }\n```\n\n**Returning Promises:**\n\nInstead of returning an object, you can also return a promise.\nThis is useful for asynchronous operations.\n\n```js\napp.at('/delay/:secs', (q) => {\n  return new Promise((res) => {\n    setTimeout(() => {\n      resolve({ result: \"DONE\" });\n    }, q.params.secs * 1000);\n  })\n});\n// GET localhost:8080/delay/10\n// (10 second delay)\n// => { \"result\": \"done\" }\n```\n\n**GET and POST queries:**\n\nGET and POST query data is stored in the `query` property.\n\n```js\napp.at('/echo', (q) => ({ text: q.query.text }));\n// GET localhost:8080/echo?text=Hello!\n// => { \"text\": \"Hello!\" }\n// POST localhost:8080/echo\n// POST body: text=Hello!\n// => { \"text\": \"Hello!\" }\n```\n\n**Regular Expression Matching:**\n\nYou can also match paths as regular expressions!\nThe `match` property will contain the results of running\n`RegExp.match(path)` with your regex.\n\n```js\napp.at(/^\\/my-name-is-(.+)$/, (q) => (\n  { message: `Hello, ${q.match[1]}!` }\n));\n// GET localhost:8080/my-name-is-Patricia\n// => { \"message\": \"Hello, Patricia!\" }\n```\n\n**Differentiating request types:**\n\nThe `get`, `post`, `put`, and `delete` functions can be used to\nadd bindings for specific request methods.\n\n```js\napp.get('/method', () => ({ message: 'GET request!' }));\napp.post('/method', () => ({ message: 'POST request!' }));\n// GET localhost:8080/method\n// => { \"message\": \"GET request!\" }\n// POST localhost:8080/method\n// => { \"message\": \"POST request!\" }\n```\nYou can also specify several methods as a third array argument to `at`.\n\n```js\napp.at('/method', () => ({message: 'PUT or DELETE request!'}), ['PUT', 'DELETE']);\n// PUT localhost:8080/method\n// => { \"message\": \"PUT or DELETE request!\" }\n// DELETE localhost:8080/method\n// => { \"message\": \"PUT or DELETE request!\" }\n```\n\nBy default, all possible methods will be accepted:\n\n```js\napp.at('/method', () => ({message: 'Something Else!'}));\n// TRACE localhost:8080/method\n// => { \"message\": \"Something Else!\" }\n```\n\n**HTTP Request Headers:**\n\nThe HTTP request headers are present in the `headers` property.\n\n```js\napp.at('/agent', (q) => ({ agent: q.headers['user-agent'] }));\n```\n\n**Handling Node HTTP Server Errors:**\n\nSometimes, node encounters HTTP errors. Use `catch` to add\na binding for when these errors occur.\n\n```js\napp.catch((err, socket) => {\n  socket.end('HTTP/1.1 400 Bad Request\\r\\n\\r\\n');\n});\n```\n\n**Handling Error Logging:**\n\nWant to control where the server logs data? Use the `log` function\nto specify a custom logger for error messages and other output.\nThe default logger is simply `console.log`.\n\n```js\napp.log((msg) => console.log(`Serville Error: ${msg}`));\n```\n\n**Don't Crash on Binding Errors:**\n\nBy default, when an uncaught error occurs in your binding code,\nthe server will immediately crash. You can force the server to keep\nrunning as if nothing has happened using `crashOnBindError`.\n\n```js\napp.crashOnBindError = false;\n```\n\nPlease note that it is [considered safer to crash](https://www.joyent.com/node-js/production/design/errors)\nwhen an unknown error occurs - it is not recommended to turn this option off.\n\n## Notes\n\n * The NPM package does not include the project sources or certain files from the\n   repository. This is to save space.\n   If you want to save even more space, simply download `serville.js` and put it\n   in your project instead. It's minified!\n\n * Serville doesn't yet have full code-coverage unit testing and there may be some\n   quirks or bugs. If you find anything, please [submit an issue](https://github.com/emctague/serville/issues/new)!\n\n## Contributing\n\nFork and clone this repository to get started, then run `npm i` to install dev\ndependencies.\nThere's no formal contribution procedure (yet), feel free to submit PRs and issues as you see\nfit. Contributions are very much welcomed!\n\nJust note that you can't work directly on the `master` branch, as it is\nprotected. We recommend editing code on your own branch, then merging into\n`develop`. You may only merge with `master` after your PR is approved and\ncontinuous integration checks pass.\n\nThe source code for the library is in `dev/serville.js`.\nModify the testing script in `dev/test.js` to try out your changes and new\nfeatures. You can run these tests with `npm run dev`.\n\nTo build the current version of the server to `serville.js`, simply run `npm run build`.\n","created":"2017-06-03T23:07:20.855Z","modified":"2017-06-07T17:21:21.327Z","lastPublisher":{"name":"fredkschott","email":"FredKSchott@gmail.com"},"owners":[{"name":"fredkschott","email":"fkschott@gmail.com"}],"other":{"_attachments":{},"_id":"pika-serville","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pika-serville-1.4.1.tgz_1496856081247_0.3652996758464724"},"_npmUser":{"name":"fredkschott","email":"FredKSchott@gmail.com"},"_npmVersion":"5.0.0","_rev":"2-a5a3afc1f9c45dec3952702a9990101c","author":{"name":"Fred K. Schott"},"bugs":{"url":"https://github.com/FredKSchott/serville/issues"},"directories":{},"dist-tags":{"latest":"1.4.1"},"dist":{"integrity":"sha512-QCGSzFf6jOoQAhkAylUbKj+Y+uk44+xkoNBCs9BPtlZKH24qeRCVL6ErFPGbHBY5SALXSXae5watMtkwwnzHBA==","shasum":"ee115fe35220eb82f8665e4f5f07e20c1f9a04e7","tarball":"https://registry.npmjs.org/pika-serville/-/pika-serville-1.4.1.tgz"},"maintainers":[{"name":"fredkschott","email":"fkschott@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-07T17:21:21.327Z","created":"2017-06-03T23:07:20.855Z","1.4.0":"2017-06-03T23:07:20.855Z","1.4.1":"2017-06-07T17:21:21.327Z"}}}