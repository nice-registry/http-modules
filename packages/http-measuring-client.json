{"name":"http-measuring-client","version":"0.3.7","description":"like the http module, except with stats","main":"index.js","scripts":{"test":"istanbul cover --print detail _mocha -- -R spec test","coveralls":"cat coverage/lcov.info | coveralls"},"repository":"https://github.com/Floby/node-http-measuring-client","keywords":["http","stats","outbound","measure","logs","monitoring"],"license":"MIT","homepage":"https://github.com/Floby/node-http-measuring-client","devDependencies":{"chai":"^1.10.0","coveralls":"^2.11.2","istanbul":"^0.3.2","mocha":"^2.0.1","nock":"^0.51.0","request":"^2.49.0","sinon":"^1.12.1","stream-blackhole":"^1.0.3"},"dependencies":{"merge-descriptors":"0.0.2"},"gitHead":"a3d8525efdd5a861b9f5e68e3892d8a91660f29c","versions":[{"number":"0.1.0","date":"2014-11-25T15:00:26.235Z"},{"number":"0.1.1","date":"2014-11-25T16:24:44.602Z"},{"number":"0.2.0","date":"2014-11-27T15:47:31.679Z"},{"number":"0.3.0","date":"2014-12-02T14:07:26.756Z"},{"number":"0.3.1","date":"2014-12-02T16:46:24.257Z"},{"number":"0.3.2","date":"2014-12-03T10:13:06.967Z"},{"number":"0.3.3","date":"2014-12-03T10:34:29.596Z"},{"number":"0.3.4","date":"2015-01-20T09:44:22.622Z"},{"number":"0.3.5","date":"2015-01-20T09:50:57.848Z"},{"number":"0.3.6","date":"2015-03-18T15:25:43.931Z"},{"number":"0.3.7","date":"2016-04-13T08:41:02.393Z"}],"readme":"[![Build Status][travis-image]][travis-url] [![Coverage][coveralls-image]][coveralls-url]\n\nnode-http-measuring-client\n==================\n\n> like the http module, except with stats\n\nThis module generates objects usable as a drop-in replacement for\nthe built-in http module. It emits stats about outbound requests\n\nInstallation\n------------\n\n    npm install --save http-measuring-client\n\nUsage\n-----\n\n```javascript\nvar http = require('http-measuring-client').create();\nhttp.get('http://google.com', function (response) {\n  // `response` is your plain old response object\n});\n\nhttp.on('stat', function (parsedUri, stats) {\n  // `parseUri` is parsed with url.parse();\n  stats.totalTime; // -> total time taken for request\n})\n```\n\nSince almost nobody uses `http` directly, this is how you can use it\nin combination with  [`request`](https://www.npmjs.org/package/request).\n\n```javascript\nvar http = require('http-measuring-client').create();\nvar request = require('request').defaults({\n httpModules: { 'http:': http }\n});\n\nrequest('http://google.com', function (err, response) {\n  // everything else is the same\n});\n```\n\nYou can also use it as a replacement for the `https` module\n```javascript\nvar https = require('http-measuring-client').createSecure();\n```\n\nIn fact, you can use whatever implementation of a `http` or `https` module like so\n```javascript\nvar http = require('http-measuring-client').create(MyOwnHttpModule);\n```\n\n\n##### Patch the global http module\n\nIt is possible, though not recommended, to monkey-patch the global\n`http` module in order to have stats for absolutely all outgoing requests\n\n```javascript\nvar mhttp = require('http-measuring-client').create();\nmhttp.mixin(http);\nmhttp.on('stat', onStat);\n\nvar superagent = require('superagent');\n\nsuperagent('http://google.com').get('/search').end();\n```\n\nThe main advantages is to deal with http modules which are not\nextensible.\n\nComprehensive Documentation\n---------------------------\n\n* `.create([httpModule])`  returns a `http` object usable as a drop-in replacement for\nthe built-in module. If called with an argument, then it will use that instead of the\ndefault `http` module\n\n* `.createSecure()` calls the previous function with the default `https` module.\n\n* `Event \"stat\"`: emitted on the http object everytime a request is completed. It is\nemitted with two arguments : `uri` and `stats`. The `stats` object looks\nlike this (all times are milliseconds) :\n\n  * `totalTime` : total time taken for the request\n  * `connectionTime` : time taken until the 'socket' event on the request\n  * `processingTime` : time taken until the 'response' event on the response\n  * `transmittingTime` : time taken from the 'response' event until its 'end' event\n\n\nTODO\n----\n\n* interconnection with logging frameworks like bunyan or winston\n\nTest\n----\n\nYou can run the tests with `npm test`. You will need to know [mocha][mocha-url]\n\nContributing\n------------\n\nAnyone is welcome to submit issues and pull requests\n\n\nLicense\n-------\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2014 Florent Jaby\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n[travis-image]: http://img.shields.io/travis/Floby/node-http-measuring-client/master.svg?style=flat\n[travis-url]: https://travis-ci.org/Floby/node-http-measuring-client\n[coveralls-image]: http://img.shields.io/coveralls/Floby/node-http-measuring-client/master.svg?style=flat\n[coveralls-url]: https://coveralls.io/r/Floby/node-http-measuring-client\n[mocha-url]: https://github.com/visionmedia/mocha\n\n\n","starsCount":1,"created":"2014-11-25T15:00:26.235Z","modified":"2016-04-13T08:41:02.393Z","lastPublisher":{"name":"floby","email":"florent.jaby@gmail.com"},"owners":[{"name":"floby","email":"florent.jaby@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-measuring-client","_nodeVersion":"4.4.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/http-measuring-client-0.3.7.tgz_1460536860198_0.3790734747890383"},"_npmUser":{"name":"floby","email":"florent.jaby@gmail.com"},"_npmVersion":"2.14.20","_rev":"1-88b6c46b09cb7320e71cd00e9706086f","_shasum":"da45f5836da0746f9eeccaf70183a7d286702072","author":{"name":"Florent Jaby","email":"florent.jaby@gmail.com"},"bugs":{"url":"https://github.com/Floby/node-http-measuring-client/issues"},"directories":{},"dist-tags":{"latest":"0.3.7"},"dist":{"shasum":"da45f5836da0746f9eeccaf70183a7d286702072","tarball":"http://registry.npmjs.org/http-measuring-client/-/http-measuring-client-0.3.7.tgz"},"maintainers":[{"name":"floby","email":"florent.jaby@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-04-13T08:41:02.393Z","created":"2014-11-25T15:00:26.235Z","0.1.0":"2014-11-25T15:00:26.235Z","0.1.1":"2014-11-25T16:24:44.602Z","0.2.0":"2014-11-27T15:47:31.679Z","0.3.0":"2014-12-02T14:07:26.756Z","0.3.1":"2014-12-02T16:46:24.257Z","0.3.2":"2014-12-03T10:13:06.967Z","0.3.3":"2014-12-03T10:34:29.596Z","0.3.4":"2015-01-20T09:44:22.622Z","0.3.5":"2015-01-20T09:50:57.848Z","0.3.6":"2015-03-18T15:25:43.931Z","0.3.7":"2016-04-13T08:41:02.393Z"},"users":{"floby":true}}}