{"name":"creosote","version":"1.1.0","description":"A cycle.js driver for a routed HTTP server with middleware","main":"lib/index.js","scripts":{"lint":"eslint src","postlint":"semistandard src/*","babel":"babel src -d lib","watch":"nodemon --ignore lib $(which npm) test","precompile":"npm run lint","compile":"npm run babel","pretest":"npm run compile","test":"tape ./test/*.js | tap-spec","preversion":"npm test","version":"git add -A lib"},"babel":{"presets":["es2015-node4"],"plugins":["transform-object-rest-spread","add-module-exports"]},"repository":"https://github.com/zetlen/creosote","keywords":["creosote","cycle","http","server","express","cyclejs","routing"],"license":"GPL-3.0","homepage":"https://github.com/zetlen/creosote#readme","dependencies":{"body-parser":"^1.14.2","express":"^4.13.3","path-match":"^1.2.3","rx":"^4.0.7"},"devDependencies":{"@cycle/core":"^6.0.0","babel-cli":"^6.3.17","babel-eslint":"^5.0.0-beta6","babel-plugin-add-module-exports":"^0.1.2","babel-plugin-transform-object-rest-spread":"^6.3.13","babel-preset-es2015-node4":"^2.0.2","eslint":"^1.10.3","node-fetch":"^1.3.3","portfinder":"^0.4.0","semistandard":"^7.0.4","tap-spec":"^4.1.1","tape":"^4.4.0"},"gitHead":"6342f606d9cc77fcdb2332d0adcb51b98b5ce91f","versions":[{"number":"1.0.0","date":"2015-12-29T21:50:08.221Z"},{"number":"1.1.0","date":"2016-01-04T13:33:17.137Z"}],"readme":"## creosote is a [Reactive](http://reactivex.org) interface for an [express](http://expressjs.com) server\n\n#### i hope, probably in vain, that this test is good enough documentation for now\n\n```js\n'use strict';\nconst Creosote = require('creosote');\nconst fetch = require('node-fetch');\nconst test = require('tape');\n\ntest('parses JSON from a post body', (t) => {\n  t.plan(1);\n  let creosote = Creosote({ port: process.env.PORT, expect: 'json' });\n  creosote.posts('/repos/:name/:tag')\n  .do(o => o.res.status(200).end())\n  .reduce(\n    (acc, c) => {\n      let name = c.params.name;\n      let tag = c.params.tag;\n      let out = Object.assign({}, acc);\n      out[name] = Object.assign({}, out[name]);\n      out[name][tag] = c.req.body;\n      return out;\n    },\n    {}\n  ).subscribe((statuses) => {\n    t.same(\n      statuses,\n      {\n        sam: {\n          '1.0.0': {\n            buildStatus: 'failed'\n          }\n        },\n        diane: {\n          '1.2.1': {\n            buildStatus: 'succeeded'\n          }\n        }\n      },\n      'json was parsed'\n    );\n  });\n  fetch(`http://localhost:${port}/repos/sam/1.0.0`, {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      buildStatus: 'failed'\n    })\n  })\n  .then(() => fetch(`http://localhost:${port}/repos/diane/1.2.1`, {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      buildStatus: 'succeeded'\n    })\n  }))\n  .then(() => creosote.unmount())\n  .catch(t.fail);\n});\n\ntest('parses form data from a post body', (t) => {\n  t.plan(1);\n  let creosote = Creosote({ port: process.env.PORT, expect: 'urlencoded' });\n  creosote.posts('/repos/:name/:tag')\n  .do(o => o.res.status(200).end())\n  .reduce(\n    (acc, c) => {\n      let name = c.params.name;\n      let tag = c.params.tag;\n      let out = Object.assign({}, acc);\n      out[name] = Object.assign({}, out[name]);\n      out[name][tag] = c.req.body;\n      return out;\n    },\n    {}\n  ).subscribe((statuses) => {\n    t.same(\n      statuses,\n      {\n        sam: {\n          '1.0.0': {\n            buildStatus: 'red',\n            commit: '12345'\n          },\n          '1.2.1': {\n            buildStatus: 'green',\n            commit: '67890'\n          }\n        }\n      },\n      'form data was parsed'\n    );\n  });\n  fetch(`http://localhost:${port}/repos/sam/1.0.0`, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: 'buildStatus=red&commit=12345'\n  })\n  .then(() => fetch(`http://localhost:${port}/repos/sam/1.2.1`, {\n    method: 'post',\n    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n    body: 'buildStatus=green&commit=67890'\n  }))\n  .then(() => creosote.unmount())\n  .catch(t.fail);\n});\n```\n","created":"2015-12-29T21:50:08.221Z","modified":"2016-01-04T13:33:17.137Z","lastPublisher":{"name":"jzetlen","email":"james_zetlen@volusion.com"},"owners":[{"name":"jzetlen","email":"james_zetlen@volusion.com"}],"other":{"_attachments":{},"_from":".","_id":"creosote","_nodeVersion":"4.2.1","_npmUser":{"name":"jzetlen","email":"james_zetlen@volusion.com"},"_npmVersion":"3.5.2","_rev":"1-9775266265179c6eb9104792469ea2fa","_shasum":"ab72f58489aa53149db566bc18221ac06b5ecda3","author":{"name":"zetlen"},"bugs":{"url":"https://github.com/zetlen/creosote/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"ab72f58489aa53149db566bc18221ac06b5ecda3","tarball":"http://registry.npmjs.org/creosote/-/creosote-1.1.0.tgz"},"maintainers":[{"name":"jzetlen","email":"james_zetlen@volusion.com"}],"readmeFilename":"README.md","time":{"modified":"2016-01-04T13:33:17.137Z","created":"2015-12-29T21:50:08.221Z","1.0.0":"2015-12-29T21:50:08.221Z","1.1.0":"2016-01-04T13:33:17.137Z"}}}