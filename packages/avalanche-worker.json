{"name":"avalanche-worker","version":"1.0.2","description":"Avalanche Worker is a library to process jobs. It's best suited for jobs that are not computational heavy such as HTTP requests, sending emails or push notifications.","main":"index.js","license":"MIT","dependencies":{"bluebird":"^3.4.1"},"devDependencies":{"tape":"^4.6.0"},"scripts":{"test":"node test.js"},"keywords":["worker","queue","process","background","asynchronous"],"repository":"https://github.com/cauboy/avalanche-worker","homepage":"https://github.com/cauboy/avalanche-worker","gitHead":"449d9043133fc8763730d7d5d68761f2a459255f","versions":[{"number":"1.0.0","date":"2016-07-24T12:40:54.189Z"},{"number":"1.0.1","date":"2016-07-24T13:22:01.454Z"},{"number":"1.0.2","date":"2016-07-24T14:28:24.770Z"}],"readme":"# avalanche-worker\n\n[![experimental](http://badges.github.io/stability-badges/dist/experimental.svg)](http://github.com/badges/stability-badges)\n\nAvalanche Worker is a library to process jobs. It's best suited for jobs that are not computational heavy such as HTTP requests, sending emails or push notifications.\n\n## Installation\n```bash\nnpm install avalanche-worker --save\n```\n[![NPM](https://nodei.co/npm/avalanche-worker.png)](https://www.npmjs.com/package/avalanche-worker)\n\n\n## Usage\nTwo things must be properly defined to make the Avalanche Worker work:\n\n1. The ```getNewJob``` method in the options must be set\n2. The job it returns needs to have a certain structure\n\n### The job object\nA valid job must have a method called process which returns a promise.\nA falsy literal as the return value of ```getNewJob()``` means that there are currently no more jobs to be done.\n\nThe following would be a valid _job_:\n```javascript\nvar validJob = new Job(id);\nfunction Job(id) {\n  return {\n    id: id,                   // optional\n    process: function() {     // obligatory\n      return new Promise(resolve, reject) {\n        setTimeout(function() {\n          resolve(Math.random());\n        }, 100);\n      }\n    },\n  };\n}\n```\n\n### The getNewJob method\nThe function ```getNewJob``` needs to return a promise that resolves to a valid job.\n\n### Example\n\n```javascript\nvar avalancheWorker = require('avalanche-worker');\n\n// These are all available options. The key 'getNewJobs' is obligatory.\nvar opt = {\n  getNewJob: getNewJob,\n  PENDING_TASKS_LIMIT: 10,\n  FORCE_WORKER_TIME:  1000 * 60 * 5, // time in ms\n  HEARTBEAT_INTERVAL: 1000 * 1, // time in ms\n  onSuccess: function(result, job, doneDate, numPending) {\n    console.log('Job done', job, result);\n  },\n  onError: function(error, job, doneDate, numPending) {\n    console.error('Error while processing a job', job, error);\n  },\n  onNoMoreJobs: function(numPending) {\n    console.log('Currently, there are no more jobs. ' + numPending + 'jobs are pending.')\n  },\n};\n\nvar worker = new avalancheWorker(opt);\n\n// Start the worker\nworker.start()\n\n// Stop retrieving new jobs after 60s\nsetTimeout(function() {\n  worker.stop();\n  console.log('Stopped getting new jobs.' + worker.numPending + ' jobs pending will stille be completed.');\n}, 60 * 1000);\n\n// Definitions\n\nfunction getNewJob() {\n  return jobs.shift();\n}\n\n// Create a fake job queue\nvar jobs = [];\nvar numJobs = 5;\nfor (var i = 0; i < numJobs; i++) {\n  jobs.push(new Job(i));\n}\n\nfunction Job(id) {\n  return {\n    id: id,                   // optional\n    process: function() {     // obligatory\n      return new Promise(resolve, reject) {\n        setTimeout(function() {\n          resolve(Math.random());\n        }, 100);\n      }\n    },\n  };\n}\n```\n\n## License\n\nMIT, see [LICENSE.md](http://github.com/=/avalanche-worker/blob/master/LICENSE.md) for details.\n","created":"2016-07-24T12:40:54.189Z","modified":"2016-07-24T14:28:24.770Z","lastPublisher":{"name":"cauboy","email":"clemens.npm@mcm-init.com"},"owners":[{"name":"cauboy","email":"clemens.npm@mcm-init.com"}],"other":{"_attachments":{},"_from":".","_id":"avalanche-worker","_nodeVersion":"5.4.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/avalanche-worker-1.0.2.tgz_1469370502768_0.31616147491149604"},"_npmUser":{"name":"cauboy","email":"clemens.npm@mcm-init.com"},"_npmVersion":"3.3.12","_rev":"1-e5885bf72442a8eceed1493fb0863e28","_shasum":"e9f5b7b2088a76755107783df5b6eed8dcdf4ba5","author":{"name":"Clemens Bachmair","email":"clemens@mcm-init.com","url":"https://github.com/="},"bugs":{"url":"https://github.com/cauboy/avalanche-worker/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"e9f5b7b2088a76755107783df5b6eed8dcdf4ba5","tarball":"http://registry.npmjs.org/avalanche-worker/-/avalanche-worker-1.0.2.tgz"},"maintainers":[{"name":"cauboy","email":"clemens.npm@mcm-init.com"}],"readmeFilename":"README.md","time":{"modified":"2016-07-24T14:28:24.770Z","created":"2016-07-24T12:40:54.189Z","1.0.0":"2016-07-24T12:40:54.189Z","1.0.1":"2016-07-24T13:22:01.454Z","1.0.2":"2016-07-24T14:28:24.770Z"}}}