{"name":"rx-http-request","version":"1.2.0","description":"The world-famous HTTP client Request now RxJS compliant, wrote in full ES2015 for client and server side.","main":"index.js","scripts":{"test":"make test","pretest":"make pretest","test-on-travis":"make test-on-travis"},"repository":"https://github.com/njl07/rx-http-request","keywords":["Request","RxJS","Rx","ReactiveX","Observable","Observer","HTTP","API","Streams","Async","ES2015","ES6","Browser"],"license":"MIT","homepage":"https://github.com/njl07/rx-http-request#readme","dependencies":{"request":"^2.75.0","rxjs":"^5.0.0-beta.12"},"devDependencies":{"babel-preset-es2015":"^6.16.0","babelify":"^7.3.0","browserify":"^13.1.0","coveralls":"^2.11.14","del":"^2.2.2","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-filter":"^4.0.0","gulp-jshint":"^2.0.1","gulp-jsonminify":"^1.0.0","gulp-load-plugins":"^1.3.0","gulp-size":"^2.1.0","gulp-sourcemaps":"^1.6.0","gulp-uglify":"^2.0.0","istanbul":"^1.1.0-alpha.1","jshint":"^2.9.3","jshint-stylish":"^2.2.1","mocha":"^3.1.0","require-dir":"^0.3.0","uglify-save-license":"^0.4.1","unit.js":"^2.0.0","vinyl-buffer":"^1.0.0","vinyl-source-stream":"^1.1.0"},"engines":{"node":">=4.0.0"},"deprecated":"This package is no longer maintained and was moved to @akanass/rx-http-request.","versions":[{"number":"1.0.0","date":"2016-03-27T20:38:40.336Z"},{"number":"1.1.0","date":"2016-03-28T23:01:26.786Z"},{"number":"1.2.0","date":"2016-09-29T12:09:18.980Z"}],"readme":"# RX-HTTP-Request\n\n<div style=\"float:right;\">\n    <a href=\"https://babeljs.io/docs/learn-es2015/\">\n        <img src=\"http://image.slidesharecdn.com/4-es6metbabel-150513100342-lva1-app6891/95/es6-with-babeljs-1-638.jpg\"\n             align=\"right\" alt=\"ES2015 logo\" width=\"50\" height=\"50\" />\n    </a>\n    <a href=\"https://github.com/Reactive-Extensions/RxJS\">\n        <img src=\"http://reactivex.io/assets/Rx_Logo_S.png\"\n             align=\"right\" alt=\"ReactiveX logo\" width=\"50\" height=\"50\"/>\n    </a>\n</div>\n\n[![NPM](https://nodei.co/npm/rx-http-request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/rx-http-request/)\n\n[![Build Status](https://travis-ci.org/njl07/rx-http-request.svg?branch=master)](https://travis-ci.org/njl07/rx-http-request)\n[![Coverage Status](https://coveralls.io/repos/github/njl07/rx-http-request/badge.svg?branch=master)](https://coveralls.io/github/njl07/rx-http-request?branch=master)\n[![Dependencies](https://david-dm.org/njl07/rx-http-request.svg)](https://david-dm.org/njl07/rx-http-request)\n[![DevDependencies](https://david-dm.org/njl07/rx-http-request/dev-status.svg)](https://david-dm.org/njl07/rx-http-request#info=devDependencies)\n\nThe world-famous HTTP client [Request](https://github.com/request/request) now [RxJS](https://github.com/Reactive-Extensions/RxJS) compliant, wrote in full [ES2015](https://babeljs.io/docs/learn-es2015/) for client and server side.\n\n## Table of contents\n\n* [Super simple to use](#super-simple-to-use)\n* [Browser compatibility](#browser-compatibility)\n* [API in Detail](#api-in-detail)\n    * [.request](#request)\n    * [.defaults(options)](#defaultsoptions)\n    * [.get(uri[,options])](#geturi-options)\n        * [Crawl a webpage](#crawl-a-webpage)\n        * [GET something from a JSON REST API](#get-something-from-a-json-rest-api)\n    * [.post(uri[,options])](#posturi-options)\n        * [POST data to a JSON REST API](#post-data-to-a-json-rest-api)\n        * [POST like HTML forms do](#post-like-html-forms-do)\n    * [.put(uri[,options])](#puturi-options)\n    * [.patch(uri[,options])](#patchuri-options)\n    * [.delete(uri[,options])](#deleteuri-options)\n    * [.head(uri[,options])](#headuri-options)\n* [Contributing](#contributing)\n* [Change History](#change-history)\n* [License](#license)\n\n## Super simple to use\n\n**RX-HTTP-Request** is designed to be the simplest way possible to make http calls.\n\nIt's fully `ES2015` wrotten so you can import it :\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n```\n\nor use `CommonJS`:\n\n```javascript\nconst RxHttpRequest = require('rx-http-request').RxHttpRequest;\n```\n\nNow, it's easy to perform a `HTTP` request:\n\n```javascript\nRxHttpRequest.get('http://www.google.fr').subscribe(\n    (data) => {\n\n        if (data.response.statusCode === 200) {\n            console.log(data.body); // Show the HTML for the Google homepage.\n        }\n    },\n    (err) => console.error(err) // Show error in console\n);\n```\n\n## Browser compatibility\n\n**RX-HTTP-Request** can be used in your favorite browser to have all features in your own front application.\n\nJust import `browser.js` script and enjoy:\n\n```javascript\n<script src=\"node_modules/rx-http-request/browser.js\" type=\"application/javascript\"></script>\n<script type=\"application/javascript\">\n    const RxHttpRequest = rhr.RxHttpRequest;\n    \n    RxHttpRequest.get('http://www.google.fr').subscribe(\n        function(data){\n    \n            if (data.response.statusCode === 200) {\n                console.log(data.body); // Show the HTML for the Google homepage.\n            }\n        },\n        function(err){\n            console.error(err) // Show error in console\n        }\n    );\n</script>\n```\n\n## API in Detail\n\n**RX-HTTP-Request** uses [Request](https://github.com/request/request) **API** to perform calls and returns [RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md).\n\nAll **options** to pass to **API** **methods** can be found [here](https://github.com/request/request#requestoptions-callback).\n\nAll **methods** to execute on **response object** can be found [here](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md#observable-instance-methods).\n\n--------\n\n\n### `.request`\n\nReturns the original [Request](https://github.com/request/request#requestoptions-callback) **API** to perform calls without `RxJS.Observable` response but with a **callback method**.\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.request({uri: 'http://www.google.fr'}, (error, response, body) => {\n\n    if (!error && response.statusCode == 200) {\n        console.log(body); // Show the HTML for the Google homepage.\n    }\n});\n```\n\n[Back to top](#table-of-contents)\n\n### `.defaults(options)`\n\nThis method **returns a wrapper** around the normal **RX-HTTP-Request API**  that defaults to whatever options you pass to it.\n\n**Parameters:**\n> ***options*** *(required): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object with default values foreach next requests*\n\n**Response:**\n> ***new*** *`RxHttpRequest` instance*\n\n**Note:** `RxHttpRequest.defaults()` **does not** modify the global API; instead, it returns a wrapper that has your default settings applied to it.\n\n**Note:** You can call `.defaults()` on the wrapper that is returned from `RxHttpRequest.defaults()` to add/override defaults that were previously defaulted.\n\nFor example:\n \n```javascript\n// requests using baseRequest will set the 'x-token' header\nconst baseRequest = RxHttpRequest.defaults({\n    headers: {'x-token': 'my-token'}\n});\n\n// requests using specialRequest will include the 'x-token' header set in\n// baseRequest and will also include the 'special' header\nconst specialRequest = baseRequest.defaults({\n    headers: {special: 'special value'}\n});\n```\n\n[Back to top](#table-of-contents)\n\n### `.get(uri[, options])`\n\nPerforms a request with `get` http method.\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\n#### Crawl a webpage\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.get('http://www.google.fr').subscribe(\n    (data) => {\n\n        if (data.response.statusCode === 200) {\n            console.log(data.body); // Show the HTML for the Google homepage.\n        }\n    },\n    (err) => console.error(err) // Show error in console\n);\n```\n\n#### GET something from a JSON REST API\n     \n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nconst options = {\n    qs: {\n        access_token: 'xxxxx xxxxx' // -> uri + '?access_token=xxxxx%20xxxxx'\n    },\n    headers: {\n        'User-Agent': 'RX-HTTP-Request'\n    },\n    json: true // Automatically parses the JSON string in the response\n};\n\nRxHttpRequest.get('https://api.github.com/user/repos', options).subscribe(\n    (data) => {\n\n        if (data.response.statusCode === 200) {\n            console.log(data.body); // Show the JSON response object.\n        }\n    },\n    (err) => console.error(err) // Show error in console\n);\n```\n\n[Back to top](#table-of-contents)\n\n### `.post(uri[, options])`\n\nPerforms a request with `post` http method.\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\n#### POST data to a JSON REST API\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nconst options = {\n    body: {\n        some: 'payload'\n    },\n    json: true // Automatically stringifies the body to JSON\n};\n\nRxHttpRequest.post('http://posttestserver.com/posts', options).subscribe(\n    (data) => {\n\n        if (data.response.statusCode === 201) {\n            console.log(data.body); // Show the JSON response object.\n        }\n    },\n    (err) => console.error(err) // Show error in console\n);\n```\n\n#### POST like HTML forms do\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nconst options = {\n    form: {\n        some: 'payload' // Will be urlencoded\n    },\n    headers: {\n        /* 'content-type': 'application/x-www-form-urlencoded' */ // Set automatically\n    }\n};\n\nRxHttpRequest.post('http://posttestserver.com/posts', options).subscribe(\n    (data) => {\n\n        if (data.response.statusCode === 201) {\n            console.log(data.body); // POST succeeded...\n        }\n    },\n    (err) => console.error(err) // Show error in console\n);\n```\n\n[Back to top](#table-of-contents)\n\n### `.put(uri[, options])`\n\nPerforms a request with `put` http method.\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.put(uri).subscribe(...);\n```\n\n[Back to top](#table-of-contents)\n\n### `.patch(uri[, options])`\n\nPerforms a request with `patch` http method.\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.patch(uri).subscribe(...);\n```\n\n[Back to top](#table-of-contents)\n\n### `.delete(uri[, options])`\n\nPerforms a request with `delete` http method.\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.delete(uri).subscribe(...);\n```\n\n[Back to top](#table-of-contents)\n\n### `.head(uri[, options])`\n\n**Parameters:**\n> - ***uri*** *(required): The `uri` where request will be performed*\n> - ***options*** *(optional): Original [Request](https://github.com/request/request#requestoptions-callback) `options` object*\n\n**Response:**\n> *[RxJS.Observable](https://github.com/Reactive-Extensions/RxJS/blob/master/doc/api/core/observable.md) instance*\n\nPerforms a request with `head` http method.\n\n```javascript\nimport {RxHttpRequest} from 'rx-http-request';\n\nRxHttpRequest.head(uri).subscribe(...);\n```\n\n[Back to top](#table-of-contents)\n\n## Contributing\n\nTo set up your development environment:\n\n1. clone the repo to your workspace,\n2. in the shell `cd` to the main folder,\n3. hit `npm install`,\n4. hit `npm install gulp -g` if you haven't installed gulp globally yet, and\n5. run `gulp`. (Or run node ./node_modules/.bin/gulp if you don't want to install gulp globally.)\n\n`gulp` watches all source files and if you save some changes it will lint the code and execute all tests. The test coverage report can be viewed from `./coverage/lcov-report/index.html`.\n\n[Back to top](#table-of-contents)\n\n## Change History\n\n* v1.2.0 (2016-09-29)\n    * New package version for `RxJS` and `Request`\n    * New `ES6` features\n    * [Issue 1](https://github.com/njl07/rx-http-request/issues/1)\n    * [Issue 2](https://github.com/njl07/rx-http-request/issues/2)\n* v1.1.0 (2016-03-28)\n    * Browserify to have browser compatibility\n* v1.0.0 (2016-03-27)\n    * Carefully rewritten from scratch to make RX-HTTP-Request a drop-in replacement for Request\n    \n[Back to top](#table-of-contents)\n\n## License\n\nCopyright (c) 2016 **Nicolas Jessel** Licensed under the [MIT license](https://github.com/njl07/rx-http-request/tree/master/LICENSE.md).\n\n[Back to top](#table-of-contents)\n","starsCount":2,"created":"2016-03-27T20:38:40.336Z","modified":"2017-02-28T15:17:17.043Z","lastPublisher":{"name":"akanass","email":"akanass@icloud.com"},"owners":[{"name":"akanass","email":"akanass@icloud.com"}],"other":{"_attachments":{},"_from":".","_id":"rx-http-request","_nodeVersion":"6.6.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/rx-http-request-1.2.0.tgz_1475150957926_0.997948900796473"},"_npmUser":{"name":"akanass","email":"akanass@icloud.com"},"_npmVersion":"3.10.8","_rev":"2-d86779b927a16390dd1fc7c4ff29d45d","_shasum":"0d0cf40426c164a534b3235d0bdc8f24de6fbcda","author":{"name":"Nicolas Jessel"},"bugs":{"url":"https://github.com/njl07/rx-http-request/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"0d0cf40426c164a534b3235d0bdc8f24de6fbcda","tarball":"http://registry.npmjs.org/rx-http-request/-/rx-http-request-1.2.0.tgz"},"maintainers":[{"name":"akanass","email":"akanass@icloud.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-28T15:17:17.043Z","created":"2016-03-27T20:38:40.336Z","1.0.0":"2016-03-27T20:38:40.336Z","1.1.0":"2016-03-28T23:01:26.786Z","1.2.0":"2016-09-29T12:09:18.980Z"},"users":{"akanass":true,"cantidio":true}}}