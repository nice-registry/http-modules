{"name":"crowbar","version":"0.3.2","description":"HTTP Router for Mojo.js","main":"./lib/index.js","scripts":{"test":"mocha --ui tdd"},"repository":"https://github.com/mojo-js/crowbar.js","keywords":["mojo-plugin","router"],"license":"BSD","testling":{"files":["./node_modules/es5-shim/es5-shim.js","./node_modules/es5-shim/es5-sham.js","test/*-test.js"],"harness":"mocha-tdd","browsers":["ie/7..latest","firefox/3.5","firefox/latest","chrome/latest","safari/latest","opera/latest"]},"dependencies":{"async":"0.7.x","bindable-object":"0.0.x","comerr":"0.0.x","hasher":"1.2.0","lodash":"^2.4.1","mediocre":"0.1.x","mocha":"1.15.1","outcome":"0.0.18","protoclass":"0.0.x","toarray":"0.0.1"},"devDependencies":{"expect.js":"0.3.1","sinon":"1.9.1","istanbul":"0.2.7","testling":"1.6.1","es5-shim":"3.0.2","express":"^4.6.1","request":"^2.37.0"},"gitHead":"8b8b38f04b7ed89eca05227a3d670f85507e35a3","homepage":"https://github.com/mojo-js/crowbar.js","versions":[{"number":"0.0.0","date":"2013-05-22T00:30:15.192Z"},{"number":"0.1.3","date":"2014-07-16T22:11:40.023Z"},{"number":"0.1.5","date":"2014-07-16T22:31:11.683Z"},{"number":"0.1.6","date":"2014-07-16T23:39:10.618Z"},{"number":"0.1.7","date":"2014-07-16T23:44:27.902Z"},{"number":"0.1.8","date":"2014-07-16T23:46:32.338Z"},{"number":"0.1.9","date":"2014-07-17T00:15:07.366Z"},{"number":"0.1.10","date":"2014-07-17T00:32:30.580Z"},{"number":"0.1.11","date":"2014-07-17T00:51:32.853Z"},{"number":"0.1.12","date":"2014-07-17T03:21:34.778Z"},{"number":"0.1.13","date":"2014-07-17T03:24:35.814Z"},{"number":"0.1.14","date":"2014-07-17T04:00:37.195Z"},{"number":"0.1.15","date":"2014-07-17T19:01:32.037Z"},{"number":"0.1.16","date":"2014-08-07T18:33:05.518Z"},{"number":"0.1.18","date":"2014-08-07T22:40:15.347Z"},{"number":"0.1.19","date":"2014-08-08T18:05:13.413Z"},{"number":"0.1.21","date":"2014-08-14T19:46:43.313Z"},{"number":"0.1.22","date":"2014-08-14T19:54:14.247Z"},{"number":"0.1.23","date":"2014-08-14T19:57:45.465Z"},{"number":"0.1.24","date":"2014-08-14T20:19:58.933Z"},{"number":"0.1.25","date":"2014-08-14T20:39:54.963Z"},{"number":"0.1.26","date":"2014-08-14T21:02:40.597Z"},{"number":"0.1.27","date":"2014-08-28T22:22:20.093Z"},{"number":"0.1.28","date":"2014-08-28T23:07:17.570Z"},{"number":"0.1.29","date":"2014-08-28T23:33:59.988Z"},{"number":"0.1.30","date":"2014-08-28T23:38:08.911Z"},{"number":"0.1.31","date":"2014-08-28T23:49:44.580Z"},{"number":"0.1.32","date":"2014-09-26T18:00:47.429Z"},{"number":"0.1.33","date":"2014-09-26T18:01:49.161Z"},{"number":"0.2.0","date":"2014-10-10T05:26:33.960Z"},{"number":"0.2.1","date":"2014-10-14T19:24:38.639Z"},{"number":"0.2.2","date":"2014-10-14T19:44:05.893Z"},{"number":"0.2.3","date":"2014-10-16T21:32:25.275Z"},{"number":"0.3.0","date":"2014-12-01T21:02:28.493Z"},{"number":"0.3.1","date":"2014-12-01T22:12:54.090Z"},{"number":"0.3.2","date":"2014-12-12T01:55:08.647Z"}],"readme":"Crowbar HTTP Router [![Alt ci](https://travis-ci.org/classdojo/crowbar.js.png)](https://travis-ci.org/classdojo/mojo-router)\n\n[![Testling](https://ci.testling.com/classdojo/crowbar.js.png)](https://ci.testling.com/classdojo/crowbar.js)\n\nCrowbar is a flexible routing system inspired by [express](http://expressjs.com/), and [director](https://github.com/flatiron/director). \n\n### Example\n\n```javascript\nvar router = require(\"crowbar\")();\n\nfunction auth (location, next) {\n  // authenticate here\n}\n\nrouter.param(\"classroom\", function (location, next) {\n  // load classroom\n  next(null, classroom);\n});  \n\nrouter.add({\n  enter: auth,\n  \"/classes/:classroom\": {\n    \"/reports\": {\n      enter: function (location, next) {\n        // do stuff with route\n      }\n    }\n  }\n});\n\nrouter.redirect(\"/classes/classid/reports\", function (err, location) {\n  console.log(location.get(\"params.classroom\")); // classroom model\n  console.log(location.get(\"pathname\")); // /classes/classid/reports\n  console.log(location.get(\"url\")); // same as pathname, but also includes query params\n});\n```\n\n#### Entering Routes\n\nCalled when a route is entered.\n\n```javascript\nrouter.add({\n  \"/home\": {\n    enter: function (location, next) {\n      // do stuff\n      next(); // continue\n    }\n  }\n});\n\nrouter.redirect(\"/home\", function (err, location) {\n\n});\n```\n\nYou can also specify multiple enter handlers:\n\n```javascript\nrouter.add({\n  \"/home\": {\n    enter: [auth, function (location, next) {\n      // do stuff\n      next(); // continue\n    }]\n  }\n});\n```\n\n## API\n\n\n#### Exiting Routes\n\nUseful if you want to teardown a route before entering another.\n\n```javascript\nrouter.add({\n  \"/contact\": {\n    exit: function (location, next) {\n      next();\n    },\n    enter: function (location, next) {\n      next();\n    }\n  },\n  \"/home\": {\n    enter: function (location, next) {\n      next(); // continue\n    }\n  }\n});\n\nrouter.redirect(\"/contact\");\nrouter.redirect(\"/home\"); // exit handler called\n```\n\nJust like enter handlers, you can specify multiple exit handlers\n\n#### Route States\n\nStates are properties set by the router which may modify your application state. This is used specifically in mojo.js.\n\n```javascript\nrouter.add({\n  \"/classes/:classroom\": {\n    states: { app: \"classes\" },\n    \"/reports\": {\n      states: { classes: \"reports\" }\n    }\n  }\n});\n\nrouter.bind(\"location.states\", function (states) {\n  // { app: \"classes\", classes: \"reports\" }\n});\n\nrouter.redirect(\"/classes/classid/reports\");\n```\n\n#### Parameters\n\nJust like express.js, you have the ability to create parameter loaders.\n\n```javascript\nrouter.param(\"classroom\", function (location, next) {\n  console.log(\"location.params.classroom\"); // classid\n  next(null, classroomModel);\n});\n\nrouter.add({\n  \"/classes/:classroom\": {}\n});\n\nrouter.redirect(\"/classes/classid\", function (err, location) {\n  console.log(location.get(\"params.classroom\")); // classroomModel\n})\n```\n\n#### Naming Routes\n\n```javascript\nrouter.add({\n  \"/classes/:classroom\": {\n    name: \"classroom\"\n  }\n});\n\nrouter.redirect(\"classroom\", {\n  params: {\n    classroom: \"classid\"\n  }\n}, function (err, location) {\n\n});\n```\n\n### listeners\n\nKubrick comes with an HTTP listener by default, which is loaded automatically in the browser.\n\n#### router.redirect(pathnameOrRouteName[, options], complete)\n\n- `pathnameOrRouteName` - pathname or route name to redirect to\n- `options` - route name options\n  - `query` - route query\n  - `params` - route params\n- `complete` - called when redirected\n\n#### router.add(routes)\n\nadds new routes to the router\n\n#### router.use(plugins...)\n\nadds plugins to the router\n\n#### router.location\n\nThe current location of the router\n\n```javascript\nrouter.bind(\"location\", function () {\n  // called whenever the location changes\n});\n```\n\n#### Routes router.routes\n\nRoutes property\n\n#### routes.find(query)\n\nFinds a route based on the query.\n\n```javascript\nrouter.add({\n  \"/home\": {\n    name: \"homeRoute\"\n  }\n});\n\nconsole.log(router.routes.find({ pathname: \"/home\" })); // /home route\nconsole.log(router.routes.find({ pathname: \"homeRoutek \" })); // /home route\n```\n\n#### location.query\n\nquery parameters on the location. Note that if the query changes, those changes will also be reflected in the HTTP url.\n\n```javascript\nrouter.bind(\"location\", function (err, location) {\n  console.log(location.get(\"query.hello\")); // blah\n  location.set(\"query.hello\", \"world\"); // gets reflected in the HTTP url\n});\n\nrouter.redirect(\"/home?hello=blah\");\n```\n\n#### location.params\n\nsimilar to `location.query`. `location.params` are taken from the route parameters.\n\n#### location.url\n\npathname + query params.\n\n```javascript\nrouter.bind(\"location\", function (err, location) {\n  console.log(location.get(\"url\")); // /home?hello=blah\n});\n\nrouter.redirect(\"/home?hello=blah\");\n```\n\n#### location.pathname\n\njust the pathname of the location\n\n#### location.equals(location)\n\nreturns TRUE of the both locations are the same\n\n#### location.redirect(pathname, options)\n\nredirects the location\n\n## Mojo.js Usage\n\nbasic usage:\n\n```javascript\nvar mojo = require(\"mojojs\"),\napp = new mojo.Application();\napp.use(require(\"crowbar\"));\n\napp.router.add({\n  \"/home\": { }\n});\n```\n","created":"2013-05-22T00:29:59.055Z","modified":"2016-02-01T20:45:38.288Z","lastPublisher":{"name":"architectd","email":"craig.j.condon@gmail.com"},"owners":[{"name":"architectd","email":"craig.j.condon@gmail.com"},{"name":"crcn","email":"craig.j.condon@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"crowbar","_nodeVersion":"0.10.30","_npmUser":{"name":"architectd","email":"craig.j.condon@gmail.com"},"_npmVersion":"2.1.4","_rev":"1-9afc00b742ccbfa743922f3db2117f4f","_shasum":"76facee4c9f826b2f88a2bffc7d32ef4cced427e","author":"","bugs":{"url":"https://github.com/mojo-js/crowbar.js/issues"},"directories":{},"dist-tags":{"latest":"0.3.2"},"dist":{"shasum":"76facee4c9f826b2f88a2bffc7d32ef4cced427e","tarball":"http://registry.npmjs.org/crowbar/-/crowbar-0.3.2.tgz"},"maintainers":[{"name":"architectd","email":"craig.j.condon@gmail.com"},{"name":"crcn","email":"craig.j.condon@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-01T20:45:38.288Z","created":"2013-05-22T00:29:59.055Z","0.0.0":"2013-05-22T00:30:15.192Z","0.1.3":"2014-07-16T22:11:40.023Z","0.1.5":"2014-07-16T22:31:11.683Z","0.1.6":"2014-07-16T23:39:10.618Z","0.1.7":"2014-07-16T23:44:27.902Z","0.1.8":"2014-07-16T23:46:32.338Z","0.1.9":"2014-07-17T00:15:07.366Z","0.1.10":"2014-07-17T00:32:30.580Z","0.1.11":"2014-07-17T00:51:32.853Z","0.1.12":"2014-07-17T03:21:34.778Z","0.1.13":"2014-07-17T03:24:35.814Z","0.1.14":"2014-07-17T04:00:37.195Z","0.1.15":"2014-07-17T19:01:32.037Z","0.1.16":"2014-08-07T18:33:05.518Z","0.1.18":"2014-08-07T22:40:15.347Z","0.1.19":"2014-08-08T18:05:13.413Z","0.1.21":"2014-08-14T19:46:43.313Z","0.1.22":"2014-08-14T19:54:14.247Z","0.1.23":"2014-08-14T19:57:45.465Z","0.1.24":"2014-08-14T20:19:58.933Z","0.1.25":"2014-08-14T20:39:54.963Z","0.1.26":"2014-08-14T21:02:40.597Z","0.1.27":"2014-08-28T22:22:20.093Z","0.1.28":"2014-08-28T23:07:17.570Z","0.1.29":"2014-08-28T23:33:59.988Z","0.1.30":"2014-08-28T23:38:08.911Z","0.1.31":"2014-08-28T23:49:44.580Z","0.1.32":"2014-09-26T18:00:47.429Z","0.1.33":"2014-09-26T18:01:49.161Z","0.2.0":"2014-10-10T05:26:33.960Z","0.2.1":"2014-10-14T19:24:38.639Z","0.2.2":"2014-10-14T19:44:05.893Z","0.2.3":"2014-10-16T21:32:25.275Z","0.3.0":"2014-12-01T21:02:28.493Z","0.3.1":"2014-12-01T22:12:54.090Z","0.3.2":"2014-12-12T01:55:08.647Z"}}}