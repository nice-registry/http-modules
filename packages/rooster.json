{"name":"rooster","version":"1.0.1","description":"A tiny, minimal HTTP router","main":"index.js","scripts":{"test":"make test"},"repository":"https://github.com/FilWisher/rooster","keywords":["router","routes","http","request","response","routing","minimal","small","lightweight"],"license":"MIT","homepage":"https://github.com/FilWisher/rooster","dependencies":{"overalls":"1.0.4"},"devDependencies":{"istanbul":"^0.3.13","shot":"^1.4.2","tap-spec":"^3.0.0","tape":"^4.0.0"},"gitHead":"2c6304c5a6376951eacf07cdd4c9572b21d1cd28","versions":[{"number":"1.0.0","date":"2015-04-04T16:32:53.911Z"},{"number":"1.0.1","date":"2015-04-04T17:03:46.226Z"}],"readme":"# rooster\n\n[![Code Climate](https://codeclimate.com/github/FilWisher/rooster/badges/gpa.svg)](https://codeclimate.com/github/FilWisher/rooster) [![Test Coverage](https://codeclimate.com/github/FilWisher/rooster/badges/coverage.svg)](https://codeclimate.com/github/FilWisher/rooster)\n\nA tiny tool to route HTTP requests with path parameters.\n\n##### use:\n```js\nvar http = require(\"http\");\nvar rooster = require(\"rooster\");\n\n// route parameters are between {curlybraces}\nvar routes = {\n \"GET /\": function (req, res) {\n    res.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    res.write(\"HOME\");\n    res.end();\n },\n \"GET /articles/{article}\": function (req, res) {\n    res.writeHead(200, {\"Content-Type\": \"text/plain\"});\n    res.write(\"you are looking at article: \" + req.params.article);\n    res.end();\n }\n}\n\n// add routes with addRoutes\nrooster.addRoutes(routes);\n\n// override the built-in handler for when route doesn't exist\nrooster.addDefault(function (req, res) {\n  res.writeHead(404);\n  res.write(\"Not found!\");\n  res.end();\n});\n\nvar server = http.createServer(function (req, res) {\n\n  // route the request\n  rooster.route(req, res);\n});\n\nserver.listen(4444);\n\nconsole.log(\"listening on 4444\");\n```\n\n\n## api\n\nrooster exposes 3 very simple methods\n\n### addRoutes(routes)\n\n  addRoutes is a configuration method for adding routes to rooster\n\n ```routes``` - an object of paths and handlers\n e.g:\n ```js\n var routes = {\n   \"GET /\": function (req, res) {...},\n   \"GET /articles/{article}\": function (req, res) {\n     res.writeHead(200);\n     res.write(req.params.article);\n     res.end();\n   }\n }\n\n rooster.addRoutes(routes);\n ```\n\n Add routes can be called multiple times and, each time, the new routes will be ADDED rather than the old ones being overwritten.\n\n Path parameters are defined within {curly-braces} and are available on the request object through ```req.params```.\n\nFor example, if the route ``` \"GET /articles/{article}\" ``` is matched with a GET request to ```\"/articles/13\"```, the request object will look like this:\n```\n{\n  path: \"GET /articles/13\",\n  params: {\n    article: \"13\"\n  },\n  ...\n}\n```\n\n### addDefault(handler)\n\n  addRoutes is a configuration method for adding routes to rooster\n\n```handler(req, res)``` - a cb for when requests are made to undefined paths\n\n  * ```handler(req, res)``` takes 2 arguments:\n\n    * ```req``` - the HTTP request object\n    * ```res``` - the HTTP response object\n\ne.g:\n```\nrooster.addDefault(function (req, res) {\n\n  res.writeHead(404);\n  res.write(\"Not found!\");\n  res.end();\n});\n```\n\n### route(req, res)\n\nroute is the routing method that will match a request against one of the predefined routes\n\n```req``` - the HTTP request object\n\n```res``` - the HTTP request object\n\ne.g:\n\n```\nvar server = http.createServer(function (req, res) {\n\n  // route the request\n  rooster.route(req, res);\n});\n\n```\n\n### note\n\nrooster is build ontop of [overalls](https://github.com/FilWisher/overalls) so check it out for more documentation.\n\n\n## license\n\nMIT\n","created":"2015-04-04T16:32:53.911Z","modified":"2015-04-04T17:03:46.226Z","lastPublisher":{"name":"filwisher","email":"williamfisher@hotmail.co.uk"},"owners":[{"name":"filwisher","email":"williamfisher@hotmail.co.uk"}],"other":{"_attachments":{},"_from":".","_id":"rooster","_npmUser":{"name":"filwisher","email":"williamfisher@hotmail.co.uk"},"_npmVersion":"1.4.28","_rev":"1-73f74ac9ed1bb82f16ebb2f9cf29213a","_shasum":"93171d3c9832b41551db269e11a51943033d166b","author":{"name":"William Fisher"},"bugs":{"url":"https://github.com/FilWisher/rooster/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"93171d3c9832b41551db269e11a51943033d166b","tarball":"http://registry.npmjs.org/rooster/-/rooster-1.0.1.tgz"},"maintainers":[{"name":"filwisher","email":"williamfisher@hotmail.co.uk"}],"readmeFilename":"README.md","time":{"modified":"2015-04-04T17:03:46.226Z","created":"2015-04-04T16:32:53.911Z","1.0.0":"2015-04-04T16:32:53.911Z","1.0.1":"2015-04-04T17:03:46.226Z"}}}