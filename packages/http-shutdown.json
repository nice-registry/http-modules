{"name":"http-shutdown","version":"1.2.0","description":"Gracefully shutdown a running HTTP server.","main":"index.js","scripts":{"test":"mocha","test-travis":"node --harmony node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly -- --reporter dot"},"keywords":["http","https","graceful","force","shutdown"],"repository":"https://github.com/thedillonb/http-shutdown","license":"MIT","devDependencies":{"chai":"^3.4.1","istanbul":"^0.4.1","mocha":"^2.3.4","request":"^2.67.0"},"engines":{"iojs":">= 1.0.0","node":">= 0.12.0"},"gitHead":"d543a1e5f96efeaffb219e55182b491bc0651f56","homepage":"https://github.com/thedillonb/http-shutdown#readme","versions":[{"number":"1.0.0","date":"2015-11-25T06:43:52.583Z"},{"number":"1.0.1","date":"2015-11-25T07:03:07.259Z"},{"number":"1.0.2","date":"2015-11-30T22:53:18.042Z"},{"number":"1.0.3","date":"2015-11-30T23:05:49.651Z"},{"number":"1.1.0","date":"2016-09-19T13:55:29.506Z"},{"number":"1.2.0","date":"2017-02-28T04:52:29.657Z"}],"readme":"# Http-Shutdown [![NPM version][npm-image]][npm-url] [![Build status][travis-image]][travis-url] [![Test coverage][coveralls-image]][coveralls-url]\nShutdown a Nodejs HTTP server gracefully by doing the following:\n\n1. Close the listening socket to prevent new connections\n2. Close all idle keep-alive sockets to prevent new requests during shutdown\n3. Wait for all in-flight requests to finish before closing their sockets.\n4. Profit!\n\nOther solutions might just use `server.close` which only terminates the listening socket and waits for other sockets to close - which is incomplete since keep-alive sockets can still make requests. Or, they may use `ref()/unref()` to simply cause Nodejs to terminate if the sockets are idle - which doesn't help if you have other things to shutdown after the server shutsdown.\n\n`http-shutdown` is a complete solution. It uses idle indicators combined with an active socket list to safely, and gracefully, close all sockets. It does not use `ref()/unref()` but, instead, actively closes connections as they finish meaning that socket 'close' events still work correctly since the sockets are actually closing - you're not just `unref`ing and forgetting about them.\n\n## Installation\n\n```bash\n$ npm install http-shutdown\n```\n\n## Usage\nThere are currently two ways to use this library. The first is explicit wrapping of the `Server` object:\n\n```javascript\n// Create the http server\nvar server = require('http').createServer(function(req, res) {\n  res.end('Good job!');\n});\n\n// Wrap the server object with additional functionality.\n// This should be done immediately after server construction, or before you start listening.\n// Additional functionailiy needs to be added for http server events to properly shutdown.\nserver = require('http-shutdown')(server);\n\n// Listen on a port and start taking requests.\nserver.listen(3000);\n\n// Sometime later... shutdown the server.\nserver.shutdown(function() {\n  console.log('Everything is cleanly shutdown.');\n});\n```\n\nThe second is implicitly adding prototype functionality to the `Server` object:\n\n```javascript\n// .extend adds a .withShutdown prototype method to the Server object\nrequire('http-shutdown').extend();\n\nvar server = require('http').createServer(function(req, res) {\n  res.end('God job!');\n}).withShutdown(); // <-- Easy to chain. Returns the Server object\n\n// Sometime later, shutdown the server.\nserver.shutdown(function() {\n  console.log('Everything is cleanly shutdown.');\n});\n```\n\n[npm-image]: https://img.shields.io/npm/v/http-shutdown.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/http-shutdown\n[travis-image]: https://img.shields.io/travis/thedillonb/http-shutdown.svg?style=flat-square\n[travis-url]: https://travis-ci.org/thedillonb/http-shutdown\n[coveralls-image]: https://img.shields.io/coveralls/thedillonb/http-shutdown.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/thedillonb/http-shutdown\n","starsCount":4,"created":"2015-11-25T06:43:52.583Z","modified":"2017-06-19T07:11:00.698Z","lastPublisher":{"name":"thedillonb","email":"thedillonb@gmail.com"},"owners":[{"name":"thedillonb","email":"thedillonb@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-shutdown","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/http-shutdown-1.2.0.tgz_1488257549106_0.16377176716923714"},"_npmUser":{"name":"thedillonb","email":"thedillonb@gmail.com"},"_npmVersion":"3.10.8","_rev":"4-0f967eeb503e1c9d45259ebba4fe4401","_shasum":"df2d8067a8856e99d11e9dceb21609591e1df514","author":{"name":"Dillon Buchanan"},"bugs":{"url":"https://github.com/thedillonb/http-shutdown/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"df2d8067a8856e99d11e9dceb21609591e1df514","tarball":"https://registry.npmjs.org/http-shutdown/-/http-shutdown-1.2.0.tgz"},"maintainers":[{"name":"thedillonb","email":"thedillonb@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-06-19T07:11:00.698Z","created":"2015-11-25T06:43:52.583Z","1.0.0":"2015-11-25T06:43:52.583Z","1.0.1":"2015-11-25T07:03:07.259Z","1.0.2":"2015-11-30T22:53:18.042Z","1.0.3":"2015-11-30T23:05:49.651Z","1.1.0":"2016-09-19T13:55:29.506Z","1.2.0":"2017-02-28T04:52:29.657Z"},"users":{"thedillonb":true,"alien":true,"idanto":true,"kanreisa":true}}}