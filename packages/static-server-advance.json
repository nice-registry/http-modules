{"name":"static-server-advance","description":"A simple http server to serve static resource files from a local directory. fork from [https://github.com/nbluis/static-server](https://github.com/nbluis/static-server)","version":"2.0.6","keywords":["static","server","local","assets"],"main":"./server.js","repository":"https://github.com/huanghaiyang/static-server-advance","bin":{"static-server-advance":"./bin/static-server.js"},"scripts":{"test":"mocha","test-cov":"istanbul cover node_modules/mocha/bin/_mocha","test-travis":"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly","start":"node server.js"},"engines":{"node":">= 0.10.0"},"dependencies":{"chalk":"^0.5.1","commander":"^2.3.0","file-size":"0.0.5","lodash":"^4.13.1","mime":"^1.2.11"},"license":{"type":"MIT","url":"http://creativecommons.org/licenses/MIT/"},"devDependencies":{"istanbul":"^0.3.0","mocha":"^1.21.4","should":"^4.0.4","supertest":"^0.15.0"},"gitHead":"38ee7ae61b51a2cc0ac96750fab29f48346344bf","homepage":"https://github.com/huanghaiyang/static-server-advance#readme","versions":[{"number":"2.0.3","date":"2016-06-21T06:58:34.302Z"},{"number":"2.0.4","date":"2016-06-21T08:07:50.491Z"},{"number":"2.0.5","date":"2016-06-21T08:09:56.895Z"},{"number":"2.0.6","date":"2016-06-21T08:50:34.280Z"}],"readme":"[![Build Status](https://secure.travis-ci.org/nbluis/static-server.svg?branch=master)](http://travis-ci.org/nbluis/static-server)\r\n\r\n# Node static server\r\nA simple http server to serve static resource files from a local directory.\r\n\r\n## Getting started\r\n* [Install node.js](http://nodejs.org/download/)\r\n* Install npm package globally `npm -g install static-server-advance`\r\n* Go to the folder you want to serve\r\n* Run the server `static-server-advance`\r\n\r\n## Options\r\n\r\n    -h, --help                output usage information\r\n    -V, --version             output the version number\r\n    -p, --port <n>            the port to listen to for incoming HTTP connections\r\n    -i, --index <filename>    the default index file if not specified\r\n    -f, --follow-symlink      follow links, otherwise fail with file not found\r\n    -d, --debug               enable to show error messages\r\n    -e, --error404 <filename> the error 404 file\r\n\r\n## Using as a node module\r\n\r\nThe server may be used as a dependency HTTP server.\r\n\r\n### Example\r\n\r\n```javascript\r\nvar StaticServer = require('static-server-advance');\r\nvar server = new StaticServer({\r\n  rootPath: '.',            // required, the root of the server file tree\r\n  name: 'my-http-server',   // optional, will set \"X-Powered-by\" HTTP header\r\n  port: 1337,               // optional, defaults to a random port\r\n  host: '10.0.0.100',       // optional, defaults to any interface\r\n  followSymlink: true,      // optional, defaults to a 404 error\r\n  index: 'foo.html',        // optional, defaults to 'index.html'\r\n  error404page: '404.html'  // optional, defaults to undefined\r\n});\r\n\r\nserver.start(function () {\r\n  console.log('Server listening to', server.port);\r\n});\r\n\r\nserver.on('request', function (req, res) {\r\n  // req.path is the URL resource (file name) from server.rootPath\r\n  // req.elapsedTime returns a string of the request's elapsed time\r\n});\r\n\r\nserver.on('symbolicLink', function (link, file) {\r\n  // link is the source of the reference\r\n  // file is the link reference\r\n  console.log('File', link, 'is a link to', file);\r\n});\r\n\r\nserver.on('response', function (req, res, err, stat, file) {\r\n  // res.status is the response status sent to the client\r\n  // res.headers are the headers sent\r\n  // err is any error message thrown\r\n  // file the file being served (may be null)\r\n  // stat the stat of the file being served (is null if file is null)\r\n\r\n  // NOTE: the response has already been sent at this point\r\n});\r\n\r\n// mock a request, do what you want.\r\nserver.mock('/get', function(req ,res){\r\n  // 自定义请求地址\r\n  // 自定义操作\r\n  res.end();\r\n})\r\n```\r\n\r\n## FAQ\r\n* _Can I use this project in production environments?_ **Obviously not.**\r\n* _Can this server run php, ruby, python or any other cgi script?_ **No.**\r\n* _Is this server ready to receive thousands of requests?_ **Preferably not.**\r\n\r\n## License\r\n[The MIT License (MIT)](http://creativecommons.org/licenses/MIT/)\r\n","created":"2016-06-21T06:58:34.302Z","modified":"2016-06-21T08:50:34.280Z","lastPublisher":{"name":"huanghaiyang","email":"huanhai24@sina.com"},"owners":[{"name":"huanghaiyang","email":"huanhai24@sina.com"}],"other":{"_attachments":{},"_from":".","_id":"static-server-advance","_nodeVersion":"5.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/static-server-advance-2.0.6.tgz_1466499033783_0.16817343863658607"},"_npmUser":{"name":"huanghaiyang","email":"huanhai24@sina.com"},"_npmVersion":"3.9.3","_rev":"1-d3d5475ddbbc07913d661c3cc4036441","_shasum":"19fc43283de21d9987a4bbe409cb6b083da8e5dd","author":{"name":"huanghaiyang","email":"huanhai24@sina.com"},"bugs":{"url":"https://github.com/huanghaiyang/static-server-advance/issues"},"directories":{},"dist-tags":{"latest":"2.0.6"},"dist":{"shasum":"19fc43283de21d9987a4bbe409cb6b083da8e5dd","tarball":"http://registry.npmjs.org/static-server-advance/-/static-server-advance-2.0.6.tgz"},"maintainers":[{"name":"huanghaiyang","email":"huanhai24@sina.com"}],"readmeFilename":"README.md","time":{"modified":"2016-06-21T08:50:34.280Z","created":"2016-06-21T06:58:34.302Z","2.0.3":"2016-06-21T06:58:34.302Z","2.0.4":"2016-06-21T08:07:50.491Z","2.0.5":"2016-06-21T08:09:56.895Z","2.0.6":"2016-06-21T08:50:34.280Z"}}}