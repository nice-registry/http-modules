{"name":"httptables","version":"0.0.2","description":"HTTP firewall","main":"index.js","repository":"https://github.com/SimpliField/httptables","scripts":{"test":"mocha test","coveralls":"./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha --report lcovonly -- test/*.js -R spec -t 5000 && cat ./coverage/lcov.info | coveralls && rm -rf ./coverage","cover":"./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha --report html -- test/*.js -R spec -t 5000"},"license":"MIT","devDependencies":{"coveralls":"^2.11.2","express":"^4.11.0","istanbul":"^0.3.5","mocha":"^2.1.0"},"dependencies":{"debug":"^2.1.1"},"gitHead":"02ccf8fa29422fd70748c0a9799a5106bee6bd03","homepage":"https://github.com/SimpliField/httptables","versions":[{"number":"0.0.1","date":"2015-01-28T08:41:42.532Z"},{"number":"0.0.2","date":"2015-01-28T08:49:16.235Z"}],"readme":"# HTTPTables\n\n##### Important Note\n\nDo not use yet in production\nThis module won't probably be heavily maintained.\nFork at will or claim ownership ! Okay now you can keep reading :)\n\n##### Module Status\n\n[![NPM version](https://badge.fury.io/js/httptables.png)](https://npmjs.org/package/httptables) [![Build status](https://secure.travis-ci.org/SimpliField/httptables.png)](https://travis-ci.org/SimpliField/httptables) [![Dependency Status](https://david-dm.org/SimpliField/httptables.png)](https://david-dm.org/SimpliField/httptables) [![devDependency Status](https://david-dm.org/SimpliField/httptables/dev-status.png)](https://david-dm.org/SimpliField/httptables#info=devDependencies) [![Coverage Status](https://coveralls.io/repos/SimpliField/httptables/badge.svg)](https://coveralls.io/r/SimpliField/httptables) [![Code Climate](https://codeclimate.com/github/SimpliField/httptables.png)](https://codeclimate.com/github/SimpliField/httptables)\n\n##### Description\n\nKind of a firewall for http requests based on headers.\nIt parses a set of rules for each HTTP header and apply the matching policy\n\n##### Usage\n\n**NB:** This module makes the assumption your request object looks like this\n\n```javascript\nreq = {\n  headers : {\n    'method' : 'PUT',\n    'url' : '/kung/foo/panda/',\n    'any-other-header' : 'of_any_value'\n  }\n}\n```\n\nIf it does not, use the setAccessFieldFunction (look around the end of this readme to see an example)\n\n**Example 1**: a rule could be represented as such\n\n```javascript\nrule = {\n  policy : HTTPTables.policies.DROP,\n  conditions : {\n    'method' : ['POST', 'GET'],\n    'user-agent' : /Android/,\n    'url' : \"/api/v2/users/1\"\n  }\n}\n```\n\nIn this case it will drop **every POST or GET** requests from android\non /api/v2/users/1 url\n\n```javascript\nvar HTTPTables = require('httptables');\nvar httptables = HTTPTables({\n  defaultPolicy : HTTPTables.policies.DROP // Drop all not matching requests\n})\n```\n\n**Example 2:** In Express\n\n```javascript\nvar HTTPTables = require('httptables');\nvar httptables = HTTPTables({\n  defaultPolicy : HTTPTables.policies.DROP // Drop all not matching requests\n})\n// Override the way to access a header field for an express request object\nhttptables.setAccessFieldFunction = function (req, field) {\n  var _field = (field || \"\").toUpperCase();\n  if(field === 'URL') {\n    return req.url;\n  } else if(field === 'METHOD') {\n    return req.method;\n  } else {\n    return req.get(field);\n  }\n}\n//...\n//...\n//...\napp.use(function (req, res, next) {\n  req.mySetOfRules = [\n    {\n      policy : HTTPTables.policies.ACCEPT,\n      conditions : {\n        'method' : ['POST', 'GET'],\n        'user-agent' : /Android/,\n        'url' : \"/api/v2/users/1\"\n      }\n    },\n    {\n      policy : HTTPTables.policies.ACCEPT,\n      conditions : {\n        'method' : ['POST', 'GET', 'PUT', 'DELETE'],\n        'url' : \"/api/v2/organizations/1/billing\"\n      }\n    }\n  ];\n  next();\n})\n\n// Comming Soon, see commented code in source to implement yourself\n// only if you want/need\napp.use(httptables.toExpressMiddleware({rulesPropertyName : 'mySetOfRules'}))\n\n```","created":"2015-01-28T08:41:42.532Z","modified":"2015-01-28T08:49:16.235Z","lastPublisher":{"name":"gplancke","email":"georges.plancke@gmail.com"},"owners":[{"name":"gplancke","email":"georges.plancke@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"httptables","_nodeVersion":"0.10.29","_npmUser":{"name":"gplancke","email":"georges.plancke@gmail.com"},"_npmVersion":"2.1.5","_rev":"1-5eb2889906b245d93620394f3cfaa2b6","_shasum":"e955c62c74a4faf836bb444322b578f1cfb79538","author":{"name":"SimpliField","email":"georges.plancke@simplifield.com"},"bugs":{"url":"https://github.com/SimpliField/httptables/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"e955c62c74a4faf836bb444322b578f1cfb79538","tarball":"http://registry.npmjs.org/httptables/-/httptables-0.0.2.tgz"},"maintainers":[{"name":"gplancke","email":"georges.plancke@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-01-28T08:49:16.235Z","created":"2015-01-28T08:41:42.532Z","0.0.1":"2015-01-28T08:41:42.532Z","0.0.2":"2015-01-28T08:49:16.235Z"}}}