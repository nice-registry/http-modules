{"name":"ts-httpexceptions","version":"2.2.3","description":"Provide exception for HTTP Rest API","main":"lib/index.js","typings":"lib/index.d.ts","scripts":{"prepublish":"npm run tsc:compile","tslint":"tslint ./src/*.ts","test":"NODE_ENV=test mocha","test:cov":"NODE_ENV=test nyc npm test","test:travis":"NODE_ENV=test nyc --reporter=text-lcov npm test | coveralls","tsc":"tsc","tsc:compile":"rm -rf ./lib && tsc --project tsconfig.compile.json","version":"npm run build:doc && git add docs","build:doc":"typedoc --target ES6 --module commonjs --name TsHttpExceptions --exclude '**/*.spec.ts' --out docs/ ./src/**/*.ts"},"repository":"https://github.com/romakita/ts-httpexceptions","keywords":["Exceptions","Throwable","Rest","HTTP","Typescript"],"license":"MIT","homepage":"https://romakita.github.io/ts-httpexceptions","dependencies":{},"devDependencies":{"@types/chai":"^3.4.32","@types/express":"^4.0.32","@types/mocha":"^2.2.31","@types/node":"^6.0.38","chai":"^2.1.0","coveralls":"^2.13.1","mocha":"^3.3.0","nyc":"^10.3.0","source-map-support":"^0.4.15","ts-node":"^3.0.2","tslint":"^5.1.0","typedoc":"0.5.10","typedoc-plugin-external-module-name":"^1.0.9","typescript":"^2.2.2"},"engines":{"node":">=4.0.0"},"nyc":{"extension":[".ts",".tsx"],"exclude":["coverage","docs","**/*.d.ts"],"require":["ts-node/register"],"reporter":["json","html","text-summary"],"all":true},"gitHead":"a38b7fb9dedaad77b732b8df87e54e4f22488c1b","versions":[{"number":"1.3.0","date":"2016-06-17T08:25:43.541Z"},{"number":"1.3.1","date":"2016-06-17T08:27:12.227Z"},{"number":"2.0.0","date":"2016-09-17T13:55:44.170Z"},{"number":"2.0.1","date":"2016-09-17T13:57:45.511Z"},{"number":"2.0.2","date":"2016-09-17T15:46:37.247Z"},{"number":"2.0.3","date":"2016-09-17T15:52:56.338Z"},{"number":"2.0.4","date":"2016-09-17T16:48:26.804Z"},{"number":"2.1.0","date":"2016-11-20T19:00:20.103Z"},{"number":"2.1.1","date":"2016-11-20T19:12:27.902Z"},{"number":"2.1.2","date":"2016-11-27T18:47:11.484Z"},{"number":"2.1.3","date":"2017-01-17T13:21:42.126Z"},{"number":"2.2.0","date":"2017-04-29T11:47:41.029Z"},{"number":"2.2.1","date":"2017-04-29T12:07:25.631Z"},{"number":"2.2.2","date":"2017-05-01T09:27:50.448Z"},{"number":"2.2.3","date":"2017-05-04T05:36:58.338Z"}],"readme":"# ts-httpexceptions \n\n[![Build Status](https://travis-ci.org/Romakita/ts-httpexceptions.svg?branch=master)](https://travis-ci.org/Romakita/ts-httpexceptions)\n[![Coverage Status](https://coveralls.io/repos/github/Romakita/ts-httpexceptions/badge.svg?branch=master)](https://coveralls.io/github/Romakita/ts-httpexceptions?branch=master)\n[![TypeScript](https://badges.frapsoft.com/typescript/love/typescript.svg?v=100)](https://github.com/ellerbrock/typescript-badges/) \n[![Package Quality](http://npm.packagequality.com/shield/ts-express-decorators.png)](http://packagequality.com/#?package=ts-express-decorators)\n[![npm version](https://badge.fury.io/js/ts-express-decorators.svg)](https://badge.fury.io/js/ts-express-decorators)\n[![Dependencies](https://david-dm.org/Romakita/ts-httpexceptions.svg)](https://david-dm.org/Romakita/ts-httpexceptions#info=dependencies)\n[![img](https://david-dm.org/Romakita/ts-httpexceptions/dev-status.svg)](https://david-dm.org/Romakita/ts-httpexceptions/#info=devDependencies)\n[![img](https://david-dm.org/Romakita/ts-httpexceptions/peer-status.svg)](https://david-dm.org/Romakita/ts-httpexceptions/#info=peerDependenciess)\n[![Known Vulnerabilities](https://snyk.io/test/github/Romakita/ts-httpexceptions/badge.svg)](https://snyk.io/test/github/Romakita/ts-httpexceptions)\n\n> Provide Exceptions for REST API based on Express.js. Written in Typescript !\n\nThis module lets you to throw an HTTP Exception quickly. \n\n## Features\n\nSome HTTP Exceptions are already implemented : \n\nRedirections (3xx):\n\n * MovedPermanently,\n * MovedTemporarily,\n * MultipleChoices,\n * NotModified,\n * PermanentRedirect,\n * SeeOther,\n * TemporaryRedirect,\n * TooManyRedirects,\n * UseProxy.\n\nClient errors (4xx) :\n\n * BadMapping,\n * BadRequest,\n * Conflict,\n * ExpectationFailed,\n * Forbidden,\n * Gone,\n * ImATeapot,\n * LengthRequired,\n * MethodNotAllowed,\n * MisdirectedRequest,\n * NotAcceptable,\n * NotFound,\n * PaymentRequired,\n * PreconditionFailed,\n * PreconditionRequired,\n * ProxyAuthentificationRequired,\n * RequestedRandeUnsatifiable,\n * RequestTimeout,\n * RequestURITooLong,\n * TooManyRequests,\n * Unauthorized,\n * UnavailabledForLegalReasons,\n * UnsupportedMediaType,\n * UpgradeRequired.\n \nServer errors (5xx) :\n \n * BadGateway,\n * BandwidthLimitExceeded,\n * GatewayTimeout,\n * InternalServerError,\n * NetworkAuthenticationRequired,\n * NotExtended,\n * NotImplemented,\n * ProxyError,\n * ServiceUnvailable,\n * VariantAlsoNegotiates.\n \nYou can use HTTPExceptions method to throw a custom Exception.\n\n\n## Installation\n\n```bash\n$ npm install -g typescript@2.0.2\n$ npm install ts-httpexceptions\n```\n\n## API\n\n```typescript\n   import {BadRequest, Exception} from 'ts-httpexceptions';\n   let express = require('express');\n   let app = express();\n   \n   app.get('/my/route', (req, res) => {\n   \n        throw new BadRequest('Custom Message'); //Emit\n        // OR\n        // throw new Exception(510, 'Custom Message');\n   \n   });\n   \n   app.get('/my/route/params', (req, res) => {\n      \n      if (req.params.id === undefined){\n        throw new BadRequest();\n      }\n      \n   });\n   \n   \n   //GlobalHandler middleware catch exception and send response to the client\n   app.use((err, request, response) => {\n\n        if(err instanceof Exception){\n            response.status(err.status).send(err.message);\n        }\n\n   });\n```\n\n\n## Test\n\n```bash \n$ npm install -g mocha\n$ npm test\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Romain Lenzotti\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n[travis]: https://travis-ci.org/","created":"2016-06-17T08:25:43.541Z","modified":"2017-05-04T05:36:58.338Z","lastPublisher":{"name":"romakita","email":"rom.lenzotti@gmail.com"},"owners":[{"name":"romakita","email":"rom.lenzotti@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"ts-httpexceptions","_nodeVersion":"4.2.6","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/ts-httpexceptions-2.2.3.tgz_1493876216524_0.09539272985421121"},"_npmUser":{"name":"romakita","email":"rom.lenzotti@gmail.com"},"_npmVersion":"2.14.12","_rev":"9-0071d223148989b0df8e0336718cf778","_shasum":"e9e11a08fcf51f4bc8445dbfac564af3cbb2e1b7","author":{"name":"Romakita"},"bugs":{"url":"https://github.com/romakita/ts-httpexceptions/issues"},"directories":{},"dist-tags":{"latest":"2.2.3"},"dist":{"shasum":"e9e11a08fcf51f4bc8445dbfac564af3cbb2e1b7","tarball":"https://registry.npmjs.org/ts-httpexceptions/-/ts-httpexceptions-2.2.3.tgz"},"maintainers":[{"name":"romakita","email":"rom.lenzotti@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2017-05-04T05:36:58.338Z","created":"2016-06-17T08:25:43.541Z","1.3.0":"2016-06-17T08:25:43.541Z","1.3.1":"2016-06-17T08:27:12.227Z","2.0.0":"2016-09-17T13:55:44.170Z","2.0.1":"2016-09-17T13:57:45.511Z","2.0.2":"2016-09-17T15:46:37.247Z","2.0.3":"2016-09-17T15:52:56.338Z","2.0.4":"2016-09-17T16:48:26.804Z","2.1.0":"2016-11-20T19:00:20.103Z","2.1.1":"2016-11-20T19:12:27.902Z","2.1.2":"2016-11-27T18:47:11.484Z","2.1.3":"2017-01-17T13:21:42.126Z","2.2.0":"2017-04-29T11:47:41.029Z","2.2.1":"2017-04-29T12:07:25.631Z","2.2.2":"2017-05-01T09:27:50.448Z","2.2.3":"2017-05-04T05:36:58.338Z"}}}