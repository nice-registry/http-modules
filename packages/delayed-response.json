{"name":"delayed-response","main":"index.js","version":"2.0.0","description":"Buffer an HTTP response and execute a function before flushing","license":"MIT","repository":"https://github.com/bendrucker/delayed-response","scripts":{"test":"standard && 100 tape test.js"},"keywords":["http","response","server","incoming","message","res"],"devDependencies":{"assert-100":"~1.1.0","nyc":"~7.1.0","shot":"~3.1.1","standard":"^7.0.0","tape":"^4.0.0"},"files":["*.js"],"dependencies":{"to-buffer":"~1.0.1"},"gitHead":"220b77f6b5b8bf9d499a72956d1d7cec69cc4c63","homepage":"https://github.com/bendrucker/delayed-response#readme","versions":[{"number":"1.0.0","date":"2016-08-02T16:18:21.503Z"},{"number":"2.0.0","date":"2016-12-21T21:22:13.148Z"}],"readme":"# delayed-response [![Build Status](https://travis-ci.org/bendrucker/delayed-response.svg?branch=master)](https://travis-ci.org/bendrucker/delayed-response)\n\n> Buffer an HTTP response and execute a function before flushing\n\n\n## Install\n\n```\n$ npm install --save delayed-response\n```\n\n\n## Usage\n\n```js\nvar DelayedResponse = require('delayed-response')\n\nserver.on('request', function (req, res) {\n  var delayed = DelayedResponse(req, res, print)\n  delayed.statusCode = 201\n\n  fs.createReadStream('data.txt')\n    .pipe(delayed)\n    .on('error', function (err) {\n      res.statusCode = 500\n      res.end(err.message)  \n    })\n})\n\nfunction print (delayed, data, callback) {\n  console.log(data.toString())\n  callback()\n}\n```\n\n## API\n\n#### `DelayedResponse(req, res, callback)` -> `object`\n\nReturns a `delayed` instance which proxies an [http.ServerResponse](https://nodejs.org/api/http.html#http_class_http_serverresponse). Delayed responses emit errors returned from the supplied `callback`. Make sure to handle the `'error'` event on your response or use an abstraction like [pump](https://github.com/mafintosh/pump).  \n\n##### req\n\n*Required*  \nType: `object`\n\nAn [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n##### res\n\n*Required*  \nType: `object`\n\nThe original [`http.ServerResponse`](https://nodejs.org/api/http.html#http_class_http_serverresponse).\n\n##### callback\n\n*Required*  \nType: `function`  \nArguments: `req, delayed, buffer, done`\n\nA callback to call with the delayed response, the full data buffer (a `Buffer`), and a `done` function. Passing an error to `done` will cause the delayed request to reset the original response headers and then emit an error. Otherwise, the buffered data is re-sent.\n\n\n## License\n\nMIT Â© [Ben Drucker](http://bendrucker.me)\n","created":"2016-08-02T16:18:21.503Z","modified":"2016-12-21T21:22:13.148Z","lastPublisher":{"name":"bendrucker","email":"bvdrucker@gmail.com"},"owners":[{"name":"bendrucker","email":"bvdrucker@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"delayed-response","_nodeVersion":"6.8.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/delayed-response-2.0.0.tgz_1482355332899_0.3798580563161522"},"_npmUser":{"name":"bendrucker","email":"bvdrucker@gmail.com"},"_npmVersion":"3.10.8","_rev":"2-64d68a746438652b17e7739787b1c8c2","_shasum":"897fa63311a68567da7b1232fbb2986c919f5791","author":{"name":"Ben Drucker","email":"bvdrucker@gmail.com","url":"bendrucker.me"},"bugs":{"url":"https://github.com/bendrucker/delayed-response/issues"},"directories":{},"dist-tags":{"latest":"2.0.0"},"dist":{"shasum":"897fa63311a68567da7b1232fbb2986c919f5791","tarball":"http://registry.npmjs.org/delayed-response/-/delayed-response-2.0.0.tgz"},"maintainers":[{"name":"bendrucker","email":"bvdrucker@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2016-12-21T21:22:13.148Z","created":"2016-08-02T16:18:21.503Z","1.0.0":"2016-08-02T16:18:21.503Z","2.0.0":"2016-12-21T21:22:13.148Z"}}}