{"name":"git-http-backend","version":"1.0.2","description":"serve a git repository over http","main":"index.js","dependencies":{"git-side-band-message":"~0.0.3","inherits":"~2.0.1"},"scripts":{"test":"node test/test.js"},"repository":"https://github.com/substack/git-http-backend","homepage":"https://github.com/substack/git-http-backend","keywords":["git","http","backend","web","server","git-receive-pack","git-update-pack"],"license":"MIT","devDependencies":{"rimraf":"~2.2.6","tape":"~2.3.2"},"gitHead":"253c6c432836bb6d110ad5b4de4d1186791a2251","versions":[{"number":"0.0.0","date":"2014-01-10T03:09:28.488Z"},{"number":"0.1.0","date":"2014-01-15T04:06:19.176Z"},{"number":"0.1.1","date":"2014-01-17T19:49:04.469Z"},{"number":"0.1.2","date":"2014-02-11T16:22:48.968Z"},{"number":"0.1.3","date":"2014-02-11T16:44:59.627Z"},{"number":"0.1.4","date":"2014-02-11T17:04:05.623Z"},{"number":"0.1.5","date":"2014-02-11T22:48:25.585Z"},{"number":"0.1.6","date":"2016-01-06T16:18:07.101Z"},{"number":"1.0.0","date":"2016-01-06T16:18:31.096Z"},{"number":"1.0.1","date":"2016-08-22T18:57:12.380Z"},{"number":"1.0.2","date":"2016-10-12T18:56:22.552Z"}],"readme":"# git-http-backend\n\nserve a git repository over http\n\nBring your own `git-{receive,upload}-pack` implementations or shell out to the\nsystem versions.\n\n[![build status](https://secure.travis-ci.org/substack/git-http-backend.png)](http://travis-ci.org/substack/git-http-backend)\n\n# example\n\n``` js\nvar http = require('http');\nvar spawn = require('child_process').spawn;\nvar path = require('path');\nvar backend = require('git-http-backend');\nvar zlib = require('zlib');\n\nvar server = http.createServer(function (req, res) {\n    var repo = req.url.split('/')[1];\n    var dir = path.join(__dirname, 'repos', repo);\n    var reqStream = req.headers['content-encoding'] == 'gzip' ? req.pipe(zlib.createGunzip()) : req;\n    \n    reqStream.pipe(backend(req.url, function (err, service) {\n        if (err) return res.end(err + '\\n');\n        \n        res.setHeader('content-type', service.type);\n        console.log(service.action, repo, service.fields);\n        \n        var ps = spawn(service.cmd, service.args.concat(dir));\n        ps.stdout.pipe(service.createStream()).pipe(ps.stdin);\n        \n    })).pipe(res);\n});\nserver.listen(5000);\n```\n\nfirst create a repo with `git init` and run the server:\n\n```\n$ mkdir repos\n$ git init repos/falafel.git --bare -q\n$ node server.js &\n[1] 10685\n```\n\nnow you can push at `http://localhost:5000/falafel.git`:\n\n```\n$ cd ~/projects/node-falafel\n$ git push http://localhost:5000/falafel.git master\ninfo falafel.git {}\npush falafel.git { name: 'master',\n  head: 'c1cb53f6dd18cc814f42c4205e8c7efef007c171',\n  last: '008a0000000000000000000000000000000000000000',\n  ref: 'heads',\n  branch: 'master' }\nTo http://localhost:5000/falafel.git\n * [new branch]      master -> master\n```\n\nand you can clone from `http://localhost:5000/falafel.git` too:\n\n```\n$ cd /tmp\n$ git clone http://localhost:5000/falafel.git\nCloning into 'falafel'...\ninfo falafel.git {}\npull falafel.git { head: 'c1cb53f6dd18cc814f42c4205e8c7efef007c171' }\nremote: Counting objects: 247, done.\nremote: Compressing objects: 100% (101/101), done.\nremote: Total 247 (delta 139), reused 247 (delta 139)\nReceiving objects: 100% (247/247), 55.40 KiB, done.\nResolving deltas: 100% (139/139), done.\n```\n\n# methods\n\n``` js\nvar backend = require('git-http-backend')\n```\n\n## var b = backend(req.url, cb)\n\nReturn a duplex stream `b` from a request url `req.url`.\n\nYou should pipe an http request into `b` and pipe `b` into an http response,\nlike this:\n\n```\nhttp.createServer(function (req, res) {\n    var b = backend(req.url);\n    req.pipe(b).pipe(res);\n})\n```\n\nIf you pass in a `cb`, it will register an errback for the `'service'` and\n`'error'` events.\n\n## var sb = b.createBand()\n\nReturn a writable side-band stream `sb`.\n\nFor `info` actions, you can write a response back to the user with this stream.\n\n# events\n\n## b.on('service', function (service) {})\n\nWhen the service header metadata has been parsed, this event fires. `service` is\na stream that outputs the request stream data from the remote git endpoint and\nexpects the `git-{receive,upload}-pack` data as input. You should wire up the \n\n`service` has these handy properties:\n\n* `service.cmd` - the git command name string\n* `service.args` - the arguments array that the git command expects\n* `service.action` - the type of request: `'info'`, `'tag'`, `'push'`, or\n`'pull'`\n* `service.fields` - the field data associated with the request action type\n* `service.type` - the `content-type` you should send for the response. Some git\nclients will not work if the proper `content-type` header hasn't been sent.\n\nFor `'info`' actions, the `service.fields` is an empty object `{}`.\n\nFor `'pull'` actions, the `service.fields` are:\n\n* `service.fields.head` - the commit hash of the requested HEAD\n\nFor `'push'` actions, the `service.fields` are:\n\n* `service.fields.last` - the last commit in the commit payload range\n* `service.fields.head` - the first commit in the commit payload range\n* `service.fields.branch` - the branch name\n\nFor `'tag'` actions, the `service.fields` are:\n\n* `service.fields.last` - the last commit in the commit payload range\n* `service.fields.head` - the first commit in the commit payload range\n* `service.fields.tag` - the tag text\n\n## b.on('error', function (err) {})\n\nHandle errors here.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install git-http-backend\n```\n\n# license\n\nMIT\n","starsCount":1,"created":"2014-01-10T03:09:28.488Z","modified":"2016-10-12T18:56:22.552Z","lastPublisher":{"name":"substack","email":"substack@gmail.com"},"owners":[{"name":"substack","email":"mail@substack.net"}],"other":{"_attachments":{},"_from":".","_id":"git-http-backend","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/git-http-backend-1.0.2.tgz_1476298581726_0.5666493661701679"},"_npmUser":{"name":"substack","email":"substack@gmail.com"},"_npmVersion":"3.10.5","_rev":"1-8cc2c0a505ec4c131c06159a9c646634","_shasum":"dc01e4284209353064453a70f92f89de0834eb10","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/git-http-backend/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"dc01e4284209353064453a70f92f89de0834eb10","tarball":"http://registry.npmjs.org/git-http-backend/-/git-http-backend-1.0.2.tgz"},"maintainers":[{"name":"substack","email":"mail@substack.net"}],"readmeFilename":"readme.markdown","time":{"modified":"2016-10-12T18:56:22.552Z","created":"2014-01-10T03:09:28.488Z","0.0.0":"2014-01-10T03:09:28.488Z","0.1.0":"2014-01-15T04:06:19.176Z","0.1.1":"2014-01-17T19:49:04.469Z","0.1.2":"2014-02-11T16:22:48.968Z","0.1.3":"2014-02-11T16:44:59.627Z","0.1.4":"2014-02-11T17:04:05.623Z","0.1.5":"2014-02-11T22:48:25.585Z","0.1.6":"2016-01-06T16:18:07.101Z","1.0.0":"2016-01-06T16:18:31.096Z","1.0.1":"2016-08-22T18:57:12.380Z","1.0.2":"2016-10-12T18:56:22.552Z"},"users":{"jakub.knejzlik":true}}}