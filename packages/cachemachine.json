{"name":"cachemachine","version":"1.7.0","description":"HTTP Request caching shim","main":"app.js","scripts":{"test":"./node_modules/mocha/bin/mocha"},"repository":"https://github.com/glynnbird/cachemachine","keywords":["cache","redis","request","http"],"license":"Apache-2.0","homepage":"https://github.com/glynnbird/cachemachine#readme","dependencies":{"debug":"^2.3.2","extend":"^3.0.0","redis":"^2.6.3","request":"^2.78.0"},"devDependencies":{"mocha":"^3.1.2","nock":"^9.0.2"},"gitHead":"f7af39354d68aafb1db7699a3cca8a521f5b23be","versions":[{"number":"1.0.0","date":"2016-09-16T15:43:08.599Z"},{"number":"1.1.0","date":"2016-09-17T08:35:07.580Z"},{"number":"1.2.0","date":"2016-09-20T13:22:06.740Z"},{"number":"1.3.0","date":"2016-09-20T13:30:02.167Z"},{"number":"1.4.0","date":"2016-09-21T13:08:05.457Z"},{"number":"1.5.0","date":"2016-09-23T08:18:05.155Z"},{"number":"1.6.0","date":"2016-09-23T10:39:34.514Z"},{"number":"1.7.0","date":"2016-11-18T10:04:51.129Z"}],"readme":"# cachemachine\n\n[![Build Status](https://travis-ci.org/glynnbird/cachemachine.svg?branch=master)](https://travis-ci.org/glynnbird/cachemachine)\n\n*cachemachine* is a simple caching engine for HTTP GET requests that your Node.js applications make. It is designed to be run with Redis \nas the cache data-store but can be used without it in a single-node configuration during development.\n\nNormally, to create an HTTP request, you would use the [request](https://www.npmjs.com/package/request) library like so: \n\n```js\n  var request = require('request');\n  request('http://www.google.com/', function(e, r, b) {\n\n  });\n```\n\nIf you use *cachemachine* instead you can do this:\n\n```js\n// startup cachemachine (default = cache every GET request for 1 hour)\nvar request = require('cachemachine')();\n// make a request\nrequest('http://www.google.com/', function(e, r, b) {\n  // at this point, the request has completed and has been cached too\n  console.log(b);\n});\n```\n\nAnd subsequent requests for the same content will be returned from an in-memory cache without making the same request again.\n\n## Installation\n\nInstall *cachemachine* into your Node.js app with\n\n```sh\nnpm install --save cachemachine\n```\n\n## Setup\n\nSet up *cachemachine* in your own app with the default cache store:\n\n```js\nvar cachemachine = require('cachemachine')();\n```\n\nor with Redis (localhost:6379)\n\n```js\nvar cachemachine = require('cachemachine')({redis: true});\n```\n\nor with a remote Redis server: \n\n```js\nvar opts = {\n  redis: true,\n  hostname: 'myredisserver.com',\n  port: 8000,\n  password: 'mysecretpassword'\n};\nvar request = require('cachemachine')(opts);\n```\n\n## Configure paths to cache\n\nTo specify which paths you'd like to be cached by *cachemachine*, then supply a `paths` parameter containing an array of objects e.g.:\n\n```js\nvar opts = {\n  paths: [\n    { path: '/api/v1/.*', ttl: 3600 }\n  ]\n};\nvar request = require('cachemachine')(opts);\n```\n\nThe objects that you pass in should contain:\n\n- path - a string or RegExp that defines the path you wish to match\n- ttl - the time-to-live of the cache key in seconds\n\n### Make requests\n\nSimply use the request object as normal:\n\n```js\nrequest({method: 'get', url: 'http://mydomain.com/api/v1/books/123', qs: {limit:20}}, function(e, h, b) {\n  console.log(b);\n});\n``` \n\nNote that cachemachine's request object supports being called with a single 'object' or string parameter or using the get/head/post/put/patch/del helper functions. It also supports Node.js streaming.\n\n\n```js\nrequest.get('http://mydomain.com/api/v1/books/123').pipe(process.stdout);\n``` \n\n### How does it work?\n\nWhen an outgoing request is made through *cachemachine* where the path matches one of your regular expressions, the url and query string \nare formed into a hash. This becomes the cache key for the cache data store. If the request can be retrieved from cache, it is \nfetched and the callback called. If the item is not in cache, it is fetched using a real 'request' object, cached and then returned to you.\n\n### Why cachemachine?\n\nIf you're using `request` already and don't want to change your code, then you can use *cachemachine* as a drop-in replacement and decide which\nHTTP calls to cache and for how long. This can take the load of over-burdened API servers and speed up your service.\n\n## Using cachemachine to cache CouchDB/Cloudant databases\n\nCouchDB & Cloudant have an HTTP API and you may wish to cache certain GET requests, such as queries on views. The Cloudant Node.js library allows\na custom request object to be passed in so we can pass in a pre-configured *cachemachine* object e.g.:\n\n```js\nvar paths = [ { path: '^/mydb/_design/.*', ttl: 60*60 }];\nvar cachemachine = require('cachemachine')({paths: paths});\nvar cloudant = require('cloudant')({ url: myurl, plugin: cachemachine });\n```\n\nThen requests that match cachemachine's paths will be cached:\n\n```\nvar db = cloudant.db.use('mydb');\ndb.view('clicks', 'byday', {group: true}, function(err, data) {\n  // data is returned and cached transparently\n  console.log(data);\n});\n```","starsCount":2,"created":"2016-09-16T15:43:08.599Z","modified":"2017-03-10T01:56:04.266Z","lastPublisher":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"owners":[{"name":"glynnbird","email":"glynn.bird@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"cachemachine","_nodeVersion":"5.12.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/cachemachine-1.7.0.tgz_1479463489123_0.6293181371875107"},"_npmUser":{"name":"glynnbird","email":"glynn.bird@gmail.com"},"_npmVersion":"3.8.6","_rev":"3-5d1e744f4d4ddfaf1f89c8669013b0fc","_shasum":"442c8f249cbf657b825329fd569e8e4bb5b011de","author":{"name":"Glynn Bird","email":"glynn.bird@gmail.com"},"bugs":{"url":"https://github.com/glynnbird/cachemachine/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.7.0"},"dist":{"shasum":"442c8f249cbf657b825329fd569e8e4bb5b011de","tarball":"http://registry.npmjs.org/cachemachine/-/cachemachine-1.7.0.tgz"},"maintainers":[{"name":"glynnbird","email":"glynn.bird@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-10T01:56:04.266Z","created":"2016-09-16T15:43:08.599Z","1.0.0":"2016-09-16T15:43:08.599Z","1.1.0":"2016-09-17T08:35:07.580Z","1.2.0":"2016-09-20T13:22:06.740Z","1.3.0":"2016-09-20T13:30:02.167Z","1.4.0":"2016-09-21T13:08:05.457Z","1.5.0":"2016-09-23T08:18:05.155Z","1.6.0":"2016-09-23T10:39:34.514Z","1.7.0":"2016-11-18T10:04:51.129Z"},"users":{"oceanic":true,"vchouhan":true}}}