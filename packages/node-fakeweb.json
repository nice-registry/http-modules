{"name":"node-fakeweb","description":"Fakeweb implementation in node for testing HTTP requests","version":"1.1.0","homepage":"http://www.github.com/ctide/fakeweb","repository":"https://github.com/ctide/fakeweb","publishConfig":{"registry":"https://registry.npmjs.org/"},"main":"./src/fakeweb.js","engines":{"node":">=4.0"},"dependencies":{"request":">= 2.16.6"},"scripts":{"lint":"eslint src/**/*.js","test":"grunt"},"devDependencies":{"chai":"^3.5.0","chai-as-promised":"^6.0.0","eslint":"^3.5.0","eslint-config-airbnb":"^11.1.0","eslint-plugin-import":"^1.14.0","eslint-plugin-jsx-a11y":"^2.2.2","eslint-plugin-react":"^6.2.1","grunt":"^1.0.1","gruntify-eslint":"^3.1.0","grunt-mocha-test":"^0.13.2","mocha":"^3.1.2"},"gitHead":"8aa4c15a2613257c14bca9df1d257c0b21fa93b8","versions":[{"number":"0.0.1","date":"2011-09-13T23:36:46.180Z"},{"number":"0.0.2","date":"2011-09-14T00:10:12.593Z"},{"number":"0.0.3","date":"2011-09-26T01:34:08.726Z"},{"number":"0.0.4","date":"2011-10-18T18:51:35.579Z"},{"number":"0.0.5","date":"2011-11-18T05:37:28.177Z"},{"number":"0.0.6","date":"2012-02-03T01:58:30.889Z"},{"number":"0.0.7","date":"2012-02-07T01:40:21.486Z"},{"number":"0.0.8","date":"2012-12-18T17:30:19.755Z"},{"number":"0.0.9","date":"2013-04-23T17:59:29.492Z"},{"number":"0.0.10","date":"2013-04-23T18:20:09.647Z"},{"number":"0.0.11","date":"2013-09-25T21:16:02.698Z"},{"number":"0.0.12","date":"2013-11-18T17:12:09.626Z"},{"number":"0.0.13","date":"2014-01-11T00:39:47.319Z"},{"number":"0.0.14","date":"2014-04-04T02:48:44.396Z"},{"number":"0.0.15","date":"2014-07-11T22:28:51.068Z"},{"number":"0.0.16","date":"2014-07-25T23:21:59.983Z"},{"number":"0.0.17","date":"2014-08-18T02:44:04.102Z"},{"number":"0.0.18","date":"2014-12-01T17:50:18.904Z"},{"number":"0.0.19","date":"2014-12-08T19:01:01.943Z"},{"number":"0.0.20","date":"2014-12-10T19:25:58.116Z"},{"number":"0.0.21","date":"2015-12-14T19:40:55.907Z"},{"number":"0.2.0","date":"2016-09-07T19:58:07.487Z"},{"number":"1.0.0","date":"2016-10-10T14:48:47.226Z"},{"number":"1.0.1","date":"2016-10-19T23:01:47.207Z"},{"number":"1.0.2","date":"2016-12-14T00:19:26.595Z"},{"number":"1.0.3","date":"2016-12-14T19:26:54.584Z"},{"number":"1.1.0","date":"2017-05-24T18:10:05.489Z"}],"readme":"# Node Fakeweb\n\nA simple tool that will intercept requests made via `http(s).request` and\nmikeal's `request` module and respond with dummy data.\n\nThis version requires node v4 or higher, as it makes use of various bits\nof ES6 functionality. The 0.2.0 version of Fakeweb is compatible with\nv0.x releases of node, and should be used instead for older\napplications.\n\nHeavily inspired by: https://github.com/chrisk/fakeweb\n\n## Installation\n\n```\nnpm install --save-dev node-fakeweb\n```\n\n## Basic Example\n\n```\nconst request = require('request');\nconst fakeweb = require('node-fakeweb');\n\nfakeweb.allowNetConnect = false;\nfakeweb.registerUri({uri: 'http://www.testing.com:80/', body: 'Hello!'});\nrequest.get({uri: 'http://www.testing.com:80/'}, (err, resp, body) => {\n  console.log(body);\n});\n```\n\nThis will output:\n\n```\n[ctide ~]:~$ node test/test.js\nHello!\n```\n\n## Supported Functionality\n\nThis will intercept requests made using `request` or by using\n`http.request` and `https.request`. Other libraries that internally use\nthose should be intercepted as well, but there's no guarantees.\n\n#### Options\n\n```\nconst fakeweb = require('node-fakeweb');\n\nfakeweb.allowNetConnect = false; // default = true\n```\n\nSetting this value to false will cause fakeweb to throw an exception for\nany web request that's made that isn't registered as one to intercept.\nHelpful to ensure that you aren't missing any web requests.\n\n```\nconst fakeweb = require('node-fakeweb');\n\nfakeweb.allowLocalConnect = false; // default = true\n```\n\nBy default, fakeweb will allow requests that go to localhost or\n127.0.0.1 to pass through. Setting this to false will ensure that it\nwill throw exceptions for these as well.\n\n```\nconst fakeweb = require('node-fakeweb');\n\nfakeweb.ignoreUri({uri: 'http://www.google.com/'});\n```\n\nIf you have allowNetConnect set to false, ignoring a URI will cause\nfakeweb to pass through requests to that URI as normla.\n\n#### Registering URIs\n\n`registerUri` accepts an object that contains the various options for\nintercepting a request.\n\nAccepted options:\n\n* `uri`: This can either be an exact URL or a regex that will be compared\nagainst all requests.\n* `method`: Defaults to 'ANY', but otherwise will only match requests\nthat have the method specified when registering the URI.\n* `file`: This will respond with the contents of a file as a string\n* `binaryFile`: This will respond with the contents of a file, but will\nread it in as a binary file instead of a string\n* `statusCode`: Status code can either be a number or an array. If given\nan array, fakeweb will iterate over the status codes for subsequent\nresponses that match the uri.\n* `headers`: An object that contains the various headers that should be\nsent to the client.\n* `contentType`: Sets the content type of the response.\n* `body`: This can accept either a string or a function. If given a\nstring, that will be the body of the response. When given a function,\nthat function will be called and the return value of that function will\nbe set as the body of the response.\n* `exception`: `true` will cause fakeweb to throw an ECONNREFUSED\nexception instead of handling the request. Useful for testing failure\ncases where the endpoint is unreachable.\n\n#### Spies\n\nA spy will be returned from registering a URI that can be used to verify\nthat a request has been made. It will also contain a counter that will\nbe incremented for each request that's been made.\n\n```\nconst fakeweb = require('node-fakeweb');\n\nlet googleSpy = fakeweb.registerUri({uri: 'http://www.google.com/'});\n// googleSpy == { used: false, useCount: 0 }\nrequest.get('http://www.google.com/', function() {});\n\n// googleSpy will now look like:\n// { used: true, useCount: 1 }\n```\n\nIt can also trap the data POSTed to the url, and include that in the spy:\n\n```\nlet fakeweb = require('node-fakeweb');\n\nlet googleSpy = fakeweb.registerUri({uri: 'http://www.google.com/'});\n// googleSpy == { used: false, useCount: 0 }\nrequest.post({uri: 'http://www.google.com/', body: 'hello!'}, function() {});\n\n// googleSpy will now look like:\n// { used: true, useCount: 1, body: 'hello!', form: undefined }\n```\n\n## Contributing\n\nPlease make sure your pull request contains tests and passes linting\n(`npm run lint`, `npm test`).\n","starsCount":1,"created":"2011-09-13T23:36:44.925Z","modified":"2017-05-24T18:10:05.489Z","lastPublisher":{"name":"ctide","email":"christide@christide.com"},"owners":[{"name":"ctide","email":"christide@christide.com"}],"other":{"_attachments":{},"_from":".","_id":"node-fakeweb","_nodeVersion":"6.5.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-fakeweb-1.1.0.tgz_1495649405291_0.2938654595054686"},"_npmUser":{"name":"ctide","email":"christide@christide.com"},"_npmVersion":"3.10.3","_rev":"4-f75263c4a17e0b518dba1c99ec1aa3b2","_shasum":"5bcad8a107aa350433654e262305917b6a7eb5e7","author":{"name":"ctide","email":"christide@christide.com","url":"http://www.github.com/ctide"},"bugs":{"url":"https://github.com/ctide/fakeweb/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"5bcad8a107aa350433654e262305917b6a7eb5e7","tarball":"https://registry.npmjs.org/node-fakeweb/-/node-fakeweb-1.1.0.tgz"},"maintainers":[{"name":"ctide","email":"christide@christide.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-24T18:10:05.489Z","created":"2011-09-13T23:36:44.925Z","0.0.1":"2011-09-13T23:36:46.180Z","0.0.2":"2011-09-14T00:10:12.593Z","0.0.3":"2011-09-26T01:34:08.726Z","0.0.4":"2011-10-18T18:51:35.579Z","0.0.5":"2011-11-18T05:37:28.177Z","0.0.6":"2012-02-03T01:58:30.889Z","0.0.7":"2012-02-07T01:40:21.486Z","0.0.8":"2012-12-18T17:30:19.755Z","0.0.9":"2013-04-23T17:59:29.492Z","0.0.10":"2013-04-23T18:20:09.647Z","0.0.11":"2013-09-25T21:16:02.698Z","0.0.12":"2013-11-18T17:12:09.626Z","0.0.13":"2014-01-11T00:39:47.319Z","0.0.14":"2014-04-04T02:48:44.396Z","0.0.15":"2014-07-11T22:28:51.068Z","0.0.16":"2014-07-25T23:21:59.983Z","0.0.17":"2014-08-18T02:44:04.102Z","0.0.18":"2014-12-01T17:50:18.904Z","0.0.19":"2014-12-08T19:01:01.943Z","0.0.20":"2014-12-10T19:25:58.116Z","0.0.21":"2015-12-14T19:40:55.907Z","0.2.0":"2016-09-07T19:58:07.487Z","1.0.0":"2016-10-10T14:48:47.226Z","1.0.1":"2016-10-19T23:01:47.207Z","1.0.2":"2016-12-14T00:19:26.595Z","1.0.3":"2016-12-14T19:26:54.584Z","1.1.0":"2017-05-24T18:10:05.489Z"},"users":{"dgarlitt":true}}}