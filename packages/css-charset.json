{"name":"css-charset","version":"0.0.4","description":"A TransformStream that detects charset from http client response and CSS body, and converts to utf-8. Besides, replaces @charset [charset-strings] to @charset \"UTF-8\"","main":"index.js","dependencies":{"charset":"^1.0.0","iconv-lite":"^0.4.13"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/IceSofticon30th/css-charset","keywords":["css","charset","stream","streaming","convert","utf-8","utf8"],"license":"MIT","homepage":"https://github.com/IceSofticon30th/css-charset#readme","gitHead":"f75288db3b20bed75374b1796b00918434b128d2","versions":[{"number":"0.0.1","date":"2016-04-04T06:06:24.694Z"},{"number":"0.0.2","date":"2016-04-04T06:07:04.787Z"},{"number":"0.0.3","date":"2016-04-04T06:44:01.598Z"},{"number":"0.0.4","date":"2016-04-04T06:45:12.124Z"}],"readme":"# css-charset\nA TransformStream that detects charset from http client response and CSS body, and converts to utf-8.\n\n# Usage\n```js\nvar CSSCharset = require('css-charset');\nvar converter = CSSCharset(res.headers);\n```\n### CSSCharset(responseHeader)\n* responseHeader {Object | String} Client response. this will be passed to `charset` module.  \n\nReturns a new TransformStream that detects charset from http client response and chunked CSS content, finally converts CSS content to UTF-8 strings Buffers. First, it stores CSS contents Buffers and detects charset strings. Then, it converts CSS contents to UTF-8 strings Buffers. At this time, the charset strings `@charset [charset-strings]` is replaced to `@charset \"UTF-8\"`. Finally, you can get UTF-8 CSS strings Buffers stream. If the charset couldn't be detected, this stream passes CSS contents with no modification.\n\n# Example\n```js\nvar CSSCharset = require('css-charset');\n\nvar converter = CSSCharset(res.headers);\nconverter.on('data', function (data) {\n    console.log('convert', data.toString());\n});\n\nfunction write(str) {\n    console.log('write', str);\n    converter.write(str);\n}\n\nfunction text() {\n    write('@char');\n    write('set');\n    write('\\t  \\t');\n    write(\"'\");\n    write('Shi');\n    write('f');\n    write('t_JI');\n    write(\"S'; body { background: red; }\");\n}\n\ntext();\n```\n<pre>\nwrite set\nwrite \t  \t\nwrite '\nwrite Shi\nwrite f\nwrite t_JI\nwrite S'; body { background: red; }\nconvert @charset \"UTF-8\"\nconvert ; body { background: red; }\n</pre>\n`converter` receives string/Buffer contents, detects charset, converts contents to UTF-8 Buffers, replaces `@charset [charset-strings]` to `@charset \"UTF-8\"`.","created":"2016-04-04T06:06:24.694Z","modified":"2016-04-04T06:45:12.124Z","lastPublisher":{"name":"ino","email":"ice.softicon30th@gmail.com"},"owners":[{"name":"ino","email":"ice.softicon30th@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"css-charset","_nodeVersion":"5.3.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/css-charset-0.0.4.tgz_1459752311572_0.10640081856399775"},"_npmUser":{"name":"ino","email":"ice.softicon30th@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-4c4f70f05aabbbcc1c8715b9795ea279","_shasum":"c78ddb121102c19f61583fe2bff2fa9080af4f69","author":{"name":"Yuto Ino"},"bugs":{"url":"https://github.com/IceSofticon30th/css-charset/issues"},"directories":{},"dist-tags":{"latest":"0.0.4"},"dist":{"shasum":"c78ddb121102c19f61583fe2bff2fa9080af4f69","tarball":"http://registry.npmjs.org/css-charset/-/css-charset-0.0.4.tgz"},"maintainers":[{"name":"ino","email":"ice.softicon30th@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-04-04T06:45:12.124Z","created":"2016-04-04T06:06:24.694Z","0.0.1":"2016-04-04T06:06:24.694Z","0.0.2":"2016-04-04T06:07:04.787Z","0.0.3":"2016-04-04T06:44:01.598Z","0.0.4":"2016-04-04T06:45:12.124Z"}}}