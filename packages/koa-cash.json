{"name":"koa-cash","description":"HTTP response caching for Koa","version":"2.1.1","dependencies":{"bluebird":"^3.1.1","bytes":"^2.1.0","compressible":"^2.0.0","koa-is-json":"^1.0.0","stream-to-array":"^2.0.0"},"devDependencies":{"istanbul":"^0.4.2","koa":"^1.0.0","lru-cache":"^4.0.0","mocha":"^3.1.2","standard":"^8.6.0","supertest":"^1.1.0"},"scripts":{"lint":"standard index.js test/**/*.js","test":"NODE_ENV=test mocha","test-cov":"NODE_ENV=test node ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha","test-travis":"npm run lint && NODE_ENV=test node ./node_modules/.bin/istanbul cover ./node_modules/.bin/_mocha --report lcovonly"},"repository":"https://github.com/koajs/cash","license":"MIT","files":["index.js"],"keywords":["koa","cache","middleware"],"gitHead":"1130c50cbce8e0eb1e98872f47cc92f10976ec39","homepage":"https://github.com/koajs/cash#readme","versions":[{"number":"1.0.0","date":"2014-06-01T12:41:23.566Z"},{"number":"1.0.1","date":"2014-09-15T06:48:23.714Z"},{"number":"1.1.0","date":"2015-10-21T04:54:58.451Z"},{"number":"2.0.0","date":"2016-01-18T08:33:14.298Z"},{"number":"2.1.0","date":"2016-11-08T02:17:40.575Z"},{"number":"2.1.1","date":"2017-02-24T18:45:30.063Z"},{"number":"3.0.0-0","date":"2017-02-24T21:19:38.323Z"},{"number":"3.0.1-0","date":"2017-06-13T15:29:12.479Z"}],"readme":"# Koa Cash\n\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Dependency Status][david-image]][david-url]\n[![License][license-image]][license-url]\n[![Downloads][downloads-image]][downloads-url]\n\nHTTP response caching for Koa.\nCaches the response based on any arbitrary store you'd like.\n\n- Handles JSON and stream bodies\n- Handles gzip compression negotiation\n- Handles 304 responses\n\n```js\napp.use(require('koa-cash')({\n  // some options\n}))\n\napp.use(function* (next) {\n  // this response is already cashed if `true` is returned,\n  // so this middleware will automatically serve this response from cache\n  if (yield this.cashed()) return\n\n  // set the response body here,\n  // and the upstream middleware will automatically cache it\n  this.response.body = 'hello world!'\n})\n```\n\n## API\n\n### app.use(require('koa-cash')(options))\n\nOptions are:\n\n#### `maxAge`\n\nDefault max age for the cache if not set via `yield this.cashed(maxAge)`.\n\n#### `threshold`\n\nMinimum byte size to compress response bodies. Default `1kb`.\n\n#### `hash()`\n\nA hashing function. By default, it's:\n\n```js\nfunction hash(_this) {\n  return this.request.url\n}\n```\n\n`this` is the Koa context and is also passed as an argument.\nBy default, it caches based on the URL.\n\n#### `get()`\n\nGet a value from a store. Must return a \"yieldable\", which returns the cache's value, if any.\n\n```js\nfunction get(key, maxAge) {\n  return <yieldable>\n}\n```\n\nNote that all the `maxAge` stuff must be handled by you.\nThis module makes no opinion about it.\n\n#### `set()`\n\nSet a value to a store. Must return a \"yieldable\".\n\n```js\nfunction set(key, value, maxAge) {\n  return <yieldable>\n}\n```\n\nNote: `maxAge` is set by `.cash={ maxAge }`.\nIf it's not set, then `maxAge` will be `0`, which you should then ignore.\n\n#### Example\n\nUsing a library like [lru-cache](https://github.com/isaacs/node-lru-cache),\nthough this would not quite work since it doesn't allow per-key expiration times.\n\n```js\nvar cache = require('lru-cache')({\n  maxAge: 30000 // global max age\n})\n\napp.use(require('koa-cash')({\n  get (key, maxAge) {\n    return cache.get(key)\n  },\n  set (key, value) {\n    cache.set(key, value)\n  }\n}))\n```\n\n### var cached = yield this.cashed([maxAge])\n\nThis is how you enable a route to be cached.\nIf you don't call `yield this.cashed()`,\nthen this route will not be cached nor will it attempt to serve the request from the cache.\n\n`maxAge` is the max age passed to `get()`.\n\nIf `cached` is `true`,\nthen the current request has been served from cache and __you should early `return`__.\nOtherwise, continue setting `this.response.body=` and this will cache the response.\n\n## Notes\n\n- Only `GET` and `HEAD` requests are cached.\n- Only `200` responses are cached.\n  Don't set `304` status codes on these routes - this middleware will handle it for you\n- The underlying store should be able to handle `Date` objects as well as `Buffer` objects.\n  Otherwise, you may have to serialize/deserialize yourself.\n\n[npm-image]: https://img.shields.io/npm/v/koa-cash.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/koa-cash\n[github-tag]: http://img.shields.io/github/tag/koajs/cash.svg?style=flat-square\n[github-url]: https://github.com/koajs/cash/tags\n[travis-image]: https://img.shields.io/travis/koajs/cash.svg?style=flat-square\n[travis-url]: https://travis-ci.org/koajs/cash\n[coveralls-image]: https://img.shields.io/coveralls/koajs/cash.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/koajs/cash?branch=master\n[david-image]: http://img.shields.io/david/koajs/cash.svg?style=flat-square\n[david-url]: https://david-dm.org/koajs/cash\n[license-image]: http://img.shields.io/npm/l/koa-cash.svg?style=flat-square\n[license-url]: LICENSE\n[downloads-image]: http://img.shields.io/npm/dm/koa-cash.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/koa-cash\n","starsCount":1,"created":"2014-06-01T12:41:23.566Z","modified":"2017-06-13T15:29:12.479Z","lastPublisher":{"name":"lbeschastny","email":"lbeschastny@iknow.travel"},"owners":[{"email":"lbeschastny@iknow.travel","name":"lbeschastny"},{"email":"haoxins@outlook.com","name":"coderhaoxin"},{"email":"jonathanrichardong@gmail.com","name":"jongleberry"},{"email":"aaron.heckmann+github@gmail.com","name":"aheckmann"}],"other":{"_attachments":{},"_from":".","_id":"koa-cash","_nodeVersion":"4.4.4","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/koa-cash-2.1.1.tgz_1487961929458_0.8208046313375235"},"_npmUser":{"name":"lbeschastny","email":"lbeschastny@iknow.travel"},"_npmVersion":"3.9.0","_rev":"7-bf9a267eb250548250bceb90bcd35590","_shasum":"d476ca398134e5ba5b372f7404e879c4465590f1","author":{"name":"Jonathan Ong","email":"me@jongleberry.com","url":"http://jongleberry.com"},"bugs":{"url":"https://github.com/koajs/cash/issues"},"directories":{},"dist-tags":{"latest":"2.1.1","next":"3.0.1-0"},"dist":{"shasum":"d476ca398134e5ba5b372f7404e879c4465590f1","tarball":"https://registry.npmjs.org/koa-cash/-/koa-cash-2.1.1.tgz"},"maintainers":[{"email":"lbeschastny@iknow.travel","name":"lbeschastny"},{"email":"haoxins@outlook.com","name":"coderhaoxin"},{"email":"jonathanrichardong@gmail.com","name":"jongleberry"},{"email":"aaron.heckmann+github@gmail.com","name":"aheckmann"}],"readmeFilename":"README.md","time":{"modified":"2017-06-13T15:29:12.479Z","created":"2014-06-01T12:41:23.566Z","1.0.0":"2014-06-01T12:41:23.566Z","1.0.1":"2014-09-15T06:48:23.714Z","1.1.0":"2015-10-21T04:54:58.451Z","2.0.0":"2016-01-18T08:33:14.298Z","2.1.0":"2016-11-08T02:17:40.575Z","2.1.1":"2017-02-24T18:45:30.063Z","3.0.0-0":"2017-02-24T21:19:38.323Z","3.0.1-0":"2017-06-13T15:29:12.479Z"},"users":{"adamlu":true}}}