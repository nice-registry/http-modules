{"name":"pull-http","version":"1.0.2","description":"Http pull-stream functions","main":"index.js","scripts":{"deps":"dependency-check . && dependency-check . --extra --no-dev","test":"standard && npm run deps && NODE_ENV=test node test","test:cov":"standard && npm run deps && NODE_ENV=test istanbul cover test.js"},"repository":"https://github.com/yoshuawuyts/pull-http","keywords":["http","pull-stream","stream","node","vanilla","http-framework","minimal","custom"],"license":"MIT","dependencies":{"body":"^5.1.0","pumpify":"^1.3.4","send-data":"^8.0.0","size-stream":"^1.0.1"},"devDependencies":{"dependency-check":"^2.5.1","istanbul":"^0.4.2","standard":"^6.0.7","tape":"^4.5.0"},"gitHead":"fb2695dc194a6b35c363b93ce2b5d5b80d8b75a4","homepage":"https://github.com/yoshuawuyts/pull-http#readme","versions":[{"number":"1.0.0","date":"2016-03-07T01:52:33.690Z"},{"number":"1.0.1","date":"2016-03-07T04:56:22.222Z"},{"number":"1.0.2","date":"2016-03-23T12:36:10.762Z"}],"readme":"# pull-http [![stability][0]][1]\n[![npm version][2]][3] [![build status][4]][5] [![test coverage][6]][7]\n[![downloads][8]][9] [![js-standard-style][10]][11]\n\nHttp pull-stream functions. Useful for composing middleware in high throughput\nservers.\n\n## Usage\n```js\nconst serverRouter = require('server-router')\nconst summary = require('server-summary')\nconst browserify = require('browserify')\nconst pullHttp = require('./pull-http')\nconst logHttp = require('http-ndjson')\nconst pull = require('pull-stream')\nconst bankai = require('bankai')\nconst bole = require('bole')\nconst http = require('http')\nconst path = require('path')\n\nconst clientp = path.join(__dirname, 'client-main.js')\nconst log = bole('main')\n\ncreateServer({ port: 1337, logLevel: 'debug' })\n\nfunction createServer (argv) {\n  bole.output({ level: argv.logLevel, stream: process.stdout })\n  const router = createRouter()\n  const server = http.createServer(function (req, res) {\n    const setSize = logHttp(req, res, log.debug)\n    const source = pullHttp.createSource(req, res)\n    const through = router(req, res, setSize)\n    const sink = pullHttp.createSink(req, res, setSize)\n    pull(source, through, sink)\n  })\n  server.listen(argv.port, summary(server))\n}\n\nfunction createRouter () {\n  const router = serverRouter('/404')\n  router.on('/', pullHttp.intercept(bankai.html()))\n  router.on('/bundle.css', pullHttp.intercept(bankai.css()))\n  router.on('/bundle.js', pullHttp.intercept(bankai.js(browserify, clientp)))\n  return router\n}\n```\n\n## API\n### pullHttp.createSource(req, res)\nCreate a new source stream from an HTTP request. Attempts to parse JSON if\ncontent type is `application/json`.\n\n### pullHttp.createSink(req, res)\nCreates a new sink stream. Sends errors if an error is detected. Sends JSON if\nany data is passed. If no data is passed, it acts as a noop sink, expecting an\nearlier stream to handle `res.end()`.\n\n### pullHttp.intercept(httpFn) -> routerFn(req, res, params, setSize)\nWrap a Node stream behind a router to send data, and handle its own `res.end()`\ncall. [more docs tbi]\n\n## Installation\n```sh\n$ npm install pull-http\n```\n\n## See Also\n- [dominictarr/pull-stream](https://github.com/dominictarr/pull-stream)\n- [raynos/error](https://github.com/Raynos/error)\n- [node/http](https://nodejs.org/api/http.html)\n\n## License\n[MIT](https://tldrlegal.com/license/mit-license)\n\n[0]: https://img.shields.io/badge/stability-experimental-orange.svg?style=flat-square\n[1]: https://nodejs.org/api/documentation.html#documentation_stability_index\n[2]: https://img.shields.io/npm/v/pull-http.svg?style=flat-square\n[3]: https://npmjs.org/package/pull-http\n[4]: https://img.shields.io/travis/yoshuawuyts/pull-http/master.svg?style=flat-square\n[5]: https://travis-ci.org/yoshuawuyts/pull-http\n[6]: https://img.shields.io/codecov/c/github/yoshuawuyts/pull-http/master.svg?style=flat-square\n[7]: https://codecov.io/github/yoshuawuyts/pull-http\n[8]: http://img.shields.io/npm/dm/pull-http.svg?style=flat-square\n[9]: https://npmjs.org/package/pull-http\n[10]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[11]: https://github.com/feross/standard\n","created":"2016-03-07T01:52:33.690Z","modified":"2016-03-23T12:36:10.762Z","lastPublisher":{"name":"yoshuawuyts","email":"i@yoshuawuyts.com"},"owners":[{"name":"yoshuawuyts","email":"i@yoshuawuyts.com"}],"other":{"_attachments":{},"_from":".","_id":"pull-http","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-13-west.internal.npmjs.com","tmp":"tmp/pull-http-1.0.2.tgz_1458736570269_0.6709582479670644"},"_npmUser":{"name":"yoshuawuyts","email":"i@yoshuawuyts.com"},"_npmVersion":"2.14.22","_rev":"1-0d4f306585fc11c292803efc0963ded6","_shasum":"4df6821738e4e6c196c2b966a2b9f166b5735f2a","bugs":{"url":"https://github.com/yoshuawuyts/pull-http/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"4df6821738e4e6c196c2b966a2b9f166b5735f2a","tarball":"http://registry.npmjs.org/pull-http/-/pull-http-1.0.2.tgz"},"maintainers":[{"name":"yoshuawuyts","email":"i@yoshuawuyts.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-23T12:36:10.762Z","created":"2016-03-07T01:52:33.690Z","1.0.0":"2016-03-07T01:52:33.690Z","1.0.1":"2016-03-07T04:56:22.222Z","1.0.2":"2016-03-23T12:36:10.762Z"}}}