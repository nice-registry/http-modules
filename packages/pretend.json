{"name":"pretend","version":"0.6.0","description":"A decorator based http webservice client written in typescript","main":"dist/src/index.js","files":["dist","index.d.ts","src"],"scripts":{"linter":"tslint --project ./tsconfig.json --type-check","clean":"rimraf dist","prebuild":"npm run clean","build":"tsc --sourceMap","pretest":"npm run clean && tsc --inlineSourceMap","test":"nyc ava","coverage":"nyc report --reporter=lcov && cat ./coverage/lcov.info | ./node_modules/.bin/coveralls","watch:build":"tsc --watch --sourceMap","watch:test":"npm test -- --watch","prerelease":"git checkout master && git pull origin master && npm test && npm run build","release":"standard-version","postrelease":"git push --follow-tags origin master && npm publish"},"repository":"https://github.com/knisterpeter/pretend","license":"MIT","devDependencies":{"@knisterpeter/standard-tslint":"^1.3.0","@types/node":"^7.0.8","ava":"^0.18.2","coveralls":"^2.12.0","cz-conventional-changelog":"^2.0.0","nock":"^9.0.9","nyc":"^10.1.2","rimraf":"^2.6.1","source-map-support":"~0.4.10","standard-version":"^4.0.0","tslint":"^4.5.1","typescript":"^2.2.1"},"dependencies":{"isomorphic-fetch":"^2.2.1"},"config":{"commitizen":{"path":"./node_modules/cz-conventional-changelog"}},"ava":{"files":["dist/test/**/*-test.js"],"source":["dist/src/**/*.js"],"require":["source-map-support/register"]},"nyc":{"exclude":["node_modules","coverage","dist/test"]},"gitHead":"5ac28f4958819b4e27d5004e38837bb9a27a7f20","homepage":"https://github.com/knisterpeter/pretend#readme","versions":[{"number":"0.0.1","date":"2016-03-13T11:30:02.281Z"},{"number":"0.0.2","date":"2016-03-13T11:38:13.621Z"},{"number":"0.0.3","date":"2016-03-13T11:59:54.236Z"},{"number":"0.1.0","date":"2016-03-19T13:07:12.753Z"},{"number":"0.2.0","date":"2016-03-19T14:08:32.051Z"},{"number":"0.2.1","date":"2016-03-19T15:33:46.190Z"},{"number":"0.2.2","date":"2016-03-19T15:39:43.896Z"},{"number":"0.2.3","date":"2016-11-08T18:30:33.718Z"},{"number":"0.3.0","date":"2016-11-08T21:40:40.532Z"},{"number":"0.4.0","date":"2016-11-14T19:56:09.586Z"},{"number":"0.5.0","date":"2016-11-16T21:14:31.190Z"},{"number":"0.5.1","date":"2017-03-22T06:02:58.503Z"},{"number":"0.6.0","date":"2017-03-23T07:59:35.857Z"}],"readme":"# pretend\n\n[![GitHub license](https://img.shields.io/github/license/KnisterPeter/pretend.svg)](https://github.com/KnisterPeter/pretend)\n[![Travis](https://img.shields.io/travis/KnisterPeter/pretend.svg)](https://travis-ci.org/KnisterPeter/pretend)\n[![Coveralls branch](https://img.shields.io/coveralls/KnisterPeter/pretend/master.svg)](https://coveralls.io/github/KnisterPeter/pretend)\n[![David](https://img.shields.io/david/KnisterPeter/pretend.svg)](https://david-dm.org/KnisterPeter/pretend)\n[![David](https://img.shields.io/david/dev/KnisterPeter/pretend.svg)](https://david-dm.org/KnisterPeter/pretend#info=devDependencies&view=table)\n[![npm](https://img.shields.io/npm/v/pretend.svg)](https://www.npmjs.com/package/pretend)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![Standard Version](https://img.shields.io/badge/release-standard%20version-brightgreen.svg)](https://github.com/conventional-changelog/standard-version)\n\nA decorator based http webservice client build with typescript (inspired bei [feign](https://github.com/OpenFeign/feign)).\n\n## Features\n\n* Handle REST based webservices\n* Configure a decoder (defaults to JSON)\n* Generic request/response interceptor chain\n* Basic authentication\n* Request parameters (currently on GET requests)\n* Custom headers per method\n\n## Usage\n\n### Installation\n\nInstall as npm package:\n\n```sh\nnpm install pretend --save\n```\n\n### API\n\n```js\nclass Test {\n\n  @Headers('Accept: application/json')\n  @Get('/path/{id}', true)\n  public async get(id: string, parameters: any) {}\n\n  @Post('/path')\n  public async post(body: any) {}\n\n  @Put('/path')\n  public async put() {}\n\n  @Delete('/path/:id')\n  public async delete(id: string) {}\n\n}\n\nasync function call() {\n  const client = Pretend\n                  .builder()\n                  .target(Test, 'http://host:port/');\n  const result = await client.get('some-id', {'name': 'value'});\n}\n\n// Executes a GET request to 'http://host:port/path/some-id?name=value'\ncall();\n\n```\n\nDecoders, basicAuthentication and requestInterceptors are all special forms\nof the more generic interceptors which could be chained per request/response.\n\n```js\n  // Configure a text based decoder\n  const client = Pretend\n                  .builder()\n                  .decoder(Pretend.TextDecoder)\n                  .target(Test, 'http://host:port/');\n```\n\n```js\n  // Configure basic authentication\n  const client = Pretend\n                  .builder()\n                  .basicAuthentication('user', 'pass')\n                  .target(Test, 'http://host:port/');\n```\n\n\n```js\n  // Configure a request interceptor\n  const client = Pretend\n                  .builder()\n                  .requestInterceptor((request) => {\n                    request.options.headers['X-Custom-Header'] = 'value';\n                    return request;\n                  })\n                  .target(Test, 'http://host:port/');\n```\n\n#### Interceptors\n\nMultiple interceptors could be added to each builder. The order of interceptor\ncalls will result in a chain of calls like illistrated below:\n\n```js\n  // Configure a request interceptor\n  const client = Pretend\n                  .builder()\n                  .interceptor(async (chain, request) => {\n                    console.log('interceptor 1: request');\n                    const response = await chain(request);\n                    console.log('interceptor 1: response');\n                    return response;\n                  })\n                  .interceptor(async (chain, request) => {\n                    console.log('interceptor 2: request');\n                    const response = await chain(request);\n                    console.log('interceptor 2: response');\n                    return response;\n                  })\n                  .target(Test, 'http://host:port/');\n```\n\n```text\n             +---------------+    +---------------+\nRequest ---> |               | -> |               |\n             | Interceptor 1 |    | Interceptor 2 | -> HTTP REST call\nResponse <-- |               | <- |               |\n             +---------------+    +---------------+\n```\n\nThis leads to the following console output:\n\n```text\ninterceptor 1: request\ninterceptor 2: request\ninterceptor 2: response\ninterceptor 1: response\n```\n\n## Future ideas / Roadmap\n\n* Named parameters\n","created":"2016-03-13T11:30:02.281Z","modified":"2017-03-23T07:59:35.857Z","lastPublisher":{"name":"knisterpeter","email":"knister.peter@shadowrun-clan.de"},"owners":[{"name":"knisterpeter","email":"knister.peter@shadowrun-clan.de"}],"other":{"_attachments":{},"_from":".","_id":"pretend","_nodeVersion":"6.9.2","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/pretend-0.6.0.tgz_1490255975270_0.5149751941207796"},"_npmUser":{"name":"knisterpeter","email":"knister.peter@shadowrun-clan.de"},"_npmVersion":"3.10.9","_rev":"9-284d9a3352a6bc3003bfa04d2ad4e37d","_shasum":"9db7f9c98873e2f992cfec54edda36d310bfc63f","author":{"name":"Markus Wolf","email":"knister.peter@shadowrun-clan.de"},"bugs":{"url":"https://github.com/knisterpeter/pretend/issues"},"directories":{},"dist-tags":{"latest":"0.6.0"},"dist":{"shasum":"9db7f9c98873e2f992cfec54edda36d310bfc63f","tarball":"https://registry.npmjs.org/pretend/-/pretend-0.6.0.tgz"},"maintainers":[{"name":"knisterpeter","email":"knister.peter@shadowrun-clan.de"}],"readmeFilename":"README.md","time":{"modified":"2017-03-23T07:59:35.857Z","created":"2016-03-13T11:30:02.281Z","0.0.1":"2016-03-13T11:30:02.281Z","0.0.2":"2016-03-13T11:38:13.621Z","0.0.3":"2016-03-13T11:59:54.236Z","0.1.0":"2016-03-19T13:07:12.753Z","0.2.0":"2016-03-19T14:08:32.051Z","0.2.1":"2016-03-19T15:33:46.190Z","0.2.2":"2016-03-19T15:39:43.896Z","0.2.3":"2016-11-08T18:30:33.718Z","0.3.0":"2016-11-08T21:40:40.532Z","0.4.0":"2016-11-14T19:56:09.586Z","0.5.0":"2016-11-16T21:14:31.190Z","0.5.1":"2017-03-22T06:02:58.503Z","0.6.0":"2017-03-23T07:59:35.857Z"}}}