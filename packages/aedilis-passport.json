{"name":"aedilis-passport","version":"1.0.5","description":"Aedilis authentication strategy based on the HTTP Bearer authentication strategy for Passport.","keywords":["passport","auth","authn","authentication","authz","authorization","http","aedilis","bearer","token","oauth"],"repository":"https://github.com/bigdata-company/aedilis-passport","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib","dependencies":{"restler":"^3.2.2","passport-http-bearer":"1.0.1"},"devDependencies":{"mocha":"1.x.x","chai":"1.x.x","chai-passport-strategy":"0.1.x"},"engines":{"node":">= 0.4.0"},"gitHead":"46e4d7a428a3396436725a451b8299707854851e","homepage":"https://github.com/bigdata-company/aedilis-passport","scripts":{},"versions":[{"number":"1.0.1","date":"2015-02-02T10:06:43.365Z"},{"number":"1.0.2","date":"2015-02-02T14:14:50.205Z"},{"number":"1.0.3","date":"2015-02-05T14:57:37.861Z"},{"number":"1.0.4","date":"2015-02-19T11:23:13.362Z"},{"number":"1.0.5","date":"2015-02-25T15:40:43.343Z"}],"readme":"# aedilis-passport\n\nAedilis authentication strategy based on the HTTP Bearer authentication strategy for [Passport](http://passportjs.org/).\n\n## Install\n\n    $ npm install aedilis-passport\n    \n## Usage\n\n#### Configure Strategy\n\nThe Aedilis strategy authenticates users using a bearer token and is built on top of the \nHTTP Bearer authentication strategy by [Jared Hanson](https://github.com/jaredhanson/passport-http-bearer).  \nThe verify callback needed by the HTTP Bearer strategy is implemented in the Aedilis strategy. During\nthis callback a connection will be made to consul to resolve the token to a specific user.\n\n    passport.use(new AedilisStrategy({\n      host: \"<aedilis-host>\",\n      port: \"<aedilis-port>\"\n    }));\n\n#### Authenticate Requests\n\nSince the Aedilis strategy is an extension of the Bearer strategy you can use `passport.authenticate()`, specifying the `'bearer'` strategy, to authenticate requests.  Requests containing bearer tokens do not require session\nsupport, so the `session` option can be set to `false`.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n    app.get('/profile', \n      passport.authenticate('bearer', { session: false }),\n      function(req, res) {\n        res.json(req.user);\n      });","created":"2015-02-02T10:06:43.365Z","modified":"2015-02-25T15:40:43.343Z","lastPublisher":{"name":"bigdata-company","email":"code@bigdata.company"},"owners":[{"name":"bigdata-company","email":"code@bigdata.company"}],"other":{"_attachments":{},"_from":".","_id":"aedilis-passport","_nodeVersion":"0.12.0","_npmUser":{"name":"bigdata-company","email":"code@bigdata.company"},"_npmVersion":"2.5.1","_rev":"1-8fc854d8089025ea12d77a65e6a0a73f","_shasum":"6927f951ff531091b8facda05b2d4999e3cc166d","author":{"name":"BigData.Company","email":"code@bigdata.company","url":"http://www.bigdata.company/"},"bugs":{"url":"http://github.com/bigdata-company/aedilis-passport/issues"},"directories":{},"dist-tags":{"latest":"1.0.5"},"dist":{"shasum":"6927f951ff531091b8facda05b2d4999e3cc166d","tarball":"http://registry.npmjs.org/aedilis-passport/-/aedilis-passport-1.0.5.tgz"},"maintainers":[{"name":"bigdata-company","email":"code@bigdata.company"}],"readmeFilename":"README.md","time":{"modified":"2015-02-25T15:40:43.343Z","created":"2015-02-02T10:06:43.365Z","1.0.1":"2015-02-02T10:06:43.365Z","1.0.2":"2015-02-02T14:14:50.205Z","1.0.3":"2015-02-05T14:57:37.861Z","1.0.4":"2015-02-19T11:23:13.362Z","1.0.5":"2015-02-25T15:40:43.343Z"}}}