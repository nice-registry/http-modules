{"name":"lite-node-cache","version":"0.6.19","description":"Universal module for caching databases query, http requests and more. Using ES6. Detailed documentation. Good test coverage.","main":"index.js","scripts":{"test":"mocha test","build":"gulp build","prepublish":"npm run build && npm test"},"repository":"https://github.com/shadowwzw/lite-node-cache","keywords":["node","cache","lite","universal","ES6","ES2015","caching","object","memcached","internal","memory","multi","variable","local","redis"],"license":"MIT","homepage":"https://github.com/shadowwzw/lite-node-cache","dependencies":{"lodash":">=4.0.0","bluebird":">=3.0.0","babel-plugin-transform-runtime":"^6.23.0"},"devDependencies":{"babel-eslint":"^7.2.1","babel-plugin-transform-async-to-generator":"^6.22.0","babel-plugin-transform-class-properties":"^6.23.0","babel-plugin-transform-object-rest-spread":"^6.23.0","babel-preset-es2015":"^6.24.0","babel-preset-es2017":"^6.22.0","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-eslint":"^3.0.1","mocha":"^3.2.0","pump":"^1.0.2"},"gitHead":"f6001f176d192ad539b5ef058863b9600a6bd9cd","readme":"# **lite-node-cache**\nUniversal module for caching databases query, http requests and more. Using ES6. Detailed documentation. Good test coverage.\nThis module for [node](http://nodejs.org).\n\n[![Latest Stable Version](https://img.shields.io/npm/v/lite-node-cache.svg)](https://www.npmjs.com/package/lite-node-cache)\n[![License](https://img.shields.io/npm/l/lite-node-cache.svg)](https://www.npmjs.com/package/lite-node-cache)\n[![NPM Downloads](https://img.shields.io/npm/dt/lite-node-cache.svg)](https://www.npmjs.com/package/lite-node-cache)\n\n## **Installation**\n\n```bash\n$ npm install lite-node-cache --save\n```\nor\n```bash\n$ yarn add lite-node-cache\n```\n----------\n## **Usage**\n\n```js\n// const Cache = require(\"lite-node-cache/es5\"); // if es6 not support.\nconst Cache = require(\"lite-node-cache\"); // if es6 support.\nconst cacheInstance = new Cache({\n    ttl: 6000 // the lifetime of the recording in milliseconds\n});\n\n// set new item in cache\ncacheInstance.set(\"key1\", \"value1\");\n\n// get value from cache after 3 seconds\nsetTimeout(function () {\n    console.log(cacheInstance.get(\"key1\")); // \"value1\"\n}, 3000);\n\n// get value from cache after 6.5 seconds\nsetTimeout(function () {\n    console.log(cacheInstance.get(\"key1\")); // false\n}, 6500);\n```\n----------\n## **Example with http request**\n\n```js\n// const Cache = require(\"lite-node-cache/es5\"); // if es6 not support.\nconst Cache = require(\"lite-node-cache\"); // if es6 support.\nconst request = require('request');\nconst cacheInstance = new Cache({\n    ttl: 6000, // the lifetime of the recording in milliseconds\n    garbageCollectorTimeInterval: 10000,\n    garbageCollectorAsyncMode: false,\n    debugMode: true\n});\n\nconst url = \"http://google.ru\";\n\nsetInterval(function () {\n    let result = cacheInstance.get(url);\n    if (result) {\n       console.log(\"get value from cache\");\n       // do something with result...\n    } else {\n        request(url, function (err, result) {\n            if (err) console.log(err.message);\n            cacheInstance.set(url, result);\n            console.log(\"new request and save in cache\");\n            // do something with result...\n        });\n    }\n}, 1000);\n```\n----------\n## **Example with mysql query**\n\n```js\n// const Cache = require(\"lite-node-cache/es5\"); // if es6 not support.\nconst Cache = require(\"lite-node-cache\"); // if es6 support.\nconst mysql = require('mysql');\nconst cacheInstance = new Cache({\n    ttl: 6000, // the lifetime of the recording in milliseconds\n    garbageCollectorTimeInterval: 10000,\n    garbageCollectorAsyncMode: false,\n    debugMode: true\n});\n\nconst connection  = mysql.createPool({\n  connectionLimit : 1,\n  host     : 'localhost',\n  user     : 'me',\n  password : 'secret',\n  database : 'my_db'\n});\n\nsetInterval(function () {\n    let query = 'SELECT 1 + 1 AS solution';\n    let result = cacheInstance.get(query);\n    if (result) {\n       console.log(\"get query result from cache\");\n       // do something with result...\n       console.log(result[0].solution); // 2\n    } else {\n        connection.query(query, function (err, rows, fields) {\n            if (err) throw err;\n            cacheInstance.set(query, rows);\n            console.log(\"new query and save result in cache\");\n            // do something with result...\n            console.log(rows[0].solution); // 2\n        });\n    }\n}, 3000);\n```\n----------\n## **Api**\n\n### **create cacheInstance**\n```js\n// const Cache = require(\"lite-node-cache/es5\"); // if es6 not support.\nconst Cache = require(\"lite-node-cache\"); // if es6 support.\nconst cacheInstance = new Cache({\n    ttl: 6000,\n    garbageCollectorTimeInterval: 10000,\n    garbageCollectorAsyncMode: false,\n    debugMode: true\n});\n```\n####**Arguments**:\n\n*options (Object type):*\n\n*ttl (Integer) (default value: 30000):* The lifetime of the recording in milliseconds.\n\n*garbageCollectorTimeInterval (Integer) (default value: 10000):* Frequency of garbage collector (in milliseconds).\n\n*garbageCollectorAsyncMode (Boolean) (default value: false):* Asynchronous cleaning mode in order not to block the execution of the script.\n\n*debugMode (Boolean) (default value: false):* In this mode, you will receive valuable information that will help you to debug the script.\n\n#### **Returns**:\n\n*(Object):* cacheInstance.\n\n### **get value from cache (Synchronous)**\n```js\ncacheInstance.get(key);\n```\n#### **Arguments**:\n*key (any type):* Key to obtain the value from the cache.\n\n#### **Returns**:\n*(any type):* The cached value or false if the lifetime value has expired or value is not exist.\n\n### **set value in cache (Synchronous)**\n```js\ncacheInstance.set(key, value, [ttl = null]);\n```\n#### **Arguments**:\n*key (any type):* Key by which it will be possible to get the value from the cache.\n\n*value (any type):* Value for storage in the cache.\n\n*ttl (Integer) (optional):* The lifetime of the recording in milliseconds.\n\n#### **Returns**:\n*(boolean):* It returns true if the value has been overwritten and False if the value is not there, and you have created a new one.\n\n### **remove key from cache (Synchronous)**\n```js\ncacheInstance.remove(key);\n```\n#### **Arguments**:\n*key (any type):* Key is removed from the cache.\n\n#### **Returns**:\n*(boolean):*: Returns true if an element in the cache existed and has been removed, or false if the element does not exist.\n\n### **delete key in cache (alias of remove) (Synchronous)**\n```js\ncacheInstance.delete(key);\n```\n#### **Arguments**:\n*key (any type):* Key is removed from the cache.\n\n#### **Returns**:\n*(boolean):*: Returns true if an element in the cache existed and has been removed, or false if the element does not exist.\n\n### **get keys from cache (Synchronous)**\n```js\ncacheInstance.keys();\n```\n\n#### **Returns**:\n*(Array):* Returns an array of all existing keys in cacheInstance.\n\n#### **Example**:\n```js\ncacheInstance.set(\"key1\", \"value1\");\ncacheInstance.set(\"key2\", \"value2\");\ncacheInstance.keys(); // [\"key1\", \"key2\"]\n```\n\n----------\n\n## **Testing**\n\n```bash\n$ npm run build && npm test\n```\n----------\n\n## **License**\n\nMIT License\n\nCopyright (c) 2017 Gavrilov Ruslan\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n","versions":[{"number":"0.1.8","date":"2016-09-03T07:15:54.095Z"},{"number":"0.1.9","date":"2016-09-03T08:51:26.911Z"},{"number":"0.2.0","date":"2016-09-03T09:04:46.084Z"},{"number":"0.2.1","date":"2016-09-03T09:20:09.628Z"},{"number":"0.2.2","date":"2016-09-03T09:30:47.013Z"},{"number":"0.2.3","date":"2016-09-04T06:15:14.845Z"},{"number":"0.2.4","date":"2016-09-04T06:50:30.955Z"},{"number":"0.2.5","date":"2016-09-04T07:18:46.614Z"},{"number":"0.2.6","date":"2016-09-04T08:22:10.775Z"},{"number":"0.2.7","date":"2016-09-04T09:03:39.984Z"},{"number":"0.2.8","date":"2016-09-04T09:10:01.253Z"},{"number":"0.2.9","date":"2016-09-04T09:11:13.227Z"},{"number":"0.3.0","date":"2016-09-04T09:38:06.677Z"},{"number":"0.3.1","date":"2016-09-04T10:57:51.557Z"},{"number":"0.3.2","date":"2016-09-04T11:48:58.405Z"},{"number":"0.3.3","date":"2016-09-04T13:25:17.885Z"},{"number":"0.3.4","date":"2016-09-04T13:34:26.938Z"},{"number":"0.3.5","date":"2016-09-04T16:30:32.712Z"},{"number":"0.3.6","date":"2016-09-04T16:34:21.041Z"},{"number":"0.3.7","date":"2016-09-05T06:56:19.294Z"},{"number":"0.3.8","date":"2016-09-05T07:03:30.008Z"},{"number":"0.3.9","date":"2016-09-05T16:20:18.744Z"},{"number":"0.4.0","date":"2016-09-05T20:02:02.421Z"},{"number":"0.5.0","date":"2017-01-30T16:35:28.939Z"},{"number":"0.6.0","date":"2017-01-31T07:55:55.128Z"},{"number":"0.6.1","date":"2017-01-31T08:03:12.310Z"},{"number":"0.6.2","date":"2017-02-01T06:20:13.806Z"},{"number":"0.6.3","date":"2017-02-01T06:46:38.730Z"},{"number":"0.6.4","date":"2017-02-01T07:10:05.793Z"},{"number":"0.6.5","date":"2017-02-01T09:04:34.717Z"},{"number":"0.6.6","date":"2017-02-01T09:12:15.770Z"},{"number":"0.6.7","date":"2017-02-01T09:35:00.427Z"},{"number":"0.6.8","date":"2017-02-01T14:09:26.131Z"},{"number":"0.6.9","date":"2017-02-02T17:34:52.958Z"},{"number":"0.6.10","date":"2017-02-03T03:17:52.777Z"},{"number":"0.6.11","date":"2017-02-03T16:24:29.892Z"},{"number":"0.6.12","date":"2017-02-12T17:52:33.250Z"},{"number":"0.6.13","date":"2017-02-12T17:56:04.097Z"},{"number":"0.6.14","date":"2017-02-25T20:05:29.268Z"},{"number":"0.6.15","date":"2017-02-25T20:25:56.151Z"},{"number":"0.6.16","date":"2017-04-04T13:57:22.201Z"},{"number":"0.6.17","date":"2017-04-04T17:17:25.889Z"},{"number":"0.6.18","date":"2017-04-04T17:34:27.054Z"},{"number":"0.6.19","date":"2017-04-04T19:16:29.045Z"}],"starsCount":1,"created":"2016-09-03T07:15:54.095Z","modified":"2017-04-04T19:16:29.045Z","lastPublisher":{"name":"shadowwzw","email":"miditab@yandex.ru"},"owners":[{"name":"shadowwzw","email":"miditab@yandex.ru"}],"other":{"_attachments":{},"_from":".","_id":"lite-node-cache","_nodeVersion":"7.6.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/lite-node-cache-0.6.19.tgz_1491333386576_0.6691431361250579"},"_npmUser":{"name":"shadowwzw","email":"miditab@yandex.ru"},"_npmVersion":"4.1.2","_rev":"22-d27e237444d576767db96bee041d0384","_shasum":"5ce68e16c6c0ace984412448da7f0100df934b9e","author":{"name":"Gavrilov Ruslan shadowwzw","email":"miditab@yandex.ru"},"bugs":{"url":"https://github.com/shadowwzw/lite-node-cache/issues"},"directories":{},"dist-tags":{"latest":"0.6.19"},"dist":{"shasum":"5ce68e16c6c0ace984412448da7f0100df934b9e","tarball":"https://registry.npmjs.org/lite-node-cache/-/lite-node-cache-0.6.19.tgz"},"maintainers":[{"name":"shadowwzw","email":"miditab@yandex.ru"}],"readmeFilename":"README.md","time":{"modified":"2017-04-04T19:16:29.045Z","created":"2016-09-03T07:15:54.095Z","0.1.8":"2016-09-03T07:15:54.095Z","0.1.9":"2016-09-03T08:51:26.911Z","0.2.0":"2016-09-03T09:04:46.084Z","0.2.1":"2016-09-03T09:20:09.628Z","0.2.2":"2016-09-03T09:30:47.013Z","0.2.3":"2016-09-04T06:15:14.845Z","0.2.4":"2016-09-04T06:50:30.955Z","0.2.5":"2016-09-04T07:18:46.614Z","0.2.6":"2016-09-04T08:22:10.775Z","0.2.7":"2016-09-04T09:03:39.984Z","0.2.8":"2016-09-04T09:10:01.253Z","0.2.9":"2016-09-04T09:11:13.227Z","0.3.0":"2016-09-04T09:38:06.677Z","0.3.1":"2016-09-04T10:57:51.557Z","0.3.2":"2016-09-04T11:48:58.405Z","0.3.3":"2016-09-04T13:25:17.885Z","0.3.4":"2016-09-04T13:34:26.938Z","0.3.5":"2016-09-04T16:30:32.712Z","0.3.6":"2016-09-04T16:34:21.041Z","0.3.7":"2016-09-05T06:56:19.294Z","0.3.8":"2016-09-05T07:03:30.008Z","0.3.9":"2016-09-05T16:20:18.744Z","0.4.0":"2016-09-05T20:02:02.421Z","0.5.0":"2017-01-30T16:35:28.939Z","0.6.0":"2017-01-31T07:55:55.128Z","0.6.1":"2017-01-31T08:03:12.310Z","0.6.2":"2017-02-01T06:20:13.806Z","0.6.3":"2017-02-01T06:46:38.730Z","0.6.4":"2017-02-01T07:10:05.793Z","0.6.5":"2017-02-01T09:04:34.717Z","0.6.6":"2017-02-01T09:12:15.770Z","0.6.7":"2017-02-01T09:35:00.427Z","0.6.8":"2017-02-01T14:09:26.131Z","0.6.9":"2017-02-02T17:34:52.958Z","0.6.10":"2017-02-03T03:17:52.777Z","0.6.11":"2017-02-03T16:24:29.892Z","0.6.12":"2017-02-12T17:52:33.250Z","0.6.13":"2017-02-12T17:56:04.097Z","0.6.14":"2017-02-25T20:05:29.268Z","0.6.15":"2017-02-25T20:25:56.151Z","0.6.16":"2017-04-04T13:57:22.201Z","0.6.17":"2017-04-04T17:17:25.889Z","0.6.18":"2017-04-04T17:34:27.054Z","0.6.19":"2017-04-04T19:16:29.045Z"},"users":{"shadowwzw":true}}}