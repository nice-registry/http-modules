{"name":"molecularjs","version":"1.0.4","description":"Micro-library to make http request simply in the browser or with a NodeJs server.","main":"molecular.js","repository":"https://github.com/ArthurMialon/molecular","scripts":{"test":"mocha"},"keywords":["http","request","module","native","simply"],"license":"ISC","homepage":"https://github.com/ArthurMialon/molecular#readme","devDependencies":{"mocha":"2.2.5"},"gitHead":"075de37bac1a79ab94ce42268644abea63cd82c5","versions":[{"number":"1.0.0","date":"2015-08-15T19:03:59.010Z"},{"number":"1.0.1","date":"2015-08-15T19:12:38.817Z"},{"number":"1.0.2","date":"2015-08-16T00:05:26.997Z"},{"number":"1.0.3","date":"2015-08-16T12:27:54.023Z"},{"number":"1.0.4","date":"2015-08-18T18:56:58.936Z"}],"readme":"# Molecular !['travis build'](https://travis-ci.org/ArthurMialon/molecular.svg?branch=master) [![npm version](https://badge.fury.io/js/molecularjs.svg)](http://badge.fury.io/js/molecularjs) [![Codacy Badge](https://www.codacy.com/project/badge/c3515cb71b954ee0940ad79f57cc9872)](https://www.codacy.com/app/arthurmialon/molecular)\nMicro-library to make http request simply in the browser or with a NodeJs server.\n\n## Install\n### On nodejs\n```shell\n$ npm install molecularjs\n```\n\n### On Bower\n```shell\n$ bower install molecularjs\n```\n\n## Usage\n\n### With nodejs :\n```javascript\n// First require the library\nvar Molecular = require('molecular');\n```\n\nUse Molecular like that\n```javascript\n// Connect to your favorites APIs\nMolecular.connect({\n  'Github': 'https://api.github.com',\n  'Slack' : 'http://api.slack.com'\n});\n\n// Set some options\n// There are all options from the basic nodejs https module\nMolecular.to('Github').setOptions({\n  headers: {\n    'user-agent': 'ArthurMialon'\n  }\n});\n\n// Make a simply request to get some events\nMolecular.to('Github').get('/users/arthurmialon/events')\n  .progress(function(req) {\n    console.log(\"request progress\");\n  })\n  .success(function(data, req) {\n    console.log(data, req);\n  })\n  .error(function(err, req) {\n    console.log(err);\n  });\n\n```\n### In a browser :\nUse it almost like in nodejs :\nYou just have to import the file to your website\n\n```html\n<!-- Import it to your website -->\n<script src=\"molecular.js\"></script>\n```\n\n\n\n## Molecular API\nMore doc coming soon...\n\n### .connections\nSee all your connections to APIs\n\n### .connect(apis)\n#### Parameters :\nName          | Type\n------------- | -------------\nAPIs          | Object\n#### Example :\n```javascript\nMolecular.connect({\n  'Github': 'https://api.github.com',\n  'Slack' : 'https://api.slack.com'\n});\n```\n\n### .to(apiName)\n#### Parameters :\nName          | Type\n------------- | -------------\napiName       | String\n@return       | Object\n#### Example :\n```javascript\nMolecular.to('ApiName')\n```\n\n### .get(url, params)\n#### Parameters :\nName          | Type\n------------- | -------------\nurl           | String\nparams        | Object\n@return       | Callback Object\n#### Example :\n```javascript\nMolecular.get('http://your/api/endpoints', {limit: 2, orderby: \"id\", sort: \"desc\"});\n```\n\n### .post(url, data)\n#### Parameters :\nName          | Type\n------------- | -------------\nurl           | String\ndata          | Object\n@return       | Callback Object\n#### Example :\n```javascript\nMolecular.post('http://your/api/endpoints', {});\n```\n\n### .put(url, data)\n#### Parameters :\nName          | Type\n------------- | -------------\nurl           | String\ndata          | Object\n@return       | Callback Object\n#### Example :\n```javascript\nMolecular.put('http://your/api/endpoints', {});\n```\n\n### .delete(url)\n#### Parameters :\nName          | Type\n------------- | -------------\nurl           | String\n@return       | Callback Object\n#### Example :\n```javascript\nMolecular.delete('http://your/api/endpoints');\n```\n\n### .setMethod(name callback)\n#### Parameters :\nName          | Type\n------------- | -------------\nname          | String\ncallback      | Function\n#### Example :\n```javascript\nMolecular.setMethod('methodName', function(arguments, callback) {\n  // Do stuff and apply the callback\n});\n```\n\n### .setOptions(options)\n#### Parameters :\nName          | Type\n------------- | -------------\noptions       | Object\n#### Example :\n```javascript\nMolecular.setOptions({\n  headers: {\n    \"ContentType\": \"Application/json\"\n  }\n});\n```\n\n### .sendRequest(method, path, data, options)\n#### Parameters :\nName          | Type\n------------- | -------------\nmethod        | String\npath          | String\ndata          | Object / Boolean\noptions       | Object\n@return       | Callback Object\n#### Example :\n```javascript\nMolecular.sendRequest('GET', 'http://your/api/endpoint', false, {});\n```\n\n## Advanced\nYou can simply add some methods to your connections\n\nFor example if I want to get the last commit from a specific repo (i.e: SailsJs)\n```javascript\n\n// Set a new method to the api\nMolecular.to('Github').setMethod('lasCommit', function(owner, repo, callback) {\n  this.get('/repos/'+owner+'/'+repo+'/commits')\n    .success(function(data) {\n      // Add JSON.parse(data) in nodejs to data instead of data[0]\n      callback.apply(this, [false, data[0]]);\n    })\n    .error(function(err) {\n      callback.apply(this, [true, undefined]);\n    });\n});\n\n// Get the last commit from sailsJs\nMolecular.to('Github').lasCommit('balderdashy', 'sails', function(err, commit) {\n  (err) ? console.error(err) : console.log(commit);\n});\n\n```\n\n## Next version 1.1\n- Support http & https\n- Better options management (JSON and default options etc...)\n- Call en error if status code >= 200 & < 300 for http module nodejs\n- Get the body response on error\n- Fixes on POST/PUT request\n- Fixes on options with xhr\n- Minified version for bower\n- Automatic JSON.parse on data\n","created":"2015-08-15T19:03:59.010Z","modified":"2015-08-18T18:56:58.936Z","lastPublisher":{"name":"arthurmialon","email":"arthurmialon@gmail.com"},"owners":[{"name":"arthurmialon","email":"arthurmialon@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"molecularjs","_nodeVersion":"0.12.5","_npmUser":{"name":"arthurmialon","email":"arthurmialon@gmail.com"},"_npmVersion":"2.11.2","_rev":"1-e32d3b8918ef442f68ceb4722af6c651","_shasum":"1e709a717c4d94de2149662ff2e2f16d1c9e1b17","author":{"name":"Arthur Mialon","email":"arthurmialon@gmail.com","url":"http://www.arthurmialon.fr"},"bugs":{"url":"https://github.com/ArthurMialon/molecular/issues"},"directories":{},"dist-tags":{"latest":"1.0.4"},"dist":{"shasum":"1e709a717c4d94de2149662ff2e2f16d1c9e1b17","tarball":"http://registry.npmjs.org/molecularjs/-/molecularjs-1.0.4.tgz"},"maintainers":[{"name":"arthurmialon","email":"arthurmialon@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-08-18T18:56:58.936Z","created":"2015-08-15T19:03:59.010Z","1.0.0":"2015-08-15T19:03:59.010Z","1.0.1":"2015-08-15T19:12:38.817Z","1.0.2":"2015-08-16T00:05:26.997Z","1.0.3":"2015-08-16T12:27:54.023Z","1.0.4":"2015-08-18T18:56:58.936Z"}}}