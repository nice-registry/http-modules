{"name":"serve-browserify","version":"1.1.0","description":"HTTP handler for serving browserify bundles","keywords":[],"repository":"https://github.com/Raynos/serve-browserify","main":"index","homepage":"https://github.com/Raynos/serve-browserify","bin":{"serve-browserify":"bin/cli.js"},"dependencies":{"browserify":"^5.9.1","browserify-precompiled":"^5.9.1-precompiled2","compiled-files":"~0.1.1","ecstatic":"^0.5.4","getport":"^0.1.0","minimist":"^0.2.0","node-env":"~0.1.8","process":"~0.5.1","resolve":"~0.4.0","send-data":"^3.3.2","watchify":"^1.0.2","xtend":"^4.0.0"},"devDependencies":{"tape":"~1.0.2","ecstatic":"~0.4.2","routes-router":"~0.1.1"},"licenses":[{"type":"MIT","url":"http://github.com/Raynos/serve-browserify/raw/master/LICENSE"}],"scripts":{"test":"node ./test/index.js"},"testling":{"files":"test/index.js","browsers":["ie/8..latest","firefox/16..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"gitHead":"a57baf3524b8b366dd9f1e8cffcb4467c914fe3a","versions":[{"number":"0.1.1","date":"2013-05-20T08:20:01.353Z"},{"number":"0.2.1","date":"2013-05-31T20:48:44.626Z"},{"number":"0.2.2","date":"2013-05-31T23:11:25.694Z"},{"number":"0.3.1","date":"2013-06-13T01:32:10.597Z"},{"number":"0.3.2","date":"2013-06-13T23:04:20.450Z"},{"number":"0.3.3","date":"2013-07-08T23:27:58.832Z"},{"number":"1.0.1","date":"2014-08-10T20:50:10.959Z"},{"number":"1.1.0","date":"2014-08-31T22:16:32.308Z"}],"readme":"# serve-browserify\n\n[![dependency status][3]][4]\n\nHTTP handler for serving browserify bundles\n\n## Example\n\n```js\nvar http = require(\"http\")\nvar path = require(\"path\")\n// Simple http router\nvar Router = require(\"routes-router\")\n// Simple static file server\nvar ecstatic = require(\"ecstatic\")\n\nvar ServeBrowserify = require(\"serve-browserify\")\n\nvar router = Router()\n\n// ServeBrowserify(opts) returns a http handler\n// to server browserified bundles. The suggestion is to\n// server /browserify/foo as /browser/foo/index.js or\n// /browserify/bar as /browser/bar.js\n// also /browserify/x/y as /browser/x/y.js\nrouter.addRoute(\"/browserify/*\", ServeBrowserify({\n    root: path.join(__dirname, \"browser\"),\n    base: \"/browserify\"\n}))\n// static server to serve html page for example\nrouter.addRoute(\"/\", ecstatic({\n    root: path.join(__dirname, \"static\"),\n    autoIndex: true\n}))\n\nvar server = http.createServer(router)\n\nserver.listen(9024, function () {\n    console.log(\"demo server listening on port 9024\")\n})\n```\n\n## Documentation\n\n### `ServeJavascript(opts?)`\n\n```ocaml\ntype RequestHandler := (req: HttpRequest, res: HttpResponse)\n\nserve-browserify := ({\n    root: String,\n    base: String?,\n    cache: Boolean?,\n    gzip: Boolean?,\n    cacheControl: String?,\n    debug: Boolean?\n}) => RequestHandler\n```\n\nServeJavascript returns a function when given a root and opts will\n    serve javascript files through browserify\n\nValid options are:\n\n - root: The root folder location where it should look for\n    javascript files to browserify & serve\n - base: The base HTTP path where you are serving your assets\n    from. This is only needed if you want to serve nested files\n - cache: This will cache if enabled, which means every location\n    browserify bundle get's cached after initial compilation.\n    This also enables ETag's & HTTP caching\n - gzip: This will enable gzipping the bundle and sending it\n    as gzip'd encoded data to browsers if their accept-encoding\n    matches\n - cacheControl: This is a string you can set for the cache\n    control header. It defaults to 'max-age=300, must-revalidate'\n - debug: This is an option passed to browserify, when debug is\n    set, browserify will embed source maps. Disable this in\n    production to decrease file size\n\n## Cli\n\nSee `serve-browserify --help`\n\n## Installation\n\n`npm install serve-browserify`\n\n## Contributors\n\n - Raynos\n\n## MIT Licenced\n\n  [1]: https://secure.travis-ci.org/Raynos/serve-browserify.png\n  [2]: https://travis-ci.org/Raynos/serve-browserify\n  [3]: https://david-dm.org/Raynos/serve-browserify.png\n  [4]: https://david-dm.org/Raynos/serve-browserify\n  [5]: https://ci.testling.com/Raynos/serve-browserify.png\n  [6]: https://ci.testling.com/Raynos/serve-browserify\n","created":"2013-05-20T08:19:59.783Z","modified":"2014-08-31T22:16:32.308Z","lastPublisher":{"name":"raynos","email":"raynos2@gmail.com"},"owners":[{"name":"raynos","email":"raynos2@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"serve-browserify","_npmUser":{"name":"raynos","email":"raynos2@gmail.com"},"_npmVersion":"1.4.23","_rev":"1-fe412957ef5f21e3a15e54d0a4c2ed8c","_shasum":"6567b6315a17bdc00803da6e1053e2868faafced","author":{"name":"Raynos","email":"raynos2@gmail.com"},"bugs":{"url":"https://github.com/Raynos/serve-browserify/issues","email":"raynos2@gmail.com"},"contributors":[{"name":"Raynos"}],"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"6567b6315a17bdc00803da6e1053e2868faafced","tarball":"http://registry.npmjs.org/serve-browserify/-/serve-browserify-1.1.0.tgz"},"maintainers":[{"name":"raynos","email":"raynos2@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-08-31T22:16:32.308Z","created":"2013-05-20T08:19:59.783Z","0.1.1":"2013-05-20T08:20:01.353Z","0.2.1":"2013-05-31T20:48:44.626Z","0.2.2":"2013-05-31T23:11:25.694Z","0.3.1":"2013-06-13T01:32:10.597Z","0.3.2":"2013-06-13T23:04:20.450Z","0.3.3":"2013-07-08T23:27:58.832Z","1.0.1":"2014-08-10T20:50:10.959Z","1.1.0":"2014-08-31T22:16:32.308Z"}}}