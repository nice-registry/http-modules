{"name":"dat-publish","version":"1.2.0","description":"Publish your dats to HTTP & Dat endpoints!","main":"index.js","bin":{"dat-publish":"cli.js"},"scripts":{"test":"standard"},"license":"MIT","dependencies":{"crypto":"0.0.3","dat-archiver":"github:joehand/dat-archiver#add/get-archive","dat-js":"^3.3.1","hyperdrive-http":"^3.4.1","level-party":"^3.0.4","mkdirp":"^0.5.1"},"devDependencies":{},"repository":"https://github.com/joehand/dat-publish","homepage":"https://github.com/joehand/dat-publish#readme","gitHead":"bd55b8454c0b0b3aa7ddb386ecc99c636a01dcb3","versions":[{"number":"1.0.0","date":"2016-09-08T07:10:26.403Z"},{"number":"1.1.0","date":"2016-09-08T18:26:24.692Z"},{"number":"1.1.1","date":"2016-09-08T18:27:12.070Z"},{"number":"1.1.2","date":"2016-09-08T20:42:13.610Z"},{"number":"1.2.0","date":"2016-09-29T22:06:50.694Z"}],"readme":"# Dat Publish\n\nPublish your dats to HTTP and run a public Dat peer!\n\nUses [hyperdrive-http](https://github.com/joehand/hyperdrive-http) and [dat-archiver](https://github.com/maxogden/dat-archiver) to be a publicly accessible archive for your data stored in Dat. Push new files to the server with [dat-push](https://github.com/joehand/dat-push).\n\n### Serving Dat files over HTTP\n\n* Run `dat-publish` on your server. It will print a `<server-key>` for dat-archiver.\n* Create a dat on your local computer (or use an existing directory without a Dat).\n* `dat-push <server-key> [directory]`. Push a dat/directory to your server with `<server-key>`.\n* Your files will be available on your server over http!\n\n### Public Dat Peer\n\nYou can also use dat-publish to act as a public dat peer.\n\nFollow the same commands as above with the discovery option: `dat-publish <server-key> --discovery`. After a `dat-push` is run, dat-publish will share your files on Dat.\n\n## Installation \n\n```\nnpm install -g dat-publish\n```\n\n## Usage\n\n```\ndat-publish [<server-key>] [directory]\n```\n\n* Set `<server-key>` to *name* your sever. When using dat-push, you will push to this key. If you do not set a name, a 16 character key will be generated for you. Anyone with the key will be able to push to your server.\n* `directory`: store the dat directories. Each dat will be stored in a folder with it's key as the name.\n\n### CLI Options\n\n* `--http`, `-h`: Share archive(s) via hyperdrive-http over port.\n* `--dat-upload`, `-u`: Share via Dat peer. Join Dat swarm after a dat-push is finished, will only **upload** data, not download new data.\n* `--dat-download`, `-d`: Update dat from live source (dat share on your computer will update the server).\n* `--root=<archive-key>`, `-r`: Archive key to serve as root archive.\n* `--index=file.html`, `-i`: Page to serve as index for archive(s). If not set, metadata will be served at root.\n* `--port=1234`: Port for http server\n\n### Root Archive Options\n\nYou can choose a single archive to serve at the root. This allows you to do things like publish a static website. By default it will serve `index.html` at the root and the filelist at `metadata.json`.\n\nIf you have a root archive to publish, run:\n\n* `dat-publish my-server-name --root`\n\nIf you have multiple archives on your dat-archiver, you need to specify the archive key to serve as root:\n\n* `dat-publish my-server-name --root=<dat-link>`\n\n### Index Page\n\nTo show `index.html` as the index page for all archives, use the `--index` option:\n\n* `dat-publish my-server-name --root --index`\n\nTo overwrite the index page for all archives, set the index to the page name:\n\n* `dat-publish my-server-name --root --index=foo.html`\n\n## API \n\n### `var publish = datPublish({opts})`\n\nOptions include: \n\n```js\n{\n  dir: process.cwd + '/dats', // directory to store dats received from dat-push\n  discovery: { // join dat swarm after a completed dat-push\n    upload: false, // Upload data to other peers\n    download: false // Download live updates from archive source\n  },\n  rootArchive: <key>, // dat archive key to serve as root of http\n  index: 'index.html', // index page for root archive mode\n  http: true // return onRequest function for http usage\n}\n```\n\n### `publish.archiver`\n\ndat-archiver instance. Use `publish.archiver.join(serverKey)` to join an archiver server.\n\n### `publish.httpRequest`\n\nhyperdrive-http request function, use this in a http server: `server.on('request', publish.httpRequest)`.\n\nSee `cli.js` for example usage.\n\n## License\n\nMIT","created":"2016-09-08T07:10:26.403Z","modified":"2016-09-29T22:06:50.694Z","lastPublisher":{"name":"jhand","email":"joe@hand.email"},"owners":[{"name":"jhand","email":"joe@hand.email"}],"other":{"_attachments":{},"_from":".","_id":"dat-publish","_nodeVersion":"6.5.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/dat-publish-1.2.0.tgz_1475186809666_0.196423530112952"},"_npmUser":{"name":"jhand","email":"joe@hand.email"},"_npmVersion":"3.10.6","_rev":"1-e7ac08e64c046ef5a3142a6f804d6f0a","_shasum":"78ce9ac28848ce073c2dd532c47cefd767204e6b","author":{"name":"Joe Hand","email":"joe@hand.email","url":"https://joeahand.com/"},"bugs":{"url":"https://github.com/joehand/dat-publish/issues"},"directories":{},"dist-tags":{"latest":"1.2.0"},"dist":{"shasum":"78ce9ac28848ce073c2dd532c47cefd767204e6b","tarball":"http://registry.npmjs.org/dat-publish/-/dat-publish-1.2.0.tgz"},"maintainers":[{"name":"jhand","email":"joe@hand.email"}],"readmeFilename":"readme.md","time":{"modified":"2016-09-29T22:06:50.694Z","created":"2016-09-08T07:10:26.403Z","1.0.0":"2016-09-08T07:10:26.403Z","1.1.0":"2016-09-08T18:26:24.692Z","1.1.1":"2016-09-08T18:27:12.070Z","1.1.2":"2016-09-08T20:42:13.610Z","1.2.0":"2016-09-29T22:06:50.694Z"}}}