{"name":"http-fantasy-land","devDependencies":{"@spudly/eslint-config":"^5.0.1","babel-cli":"^6.24.1","babel-preset-env":"^1.4.0","babel-preset-stage-3":"^6.24.1","codecov":"^2.1.0","eslint":"^3.17.1","get-port":"^3.1.0","get-stream":"^3.0.0","husky":"^0.13.3","jest":"^19.0.2","lint-staged":"^3.3.1","prettier":"^1.1.0","semantic-release":"^6.3.6"},"main":"build/index.js","files":["build"],"scripts":{"jest":"jest","test":"jest && codecov --token=3d051c27-f3be-4de7-81cf-67d27c98a02e","lint":"eslint .","demo":"babel-node demo.js","precommit":"lint-staged","build":"rm -rf build && babel src -d build --ignore test.js","prepublish":"npm run build","semantic-release":"semantic-release pre && npm publish && semantic-release post"},"eslintConfig":{"extends":"@spudly"},"lint-staged":{"*.js":["eslint --fix","prettier --write --print-width=100 --single-quote --bracket-spacing=false --trailing-comma=all","git add"]},"dependencies":{"accept":"^2.1.3","cookie":"^0.3.1","lodash.isplainobject":"^4.0.6","mime-db":"^1.27.0","path-to-regexp":"^1.7.0","pify":"^2.3.0","ramda":"^0.23.0"},"babel":{"presets":[["env",{"targets":{"node":7.5}}],"stage-3"]},"jest":{"coverageDirectory":"./coverage/","collectCoverage":true,"collectCoverageFrom":["src/**/*.js"]},"license":"MIT","repository":"https://github.com/spudly/http-fantasy-land","version":"3.0.0","gitHead":"aeeea1057e58907e2944c66c4d9e41239f315a42","description":"[![Build Status](https://travis-ci.org/spudly/http-fantasy-land.svg?branch=master)](https://travis-ci.org/spudly/http-fantasy-land) [![eh?](https://codecov.io/gh/spudly/http-fantasy-land/branch/master/graph/badge.svg)](https://codecov.io/gh/spudly/http-fa","homepage":"https://github.com/spudly/http-fantasy-land#readme","versions":[{"number":"0.1.0","date":"2017-04-19T01:20:25.613Z"},{"number":"0.1.1","date":"2017-04-21T00:37:00.645Z"},{"number":"0.1.2","date":"2017-04-21T00:39:08.688Z"},{"number":"0.1.3","date":"2017-04-21T00:41:37.483Z"},{"number":"0.1.4","date":"2017-04-21T00:43:19.001Z"},{"number":"0.1.5","date":"2017-04-21T01:33:36.718Z"},{"number":"0.1.6","date":"2017-04-21T02:11:09.996Z"},{"number":"1.0.0","date":"2017-04-24T22:22:48.242Z"},{"number":"1.0.1","date":"2017-04-24T22:27:31.417Z"},{"number":"1.1.0","date":"2017-04-24T22:40:17.144Z"},{"number":"2.0.0","date":"2017-05-03T00:23:57.049Z"},{"number":"2.1.0","date":"2017-05-03T02:07:33.994Z"},{"number":"2.2.0","date":"2017-06-09T00:59:21.729Z"},{"number":"3.0.0","date":"2017-06-09T01:07:12.216Z"}],"readme":"# [WIP] http-fantasy-land\n\n[![Build Status](https://travis-ci.org/spudly/http-fantasy-land.svg?branch=master)](https://travis-ci.org/spudly/http-fantasy-land)\n[![eh?](https://codecov.io/gh/spudly/http-fantasy-land/branch/master/graph/badge.svg)](https://codecov.io/gh/spudly/http-fantasy-land)\n\nA web server library that allows you to create your server using functional concepts.\n\n## Getting Started\n\n```\nnpm install --save http-fantasy-land\n```\n\n```js\nimport {listen, get} from 'http-fantasy-land';\n\nconst home = (response, request) => ({\n  ...response,\n  statusCode: 200,\n  body: 'It works!',\n});\n\nconst router = composeRoutes(\n  get('/', home),\n);\n\nlisten(router, {port: 8080}).then(stop => {\n  console.log('Listening @ http://localhost:8080');\n});\n```\n\n## API\n\n### route functions\n\nA route is a function that, given a request object and a response object, returns a new response (or a promise that resolves to one).\n\n[TODO: elaborate]\n\n### request\n\nThe request object is serialized, immutable representation of an [http.IncomingMessage](https://nodejs.org/dist/latest/docs/api/http.html#http_class_http_incomingmessage) object.\n\n```js\n{\n  method: String,\n  url: String,\n  headers: {\n    [key: String]: String,\n  },\n}\n```\n\n### response\n\nThe response object is a serialized, immutable representation of an [http.ServerResponse](https://nodejs.org/dist/latest/docs/api/http.html#http_class_http_serverresponse) object.\n\n```js\n{\n  status: Number,\n  body: String|Stream,\n  headers: {\n    [key: String]: String,\n  },\n}\n```\n\n### listen\n`listen :: ((Object, Object) -> Object, Object) -> Promise<() -> void>`\n\n**Description:**\nCreates and starts a http/https server using the supplied route and options. Returns a promise that resolves to a `stop()` function.\n\n<details>\n  <summary><strong>Arguments</strong></summary>\n  <dl>\n    <dt>route :: (Object, Object) -> Object</dt>\n    <dd>A Route function. Accepts a response object and a request object. Returns a new response object.</dd>\n    <dt>options :: Object</dt>\n    <dd>\n\nServer Configuration Options. Accepts port, hostname, and backlog from [http.listen](https://nodejs.org/dist/latest-v7.x/docs/api/http.html#http_server_listen_port_hostname_backlog_callback), as well as any option accepted by [https.createServer](https://nodejs.org/dist/latest-v7.x/docs/api/https.html#https_https_createserver_options_requestlistener)\n\nSee the links above for detailed descriptions of each option.\n    </dd>\n  </dl>\n</details>\n\n**Return Value:** Function - A function that stops the server.\n\n<details>\n  <summary><strong>Example:</strong></summary>\n\n```js\nlisten(route, {port: 8080}).then(stop => {\n  console.log('Listening @ http://localhost:8080');\n  setTimeout(() => {\n    stop();\n    console.log('Server stopped!');\n  }, 500);\n});\n```\n</details>\n\n### composeRoutes(...routes) => route\n\n### sendFile(file) => route\n\n### setHeader(name)(value) => route\n\n### get('/path', route) => route\n\n### head('/path', route) => route\n\n### post('/path', route) => route\n\n### put('/path', route) => route\n\n### del('/path', route) => route\n\n### connect('/path', route) => route\n\n### options('/path', route) => route\n\n### trace('/path', route) => route\n\n### patch('/path', route) => route\n\n## Compatibility\n\n[TODO: document usage w/ express/connect/etc.]\n","created":"2017-04-19T01:20:25.613Z","modified":"2017-06-09T01:07:12.216Z","lastPublisher":{"name":"spudly","email":"shuoink@gmail.com"},"owners":[{"name":"spudly","email":"shuoink@gmail.com"}],"other":{"_attachments":{},"_id":"http-fantasy-land","_nodeVersion":"8.1.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-fantasy-land-3.0.0.tgz_1496970431253_0.9291378695052117"},"_npmUser":{"name":"spudly","email":"shuoink@gmail.com"},"_npmVersion":"5.0.3","_rev":"14-7e37d7236fb32dbbca473246178dba7c","bugs":{"url":"https://github.com/spudly/http-fantasy-land/issues"},"directories":{},"dist-tags":{"latest":"3.0.0"},"dist":{"integrity":"sha512-oq98q83UcyNPWxoxjh0zmrZlxuMM28LAmF3o5B4pIMBDNV1ZwtMh+nX+BuiD4orYl5A0D+qC8zVQKssdGfuQ5A==","shasum":"696ca994ae9ca730d74c69d8cfc3d6a8139355a7","tarball":"https://registry.npmjs.org/http-fantasy-land/-/http-fantasy-land-3.0.0.tgz"},"maintainers":[{"name":"spudly","email":"shuoink@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-09T01:07:12.216Z","created":"2017-04-19T01:20:25.613Z","0.1.0":"2017-04-19T01:20:25.613Z","0.1.1":"2017-04-21T00:37:00.645Z","0.1.2":"2017-04-21T00:39:08.688Z","0.1.3":"2017-04-21T00:41:37.483Z","0.1.4":"2017-04-21T00:43:19.001Z","0.1.5":"2017-04-21T01:33:36.718Z","0.1.6":"2017-04-21T02:11:09.996Z","1.0.0":"2017-04-24T22:22:48.242Z","1.0.1":"2017-04-24T22:27:31.417Z","1.1.0":"2017-04-24T22:40:17.144Z","2.0.0":"2017-05-03T00:23:57.049Z","2.1.0":"2017-05-03T02:07:33.994Z","2.2.0":"2017-06-09T00:59:21.729Z","3.0.0":"2017-06-09T01:07:12.216Z"}}}