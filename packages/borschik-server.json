{"name":"borschik-server","version":"0.0.3","description":"Dev HTTP server to process JS and CSS files with borschik","homepage":"https://github.com/bem/borschik-server","repository":"https://github.com/bem/borschik-server","dependencies":{"coa":"0.4.0","vow":"0.3.9","vow-fs":"0.2.3","borschik":"0.4.0"},"devDependencies":{"chai":"*","jshint":"*","mocha":"*"},"engines":["node >= 0.8.0"],"main":"index.js","bin":{"borschik-server":"./bin/borschik-server"},"licenses":[{"type":"MIT"}],"scripts":{"test":"jshint . && mocha -u bdd -R spec"},"readme":"# borschik-server\nHTTP server to processes JS and CSS files with [borschik](https://github.com/bem/borschik) on demand.\n\nThis server is **for development use only**.\n\n## Default behavour\n1. If file exists, response as is\n2. Process files with `_` prefix only (can be redefined in `path-resolver`)\n3. Minimize is disabled\n4. Freeze is disabled\n\nSome examples:\n 1. You request is `http://example.com/js/file.js`. `file.js` exists, `borschik-server` reads this file\nand writes to output as is.\n 2. You request is `http://example.com/js/_file.js`. `file.js` doesn't exist, `borschik-server` removes `_` prefix,\nreads file `file.js` and processes it with `borschik`.\n\n\n## Installation\n```\nnpm install -g borschik-server \n```\n\n## Usage\nJust run `borschik-server` and setup your webserver. If you want to use borschik-server as init.d script\nfollow [this template for Ubuntu](https://gist.github.com/peterhost/715255)\n\n## Webserver configuration\nYou should setup your webserver (apache, lighttpd, nginx, etc.) to proxy http requests for static files to borschik-server.\n\nExample nginx configuration:\n```\nlocation ~* \"\\.(css|js)$\" {\n    # proxy all requests for css/js to borschik-server\n    # use $uri (not $request_uri) to deal with rewrite\n    proxy_pass http://127.0.0.1:8055$document_root$uri;\n}\n```\n\n\n## How to extend with new technologies\nYou can create you own server with this code\n```js\nrequire('borschik-server').server({\n    port: 8055,\n    techResolver: require('../lib/tech-resolver')\n});\n```\n\nThis code references to you own tech-resolver\n```js\nconst ext2tech = {\n    '.styl': {\n        module: require('path').resolve(__dirname, '../processors/my-styl-processor'),\n        contentType: 'text/css; charset=utf-8'\n    }\n};\n\nvar borschikServerTechResolver = require('borschik-server').techResolver;\n\n// save techResolver interface\nexports = borschikServerTechResolver;\n\n// redefine getTech method\nexports.getTech = function(extension) {\n    var tech = ext2tech[extension];\n\n    // go to borschik-server techs\n    if (!tech) {\n        return borschikServerTechResolver.getTech(extension);\n    }\n\n    return tech\n};\n```\n\nYou can redefine pathResolver as well.\n\n## License\n[MIT](/MIT-LICENSE.txt)\n","versions":[{"number":"0.0.1","date":"2013-08-07T07:00:55.145Z"},{"number":"0.0.2","date":"2013-08-08T15:12:24.050Z"},{"number":"0.0.3-beta1","date":"2013-08-14T06:49:27.948Z"},{"number":"0.0.3","date":"2013-10-14T14:16:07.203Z"}],"created":"2013-08-07T07:00:51.573Z","modified":"2013-10-14T14:16:07.203Z","lastPublisher":{"name":"doochik","email":"doochik@ya.ru"},"owners":[{"name":"doochik","email":"doochik@ya.ru"}],"other":{"_attachments":{},"_from":".","_id":"borschik-server","_npmUser":{"name":"doochik","email":"doochik@ya.ru"},"_npmVersion":"1.3.11","_rev":"1-569ec52b0f91f560ca14f3f2ccc540b3","author":"","bugs":{"url":"https://github.com/bem/borschik-server/issues"},"directories":{},"dist-tags":{"latest":"0.0.3","unstable":"0.0.3-beta1"},"dist":{"shasum":"44e63fda87d4ded65a08eeea448e75aa7544a9d5","tarball":"http://registry.npmjs.org/borschik-server/-/borschik-server-0.0.3.tgz"},"maintainers":[{"name":"doochik","email":"doochik@ya.ru"}],"readmeFilename":"README.md","time":{"modified":"2013-10-14T14:16:07.203Z","created":"2013-08-07T07:00:51.573Z","0.0.1":"2013-08-07T07:00:55.145Z","0.0.2":"2013-08-08T15:12:24.050Z","0.0.3-beta1":"2013-08-14T06:49:27.948Z","0.0.3":"2013-10-14T14:16:07.203Z"}}}