{"name":"restroute","version":"0.0.2","description":"Simple HTTP request/response router for simple REST applications.","main":"./lib/restroute.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/avivbeeri/node-restroute","keywords":["rest","router"],"license":"MIT","homepage":"https://github.com/avivbeeri/node-restroute","versions":[{"number":"0.0.1","date":"2014-02-25T23:46:00.057Z"},{"number":"0.0.2","date":"2014-02-26T12:31:38.013Z"}],"readme":"RestRoute\n==============\n\nSimple HTTP request/response router for simple REST applications.\n\nSetup\n==============\n\nInstall RestRoute via npm:\n\n    npm install restroute\n\nand import it into your project a-like so:\n\n    var router = require('restroute');\n\nUsage\n===============\n\nRestRoute supports routes for all current HTTP/1.1 methods. To add a GET method handler looks like this:\n\n    var pattern = ...\n    router.get(pattern, handler);\n    \n    function handler (request, response) {\n      //do things here\n    });\n\nHandlers for a given method are processed in the order they are added, so make sure to put the most specific handlers first, then add the general ones.\n\nTo execute the handler, simply pass your HTTP request and response objects through the `go(request, response)` method.\n\nHandler Patterns\n---------------\n\nThe `pattern` is a simple way to handle incoming urls from requests. It supports the following formatting features.\n\n * Strict text matching eg: set your pattern to `\"/\"` or `\"/downloads\"` or `\"/images/cats\"`\n   * This is for exact matches, so `\"/downloads\"` would not match `\"/downloads/sub-folder\"`.\n * Parameterized matching: `\"/:parameter\"` or `\"/testing/:parameterNameHere/data\"`\n   * These are made available as `request.params.parameterNameHere` for your callback function.\n * Wildcards for directory matching:\n   * Loose: `pattern = \"/downloads*\"` means that `pattern` would match both `\"/downloads\"` and any subdirectory below it.\n   * Strict: `pattern = \"/downloads/*\"` would only match the subdirectories, but not `\"/downloads\"`\n\n\nOther Features\n---------------\nYou can also provide a default error handler in the event that the request matches none of the current handlers.\n\n    router.onError(errorHandler);\n    function errorHandler(request, response) {\n      //Error handling code here.\n    }\n\nExample\n===============\n\nThis simple example demonstrates a simple use of RestRoute.\n\n    //Imports\n    var http = require('http');\n    var router = require('restroute');\n\n    //Handler functions\n    function welcome (req, res) {\n      res.writeHead(200);\n      res.end(\"Hello world!\");\n    }\n    function echo (req, res) {\n      res.writeHead(200);\n      res.end(req.params.echo);\n    }\n    function errors (req, res) {\n      res.writeHead(404);\n      res.end(\"404\");\n    }\n\n    //Add handlers to the router\n    router.onError(errors);\n    router.get(\"/\", welcome);\n    router.get(\"/:echo\", echo);\n\n    //Use them in a server\n    http.createServer(router.go).listen(8080);\n\nNavigate to:\n\n * http://localhost:8080,, you should see \"Hello World\".\n * http://localhost:8080/something, you will recieve \"something\". \n * But, http://localhost:8080/something/else results in \"404\" because of RestRoute's strict pattern matching. You could change this using the pattern `/:echo*` or `/:echo/*` depending on your needs.\n","created":"2014-02-25T23:46:00.057Z","modified":"2014-02-26T12:31:38.014Z","lastPublisher":{"name":"avivbeeri","email":"avbeeri@gmail.com"},"owners":[{"name":"avivbeeri","email":"avbeeri@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"restroute","_npmUser":{"name":"avivbeeri","email":"avbeeri@gmail.com"},"_npmVersion":"1.4.3","_rev":"1-5cba8b453da8e8bb71cd5e154e429121","author":{"name":"Aviv Beeri"},"bugs":{"url":"https://github.com/avivbeeri/node-restroute/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"c0d49c936659691a7479b4b97b2cbae686f8b7b6","tarball":"http://registry.npmjs.org/restroute/-/restroute-0.0.2.tgz"},"maintainers":[{"name":"avivbeeri","email":"avbeeri@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-02-26T12:31:38.014Z","created":"2014-02-25T23:46:00.057Z","0.0.1":"2014-02-25T23:46:00.057Z","0.0.2":"2014-02-26T12:31:38.013Z"}}}