{"name":"adafruit-io-tunnel","version":"2.0.1","description":"A TLS/SSL tunnel for securely connecting HTTP and MQTT clients to io.adafruit.com","main":"index.js","bin":{"adafruit-io-tunnel":"./cli"},"scripts":{"test":"gulp"},"repository":"https://github.com/adafruit/adafruit-io-tunnel","keywords":["adafruit","io","tls","tunnel","raspberry","pi"],"license":"MIT","homepage":"https://github.com/adafruit/adafruit-io-tunnel#readme","dependencies":{"commander":"^2.8.1"},"devDependencies":{"gulp":"^3.9.0","gulp-jshint":"^1.11.2","gulp-mocha":"^2.1.3","jshint-stylish":"^2.0.1","mqtt":"^1.3.5","request":"^2.61.0"},"gitHead":"6c36968af4738995c80447055d87eb3320c5e4b4","deprecated":"moved to the adafruit-io package","versions":[{"number":"1.0.0","date":"2015-08-25T22:51:53.890Z"},{"number":"1.0.1","date":"2015-08-25T22:53:08.279Z"},{"number":"2.0.0","date":"2015-08-26T18:40:25.019Z"},{"number":"2.0.1","date":"2015-09-22T14:04:06.639Z"}],"readme":"# THIS PACKAGE HAS BEEN MOVED\nThe `adafruit-io` package now contains the latest Adafruit IO tunnel code. It can be found\n[on GitHub](https://github.com/adafruit/adafruit-io-node) and [on npm](https://www.npmjs.com/package/adafruit-io).\n\n## Adafruit IO TLS/SSL Tunnel \nA Node.js TLS/SSL tunnel for securely connecting HTTP and MQTT clients to [io.adafruit.com][1].\n\n## Installation\nThis project was designed to run as a service on a Raspberry Pi. If you would like to connect\nto a headless Raspberry Pi for setting up WiFi access, you can use the\n[Adafruit Raspberry Pi Finder][4] app to find and connect to your Raspberry Pi.\n\nOnce you have setup your Pi, make sure you have the latest stable version of\nNode.js installed on your Raspberry Pi. You can download it from the [node-arm][3] project if needed.\n\n```console\npi@tunnel ~ $ node -v\nv0.12.6\n```\n\nMake sure the global `node_modules` folder on your Raspberry Pi is writable by the `pi` user.\n\n```console\npi@tunnel ~ $ sudo chown -R pi /usr/local\n```\n\nInstall `forever`, `forever-service`, and `adafruit-io-tunnel` on your Raspberry Pi.\n\n```console\npi@tunnel ~ $ npm install -g forever forever-service adafruit-io-tunnel\n```\n\n## Starting the Service\nIf everything has been installed, you can start the service by running the following command:\n\n```\npi@tunnel ~ $ adafruit-io-tunnel start\n\n                             `:-\n                            +NMMy\n                          `yMMMMM:\n                         :mMMMMMMm`\n                       `sMMMMMMMMMs\n                      `dMMMMMMMMMMM-\n                      hMMMMMMMMMMMMh\n   -syyyyyyyyyyso/:` .MMMMMMMMMMMMMN\n   yMMMMMMMMMMMMMMNmy:NMMMMMMMMMMMMd\n   `sNMMMMMMMMMMMMMMMNNMMMMo:mMMMMm//ossso/:.`\n     :mMMMMMMMMMMMMMMMMMMMy  yMMMMmNMMMMMMMMNmhs+:-`\n      `sMMMMMMMMMMmsydNMMM+ `mMMMMMMMMMMMMMMMMMMMMNmy\n        /mMMMMMMMMd:` ./dMd:hMNmdhhdMMMMMMMMMMMMMMMNy\n         .omMMMMMMMMdy+/yMMMMd-```.:mMMMMMMMMMMMNd+.\n           `:oymNMMMMMMmdNMMNNdhhdmMMMMMMMMMMMms-`\n             :ymNMMMMh:``dMd-+mMMMMMMMMMMMNmy:`\n           `yMMMMMMMo `:dMMN. .mMMMMdysso+-`\n          `dMMMMMMMMssdMMMMMd- +MMMMMm/\n          sMMMMMMMMMMMMMMMMMMNhdMMMMMMM:\n         -MMMMMMMMMMMMMMNyMMMMMMMMMMMMMd\n        `dMMMMMMMMMMMMMd-:MMMMMMMMMMMMMN\n        oMMMMMMMMMMNNy/   +NMMMMMMMMMMMN\n       .MMMMMMNmho/-`      -yNMMMMMMMMMN\n       `sdho/-`              .omMMMMMMMM\n                                -sNMMMMM\n                                  `/hMMh\n                                      `\n\nstarting tunnel on ports 80 and 1883...\n```\n\n## Using the Tunnel\n\nInstead of pointing your MQTT or HTTP client at io.adafruit.com, use the IP address\nor hostname of your Raspberry Pi.\n\n### HTTP\nRequests to port 80 on the Pi will be tunneled to HTTPS port 443 on io.adafruit.com.\n\n### MQTT\nConnections to port 1883 on the Pi will be tunneled to MQTTS port 8883 on io.adafruit.com.\n\n## Stopping the Service\n\n```console\npi@tunnel ~ $ adafruit-io-tunnel stop\nstopping service...\n```\n\n## Security Considerations\n\nThe purpose of this service is to add an encryption layer, specifically TLS, to your adafruit IO messages in transit across the Internet. Not all IoT radio modules have a TLS stack and if you sent a message to adafruit.io with that device, it would be unencrypted at the application layer. For example, the message would be encrypted by the radio at the WiFi layer, but would be unencrypted at the Ethernet layer as it went from your router to the Internet.\n\nThe danger of unencrypted application messages are two-fold. The first is that your message may be modified in transit but more importantly, your message can be read by any server that routes your traffic. It's like sending a postcard. If you made a adafruit.io connected garage door, then a lot of people (and machines) would know when the door opened and closed.\n\nTherefore, this service protects your data from prying eyes on the Internet.\n\nHowever, this service runs as an unauthenticated service on your network. This is by design so that your IoT device can make a connection to it. But it also means that anything on your network can talk to this service. Your adafruit.io credentials are *not* stored on this gateway service, but on your IoT device. So an attacker would still need to know your adafuit.io credentials to post to adafruit.io.\n\nLastly, this service does not protect cellular modules. If you have something like a Adafruit FONA, then it makes an Internet connection directly through the cellular system and unless there is a TLS stack on the module, than most likely it's not end-to-end encrypted.\n\n## License\n\nCopyright (c) 2015 Adafruit Industries. Licensed under the MIT license.\n\nAdafruit invests time and resources providing this open source code,\nplease support Adafruit and open-source hardware by purchasing products\nfrom [Adafruit][2]!\n[1]: https://io.adafruit.com\n[2]: https://adafruit.com\n[3]: http://node-arm.herokuapp.com\n[4]: https://learn.adafruit.com/the-adafruit-raspberry-pi-finder\n","created":"2015-08-25T22:51:53.890Z","modified":"2015-09-22T14:04:19.452Z","lastPublisher":{"name":"toddtreece","email":"todd@uniontownlabs.org"},"owners":[{"name":"toddtreece","email":"todd@uniontownlabs.org"}],"other":{"_attachments":{},"_from":".","_id":"adafruit-io-tunnel","_nodeVersion":"4.0.0","_npmUser":{"name":"toddtreece","email":"todd@uniontownlabs.org"},"_npmVersion":"2.14.2","_rev":"1-4dfaa9c0896b5f378c220ca21ce4578c","_shasum":"3c9635d340d9fecc84913d529026e93af46e771e","author":{"name":"Todd Treece","email":"todd@uniontownlabs.org"},"bugs":{"url":"https://github.com/adafruit/adafruit-io-tunnel/issues"},"directories":{},"dist-tags":{"latest":"2.0.1"},"dist":{"shasum":"3c9635d340d9fecc84913d529026e93af46e771e","tarball":"http://registry.npmjs.org/adafruit-io-tunnel/-/adafruit-io-tunnel-2.0.1.tgz"},"maintainers":[{"name":"toddtreece","email":"todd@uniontownlabs.org"}],"readmeFilename":"README.md","time":{"modified":"2015-09-22T14:04:19.452Z","created":"2015-08-25T22:51:53.890Z","1.0.0":"2015-08-25T22:51:53.890Z","1.0.1":"2015-08-25T22:53:08.279Z","2.0.0":"2015-08-26T18:40:25.019Z","2.0.1":"2015-09-22T14:04:06.639Z"}}}