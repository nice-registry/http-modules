{"name":"charset-parser","version":"0.2.0","description":"Parse charset string from http header and hmtl meta","main":"index.js","scripts":{"test":"make test"},"repository":"https://github.com/frankkanis/charset-parser","keywords":["charset","parse","utf-8","iso-8859-1","http","content-type","header","meta","html"],"licenses":[{"type":"MIT","url":"https://github.com/frankkanis/charset-parser/blob/master/LICENSE"}],"homepage":"https://github.com/frankkanis/charset-parser","devDependencies":{"mocha":"^2.1.0"},"gitHead":"993073bd6c6a2d31101d4f84bb8e9b74740a4688","versions":[{"number":"0.1.0","date":"2015-02-28T09:28:55.318Z"},{"number":"0.2.0","date":"2015-02-28T11:57:41.531Z"}],"readme":"Charset Parser\n==============\n\n- Node.js module\n- Parse charset string from http header and html data\n\n## Installation\n\n```sh\nnpm install charset-parser --save\n```\n\n## Usage\n* Input a string, the charsetParser will find the charset string\n\n```js\n// charsetParser(string);\nvar charset = charsetParser('Content-Type:text/html; charset=utf-8');\n```\n* Input: the content type from http header, binary html content and a default charset\n* If http header has no charset defined, the binary content will parse, if there is also no charset, it returns the default\n\n```js\n// charsetParser(header, html, default_charset);\nvar charset = charsetParser('Content-Type:text/html; charset=utf-8',\n                            '<html><head><meta charset=utf-8></head><body></body></html>',\n                            'iso-8859-1');\n```\n\n## Example\n* A small example with node.js modules 'request' and 'iconv-lite'\n\n```js\nvar request = require('request');\nvar iconv = require('iconv-lite');\nvar charsetParser = require('charset-parser');\n\niconv.extendNodeEncodings();\n\nrequest('http://example.com', {encoding: 'binary'}, function(err, res, binary){\n  // parse charset\n  var charset = charsetParser(res.headers['content-type'], binary, 'iso-8859-1');\n  // decode binary with charset\n  var html = iconv.decode(binary, charset);\n  // TODO: do something with html\n}\n\n```\n\n## Test\n\n```sh\nnpm install\nnpm test\n```\n\n## Release History\n\n* 0.2.0 Add more input parameters\n* 0.1.0 Initial release\n\n## License\n\n  [MIT](LICENSE)\n","created":"2015-02-28T09:28:55.318Z","modified":"2015-02-28T11:57:41.531Z","lastPublisher":{"name":"frankkanis","email":"frank.kanis@gmail.com"},"owners":[{"name":"frankkanis","email":"frank.kanis@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"charset-parser","_npmUser":{"name":"frankkanis","email":"frank.kanis@gmail.com"},"_npmVersion":"1.4.28","_rev":"1-1a84786b80b13d212778382b4e54bb65","_shasum":"230901088f5f6cb1659a8b5aaad2572db7a75b6b","author":{"name":"Frank Kanis","email":"frank.kanis@gmail.com"},"bugs":{"url":"https://github.com/frankkanis/charset-parser/issues"},"directories":{},"dist-tags":{"latest":"0.2.0"},"dist":{"shasum":"230901088f5f6cb1659a8b5aaad2572db7a75b6b","tarball":"http://registry.npmjs.org/charset-parser/-/charset-parser-0.2.0.tgz"},"maintainers":[{"name":"frankkanis","email":"frank.kanis@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-28T11:57:41.531Z","created":"2015-02-28T09:28:55.318Z","0.1.0":"2015-02-28T09:28:55.318Z","0.2.0":"2015-02-28T11:57:41.531Z"}}}