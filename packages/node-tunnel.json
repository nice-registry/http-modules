{"name":"node-tunnel","version":"0.2.2","description":"Http tunneling proxy","main":"index.js","repository":"https://github.com/resin-io/node-tunnel","scripts":{"pretest":"coffeelint ./index.coffee","test":"coffee -c index.coffee && mocha --compilers coffee:coffee-script/register test/","prepublish":"npm test"},"license":"MIT","dependencies":{"basic-auth-parser":"~0.0.2","bluebird":"^2.9.30","middleware-handler":"~0.2.0"},"devDependencies":{"chai":"^3.2.0","coffee-script":"~1.9.3","coffeelint":"~1.10.1","mocha":"^2.3.0","request":"^2.61.0"},"gitHead":"2e1c21f53fce6ae02ce5e1a6f4feda265cab0aeb","homepage":"https://github.com/resin-io/node-tunnel#readme","versions":[{"number":"0.0.1","date":"2015-06-29T11:56:19.037Z"},{"number":"0.0.2","date":"2015-06-29T12:19:17.762Z"},{"number":"0.1.0","date":"2015-07-16T12:13:42.496Z"},{"number":"0.1.1","date":"2015-09-04T17:00:08.626Z"},{"number":"0.1.2","date":"2016-01-18T08:19:27.566Z"},{"number":"0.2.0","date":"2016-02-24T01:58:03.026Z"},{"number":"0.2.1","date":"2016-02-24T14:25:59.458Z"},{"number":"0.2.2","date":"2016-05-23T11:56:00.379Z"}],"readme":"node-tunnel\n-----------\n\n[![npm version](https://badge.fury.io/js/node-tunnel.svg)](http://npmjs.org/package/node-tunnel)\n[![dependencies](https://david-dm.org/resin-io/node-tunnel.png)](https://david-dm.org/resin-io/node-tunnel.png)\n\nHTTP tunneling proxy library.\n\nInstallation\n------------\n\nInstall `node-tunnel` by running:\n\n```sh\n$ npm install node-tunnel\n```\n\nDocumentation\n-------------\n\n\n* [createTunnel()](#create_tunnel) = <code>Tunnel</code>\n* [Tunnel](#tunnel)\n  * [.use( function(req, cltSocket, head, next) )](#tunnel.use)\n  * [.listen(port)](#tunnel.listen)\n* [basicAuth(req, cltSocket, head, next)](#basic_auth)\n\n<a name=\"create_tunnel\"></a>\n### createTunnel() = <code>Tunnel</code>\nCreate an HTTP tunneling proxy. The returned object has methods **use** and **listen**.\n\nBy default the proxy allows connections to any host and port, without authentication.\n\n**Kind**: static method of <code>[node-tunnel](#module_token)</code>  \n**Summary**: Create a tunneling proxy.  \n**Returns**: <code>Tunnel object</code>  \n**Access:** public  \n\n**Example**  \n```js\n// Start a tunneling proxy on port 3128\ntunnel = createTunnel()\ntunnel.listen(3128)\n\n// Use node \"request\" library to do an http request through the tunnel.\n// Note the \"tunnel\" parameter set to true.\nrequest( { url: \"http://google.com\", \"proxy\": \"http://localhost:3128\", tunnel: true}, function( err, response ) {\n\tconsole.log('response body', response.body);\n} );\n```\n\n<a name=\"tunnel\"></a>\n### Tunnel\n\n<a name=\"tunnel.use\"></a>\n### Tunnel.use( function(req, cltSocket, head, next) ) \nUse a middleware function for rewriting request destination (by changing req.url),\nadd authorization or filter connections to only certain hosts and ports.\n\nThe parameters are the same as the [http](https://nodejs.org/api/http.html#http_event_connect) module passes on \"connect\" event,\nplus a callback function similar to [express](http://expressjs.com) middleware.\n\nKeep in mind that express middleware do not work with in conjunction with this module.\n\n**Kind**: method of <code>[Tunnel](#tunnel)</code>  \n**Summary**: Use a middleware.  \n**Access:** public  \n\n**Example**  \n```js\n// Start a tunneling proxy on port 3128\ntunnel = createTunnel()\ntunnel.use( function(req, cltSocket, head, next) {\n\t// Send all connections to port 80 of localhost.\n\treq.url = \"http://localhost:80\";\n\tnext();\n} );\ntunnel.listen(3128)\n```\n<a name=\"tunnel.listen\"></a>\n### Tunnel.listen(port, [cb])\nStart listening on the given port. An optional callback function is called when tunnel is ready to listen.\n\n**Kind**: method of <code>[Tunnel](#tunnel)</code>  \n**Summary**: Start listening.  \n**Access:** public  \n**Example**  \n```js\ntunnel = createTunnel()\ntunnel.listen(3128, function() {\n\tconsole.log(\"Tunnel listening on port 3128\");\n});\n```\n\n<a name=\"module_token.has\"></a>\n### basicAuth(req, cltSocket, head, next)\nParses Proxy-Authorization header and sets req.auth.username and req.auth.password properties.\n\nFurther middleware should be added to accept or reject connections based on this authentication information.\n**Kind**: method of <code>[Tunnel](#tunnel)</code>\t\n**Summary**: Parse Proxy-Authorization header.\n**Access:** public  \n**Example**  \n```js\ntunnel = createTunnel()\ntunnel.use(basicAuth);\ntunnel.use( function(req, cltSocket, head, next) {\n\tif (req.auth.username != \"user\" || req.auth.password != \"password\") {\n\t\tcltSocket.end() // close connection\n\t\treturn; // no further middleware need to be called\n\t}\n\tnext();\n} );\ntunnel.listen(3128, function() {\n\tconsole.log(\"Tunnel listening on port 3128\");\n});\n```\n\nSupport\n-------\n\nIf you're having any problem, please [raise an issue](https://github.com/resin-io/node-tunnel/issues/new) on GitHub and the Resin.io team will be happy to help.\n\nTests\n-----\n\nRun the test suite by doing:\n\n```sh\n$ npm install && npm test\n```\n\nContribute\n----------\n\n- Issue Tracker: [github.com/resin-io/node-tunnel/issues](https://github.com/resin-io/node-tunnel/issues)\n- Source Code: [github.com/resin-io/node-tunnel](https://github.com/resin-io/node-tunnel)\n\nBefore submitting a PR, please make sure that you include tests, and that [coffeelint](http://www.coffeelint.org/) runs without any warning:\n\nLicense\n-------\n\nThe project is licensed under the MIT license.\n","starsCount":1,"created":"2015-06-29T11:56:19.037Z","modified":"2017-05-30T16:12:24.955Z","lastPublisher":{"name":"resin.io","email":"accounts@resin.io"},"owners":[{"email":"accounts@resin.io","name":"resin.io"}],"other":{"_attachments":{},"_from":".","_id":"node-tunnel","_nodeVersion":"4.3.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-tunnel-0.2.2.tgz_1464004557892_0.6656364996451885"},"_npmUser":{"name":"resin.io","email":"accounts@resin.io"},"_npmVersion":"2.14.12","_rev":"3-64e28590f05277f39b44244047ccb680","_shasum":"d0d3d71bac05c40d86049e2e185077fac635f7e2","author":{"name":"Aleksis Brezas","email":"abresas@resin.io"},"bugs":{"url":"https://github.com/resin-io/node-tunnel/issues"},"directories":{},"dist-tags":{"latest":"0.2.2"},"dist":{"shasum":"d0d3d71bac05c40d86049e2e185077fac635f7e2","tarball":"http://registry.npmjs.org/node-tunnel/-/node-tunnel-0.2.2.tgz"},"maintainers":[{"email":"accounts@resin.io","name":"resin.io"}],"readmeFilename":"README.md","time":{"modified":"2017-05-30T16:12:24.955Z","created":"2015-06-29T11:56:19.037Z","0.0.1":"2015-06-29T11:56:19.037Z","0.0.2":"2015-06-29T12:19:17.762Z","0.1.0":"2015-07-16T12:13:42.496Z","0.1.1":"2015-09-04T17:00:08.626Z","0.1.2":"2016-01-18T08:19:27.566Z","0.2.0":"2016-02-24T01:58:03.026Z","0.2.1":"2016-02-24T14:25:59.458Z","0.2.2":"2016-05-23T11:56:00.379Z"},"users":{"shanewholloway":true}}}