{"name":"node_geoip_server","description":"Node js http server that delivers geoip data","version":"0.3.2","keywords":["node","geoip","ip lookup","geo lookup"],"repository":"https://github.com/gorillamania/node_geoip_server","homepage":"https://github.com/gorillamania/node_geoip_server","main":"app.js","engine":{"node":">=0.6.0","npm":"1"},"licences":[{"type":"OpenBSD","url":"http://www.openbsd.org/policy.html"}],"dependencies":{"geoip":"0.4.x","optimist":"0.3.x"},"readme":"Overview\n=================\nNode js http server that delivers geoip data via a web service. Once running, the server will\noutput a JSON strong with the users city, state, country, etc. like this:\n\n<pre>\n{\n \"country_code\": \"US\",\n \"country_code3\": \"USA\",\n \"country_name\": \"United States\",\n \"region\": \"CA\",\n \"city\": \"Pleasanton\",\n \"latitude\": 37.66239929199219,\n \"longitude\": -121.89630126953125,\n \"metro_code\": 807,\n \"dma_code\": 807,\n \"area_code\": 925,\n \"continent_code\": \"NA\"\n}\n</pre>\n\nInputs:\n* The ip address is determined by looking at the following, stopping once one is found\n    * <code>?ip=xxx.xxx.xxx.xxx</code> in the url\n    * <code>X-Forwarded-For</code> HTTP header (for proxies). Supports multiple proxies.\n    * IP address of the user via REMOTE_ADDR\n* <code>callback=functionName</code> wrap the result in this callback function for jsonp.\n* <code>indent=numSpaces</code> pretty print the output with this number of spaces. Ex. indent=2\n\n\nDependencies\n=================\n* Node/npm (duh)\n* The excellent node GeoIP library from kuno: https://github.com/kuno/GeoIP\n* MaxMind's geoip city database, available here:\nhttp://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\n* Optional: Forever, a utility to keep the service running in production. https://github.com/nodejitsu/forever\n\n\nInstallation\n=================\n1. Install node.js - https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager\n1. Install npm - http://npmjs.org/ (run the install.sh as root)\n1. Install the C api from maxmind. Recomend you use use a packagemanager of your choice\nfor your OS instead of compile from source, such as <code>sudo apt-get install geoip-database</code> or <code>sudo yum install GeoIP</code>. \nKnown to work with version 1.4.8\n1. Install dependencies for this project:\n    <code>npm install</code>\n1. Download and gunzip the latest http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz. \nThe default location $repo_root/GeoLiteCity.dat , if you put it somewhere else, specify\n<code>--geodb</code> when starting the service.\nRun this (from the root of the repo)\n<pre>curl -o GeoLiteCity.dat.gz http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\\\n   && gunzip GeoLiteCity.dat.gz</pre>\n\n\nUsage\n=================\nIf you are using Forever (recommended):\n<code>forever start -l forever.log -o out.log -e err.log app.js</code>\n\nIf you aren't using Forever\n<code>node app.js</code>\n\nOptions:\n<pre>\n  --port, -p      port to run the server on                      [default: 9042]\n  --geodb, -g     path to the GeoLiteCity database from MaxMind  [default: \"./GeoLiteCity.dat\"]\n  --help, -h, -?  this help message                              [default: false]\n</pre>\n\nUpdating the database\n=================\nMaxmind updates their city database once a month. Grab the latest one and restart the service. Here's a cron that will do it once a month\n<pre>\n42 0 13 * * cd /path/to/this/repo/ \\\n   && curl -o GeoLiteCity.dat.gz http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\\\n   && rm GeoLiteCity.dat\\\n   && gunzip GeoLiteCity.dat.gz\\\n   && forever restartall\n</pre>\n\nTODO\n=================\n* Unit tests\n\nLicense\n=================\nBSD, see <a href=\"https://github.com/gorillamania/node_geoip_server/blob/master/LICENSE\">LICENSE</a>\n","versions":[{"number":"0.3.0","date":"2012-10-25T18:15:07.707Z"},{"number":"0.3.1","date":"2012-10-25T18:23:39.331Z"},{"number":"0.1.0","date":"2012-10-25T18:24:47.187Z"},{"number":"0.3.2","date":"2012-10-25T18:32:37.025Z"}],"created":"2012-10-25T18:15:06.841Z","modified":"2012-10-25T18:32:37.025Z","lastPublisher":{"name":"gorillamania","email":"nick@sullivanflock.com"},"owners":[{"name":"gorillamania","email":"nick@sullivanflock.com"}],"other":{"_attachments":{},"_id":"node_geoip_server","_npmUser":{"name":"gorillamania","email":"nick@sullivanflock.com"},"_npmVersion":"1.1.63","_rev":"1-a1bfca028721a8c8a0b477a1b9f762b9","author":{"name":"Nick Sullivan"},"bugs":{"url":"http://github.com/gorillamania/node_geoip_server/issues"},"contributors":[{"name":"Nick Sullivan","email":"nick@sullivanflock.com","url":"http://creationeer.me"}],"directories":{},"dist-tags":{"latest":"0.3.2"},"dist":{"shasum":"94063d7791072c1d15dfc76817e6ea4150850783","tarball":"http://registry.npmjs.org/node_geoip_server/-/node_geoip_server-0.3.2.tgz"},"maintainers":[{"name":"gorillamania","email":"nick@sullivanflock.com"}],"time":{"modified":"2012-10-25T18:32:37.025Z","created":"2012-10-25T18:15:06.841Z","0.3.0":"2012-10-25T18:15:07.707Z","0.3.1":"2012-10-25T18:23:39.331Z","0.1.0":"2012-10-25T18:24:47.187Z","0.3.2":"2012-10-25T18:32:37.025Z"}}}