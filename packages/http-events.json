{"name":"http-events","version":"0.0.1","repository":"https://github.com/alexhancock/http-events","description":"A straight-forward module which exposes the services of an event emitter over HTTP","main":"server.js","keywords":["events","architecture","infrastructure","components","coupling"],"license":"MIT","dependencies":{"express":">=3.3.5","underscore":">=1.5.1","request":">=2.2.7"},"scripts":{"start":"node server.js"},"readme":"# HTTP-EVENTS\n\nA straight-forward module which exposes the services of an event emitter over HTTP.\n\n## Usage\n\nYou can listen to events, supplying a URL and receive simple HTTP `POST` requests with data when the event is emitted.\n\nThis module is an experiment designed to support loosely coupled infrastructural components much in the same way an \n`EventEmitter` does for application components.\n\n## Installation\n\n`npm install http-events`\n\n## API\n\nThis module has one call...\n\n* `listen` - Takes a integer value, to specify which port the `http-event` server should listen on.\n\nAll the rest of the interaction with this module is done using `application/json` traffic over HTTP. URL Schemes are as follows...\n\n* `/on/:eventName` - Subscribe to have POSTs sent to the callback URL whenever an event fires\n* `/off/:eventName` - Unsubscribe from POSTs when the event fires the URL\n* `/emit/:eventName` - Emit an event and pass data to other subscribed components\n\n* Both the `/on` and `/off` expect an `application/json` payload of format...\n```\n{ postBack: 'example.com/someHandlerPath' }\n```\n\n* The `/emit` endpoint expects an `application/json` payload with the arguments for the event emission.\n```\n{ whatever: { json: 'you would like to send' } }\n```\n\n## Example\n\n```javascript\n// server.js\nvar httpEvents = require('http-events');\nhttpEvents.listen(8080);\n```\n\n```javascript\n// component_one.js\nvar request = require('request-json');\nvar express = require('express');\nvar app = express();\napp.use(express.bodyParser());\n\nvar client = request.newClient('http://0.0.0.0:8080/');\n\nclient.post('on/someEvent', { postBack: 'http://0.0.0.0:9091/someEventHandler' }, function(err, res){\n  // res.body === 'subscribed'\n});\n\napp.post('/someEventHandler', function(req, res){\n  console.log(req.body); // { message: 'Hi!' }\n  res.end();\n});\n\napp.listen(9091);\n```\n\n```javascript\n// component_two.js\nvar request = require('request-json');\nvar client = request.newClient('http://0.0.0.0:8080/');\n\nclient.post('emit/someEvent', { message: 'Should get this' }, function(err, res){\n  // res.body === 'emitted'\n});\n```\n\n## TODOS\n\n* Unit tests\n","versions":[{"number":"0.0.1","date":"2013-08-25T03:55:45.288Z"}],"created":"2013-08-25T03:55:44.047Z","modified":"2013-08-25T03:55:45.288Z","lastPublisher":{"name":"alexhancock","email":"alex@alexhancock.com"},"owners":[{"name":"alexhancock","email":"alex@alexhancock.com"}],"other":{"_attachments":{},"_from":".","_id":"http-events","_npmUser":{"name":"alexhancock","email":"alex@alexhancock.com"},"_npmVersion":"1.3.8","_rev":"1-cbc5dab8155c1a7d16705f8bdf3c00a3","author":{"name":"Alex J Hancock"},"bugs":{"url":"https://github.com/alexhancock/http-events/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"d7f976c84c7b4ac75cea585af7b4e568f8bd0d98","tarball":"http://registry.npmjs.org/http-events/-/http-events-0.0.1.tgz"},"maintainers":[{"name":"alexhancock","email":"alex@alexhancock.com"}],"readmeFilename":"readme.md","time":{"modified":"2013-08-25T03:55:45.288Z","created":"2013-08-25T03:55:44.047Z","0.0.1":"2013-08-25T03:55:45.288Z"}}}