{"name":"slothbear_http","version":"1.0.6","description":"An HTTP server framework for node.js built to handle http server creation and routing functionality.","main":"index.js","scripts":{"test":"./node_modules/mocha/bin/mocha"},"repository":"https://github.com/bharding2/slothbear_http","keywords":[],"license":"MIT","homepage":"https://github.com/bharding2/slothbear_http#readme","devDependencies":{"chai":"^3.5.0","chai-http":"^2.0.1","eslint":"^2.8.0","gulp":"^3.9.1","gulp-eslint":"^2.0.0","gulp-mocha":"^2.2.0","mocha":"^2.4.5"},"gitHead":"33ffa410da929dece44d9e8d74697e593d615962","versions":[{"number":"1.0.0","date":"2016-04-18T03:57:48.916Z"},{"number":"1.0.1","date":"2016-04-18T04:10:57.984Z"},{"number":"1.0.2","date":"2016-04-18T16:52:23.311Z"},{"number":"1.0.3","date":"2016-04-18T17:34:53.711Z"},{"number":"1.0.4","date":"2016-04-18T17:40:13.386Z"},{"number":"1.0.5","date":"2016-04-18T20:54:20.618Z"},{"number":"1.0.6","date":"2016-04-20T20:31:49.560Z"}],"readme":"## Slothbear HTTP\nAn HTTP server framework for node.js built to handle http server creation and routing functionality.\n\n### Contents\n* Getting Started\n* API\n  * Server\n  * Router\n* Dependencies\n* Authors\n* License\n\n### Getting Started\n* Install locally to a project by running ` npm install slothbear_http `\n* Import the module into your project by using the following structure: ` var slothbear = require('slothbear_http'); `.  The slothbear variable can be defined using any name you choose, but for the following examples we will use the name slothbear.\n* Here is a quick example on how you would get a server started on port 3000 with ` GET ` and ` POST ` routes:\n```\nconst slothbear = require('slothbear_http');\n\nslothbear.router.get('/', (request, response) => {\n  response.write('Hello World');\n  response.end();\n});\nslothbear.router.post('/slothbear', (request, response) => {\n  response.write('Successfully posted to /slothbear');\n  response.end();\n});\n\nslothbear.server(3000);\n```\n\n### API\n\n### Server\n#### slothbear.server(port)\nTo launch your server, use the ` slothbear.server ` method.  This method takes the port you want to listen on as a variable, and launches your server when run.  For example, ` slothbear.server(3000); ` would launch a server that listens for incoming requests on port 3000.\n\n### Router\n#### slothbear.router\nTo set up the routing for your server, use the built in ` slothbear.router `.  The router is already internally linked to the ` slothbear.server ` method, so all you need to do is add your routes directly to the ` slothbear.router ` property.  For example, a simple get request to the \"/slothbear\" route can be set up like so: ` slothbear.router.get('/slothbear', callback); `.  Further routes can also be added directly to the ` slothbear.router `, or chained together:  \n```\nslothbear.router.get('/', (request, response) => {\n    some GET logic\n  })\n  .get('/sloth', (request, response) => {\n    some other GET logic for /sloth route\n  })\n  .post('/bear', (request, response) => {\n    some POST logic for the /bear route\n  });\n```\n\n#### Routing using REST verbs\n##### slothbear.router.get(path, callback(req, res))\nAdds a ```GET``` route that handles requests with the passed-in callback. Returns the router to allow for method chaining. Example:\n```\nslothbear.router.get('/index', (req, res) => {\n  res.write('Hello World');\n  res.end();\n});\n```\n\n##### slothbear.router.post(path, callback(req, res))\nAdds a ```POST``` route that handles requests with the passed-in callback. Return the router to allow for method chaining. Example:\n```\nslothbear.router.post('/index', (req, res) => {\n  req.on('data', (data) => {\n    res.writeHead(200, { 'Content-Type': 'application/json' });\n    res.write(data);\n    res.end();\n  });\n});\n```\n\n##### slothbear.router.put(path, callback(req, res))\nAdds a ```PUT``` route that handles requests with the passed-in callback. Return the router to allow for method chaining.\n##### slothbear.router.patch(path, callback(req, res))\nAdds a ```PATCH``` route that handles requests with the passed-in callback. Return the router to allow for method chaining.\n##### slothbear.router.delete(path, callback(req, res))\nAdds a ```DELETE``` route that handles requests with the passed-in callback. Return the router to allow for method chaining.\n\n### Dependencies\n* Testing done using [Mocha](https://github.com/mochajs/mocha) and [Chai](https://github.com/chaijs/chai) with the [Chai-http](https://github.com/chaijs/chai-http) assertion library\n* Task management done using [gulp](https://github.com/gulpjs/gulp)\n* Routing functionality leans very heavily on a Router constructor function built by Tyler Morgan for the CodeFellows 401d7 advanced javascript class.\n\n### Authors\nThis module was built by:\n* [Phillip Nguyen](https://github.com/philmein23)\n* [Greg Magdsick](https://github.com/gregmagdsick)\n* [Ben Harding](https://github.com/bharding2)\n\n### License\n* This software was built under the [MIT](https://opensource.org/licenses/MIT) open-source license\n","created":"2016-04-18T03:57:48.916Z","modified":"2016-04-20T20:31:49.560Z","lastPublisher":{"name":"bharding2","email":"b.harding@gmail.com"},"owners":[{"name":"bharding2","email":"b.harding@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"slothbear_http","_nodeVersion":"4.2.3","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/slothbear_http-1.0.6.tgz_1461184308562_0.09023701818659902"},"_npmUser":{"name":"bharding2","email":"b.harding@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-3ebdbc1f71113888e081dcc2260719d6","_shasum":"c6e84be7f40dfa24f17a34c52463f78abc4a6726","author":{"name":"Benjamin Harding","email":"b.harding@gmail.com"},"bugs":{"url":"https://github.com/bharding2/slothbear_http/issues"},"contributors":[{"name":"Phillip Nguyen"},{"name":"Greg Magdsick"},{"name":"Benjamin Harding"}],"directories":{"test":"test"},"dist-tags":{"latest":"1.0.6"},"dist":{"shasum":"c6e84be7f40dfa24f17a34c52463f78abc4a6726","tarball":"http://registry.npmjs.org/slothbear_http/-/slothbear_http-1.0.6.tgz"},"maintainers":[{"name":"bharding2","email":"b.harding@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2016-04-20T20:31:49.560Z","created":"2016-04-18T03:57:48.916Z","1.0.0":"2016-04-18T03:57:48.916Z","1.0.1":"2016-04-18T04:10:57.984Z","1.0.2":"2016-04-18T16:52:23.311Z","1.0.3":"2016-04-18T17:34:53.711Z","1.0.4":"2016-04-18T17:40:13.386Z","1.0.5":"2016-04-18T20:54:20.618Z","1.0.6":"2016-04-20T20:31:49.560Z"}}}