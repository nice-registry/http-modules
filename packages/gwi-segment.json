{"name":"gwi-segment","version":"2.1.1","description":"Tracking library using Segment's HTTP API directly","scripts":{"test":"jasmine"},"main":"src/segment.js","repository":"https://github.com/GlobalWebIndex/segment","keywords":["segment","analytics"],"license":"ISC","homepage":"https://github.com/GlobalWebIndex/segment#readme","devDependencies":{"fetch-mock":"^5.9.4","jasmine":"^2.5.3"},"dependencies":{"btoa":"^1.1.2","es6-promise":"^4.1.0","isomorphic-fetch":"^2.2.1"},"gitHead":"dca76fc324d98ec0eb125302d55fb46c4b55c302","versions":[{"number":"0.0.1","date":"2017-03-13T08:41:59.879Z"},{"number":"1.0.0","date":"2017-03-13T08:49:28.032Z"},{"number":"1.0.1","date":"2017-03-16T17:59:07.630Z"},{"number":"2.0.0","date":"2017-03-31T11:46:09.325Z"},{"number":"2.1.0","date":"2017-05-03T12:34:04.639Z"},{"number":"2.1.1","date":"2017-05-30T07:31:39.157Z"}],"readme":"# Segment\n\n[![CircleCI](https://circleci.com/gh/GlobalWebIndex/segment/tree/master.svg?style=svg)](https://circleci.com/gh/GlobalWebIndex/segment/tree/master)\n\nThis is an unofficial alternative to [analytics.js](https://segment.com/docs/sources/website/analytics.js/) by [segment.io](https://segment.io).\nUnlike original implementation this library speaks with Segment's API directly and delegates responsibility of data distribution to back-end (as official Ruby, Java, Clojure, Python and many others do).\nThis helps you to prevent many issues with data inconsistency between various back-ends and optimize number of HTTP payloads required for tracks.\nThis library also comes with few other improvements over official one namely it uses **batch api** to prevent issues with [rate limits](https://segment.com/docs/sources/server/http/#rate-limits),\nprevents tracks without `userId` by using internal queue, has **Promise** API to make easy to reason about async actions and **comes with test mocks** you can use in your test suit.\n\n## What if I actually want to track event before calling identify?\n\nNo problem with that. Just use `anonymousTrack` or `anonymousPage`.\n\n## Demo\n\n![demo](http://i.imgur.com/EGNqJLS.gif)\n\n## Usage\n\nAt first install this using npm:\n\n```\n$ npm install gwi-segment --save\n```\n\n### The Most Simple Use-Case\n\nIn most cases you want to just initialize library and store instance to global singleton object like this:\n\n```javascript\nconst Segment = require('gwi-segment');\n\nwindow.segment = Segment.getClient('YOUR_SEGMENT_WRITE_KEY');\n```\n\nin case you need more instances or fancier implementation of static object you're free to do it as you wish!\n\n## Api Reference\n\nThis is all you have available for production usage:\n\n### Static Initialization\n\nUser static `getClient()` function to initialize instance of client. This is api of that function:\n\n- `writeKey` [string] - your segment.io write key. **required**\n- `options` [object] - custom settings. **optional**\n  - `context` [object] - custom meta to be added to segment's context record.\n  - `timeout` [number] - bulk \"debounce\" timeout in ms. default: 100; use `-1` for instant (sync) requests.\n\nCalling `getClient()` returns instance of api client. This object implements this public interface:\n\n### #identify\n\nUsed for identifying user. Id of user is than used in all `track` and `page` calls.\n\n- `userId` [string] - identification of user **required**\n- `traits` [object] - additional user information **optional**\n\n**returns promise.**\n\n#### Example\n\n```javascript\nconst userId = 'someId';\n\nconst traits = {\n  god: true\n};\n\nsegment.identify(userId, traits);\n```\n\n### #track\n\nMain method for tracking user's action in your application.\n\n- `event` [string] - name/id of event **required**\n- `properties` - additional information to event **optional**\n\n**returns promise.**\n\n#### Example\n\n```javascript\nconst event = 'Clicked a CTA'\n\nconst properties = {\n  ctaId: 'foo'\n};\n\nsegment.track(event, properties);\n```\n\n### #anonymousTrack\n\nSame as track but doesn't require `identify` call (to get `userId` to track).\n\n- `anonymousId` [string] - value that will be send as user id just for this track\n- `event` [string] - name/id of event **required**\n- `properties` - additional information to event **optional**\n\n**returns promise.**\n\n#### Example\n\n```javascript\nconst anonymousId = '123abc';\nconst event = 'Clicked a CTA'\n\nconst properties = {\n  ctaId: 'foo'\n};\n\nsegment.anonymousTrack(anonymousId, event, properties);\n```\n\n### #page\n\nUsed for tracking page event.\n\n- `name` [string] - name/id of page displayed **required**\n- `properties` [object] - addition information **optional**\n\n**returns promise.**\n\n#### Example\n\n```javascript\nconst name = 'Index Page'\n\nconst properties = {\n  referrer: 'www.google.com'\n};\n\nsegment.page(name, properties);\n```\n\n### #anonymousPage\n\nSame as `page` but doesn't require `identify` call (to get `userId` for page event).\n\n- `anonymousId` [string] - value that will be send as user id just for this track\n- `name` [string] - name/id of page displayed **required**\n- `properties` [object] - addition information **optional**\n\n**returns promise.**\n\n```javascript\nconst anonymousId = '123abc';\nconst name = 'Index Page'\n\nconst properties = {\n  referrer: 'www.google.com'\n};\n\nsegment.anonymousPage(anonymousId, name, properties);\n```\n\n### #force\n\nSend all equeued events in batch request immediately. This is usually useful before calling things like `location.reload();` or `location.href =`.\n\n*no arguments*\n\n**returns `undefined` (void).**\n\n## How Queue and Waiting For UserId Works\n\nNo `#track` nor `#page` call is proceed before `#identify` is called. This is to prevent events with missing `userId` to go through the system.\nAll events happened before `#identify` are added to queue and are waiting for userId. Once `#identify` is called `userId` from this call is used\nfor all waiting events which are waiting. Events are then tracked in order they were added to queue.\n\n## How Batching Works\n\nBy default there is `100`ms timeout for collecting all tracks into single [batch](https://segment.com/docs/sources/server/http/#batch) request. This means events are not sent immediately\nbut are collected into one single request. This helps you to overcome issue with [rate limits](https://segment.com/docs/sources/server/http/#rate-limits) and optimize requests from app or website.\nYou can change default timeout using `options.timeout` or disable it completely by passing `-1` as timeout value.\n\n## Test Mocking\n\nSimilarly to main client you can initialize test mock instead. This is done using `getTestMockClient()` static function and returns instance implementing default API.\nHowever this client doesn't really speaks to API but instead pushes events into internal stack. Also this client doesn't perform any merging to batch API\nbut rather keeps all events isolated to make it easier to use in test suit. Public api still uses promises as production one but in fact works synchronously to make your tests simpler and faster.\nIt also contains extra `inspect` name-space for checking state of tracks.\n\n### #inspect.allEvents\n\nReturns array of all events tracked (including identify and page).\n\n*no arguments*\n\n### #inspect.lastEvent\n\nReturns last event tracked (including identify and page).\n\n*no arguments*\n\n###  #inspect.clearEvents\n\nClears state of test mock.\n\n*no arguments*\n\n## Support\n\nThis package supports Node 0.12 and higher.\n\n## Licence\n\n[ISC](https://en.wikipedia.org/wiki/ISC_license)\n","created":"2017-03-13T08:41:59.879Z","modified":"2017-05-30T08:47:15.800Z","lastPublisher":{"name":"renra","email":"jan.renra.gloser@gmail.com"},"owners":[{"name":"renra","email":"jan.renra.gloser@gmail.com"},{"name":"turbo_mack","email":"marek.faj@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"gwi-segment","_nodeVersion":"4.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gwi-segment-2.1.1.tgz_1496129498175_0.41690641618333757"},"_npmUser":{"name":"renra","email":"jan.renra.gloser@gmail.com"},"_npmVersion":"2.14.2","_rev":"7-b7eb2c97f42d1f5c3292b84c38d47580","_shasum":"27f90f1b78a214db4a16e756f5c4c64b3f2d147c","author":{"name":"Jan Renra Gloser","email":"jan@globalwebindex.net"},"bugs":{"url":"https://github.com/GlobalWebIndex/segment/issues"},"contributors":[{"name":"Marek Fajkus","email":"marek@globalwebindex.net"}],"directories":{},"dist-tags":{"latest":"2.1.1"},"dist":{"shasum":"27f90f1b78a214db4a16e756f5c4c64b3f2d147c","tarball":"https://registry.npmjs.org/gwi-segment/-/gwi-segment-2.1.1.tgz"},"maintainers":[{"name":"renra","email":"jan.renra.gloser@gmail.com"},{"name":"turbo_mack","email":"marek.faj@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-30T08:47:15.800Z","created":"2017-03-13T08:41:59.879Z","0.0.1":"2017-03-13T08:41:59.879Z","1.0.0":"2017-03-13T08:49:28.032Z","1.0.1":"2017-03-16T17:59:07.630Z","2.0.0":"2017-03-31T11:46:09.325Z","2.1.0":"2017-05-03T12:34:04.639Z","2.1.1":"2017-05-30T07:31:39.157Z"}}}