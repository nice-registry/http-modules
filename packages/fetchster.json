{"name":"fetchster","version":"1.0.9","repository":"https://github.com/davidlashlee/fetchster","homepage":"https://github.com/davidlashlee/fetchster","description":"fetch wrapper for easy promise based http requests","main":"dist/index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","build":"babel src -d dist"},"keywords":["fetch","ajax","javascript"],"license":"MIT","devDependencies":{"babel-cli":"^6.3.17","babel-preset-es2015":"^6.3.13"},"gitHead":"baf8858b93fd9c572a162f1f617081927b860480","versions":[{"number":"1.0.0","date":"2015-12-25T22:07:35.514Z"},{"number":"1.0.1","date":"2015-12-25T22:29:28.905Z"},{"number":"1.0.2","date":"2015-12-25T22:34:33.422Z"},{"number":"1.0.3","date":"2015-12-25T22:36:40.987Z"},{"number":"1.0.4","date":"2015-12-25T22:39:27.270Z"},{"number":"1.0.5","date":"2015-12-25T23:15:29.882Z"},{"number":"1.0.6","date":"2015-12-25T23:17:36.818Z"},{"number":"1.0.7","date":"2015-12-25T23:22:04.259Z"},{"number":"1.0.8","date":"2015-12-25T23:27:25.087Z"},{"number":"1.0.9","date":"2015-12-27T04:09:46.342Z"}],"readme":"# Fetchster\nFetch wrapper for easy promise based http requests\n\n## Installation\n\n```bash\n$ npm install fetchster\n```\nimport Fetchster via require or es6 module loading\n\n```require Fetchster = \"fetchster\"```\n\n```import Fetchster from \"fetchster\"```\n\n\nHTTP methods supported - get, post, put, delete, head\n\nadditionally Fetchster comes with a utility function that converts an object into a string of query params.\n\n```js\nvar queryParams = {page: 3, resultsPerPage: 30, sort: \"asscending\"}\nvar sample = Fetchster.seralize(queryParams)\nconsole.log(sample) //=> \"page=3&resultsPerPage=30&sort=asscending\"\n```\n\nFetchster.seralize(queryParams)\n- *required* OBJECT object containing query params in the format {key: value, otherKey: otherValue}\n\n## http methods\n\nGET, HEAD\n\n```js\n...\n\n Fetchster.get('http://someapi.org/posts/3').then((response) => {console.log(response)})\n```\n\n```js\n Fetchster = require('fetchster')\n\n Fetchster.head('http://someapi.org/posts/3').then((response) => {console.log(response)})\n```\n\nFetchster.get(url, options, errorHandler)\n\nFetchster.head(url, options, errorHandler)\n\n- *required* STRING url - url of api to hit\n- *optional* OBJECT options - contains configuration defaults to {headers: 'Content-Type': 'application/json'}}, see options section for details.\n- *optional* FUNCTION errorHandler - function that requires 1 param of err which contains the error object, if not supplied this defaults to console.error(err)\n\nPOST, PUT, DELETE\n\n```js\n ...\n \n var body = {sticks: 3, hipster: \"dan\"}\n \n Fetchster.post('http://someapi.co/hipsters', body).then((response) => console.log(response)}\n \n var body = {name: \"dan\", hasDog: true}\n \n Fetchster.put('http://someapi.co/hipsters/1', body).then((response) => console.log(response)}\n \n var body = {name: \"dan\"}\n \n  Fetchster.put('http://someapi.co/hipsters', body).then((response) => console.log(response)}\n```\n\nFetchster.post(url, data, options, errorHandler)\n\nFetchster.put(url, data, options, errorHandler)\n\nFetchster.delete(url,data, options, errorHandler)\n\n- *required* STRING url - url of api to hit\n- *required* OBJECT data - object that contains all the information you want to send on the post body\n- *optional* OBJECT options - contains configuration defaults to {headers: 'Content-Type': 'application/json'}}, see options section for details.\n- *optional* FUNCTION errorHandler - function that requires 1 param of err which contains the error object, if not supplied this defaults to console.error(err)\n\n## Options\n```js\n{\n  headers: //Any headers you want to add to your request, contained within a Headers object or ByteString.\n  mode: // The mode you want to use for the request, e.g., cors, no-cors, or same-origin.\n  credentails: //The request credentials you want to use for the request: omit, same-origin, or include. To automatically send cookies for the current domain, this option must be provided.\n  catche: //The cache mode you want to use for the request: default, no-store, reload, no-cache, force-cache, or only-if-cached.\n}\n```\n\nfetch options [documentation](https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch) borrowed from Mozilla Contributors\n\n","created":"2015-12-25T22:07:35.514Z","modified":"2015-12-27T04:09:46.342Z","lastPublisher":{"name":"davidlashlee","email":"davidlashlee@gmail.com"},"owners":[{"name":"davidlashlee","email":"davidlashlee@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fetchster","_nodeVersion":"5.1.0","_npmUser":{"name":"davidlashlee","email":"davidlashlee@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-221e2ca9a989ea737e2fcc1f999342de","_shasum":"1e9976968013085363078fc756b28ad544a6db69","author":{"name":"David Lashlee"},"bugs":{"url":"https://github.com/davidlashlee/fetchster/issues"},"directories":{},"dist-tags":{"latest":"1.0.9"},"dist":{"shasum":"1e9976968013085363078fc756b28ad544a6db69","tarball":"http://registry.npmjs.org/fetchster/-/fetchster-1.0.9.tgz"},"maintainers":[{"name":"davidlashlee","email":"davidlashlee@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-12-27T04:09:46.342Z","created":"2015-12-25T22:07:35.514Z","1.0.0":"2015-12-25T22:07:35.514Z","1.0.1":"2015-12-25T22:29:28.905Z","1.0.2":"2015-12-25T22:34:33.422Z","1.0.3":"2015-12-25T22:36:40.987Z","1.0.4":"2015-12-25T22:39:27.270Z","1.0.5":"2015-12-25T23:15:29.882Z","1.0.6":"2015-12-25T23:17:36.818Z","1.0.7":"2015-12-25T23:22:04.259Z","1.0.8":"2015-12-25T23:27:25.087Z","1.0.9":"2015-12-27T04:09:46.342Z"}}}