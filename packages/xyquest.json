{"name":"xyquest","version":"2.1.1","description":"A proxy based HTTP requests utility","main":"index.js","scripts":{"test":"nyc ava","transpile":"babel index.js --presets es2015 --out-file es5.js","prepublish":"npm run transpile"},"repository":"https://github.com/oakfang/xyquest","keywords":["proxy","request","http"],"license":"MIT","homepage":"https://github.com/oakfang/xyquest#readme","engines":{"node":">=6.0.0"},"dependencies":{"request":"^2.81.0","standard-http-error":"^2.0.0"},"devDependencies":{"ava":"^0.19.1","babel-cli":"^6.24.1","babel-preset-es2015":"^6.24.1","nyc":"^10.3.2","proxyquire":"^1.7.11"},"gitHead":"214380b531588772fd90d060fa722286eb762149","versions":[{"number":"1.0.0","date":"2017-05-09T12:45:16.343Z"},{"number":"2.0.0","date":"2017-05-10T16:36:15.970Z"},{"number":"2.1.0","date":"2017-05-11T14:19:37.128Z"},{"number":"2.1.1","date":"2017-05-14T07:48:37.784Z"}],"readme":"# xyquest\nA proxy based HTTP requests utility\n\n## Installation\n`npm install --save xyquest`\n\n## Examples\n**xyquest** is a flexible HTTP lib, which utilises adapters of the form:\n```ts\ninterface Options {\n  uri: string,\n  method: string,\n  body?: any,\n}\n\ntype XyquestAdapter = (options:Options) => Promise<any>;\n```\n\nIncluded within is a simple adapter based on the **request** module.\n\n### Usage with `request`\n```js\nconst request = require('xyquest/request');\nconst xyquest = require('xyquest')(request, 'https://jsonplaceholder.typicode.com', { json: true });\n\nasync function updateFirstComment(postId, patch) {\n  const [comment] = await xyquest.posts[postId].comments.get();\n  Object.assign(comment, patch);\n  await xyquest.comments[comment.id].put(comment);\n  return true;\n}\n```\n\n### Frontend Usage\nYou can use use the special `xyquest/es5` module to import an uglifiable version of this lib. Here's an example using it and the builtin `fetch` function:\n\n```js\nfunction fetchAdapter(options) {\n  options.method = options.method.toUpperCase();\n  const body = new FormData();\n  body.append('json', JSON.stringify(options.body));\n  options.body = body;\n  return fetch(options.uri, options).then(response => response.json());\n}\n\nconst xyquest = require('xyquest/es5')(fetchAdapter, 'https://jsonplaceholder.typicode.com');\n\nasync function updateFirstComment(postId, patch) {\n  const [comment] = await xyquest.posts[postId].comments.get();\n  Object.assign(comment, patch);\n  await xyquest.comments[comment.id].put(comment);\n  return true;\n}\n```\n\n#### A note about `hyphenate`\n**xyquest** options all have a `hyphenate` key that is set to `true` by default. It ensures that calling props like `xyquest.userControls` will be translated to the url `/user-controls`. If your API does'nt follow this convention, you can set it to `false` globally or individually.","created":"2017-05-09T12:45:16.343Z","modified":"2017-05-14T07:48:37.784Z","lastPublisher":{"name":"oakfang","email":"oakfang@gmail.com"},"owners":[{"name":"oakfang","email":"oakfang@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"xyquest","_nodeVersion":"6.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/xyquest-2.1.1.tgz_1494748115903_0.5715378355234861"},"_npmUser":{"name":"oakfang","email":"oakfang@gmail.com"},"_npmVersion":"3.10.10","_rev":"4-f5d47963ce4fb9f2ed754531b8ef18c0","_shasum":"b8ba33ba9357d46f9f8746b95d5ef980aea2141c","author":{"name":"Alon Niv"},"bugs":{"url":"https://github.com/oakfang/xyquest/issues"},"directories":{},"dist-tags":{"latest":"2.1.1"},"dist":{"shasum":"b8ba33ba9357d46f9f8746b95d5ef980aea2141c","tarball":"https://registry.npmjs.org/xyquest/-/xyquest-2.1.1.tgz"},"maintainers":[{"name":"oakfang","email":"oakfang@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-14T07:48:37.784Z","created":"2017-05-09T12:45:16.343Z","1.0.0":"2017-05-09T12:45:16.343Z","2.0.0":"2017-05-10T16:36:15.970Z","2.1.0":"2017-05-11T14:19:37.128Z","2.1.1":"2017-05-14T07:48:37.784Z"}}}