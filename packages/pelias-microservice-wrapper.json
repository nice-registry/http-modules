{"name":"pelias-microservice-wrapper","version":"1.1.2","description":"Module that provides a convenience wrapper around HTTP GET microservices","main":"index.js","scripts":{"test":"node test/test | tap-dot","lint":"jshint .","travis":"npm run check-dependencies && npm test","semantic-release":"semantic-release pre && npm publish && semantic-release post","validate":"npm ls","check-dependencies":"npm-check --production"},"license":"MIT","engines":{"node":">= 4.0.0"},"repository":"https://github.com/pelias/microservice-wrapper","keywords":["pelias"],"devDependencies":{"express":"^4.15.2","npm-check":"git://github.com/orangejulius/npm-check.git#disable-update-check","pelias-mock-logger":"^1.1.0","proxyquire":"^1.7.11","semantic-release":"^6.3.2","tap-dot":"^1.0.5","tape":"^4.6.3"},"dependencies":{"lodash":"^4.17.4","pelias-logger":"^0.2.0","superagent":"^3.5.2"},"pre-commit":["lint","validate","test","check-dependencies"],"gitHead":"69eb5e91a5cb6c2d4157c55f39a39e585885a47e","homepage":"https://github.com/pelias/microservice-wrapper#readme","versions":[{"number":"1.0.0","date":"2017-05-05T19:45:03.765Z"},{"number":"1.1.0","date":"2017-05-05T21:37:28.649Z"},{"number":"1.1.1","date":"2017-06-06T14:11:43.102Z"},{"number":"1.1.2","date":"2017-06-09T15:40:18.596Z"}],"readme":"> This repository is part of the [Pelias](https://github.com/pelias/pelias) project. Pelias is an open-source, open-data geocoder built by [Mapzen](https://www.mapzen.com/) that also powers [Mapzen Search](https://mapzen.com/projects/search). Our official user documentation is [here](https://mapzen.com/documentation/search/).\n\n# Pelias Microservice Wrapper\n\n![Travis CI Status](https://travis-ci.org/pelias/microservice-wrapper.svg)\n[![Gitter Chat](https://badges.gitter.im/pelias/pelias.svg)](https://gitter.im/pelias/pelias?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n## Overview\n\nModule that provides a convenience wrapper for calling Pelias microservices such as [Placeholder](https://github.com/pelias/placeholder) or [Point-in-Polygon Service](https://github.com/pelias/pip-service) over HTTP GET.  \n\n## Installation\n\n```bash\n$ npm install pelias-microservice-wrapper\n```\n\n[![NPM](https://nodei.co/npm/pelias-microservice-wrapper.png?downloads=true&stars=true)](https://nodei.co/npm/pelias-microservice-wrapper)\n\n## NPM Module\n\nThe `pelias-microservice-wrapper` npm module can be found here:\n\n[https://npmjs.org/package/pelias-microservice-wrapper](https://npmjs.org/package/pelias-microservice-wrapper)\n\n## Usage\n\nThis module is primarily used in the Pelias [API](https://github.com/pelias/api) to call microservices.  To add support for a microservice in the API, define a class that derives from [ServiceConfiguration](https://github.com/pelias/microservice-wrapper/blob/master/ServiceConfiguration.js), override any methods, and inject into a [service](https://github.com/pelias/microservice-wrapper/blob/master/service.js) instance.  \n\nThe [ServiceConfiguration](https://github.com/pelias/microservice-wrapper/blob/master/ServiceConfiguration.js) constructor accepts a string service name (returned by `getName()` and an object containing the three optional properties:\n\n| property | required | default | description |\n| --- | --- | --- | --- |\n| `baseUrl` | no | none | the base URL used for contacting a service, causes `isEnabled()` to return `false` when an empty string |\n| `timeout` | no | `250` | the number of milliseconds a request should wait for a server response before timing out |\n| `retries` | no | `3` | the number of retries to attempt before returning an error |\n\n### Example\n\n```javascript\nconst DemoServiceConfig = class extends ServiceConfiguration {\n  constructor(configBlob) {\n    super('demo microservice', configBlob);\n  }\n  getUrl(req) {\n    return this.baseUrl + '/demo';\n  }\n  getParameters(req) {\n    return {\n      size: req.clean.size,\n      offset: 0\n    };\n  }\n  getHeaders(req) {\n    return {\n      'some-header': req.clean.some_header\n    };\n  }\n};\n\nconst demoService = serviceWrapper(new DemoServiceConfig({\n  url: 'http://localhost:1234'\n}));\n\nconst req = {\n  size: 15,\n  some_header: 'header value'\n};\n\n// pseudocode tests for illustration purposes\ndemoService.getUrl() === 'http://localhost:1234/demo';\n\ndemoService.isEnabled() === true\n\ndemoService.getParameters(req) === {\n  size: 15,\n  offset: 0\n};\n\ndemoService.getHeaders(req) === {\n  some_header: 'header value'\n};\n```\n\n### Methods\n\n| method | override? | returns | description |\n| --- | --- | --- | --- |\n| `getName` | not recommended | value passed to constructor | returns the name of the service |\n| `getBaseUrl` | not recommended | `url` property of configuration passed to constructor | base URL of microservice |\n| `isEnabled` | not recommended | `true` if `baseUrl` is a non-empty string | helper method for determining if the service should be considered enabled |\n| `getUrl` | yes | value of `getBaseUrl` unless overridden | used for appending other value to the baseUrl (but not request parameters) |\n| `getParameters` | yes| `{}` unless overridden | any request parameters to pass to the microservice |\n| `getHeaders` | yes | `{}` unless overridden | any request headers to pass to the microservice |\n| `getTimeout` | not recommended | `250` or value passed to constructor | how long a request should wait for a server response before timing out |\n| `getRetries` | not recommended | `3` or value passed to constructor | how many attempts should be made before returning an error |\n\n#### Recommended `ServiceConfiguration` Method Overrides\n\nThe following methods can be overridden in an implementation of `ServiceConfiguration`:\n\n| method | default return | description |\n| --- | --- | --- |\n| `getUrl` | value of `getBaseUrl` | used for appending other value to the baseUrl (but not request parameters) |\n| `getParameters` | `{}` | any request parameters to pass to the microservice |\n| `getHeaders` | `{}` | any request headers to pass to the microservice |\n\nIt is not recommended to override any other methods.\n","created":"2017-05-05T19:45:03.765Z","modified":"2017-06-09T15:40:18.596Z","lastPublisher":{"name":"2foo2fighters","email":"stephen.k.hess@gmail.com"},"owners":[{"name":"2foo2fighters","email":"stephen.k.hess@gmail.com"},{"name":"dianashk","email":"dianashk@gmail.com"},{"name":"julian_mapzen","email":"julian@mapzen.com"},{"name":"missinglink","email":"npm@rcpt.at"}],"other":{"_attachments":{},"_from":".","_id":"pelias-microservice-wrapper","_nodeVersion":"4.8.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/pelias-microservice-wrapper-1.1.2.tgz_1497022817692_0.8791258197743446"},"_npmUser":{"name":"2foo2fighters","email":"stephen.k.hess@gmail.com"},"_npmVersion":"2.15.12","_rev":"7-ec9f9d4b44bcdad6ab71dba10a3a0ad1","_shasum":"cf503ee986343436394aa2aaebe9842f43c4f796","author":{"name":"Mapzen"},"bugs":{"url":"https://github.com/pelias/microservice-wrapper/issues"},"directories":{},"dist-tags":{"latest":"1.1.2"},"dist":{"shasum":"cf503ee986343436394aa2aaebe9842f43c4f796","tarball":"https://registry.npmjs.org/pelias-microservice-wrapper/-/pelias-microservice-wrapper-1.1.2.tgz"},"maintainers":[{"name":"2foo2fighters","email":"stephen.k.hess@gmail.com"},{"name":"dianashk","email":"dianashk@gmail.com"},{"name":"julian_mapzen","email":"julian@mapzen.com"},{"name":"missinglink","email":"npm@rcpt.at"}],"readmeFilename":"README.md","time":{"modified":"2017-06-09T15:40:18.596Z","created":"2017-05-05T19:45:03.765Z","1.0.0":"2017-05-05T19:45:03.765Z","1.1.0":"2017-05-05T21:37:28.649Z","1.1.1":"2017-06-06T14:11:43.102Z","1.1.2":"2017-06-09T15:40:18.596Z"}}}