{"name":"requests-pool","version":"1.6.1","description":"A simple node module to make http requests using a pool.","main":"lib/index.js","scripts":{"test":"./test.js"},"repository":{"type":"git","url":"git+ssh://git@gitlab.com/Emeraude/Request-Pool.git"},"keywords":["requests-pool","http","request"],"license":"GPL-3.0","homepage":"https://gitlab.com/Emeraude/Request-Pool#README","dependencies":{"deprecate-me":"^1.3.0"},"gitHead":"3f21280662abccdd1cc400cc329834b01035f841","readme":"# Requests-Pool\n\nA simple node module to make http requests using a pool.  \nIt'll allow you to limit your requests to avoid the crash of distant server when you're crawling.\n\n## Usage\n\n```javascript\nvar Rp = require('requests-pool');\nvar rp = new Rp(100);\n\nrp.query(options, datas, function(errors, res) {\n\tif (errors)\n\t\tthrow errors;\n});\n```\n\nIt's using the http.request() node method, so **errors** will be the error throwed by this method and **res** the object sent to the callback of this object. **options** are the options sent as the first argument of this method.  \n**datas** are the datas you want to send if you are doing a **POST** request.\n\n## Documentation\n### new rp(max)\n\n**max** is the number of maximum simultaneous requests. Default value is **100**.\n\n### rp.max\n\nA getter/setter for the number of maximum simultaneous requests.\n\n### rp.current\n\nA getter for the number of current requests.\n\n### rp.waiting\n\nA getter for the number of waiting requests.\n\n### rp.alive\n\nA getter to know if the request pool is alive. If *false*, no more requests can be added.\n\n### rp.request(options[, data], cb)\n\n**options** is the same argument as passed to http.request() native method.  \n**data** is the data sent used in a **POST** request. If not null, the header fields `Content-Type` and `Content-Length` will be automatically filled.  \n**cb** is a callback that take two arguments: the error (or *undefined*) and the **res** object getted by the callback of the http.request() method (or *undefined* if an error occur).  \nIf you want to use *https*, you need to set `options.protocol` to *'https'*.  \nYou can set `options.retry` to **true** if you want to relaunch the request if it fails.\n\n### rp.exit()\n\nRemove all the current pending requests and no more can be added.\n\n### rp.live()\n\nMay be used after `rp.exit` to make the request pool re-usable.\n\n### Authors\n\nEmeraude\n","versions":[{"number":"1.0.0","date":"2015-09-04T15:18:17.514Z"},{"number":"1.1.0","date":"2015-09-06T11:01:41.541Z"},{"number":"1.1.1","date":"2015-09-06T11:04:06.002Z"},{"number":"1.2.0","date":"2015-09-06T11:58:23.039Z"},{"number":"1.2.1","date":"2015-09-22T00:13:50.875Z"},{"number":"1.3.0","date":"2015-09-22T00:18:19.600Z"},{"number":"1.4.0","date":"2015-09-22T00:37:14.587Z"},{"number":"1.4.1","date":"2015-09-29T10:55:11.054Z"},{"number":"1.5.0","date":"2015-10-02T13:08:29.934Z"},{"number":"1.6.0","date":"2015-10-02T15:12:37.775Z"},{"number":"1.6.1","date":"2015-10-09T21:49:28.661Z"}],"created":"2015-09-04T15:18:17.514Z","modified":"2015-10-09T21:49:28.661Z","lastPublisher":{"name":"emeraude","email":"broggi_t@epitech.eu"},"owners":[{"name":"emeraude","email":"broggi_t@epitech.eu"}],"other":{"_attachments":{},"_from":".","_id":"requests-pool","_nodeVersion":"0.12.7","_npmUser":{"name":"emeraude","email":"broggi_t@epitech.eu"},"_npmVersion":"2.13.0","_rev":"1-97783cb6a94682476e4537c93ed624ad","_shasum":"17c4e06b3bf6cd708b9d78178ae3ef2b6299b14d","author":{"name":"Emeraude"},"bugs":{"url":"https://gitlab.com/Emeraude/Request-Pool/issues"},"directories":{},"dist-tags":{"latest":"1.6.1"},"dist":{"shasum":"17c4e06b3bf6cd708b9d78178ae3ef2b6299b14d","tarball":"http://registry.npmjs.org/requests-pool/-/requests-pool-1.6.1.tgz"},"maintainers":[{"name":"emeraude","email":"broggi_t@epitech.eu"}],"readmeFilename":"README.md","time":{"modified":"2015-10-09T21:49:28.661Z","created":"2015-09-04T15:18:17.514Z","1.0.0":"2015-09-04T15:18:17.514Z","1.1.0":"2015-09-06T11:01:41.541Z","1.1.1":"2015-09-06T11:04:06.002Z","1.2.0":"2015-09-06T11:58:23.039Z","1.2.1":"2015-09-22T00:13:50.875Z","1.3.0":"2015-09-22T00:18:19.600Z","1.4.0":"2015-09-22T00:37:14.587Z","1.4.1":"2015-09-29T10:55:11.054Z","1.5.0":"2015-10-02T13:08:29.934Z","1.6.0":"2015-10-02T15:12:37.775Z","1.6.1":"2015-10-09T21:49:28.661Z"}}}