{"name":"cache-http","version":"1.0.1","description":"Caching wrapper for node's http module","homepage":"http://github.com/strongloop/cache-http","repository":"https://github.com/strongloop/cache-http","engine":{"node":">=0.4.0"},"dependencies":{"lodash":"^3.9.1","node-cache":"^3.0.0"},"devDependencies":{"async":"^1.0.0","mocha":"^2.2.5"},"main":"./protocols.js","scripts":{"test":"mocha --timeout=10000"},"license":"MIT","gitHead":"adca833f01e4766918d53d18cd636ae1458fe67f","versions":[{"number":"1.0.0","date":"2015-07-23T01:15:35.255Z"},{"number":"1.0.1","date":"2016-05-06T23:09:04.727Z"}],"readme":"# Cached HTTP Client for Node.JS\n\nA Node.JS that adds a transparent cacheing layer to http and https clients.\n\n## Installation\n\n    $ npm install --save cache-http\n\n## Documentation\n\nThis is a drop-in replacement for Node's http(s) client. Very little code will\nneed to change to support cacheing.\n\n```javascript\nvar cachedHttp = new require('cache-http')('http');\nvar options = {\n  host: <hostname>,\n  port: <port>,\n  path: <path>,\n  method: 'GET',\n  'x-cacheable': true,\n};\ncachedHttp.request(options, callback).end();\n```\n\n The first line, the `require` returns a constructor that takes one parameter:\nthe protocol it is wrapping. Only `http` and `https` are supported.\n\nOnly the http(s) `GET` method is supported. Other methods don't really make much\nsense to cache.\n\nIn order to activate cacheing for any particular request, the `\"x-cacheable\"`\noption must be specified. Otherwise, this module will bypass the cacheing\nfeature. The cache keys are built from authorization key, method, host, port,\nand path(including parameters). If this is not sufficient to guarantee\nuniqueness it is best to disable cacheing for that request.\n\nIf there is cached data for a request, this cache will always check for new data\nusing the `If-Modified-Since` header. If the server reports an HTTP `304`, it'll\nreturn cached data. If the data came from cache, it'll have the `x-cached`\nresponse header.\n\n## Testing\n\nThe test script is comprehensive. It includes an HTTP server to test against\n(`test-bench`), test cases against this test bench, plus many tests against the\n`cached-http` as well. These test cases require Mocha to run.\n\n    $ cd test $ mocha all.js\n\nNote that some test cases take some time to run and will therefore generate\nwarnings, but they will ultimately pass. Test cases that are meant to take some\nare clearly marked with the approximate time they are expected to take.\n","created":"2015-07-23T01:15:35.255Z","modified":"2017-06-02T16:36:43.976Z","lastPublisher":{"name":"rmg","email":"r.m.graham@gmail.com"},"owners":[{"email":"strngops@us.ibm.com","name":"strongloop"},{"email":"kjdelisle@gmail.com","name":"kjdelisle"},{"email":"tffrench@us.ibm.com","name":"tonyf-ibm"},{"email":"gpandya@live.com","name":"thegman"},{"email":"qpresley@ca.ibm.com","name":"qpresley"},{"email":"gewily@ca.ibm.com","name":"loay"},{"email":"juehou@ca.ibm.com","name":"jannyhou2016"},{"email":"captain@hacksparrow.com","name":"hacksparrow"},{"email":"davidcheung@live.ca","name":"davidcheung"},{"email":"binadmt@hotmail.com","name":"b-admike"},{"email":"amirali.jfr61@gmail.com","name":"amir-61"},{"email":"ngcandy@ca.ibm.com","name":"0candy"},{"email":"superkhau@gmail.com","name":"superkhau"},{"email":"setogit@gmail.com","name":"setogit"},{"email":"mbajtoss@gmail.com","name":"bajtos"},{"email":"rmg@ca.ibm.com","name":"ibmcloud-admin"},{"email":"enjoyjava@gmail.com","name":"rfeng"},{"email":"skawful@gmail.com","name":"ritch"},{"email":"kraman@gmail.com","name":"kraman"},{"email":"r.m.graham@gmail.com","name":"rmg"},{"email":"vieuxtech@gmail.com","name":"octet"}],"other":{"_attachments":{},"_from":".","_id":"cache-http","_nodeVersion":"4.4.3","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/cache-http-1.0.1.tgz_1462576141780_0.021881790831685066"},"_npmUser":{"name":"rmg","email":"r.m.graham@gmail.com"},"_npmVersion":"3.8.8","_rev":"9-5fb37b45888f6a8c0aecfaaf632c7ec8","_shasum":"0a6f79eca2e24df946fe18523cace460ce336a6e","author":{"name":"Thomas Wilkinson","email":"thomas@capnajax.com"},"bugs":{"url":"https://github.com/strongloop/cache-http/issues"},"contributors":[{"name":"Thomas Wilkinson","email":"thomas@capnajax.com"}],"directories":{"test":"test"},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"0a6f79eca2e24df946fe18523cace460ce336a6e","tarball":"http://registry.npmjs.org/cache-http/-/cache-http-1.0.1.tgz"},"maintainers":[{"email":"strngops@us.ibm.com","name":"strongloop"},{"email":"kjdelisle@gmail.com","name":"kjdelisle"},{"email":"tffrench@us.ibm.com","name":"tonyf-ibm"},{"email":"gpandya@live.com","name":"thegman"},{"email":"qpresley@ca.ibm.com","name":"qpresley"},{"email":"gewily@ca.ibm.com","name":"loay"},{"email":"juehou@ca.ibm.com","name":"jannyhou2016"},{"email":"captain@hacksparrow.com","name":"hacksparrow"},{"email":"davidcheung@live.ca","name":"davidcheung"},{"email":"binadmt@hotmail.com","name":"b-admike"},{"email":"amirali.jfr61@gmail.com","name":"amir-61"},{"email":"ngcandy@ca.ibm.com","name":"0candy"},{"email":"superkhau@gmail.com","name":"superkhau"},{"email":"setogit@gmail.com","name":"setogit"},{"email":"mbajtoss@gmail.com","name":"bajtos"},{"email":"rmg@ca.ibm.com","name":"ibmcloud-admin"},{"email":"enjoyjava@gmail.com","name":"rfeng"},{"email":"skawful@gmail.com","name":"ritch"},{"email":"kraman@gmail.com","name":"kraman"},{"email":"r.m.graham@gmail.com","name":"rmg"},{"email":"vieuxtech@gmail.com","name":"octet"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T16:36:43.976Z","created":"2015-07-23T01:15:35.255Z","1.0.0":"2015-07-23T01:15:35.255Z","1.0.1":"2016-05-06T23:09:04.727Z"}}}