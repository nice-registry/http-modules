{"name":"connectbasicauth","version":"0.0.3","description":"Basic HTTP Authorization as a connectjs middleware","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1","start":"node server.js"},"repository":"https://github.com/gizur/connectbasicauth","keywords":["connectjs","authentication","basic","http","authentication"],"license":"ISC","homepage":"https://github.com/gizur/connectbasicauth#readme","devDependencies":{"connectlight":"^0.0.3"},"engines":{"node":">=6.2.0"},"dependencies":{"mysql":"^2.10.2"},"gitHead":"5598c04cbe5704110e0fb1c81bc4ac753e5fd1aa","versions":[{"number":"0.0.1","date":"2016-05-27T10:08:32.685Z"},{"number":"0.0.2","date":"2016-05-27T10:17:29.013Z"},{"number":"0.0.3","date":"2016-05-27T11:24:22.679Z"}],"readme":"Basic HTTP Authentication\n=========================\n\nUsers and passwords (preferably hashed with a salt) are stored in a MySQL database.\nThis module expects a stored procedure with the following signature:\n\n`spAuthenticate(username, password) -> [success, username, userRole, systemUser, systemPassword]`\n\nThe first part of the URL controls which database to use: `<SERVER>/<DATABASE>/...`\n\nThe procedure must be possible to use when connecting to the database as an\n`authuser`. The system username and password is returned by the stored procedure.\nThere is no need for storing system usernames and password in config files\nusing this approach (which often is done). The credentials that are returned are\nthen set in the `user` and `password` http headers by this module.\n\nThe following environment variable needs to be configured:\n\n* `process.env.DB_HOST`\n\n[This script](./db_example.sql) shows an example of a table and stored procedure\nfor authentication.\n\n\nTesting\n-------\n\nSetup your MySQL database according to the instructions above.\n\n1. Start the test server with `node server.js`\n\n3. Basic HTTP Authentication strategy with username and password in the URL (not recommended):\n `curl -X POST http://jack:secret@localhost:3000/CHANGE_TO_YOUR_DATABASE/first`\n\n4. Basic HTTP Authentication strategy with username and password in the HTTP Header:\n`curl -X POST http://localhost:3000/CHANGE_TO_YOUR_DATABASE/first -H \"Authorization: Basic amFjazpzZWNyZXQ=\"`\n\nNOTE: The use of `Buffer` has been tested with `v6.2.0`. `base64.js` shows how\nto base64 encode a string in NodeJS (needed when testing).\n","created":"2016-05-27T10:08:32.685Z","modified":"2016-05-27T11:24:22.679Z","lastPublisher":{"name":"colmsjo","email":"jonas@gizur.com"},"owners":[{"name":"colmsjo","email":"jonas@gizur.com"}],"other":{"_attachments":{},"_from":".","_id":"connectbasicauth","_nodeVersion":"5.3.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/connectbasicauth-0.0.3.tgz_1464348260351_0.933733532903716"},"_npmUser":{"name":"colmsjo","email":"jonas@gizur.com"},"_npmVersion":"3.3.12","_rev":"1-f0fb542d70e05486a40babea2d81dced","_shasum":"fcc4815f129c40f63a1032343be3ba3b91d73a5f","author":{"name":"Jonas Colmsj√∂"},"bugs":{"url":"https://github.com/gizur/connectbasicauth/issues"},"directories":{},"dist-tags":{"latest":"0.0.3"},"dist":{"shasum":"fcc4815f129c40f63a1032343be3ba3b91d73a5f","tarball":"http://registry.npmjs.org/connectbasicauth/-/connectbasicauth-0.0.3.tgz"},"maintainers":[{"name":"colmsjo","email":"jonas@gizur.com"}],"readmeFilename":"README.md","time":{"modified":"2016-05-27T11:24:22.679Z","created":"2016-05-27T10:08:32.685Z","0.0.1":"2016-05-27T10:08:32.685Z","0.0.2":"2016-05-27T10:17:29.013Z","0.0.3":"2016-05-27T11:24:22.679Z"}}}