{"name":"cached-request","version":"1.1.1","description":"Node.js module to perform HTTP requests with caching support","scripts":{"test":"mocha"},"main":"./lib/index.js","repository":"https://github.com/alltherooms/cached-request","keywords":["request","cache","caching"],"dependencies":{"graceful-fs":"^4.0.0","mkdirp":"^0.5.1"},"devDependencies":{"chai":"^1.10.0","mocha":"^2.1.0","nock":"^0.52.4","request":"^2.51.0","temp":"^0.8.1"},"gitHead":"330d9dc4958ed6d669dbd8d18f71091086c8390a","homepage":"https://github.com/alltherooms/cached-request#readme","versions":[{"number":"0.1.0","date":"2014-12-30T23:09:09.608Z"},{"number":"0.1.1","date":"2015-01-19T15:44:13.641Z"},{"number":"0.1.2","date":"2015-05-14T22:49:54.143Z"},{"number":"0.1.4","date":"2015-07-03T20:58:14.343Z"},{"number":"1.0.0","date":"2016-05-05T00:03:43.147Z"},{"number":"1.1.0","date":"2016-09-16T02:38:36.989Z"},{"number":"1.1.1","date":"2017-03-21T05:01:25.662Z"}],"readme":"#cached-request\nNode.js module to perform HTTP requests with caching support.\n\n##Why?\nAt [alltherooms](http://alltherooms.com/) we make lots of requests to external APIs, and caching is crucial to provide a good experience to our users. We also love streams! however, we had a hard time finding a good tool for caching HTTP responses and streaming them at the same time, so we wrote **cached-request**. We hope to help others, and feedback is always welcome. :)\n\n##How it works\nThis tool was made to work with the popular [request](https://github.com/request/request) module, which simplifies the HTTP requests in Node.js. Therefore, this must be considered a wrapper around **request**.\n\nFirst, you instantiate a **cachedRequest** instance by passing a **request** function, which is going to act as the requester for the uncached requests - you still need to `$npm install request` independently. - Then, you can use **cachedRequest** to perform your HTTP requests.\n\nThe caching takes place in the filesystem, storing the responses as compressed gzipped files.\n\nPlease note this will cache *everything*, so don't use it for making things like POST or PUT requests that you don't want to be cached.\n\n##Installation\nInstall it using [npm](https://www.npmjs.com/)\n```\n$ npm install cached-request\n```\n\n##Usage\nFirst, you must set it up:\n```javascript\nvar request = require('request')\n,   cachedRequest = require('cached-request')(request)\n,   cacheDirectory = \"/tmp/cache\";\n\ncachedRequest.setCacheDirectory(cacheDirectory);\n```\n_Note_: You have to ensure the user that launches the process has read+write permissions over `cacheDirectory`, otherwise the program will fail.\n\nThen you can use `cachedRequest` just as you use [request](https://github.com/request/request): passing a callback, or as a stream.\n\n###Passing a callback\n```javascript\ncachedRequest(options, function (error, response, body) {\n  if (error) {\n    //Handle request error\n  }\n  //Do what you need with `response` and `body`\n});\n```\n\n###As a stream\n```\ncachedRequest(options).pipe(someWriteStream);\n```\n\n##request options\nWhen making a request, you must pass an `options` object as you can observe in the examples above. This object can contain any of the [options supported by **request**](https://github.com/request/request#requestoptions-callback) with the addition of a required `ttl` option.\n\n- `ttl`: Number of milliseconds for the cached response to be considered stale.\n\n    ```javascript\n      var options = {\n        url: \"https://www.google.com\",\n        ttl: 3000 //3 seconds\n      };\n      cachedRequest(options, callback);\n    ```\n\n    You can also set a global ttl option for all requests:\n\n    ```javascript\n    cachedRequest.setValue('ttl', 1000);\n    cachedRequest({url: 'https://www.google.com'}, callback); // should benefit from the cache if previously cached\n    ```\n\n##Can I use everything that comes with **request**?\nNo, there's some things you can't use. For example, the shortcut functions `.get`, `.post`, `.put`, etc. are not available in **cached-request**. If you'd like to have them, this is a great opportunity to contribute!\n\n##Running tests\nRun the tests with npm\n```\n$ npm test\n```\n\n##License (MIT)\n","starsCount":3,"created":"2014-12-30T23:09:09.608Z","modified":"2017-03-21T05:01:25.662Z","lastPublisher":{"name":"elhoyos","email":"juan.hoyosr@gmail.com"},"owners":[{"name":"danypype","email":"danypype@gmail.com"},{"name":"elhoyos","email":"juan.hoyosr@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"cached-request","_nodeVersion":"0.10.38","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/cached-request-1.1.1.tgz_1490072483702_0.6898003872483969"},"_npmUser":{"name":"elhoyos","email":"juan.hoyosr@gmail.com"},"_npmVersion":"3.10.5","_rev":"2-7c9998ca7f97cab5330acf25c01d724c","_shasum":"de55e12cadde36bc3d80b042b29186ca0252da31","author":{"name":"Daniel LÃ³pez","email":"danypype@gmail.com"},"bugs":{"url":"https://github.com/alltherooms/cached-request/issues"},"directories":{},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"de55e12cadde36bc3d80b042b29186ca0252da31","tarball":"https://registry.npmjs.org/cached-request/-/cached-request-1.1.1.tgz"},"maintainers":[{"name":"danypype","email":"danypype@gmail.com"},{"name":"elhoyos","email":"juan.hoyosr@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-21T05:01:25.662Z","created":"2014-12-30T23:09:09.608Z","0.1.0":"2014-12-30T23:09:09.608Z","0.1.1":"2015-01-19T15:44:13.641Z","0.1.2":"2015-05-14T22:49:54.143Z","0.1.4":"2015-07-03T20:58:14.343Z","1.0.0":"2016-05-05T00:03:43.147Z","1.1.0":"2016-09-16T02:38:36.989Z","1.1.1":"2017-03-21T05:01:25.662Z"},"users":{"developit":true,"allain":true,"jugaltheshah":true}}}