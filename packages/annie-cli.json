{"name":"annie-cli","version":"0.1.10","description":"Command line HTTP client.","main":"index.js","bin":{"annie":"./bin/annie.js"},"dependencies":{"annie-lib":"~1.1","propertize":"^2","squabble":"*","querystring":"*"},"devDependencies":{"mocha":"~1","expect.js":"~0.3"},"scripts":{"test":"mocha"},"license":"MIT","gitHead":"909e3a97a24790a19d5467b438378551f85459ee","versions":[{"number":"0.1.0","date":"2015-02-19T08:52:04.371Z"},{"number":"0.1.1","date":"2015-02-19T23:11:01.602Z"},{"number":"0.1.2","date":"2015-02-20T04:24:45.900Z"},{"number":"0.1.4","date":"2015-02-25T17:43:07.759Z"},{"number":"0.1.5","date":"2015-02-25T18:48:01.094Z"},{"number":"0.1.6","date":"2015-02-25T18:55:14.574Z"},{"number":"0.1.7","date":"2015-02-25T18:57:16.199Z"},{"number":"0.1.8","date":"2015-02-25T20:47:20.371Z"},{"number":"0.1.9","date":"2015-03-02T14:56:54.903Z"},{"number":"0.1.10","date":"2015-03-04T22:14:51.386Z"}],"readme":"Annie Command Line HTTP Client\n==============================\nThe **annie-cli** package provides the `annie` CLI script.  This script can be\nused to make an HTTP request or series of requests and parse the responses.  The\ngoal is to be a competitor to cURL, offering a better interface for web\ndevelopers who prefer to work with HTTP methods and terms instead of quirky cURL\narguments.\n\nThis should be of special use to developers working with REST services.  `annie`\nmaps much more closely to the way RESTful services are documented, developed,\nand used than does `curl`.  Fans of shell scripting should also find they can\neasily work with complex REST applications.\n\nMust Haves\n----------\nThough usable, the following features are needed before `annie-cli` can be\nreleased as a version 1.0.\n\n * ~~TLS support~~\n * ~~multiline entry for message body~~\n * automatically pipe STDIN to message body\n * session support\n\nBasic Usage\n-----------\n\n    Usage: annie [OPTS] [METHOD] URL\n    \n    Make an HTTP request and display the result.  METHOD can be any valid HTTP\n    method or anything that *looks* like a valid HTTP method.  The default is\n    GET.\n    \n    The following OPTS are recognized\n      -H --head=HEADER      Send a request header\n      -D --data=DATA        Send request body data; with -j DATA can be in form\n                            foo:bar or {\"foo\":\"bar\"}; with -f DATA can be\n                            foo=bar&baz=boo; else DATA is unparsed and sent raw\n      -j --json             Enable JSON data (q.v., -D)\n      -f --form             Enable HTML form data (q.v., -D)\n      -o --output=FORMAT    One of: auto,body,full,head,headers,stat,status\n         --session=FILE     Maintain session (enables cookies, defaults to\n                            /tmp/annie.session.$UID) [not implemented]\n      -                     read input from console (CTRL+D to end)\n\nUsage Examples\n--------------\n\n### Make a GET request against a URL\n\nMake a GET request to `http://example.com/` and display the response.  By\ndefault, `annie` displays only the response body if one is present.\n\n`$ annie http://example.com/`\n\n```\n{\"status\":\"ok\"}\n```\n\n### Specify the HTTP request method\n\nMake a HEAD request to check the status and headers.  Since the response to a\nHEAD request does not have a body, `annie` will display the status and headers.\n\n`$ annie head http://example.com/`\n\n```\nHTTP/1.0 200 OK\nContent-Type: application/json\nContent-Length: 15\nEtag: ad5cb2e79b8f789\n```\n\n### Send a request header\n\nMake a conditional GET using the *If-None-Match* header and the resource *ETag*.\n\n`$ annie http://example.com/ -HIf-None-Match:ad5cb2e79b8f789`\n\n```\nHTTP/1.0 304 Not Modified\n```\n\n### Send raw request data\n\nPUT a new plain text document containing the text \"foo\" at the specified URL.\n\n`$ annie put http://example.com/foo -HContent-Type:text/plain -Dfoo`\n\n```\nHTTP/1.0 201 Created\n```\n\n### Send JSON request data\n\nThe `--json` option sets the *Content-Type* header and enables JSON parsing of\nany data arguments.  The following examples are equivalent.\n\n`$ annie post $URL -HContent-Type:application/json -D'{\"action\":\"add\",\"id\":23}'`\n\n`$ annie post $URL --json -Daction:add -Did:23`\n\n```\nHTTP/1.0 303 See Other\nLocation: http://example.com/svc/23\n```\n\n### Send HTML form request data\nThe `--form` option sets the *Content-Type* header and enables form-encoded\nparsing of any data arguments.  The following examples are equivalent.\n\n`$ annie post $URL -HContent-Type:application/x-www-form-urlencoded -D'a=1&b=2'`\n\n`$ annie post $URL --form -Da=1 -Db=2`\n\n```\nHTTP/1.0 303 See Other\nLocation: http://example.com/svc/23\n```\n","created":"2015-02-19T08:52:04.371Z","modified":"2015-03-04T22:14:51.386Z","lastPublisher":{"name":"rremer","email":"reanjr@gmail.com"},"owners":[{"name":"rremer","email":"reanjr@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"annie-cli","_npmUser":{"name":"rremer","email":"reanjr@gmail.com"},"_npmVersion":"1.4.21","_rev":"1-5b65c649c1cbff483f291fa5841d59a4","_shasum":"a9201cf20374ee6632297fd824b7aafe2a5457f5","author":{"name":"Richard Remer","url":"reanjr@gmail.com"},"directories":{},"dist-tags":{"latest":"0.1.10"},"dist":{"shasum":"a9201cf20374ee6632297fd824b7aafe2a5457f5","tarball":"http://registry.npmjs.org/annie-cli/-/annie-cli-0.1.10.tgz"},"maintainers":[{"name":"rremer","email":"reanjr@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-04T22:14:51.386Z","created":"2015-02-19T08:52:04.371Z","0.1.0":"2015-02-19T08:52:04.371Z","0.1.1":"2015-02-19T23:11:01.602Z","0.1.2":"2015-02-20T04:24:45.900Z","0.1.4":"2015-02-25T17:43:07.759Z","0.1.5":"2015-02-25T18:48:01.094Z","0.1.6":"2015-02-25T18:55:14.574Z","0.1.7":"2015-02-25T18:57:16.199Z","0.1.8":"2015-02-25T20:47:20.371Z","0.1.9":"2015-03-02T14:56:54.903Z","0.1.10":"2015-03-04T22:14:51.386Z"}}}