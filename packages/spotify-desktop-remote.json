{"name":"spotify-desktop-remote","version":"0.2.3","description":"Control your Spotify Desktop app with a simple HTTP interface or Socket.io","main":"server.js","scripts":{"start":"node server.js","prepublish":"grunt"},"repository":"https://github.com/namuol/spotify-desktop-remote","license":"MIT","dependencies":{"express":"^4.8.3","socket.io":"^1.0.6","serve-static":"^1.5.1"},"devDependencies":{"grunt":"~0.4.2","grunt-contrib-coffee":"^0.11.0","grunt-contrib-watch":"^0.6.1","grunt-express-server":"~0.4.11","coffee-script":"^1.7.1"},"gitHead":"31fd5390442e7693e9d92786f7c4b716f3bb96dd","homepage":"https://github.com/namuol/spotify-desktop-remote","versions":[{"number":"0.2.0","date":"2014-08-28T01:55:34.376Z"},{"number":"0.2.1","date":"2014-08-28T02:12:30.727Z"},{"number":"0.2.2","date":"2014-08-28T09:26:33.203Z"},{"number":"0.2.3","date":"2014-08-28T09:53:00.803Z"}],"readme":"# Spotify Desktop Remote\r\n\r\nControl your Spotify Desktop app from a simple HTTP interface or with [Socket.IO](http://socket.io).\r\n\r\n```bash\r\n# Play a track:\r\ncurl http://localhost:3001/play/spotify:track:0FutrWIUM5Mg3434asiwkp\r\n\r\n# Seek to the halfway mark of the song:\r\ncurl http://localhost:3001/seek/0.5\r\n\r\n# Set the player volume:\r\ncurl http://localhost:3001/volume/0.8\r\n\r\n# Play a playlist:\r\ncurl http://localhost:3001/play/spotify:album:2YJFLMyzzZ2k4mhfPSiOj2\r\n\r\n# Pause the player:\r\ncurl http://localhost:3001/pause\r\n\r\n# Stop the player:\r\ncurl http://localhost:3001/stop\r\n```\r\n\r\n```js\r\n// Keep everything in sync:\r\nsocket.on('player.change', function (playerStatus) {\r\n  console.log('The current player status is', playerStatus);\r\n});\r\n\r\n// Play a track:\r\nsocket.emit('play', {uri: 'spotify:track:0FutrWIUM5Mg3434asiwkp'});\r\n\r\n// Seek to the halfway mark of the song:\r\nsocket.emit('seek', 0.5);\r\n\r\n// Set the player volume:\r\nsocket.emit('volume', 0.8);\r\n\r\n// Play a playlist:\r\nsocket.emit('play', {uri: 'spotify:album:2YJFLMyzzZ2k4mhfPSiOj2'});\r\n\r\n// Pause the player:\r\nsocket.emit('pause');\r\n\r\n// Stop the player:\r\nsocket.emit('stop');\r\n```\r\n\r\nSee the [API reference](#api) for more details.\r\n\r\n## Requirements\r\n\r\n- [node.js](http://nodejs.org) >= 0.10\r\n- A premium Spotify account, [registered as a developer](https://devaccount.spotify.com/my-account/).\r\n\r\n## Installation\r\n\r\nThere are two parts to the app:\r\n\r\n1. The HTTP Server that forwards commands to Spotify (`src/server.coffee`)\r\n2. The Spotify Webapp (runs inside Spotify Desktop) that accepts commands from the server via Websockets (`src/main.coffee` and `index.html`)\r\n\r\n```bash\r\n# OS X/Linux users:\r\ncd ~/Spotify\r\n\r\n# Windows users:\r\n# cd ~/My\\ Documents/Spotify\r\n\r\ngit clone https://github.com/namuol/spotify-desktop-remote.git\r\ncd spotify-desktop-remote\r\n\r\n# Start the server on port 3001:\r\nnpm start\r\n\r\n# Or run it on a different port:\r\n# PORT=3002 npm start\r\n\r\n# Finally, run spotify and open the app:\r\nspotify -uri spotify:app:spotify-desktop-remote\r\n\r\n# NOTE: You can also run the app by entering\r\n# \"spotify:app:spotify-desktop-remote\" into Spotify's search bar.\r\n\r\n# Now you can control the Spotify Desktop app by hitting the server:\r\ncurl http://localhost:3001/play/spotify:track:0FutrWIUM5Mg3434asiwkp\r\ncurl http://localhost:3001/volume/1\r\n```\r\n\r\n## API\r\n\r\n### Responses\r\n\r\nAll GET operations and the [`player.change`](#player.change) socket event return a JSON object representing the current status of the player:\r\n\r\n```js\r\n{\r\n  loading: false,\r\n  playing: true,\r\n  position: 19450,\r\n  duration: 212400,\r\n  index: 0,\r\n  repeat: false,\r\n  shuffle: false,\r\n  volume: 0.849988579750061,\r\n  context: null,\r\n  contexts: [{\r\n    index: 0,\r\n    descriptor: {\r\n      type: \"set\"\r\n    }\r\n  }],\r\n  track: {\r\n    artists: [{\r\n      name: \"Rick Astley\",\r\n      uri: \"spotify:artist:0gxyHStUsqpMadRV0Di1Qt\"\r\n    }],\r\n    disc: 1,\r\n    duration: 212000,\r\n    image: \"spotify:image:938dfdd57d4fe8a864f6148ffb9676395d012720\",\r\n    images: [\r\n      [\r\n        64,\r\n        \"spotify:image:9b87c26f500947d28838ebb2e33c120f6b9a6b1b\"\r\n      ],\r\n      [\r\n        300,\r\n        \"spotify:image:938dfdd57d4fe8a864f6148ffb9676395d012720\"\r\n      ],\r\n      [\r\n        600,\r\n        \"spotify:image:d6e92c8891f16c1126c6d58f47da81873a17e993\"\r\n      ]\r\n    ],\r\n    name: \"Never Gonna Give You Up\",\r\n    number: 1,\r\n    playable: true,\r\n    popularity: 65,\r\n    starred: false,\r\n    explicit: false,\r\n    availability: \"premium\",\r\n    album: {\r\n      uri: \"spotify:album:3vGtqTr5he9uQfusQWJ0oC\"\r\n    },\r\n    local: false,\r\n    advertisement: false,\r\n    placeholder: false,\r\n    uri: \"spotify:track:0FutrWIUM5Mg3434asiwkp\"\r\n  }\r\n}\r\n```\r\n\r\n### Socket.io\r\n\r\nIn order to use socket.io, include the following in your `<head>`:\r\n\r\n```html\r\n<script type='application/javascript' src=\"http://localhost:3001/socket.io/socket.io.js\"></script>\r\n```\r\n\r\nThen somewhere after that you can connect:\r\n\r\n```js\r\nvar socket = io.connect();\r\nsocket.on('player.change', function (playerStatus) {\r\n  console.log('The current player status is', playerStatus);\r\n});\r\n```\r\n\r\n<a name='player.change'></a>\r\n#### `socket.on('player.change', callback(playerStatus))`\r\n*socket only*\r\n\r\nSubscribe to this event to be notified whenever anything about the player changes.\r\n\r\nTo poll for the status (with sockets or `GET`), see [`sync`](#sync).\r\n\r\n```js\r\nsocket.on('player.change', function (playerStatus) {\r\n  console.log('The current volume level is', playerStatus.volume)\r\n});\r\n```\r\n\r\nParameters:\r\n> **`callback(playerStatus)`** *socket only*\r\n> A callback function that accepts a single argument as the [player's current status](#responses).\r\n\r\n#### `/sync`\r\n#### `socket.emit('sync', callback(playerStatus))`\r\nPerform no action; simply used to retrieve the current status of the player.\r\n\r\n```bash\r\ncurl http://localhost:3001/sync\r\n```\r\n\r\n```js\r\nsocket.emit('sync', function (playerStatus) {\r\n  console.log('The current volume level is', playerStatus.volume);\r\n});\r\n```\r\n\r\nParameters:\r\n> **`callback(playerStatus)`** *socket only*\r\n> A callback function that accepts a single argument as the [player's current status](#responses).\r\n\r\n#### `/play`\r\n#### `socket.emit('play')`\r\nPlay the current track.\r\n\r\n```bash\r\ncurl http://localhost:3001/play\r\n```\r\n\r\n```js\r\nsocket.emit('play');\r\n```\r\n\r\n#### `/play/:track_uri/:ms?/:duration?`\r\n#### `socket.emit('play', {uri[, ms, duration]})`\r\nPlay a specific track with a given URI.\r\n\r\n```bash\r\ncurl http://localhost:3001/play/spotify:track:0FutrWIUM5Mg3434asiwkp\r\n\r\n# Play the first 30 seconds:\r\ncurl http://localhost:3001/play/spotify:track:0FutrWIUM5Mg3434asiwkp/0/30000\r\n\r\n# Play the first 30 seconds starting one minute into the song:\r\ncurl http://localhost:3001/play/spotify:track:0FutrWIUM5Mg3434asiwkp/60000/30000\r\n```\r\n\r\n```js\r\nsocket.emit('play', {uri: 'spotify:track:0FutrWIUM5Mg3434asiwkp'});\r\n\r\n// Play the first 30 seconds:\r\nsocket.emit('play', {\r\n  uri: 'spotify:track:0FutrWIUM5Mg3434asiwkp',\r\n  ms: 0,\r\n  duration: 30000\r\n});\r\n\r\n// Play the first 30 seconds starting one minute into the song:\r\nsocket.emit('play', {\r\n  uri: 'spotify:track:0FutrWIUM5Mg3434asiwkp',\r\n  ms: 60000,\r\n  duration: 30000\r\n});\r\n```\r\n\r\nParameters:\r\n> **`track_uri`** / **`uri`**\r\n> A spotify track URI.\r\n>\r\n> Example: `spotify:track:0FutrWIUM5Mg3434asiwkp`\r\n\r\n> **`ms`** *optional*\r\n> Number of milliseconds to begin playing the track at.\r\n\r\n> **`duration`** *optional*\r\n> Number of milliseconds to play the song for before stopping. \r\n\r\n#### `/play/:playlist_uri/:index?/:ms?/:duration?`\r\n#### `socket.emit('play', {uri[, index, ms, duration]})`\r\nPlay a specific album or user playlist with a given URI.\r\n\r\n```bash\r\ncurl http://localhost:3001/play/spotify:album:2YJFLMyzzZ2k4mhfPSiOj2\r\ncurl http://localhost:3001/play/spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k\r\n\r\n# Start at the third track in the playlist:\r\ncurl http://localhost:3001/play/spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k/3\r\n\r\n# Start a minute into the third track in the playlist:\r\ncurl http://localhost:3001/play/spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k/3/60000\r\n\r\n# Start a minute into the third track in the playlist and play the first 30 seconds:\r\ncurl http://localhost:3001/play/spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k/3/60000/30000\r\n```\r\n\r\n```js\r\nsocket.emit('play', {uri: 'spotify:album:2YJFLMyzzZ2k4mhfPSiOj2'});\r\nsocket.emit('play', {uri: 'spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8'});\r\n\r\n// Start at the third track in the playlist:\r\nsocket.emit('play', {\r\n  uri: 'spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k',\r\n  index: 3\r\n});\r\n\r\n// Start a minute into the third track in the playlist:\r\nsocket.emit('play', {\r\n  uri: 'spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k',\r\n  index: 3,\r\n  ms: 60000\r\n});\r\n\r\n// Start a minute into the third track in the playlist and play the first 30 seconds:\r\nsocket.emit('play', {\r\n  uri: 'spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k',\r\n  index: 3,\r\n  ms: 60000,\r\n  duration: 30000\r\n});\r\n```\r\n\r\nParameters:\r\n> **`playlist_uri`** / **`uri`**\r\n> A spotify playlist URI (an album or user playlist).\r\n>\r\n> Example: `spotify:album:2YJFLMyzzZ2k4mhfPSiOj2`\r\n>\r\n> Example: `spotify:user:spotify:playlist:4BKT5olNFqLB1FAa8OtC8k`\r\n\r\n> **`index`** *optional*\r\n> The track number to play (starting at zero).\r\n\r\n> **`ms`** *optional*\r\n> Number of milliseconds to begin playing the track at.\r\n\r\n> **`duration`** *optional*\r\n> Number of milliseconds to play the song for before stopping. \r\n\r\n#### `/pause`\r\n#### `socket.emit('pause')`\r\nPause the player.\r\n\r\n```bash\r\ncurl http://localhost:3001/pause\r\n```\r\n\r\n```js\r\nsocket.emit('pause');\r\n```\r\n\r\n#### `/stop`\r\n#### `socket.emit('stop')`\r\nStop the player.\r\n\r\n```bash\r\ncurl http://localhost:3001/stop\r\n```\r\n\r\n```js\r\nsocket.emit('pause');\r\n```\r\n\r\n#### `/volume/:volume`\r\n#### `socket.emit('volume', volume)`\r\nSet the player volume level.\r\n\r\n```bash\r\ncurl http://localhost:3001/volume/1\r\ncurl http://localhost:3001/volume/0\r\ncurl http://localhost:3001/volume/0.5\r\n```\r\n\r\n```js\r\nsocket.emit('volume', 1);\r\nsocket.emit('volume', 0);\r\nsocket.emit('volume', 0.5);\r\n```\r\n\r\nParameters:\r\n> **`volume`**\r\n> A number representing the volume level, between 0 and 1.\r\n\r\n#### `/seek/:amount`\r\n#### `socket.emit('seek', amount)`\r\nSet the playhead's position.\r\n\r\n```bash\r\ncurl http://localhost:3001/seek/0\r\ncurl http://localhost:3001/seek/0.5\r\n```\r\n\r\n```js\r\nsocket.emit('seek', 0);\r\nsocket.emit('seek', 0.5);\r\n```\r\n\r\n\r\nParameters:\r\n> **`amount`**\r\n> A number representing the position of the seek bar, between 0 and 1.\r\n\r\n## License\r\n\r\nMIT\r\n\r\n----\r\n\r\n[![Analytics](https://ga-beacon.appspot.com/UA-33247419-2/spotify-desktop-remote/README.md)](https://github.com/igrigorik/ga-beacon)\r\n","created":"2014-08-28T01:55:34.376Z","modified":"2014-08-28T09:53:00.803Z","lastPublisher":{"name":"namuol","email":"louis.acresti@gmail.com"},"owners":[{"name":"namuol","email":"louis.acresti@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"spotify-desktop-remote","_npmUser":{"name":"namuol","email":"louis.acresti@gmail.com"},"_npmVersion":"1.4.23","_rev":"1-2c6836a7598ab2fad042a2f079dc8f65","_shasum":"188376da275300d7226c47529faa8888bd433984","author":{"name":"Louis Acresti","email":"louis.acresti@gmail.com","url":"https://namuol.github.io"},"bugs":{"url":"https://github.com/namuol/spotify-desktop-remote/issues"},"directories":{},"dist-tags":{"latest":"0.2.3"},"dist":{"shasum":"188376da275300d7226c47529faa8888bd433984","tarball":"http://registry.npmjs.org/spotify-desktop-remote/-/spotify-desktop-remote-0.2.3.tgz"},"maintainers":[{"name":"namuol","email":"louis.acresti@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-08-28T09:53:00.803Z","created":"2014-08-28T01:55:34.376Z","0.2.0":"2014-08-28T01:55:34.376Z","0.2.1":"2014-08-28T02:12:30.727Z","0.2.2":"2014-08-28T09:26:33.203Z","0.2.3":"2014-08-28T09:53:00.803Z"}}}