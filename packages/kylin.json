{"name":"kylin","description":"Kylin HTTP Proxy Server","keywords":["proxy"],"repository":"https://github.com/nqdeng/kylin","version":"0.10.4","engines":{"node":">=0.10.0"},"dependencies":{"commander":"1.0.x"},"main":"lib/index.js","bin":{"kylin":"./bin/kylin"},"gitHead":"0c71d44834f332c8545eb15ad1f2318dec5eed9b","homepage":"https://github.com/nqdeng/kylin","scripts":{},"versions":[{"number":"0.9.0","date":"2013-07-15T05:50:19.600Z"},{"number":"0.9.1","date":"2013-07-26T07:25:12.013Z"},{"number":"0.9.2","date":"2013-08-14T08:07:59.067Z"},{"number":"0.10.0","date":"2014-03-07T16:59:16.774Z"},{"number":"0.10.1","date":"2014-03-08T05:26:21.898Z"},{"number":"0.10.2","date":"2014-03-08T05:34:51.592Z"},{"number":"0.10.3","date":"2015-02-05T03:47:28.038Z"},{"number":"0.10.4","date":"2015-02-05T03:55:26.055Z"}],"readme":"麒麟\r\n====\r\n\r\n改了系统HOSTS文件后浏览器刷到死都不生效有木有！觉得Flush-DNS之类插件不那么好用了有木有！手持设备无法修改系统DNS访问不了开发环境有木有！您可以试试看麒麟代理，不代理飞机票，只代理HTTP(S)，HOSTS即改即生效！\r\n\r\n安装\r\n----\r\n\r\n>\tnpm install kylin -g\r\n\r\n使用\r\n----\r\n\r\n命令行终端下使用以下命令启动代理服务器，默认使用`1080`端口和当前目录下的`hosts`文件。\r\n\r\n>\tkylin\r\n\r\n或者使用以下命令指定hosts文件路径。\r\n\r\n>\tkylin /home/admin/hosts\r\n\r\n或者使用以下命令指定代理服务器端口。\r\n\r\n>\tkylin -p 8080\r\n\r\n或者使用以下命令查看完整帮助。\r\n\r\n>\tkylin -h\r\n\r\n### DNS解析\r\n\r\n麒麟在解析请求域名的DNS时，如果当前目录下存在`hosts`文件，或者指定了`hosts`文件，则优先使用`hosts`文件中的DNS绑定。\r\n\r\n\r\n\t+--------+   example.com   +-------+   127.0.0.1:8080   +--------+\r\n\t| client | <-------------> | kylin | <----------------> | server |\r\n\t+--------+                 +-------+                    +--------+\r\n\t                              | ^\r\n\t                  example.com | | 127.0.0.1:8080\r\n\t                              v |\r\n\t                          +---------+\r\n\t                          | ./hosts |\r\n\t                          +---------+\r\n\t                              | ^\r\n\t                              v |\r\n\t                          +---------+\r\n\t                          | system  |\r\n\t                          |     DNS |\r\n\t                          +---------+\r\n\r\n麒麟的`hosts`文件的写法与系统HOSTS文件类似，但功能略强大：\r\n\r\n\t# 允许指定源服务的端口。\r\n\t127.0.0.1:8080\t\tfoo.example.com\r\n\r\n\t# 允许使用域名（由系统DNS来解析）来指定源服务器。\r\n\ttest.com\t\t\tbar.example.com\r\n\r\n\t# 以上功能也可以同时使用。\r\n\ttest.com:8080\t\tbaz.example.com\r\n\r\n另外，麒麟的`hosts`文件被修改后，**不需要重启**代理服务器也能立即生效。\r\n\r\n应用场景\r\n--------\r\n\r\n以下介绍一些或是典型的，或是神奇的应用场景。以Firefox为例，所有场景下都需要把浏览器的代理服务器设置为以下这种样子。\r\n\r\n\tConfigure Proxies to Access the Internet\r\n\t[ ] No proxy\r\n\t[ ] Auto-detect proxy settings for this network\r\n\t[ ] Use system proxy settings\r\n\t[*] Manual proxy configuration:\r\n\t\tHTTP Proxy: 127.0.0.1            Port: 1080\r\n\t\tSSL Proxy:  127.0.0.1            Port: 1080\r\n\r\n### 标准代理服务器\r\n\r\n如果你有一台可以翻*的服务器，并且希望造福人类时，无需任何配置，简单地把麒麟跑起来，然后把服务器的IP和端口告诉小伙伴们，完了。\r\n\r\n### 干掉浏览器DNS缓存\r\n\r\n如果你需要在开发阶段频繁地修改DNS绑定，但又饱受浏览器DNS缓存的折磨，就可以把麒麟跑起来，然后把浏览器的代理服务器配置为`127.0.0.1:1080`，之后困扰不再，HOSTS文件即改即生效。\r\n\r\n>\t原理： 浏览器使用HTTP(S)代理访问页面时，浏览器自身并不解析域名，因此只要代理服务器没有DNS缓存，HOSTS文件就可以即改即生效。\r\n\r\n### 干掉非标准端口\r\n\r\n如果开发环境的页面跑在非标准端口（比如8080）上，而你又希望使用不带端口的域名来访问页面时，就可以在麒麟的`hosts`文件中指定源服务器的端口。\r\n\r\n### 手持设备页面调试\r\n\r\n如果你需要在手持设备上使用线上域名调试开发环境的页面，但又苦于不好修改DNS绑定，就可以把麒麟跑起来，然后使用相应的IP和端口配置手持设备的代理服务器，之后困扰不再，代理服务器的HOSTS文件即改，手持设备的浏览器上即生效。\r\n\r\nAPI\r\n----\r\n\r\n也可以使用以下命令把麒麟安装为本地模块。\r\n\r\n>\tnpm install kylin\r\n\r\n之后就可以用API的方式启动麒麟。\r\n\r\n\tvar kylin = require('kylin');\r\n\t\r\n\tkylin({\r\n\t\thosts: './my-hosts'\r\n\t\tport: 8080\r\n\t});\r\n\r\n一些技巧\r\n--------\r\n\r\n### 如何快速切换浏览器代理设置\r\n\r\nFirefox可尝试[Proxy Selector](https://addons.mozilla.org/zh-cn/firefox/addon/proxy-selector/)这个插件，Chrome可尝试[Proxy Switchy](https://chrome.google.com/webstore/detail/proxy-switchy/caehdcpeofiiigpdhbabniblemipncjj)或[TunnelSwitch](https://chrome.google.com/webstore/detail/tunnelswitch/nfpphleklkamlblagdkbkomjmaedanoh)这些插件。\r\n\r\n### 如何以后台服务方式运行麒麟\r\n\r\nLinux与OSX用户可以在命令行终端下通过以下命令以后台进程方式启动麒麟。\r\n\r\n>\tkylin &\r\n\r\n[天马](http://nqdeng.github.io/tianma)用户可以在网站目录下将麒麟安装为本地模块后，按以下方式编辑天马配置文件，将天马和麒麟一起后台运行。\r\n\r\n\tvar kylin = require('kylin'),\r\n\t\ttianma = require('tianma'),\r\n\t\tpipe = tianma.pipe;\r\n\r\n\ttianma\r\n\t\t.createHost({ port: 80, portssl: 443 })\r\n\t\t<以下代码省略..>\r\n\r\n\tkylin();","created":"2013-07-15T05:50:14.219Z","modified":"2015-02-05T03:55:26.055Z","lastPublisher":{"name":"nqdeng","email":"nqdeng@gmail.com"},"owners":[{"name":"nqdeng","email":"nqdeng@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"kylin","_nodeVersion":"0.11.14","_npmUser":{"name":"nqdeng","email":"nqdeng@gmail.com"},"_npmVersion":"2.0.2","_rev":"1-12ca05255dd51fe10344ff05a0bf4f69","_shasum":"dc8b471bbc115d558fb8fd2a4a10a1ae40949462","author":{"name":"Nanqiao Deng","email":"nqdeng@gmail.com"},"bugs":{"url":"https://github.com/nqdeng/kylin/issues"},"directories":{},"dist-tags":{"latest":"0.10.4","beta":"0.10.0"},"dist":{"shasum":"dc8b471bbc115d558fb8fd2a4a10a1ae40949462","tarball":"http://registry.npmjs.org/kylin/-/kylin-0.10.4.tgz"},"maintainers":[{"name":"nqdeng","email":"nqdeng@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-05T03:55:26.055Z","created":"2013-07-15T05:50:14.219Z","0.9.0":"2013-07-15T05:50:19.600Z","0.9.1":"2013-07-26T07:25:12.013Z","0.9.2":"2013-08-14T08:07:59.067Z","0.10.0":"2014-03-07T16:59:16.774Z","0.10.1":"2014-03-08T05:26:21.898Z","0.10.2":"2014-03-08T05:34:51.592Z","0.10.3":"2015-02-05T03:47:28.038Z","0.10.4":"2015-02-05T03:55:26.055Z"}}}