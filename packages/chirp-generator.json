{"name":"chirp-generator","version":"0.0.6","description":"Randomly send test data via HTTP and MQTT","main":"bin/chirp","bin":{"chirp-generator":"./bin/chirp"},"repository":"https://github.com/tomhallam/chirp","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"license":"MIT","dependencies":{"commander":"^2.8.1","debug":"^2.2.0","mqtt":"^1.4.1","request":"^2.64.0"},"gitHead":"21076b028d465c72769c9ae4bcec7bca846e982f","homepage":"https://github.com/tomhallam/chirp","versions":[{"number":"0.0.1","date":"2015-09-29T09:09:57.690Z"},{"number":"0.0.2","date":"2015-09-29T09:11:01.016Z"},{"number":"0.0.3","date":"2015-09-29T09:15:02.625Z"},{"number":"0.0.4","date":"2015-09-29T09:20:36.592Z"},{"number":"0.0.5","date":"2015-09-29T09:22:47.251Z"},{"number":"0.0.6","date":"2015-09-29T09:29:00.886Z"}],"readme":"This project was borne out of my need to send arbitrary data at random intervals to servers that speak MQTT and HTTP\nto test an IoT system.\n\nchirp is presented as a command line program. Install as follows:\n\n    npm install -g chirp-generator\n    \n## Usage\n    \n      Usage: chirp-generator [options]\n    \n      Options:\n    \n        -h, --help                         output usage information\n        -V, --version                      output the version number\n        -h, --host [hostname]              Host to connect to\n        -p, --port [port]                  \n        -P, --protocol [protocol]          Protocol to use (http|mqtt) (default: http)\n        -u --url [url]                     Required for HTTP only. The URL to send the data to.\n        -t, --template [templateLocation]  Template to use (default: ./templates/default.js)\n        -r, --rangeInterval <a>..<b>       Interval range in milliseconds\n        -T, --topic [topic]                (MQTT only, the topic)\n        -m, --method [method]              (HTTP only, the method. Default is PUT)\n        -v, --verbose                      Show verbose output\n    \n## Templates     \n\nTemplates are used to mock the data you're sending to the server. They are interpreted as Javascript on each request\nso you can randomise or otherwise change the data on each run. See the included `templates/default.js` file for an example:\n\n    module.exports = function() {\n        return {\n            name: 'Random temperature readings',\n            payload: {\n                temperature: Math.min(Math.random() * 50),\n                apiKey: 'my-api-key'\n            }\n        }\n    };\n    \nFor a template to be valid, it should export a *function* that contains a `name` and `payload` function. Payload will be\ndelivered to the server either via MQTT or HTTP as desired. ","created":"2015-09-29T09:09:57.690Z","modified":"2015-09-29T09:29:00.886Z","lastPublisher":{"name":"tomhallam","email":"tom@freshnode.co.uk"},"owners":[{"name":"tomhallam","email":"tom@freshnode.co.uk"}],"other":{"_attachments":{},"_from":".","_id":"chirp-generator","_nodeVersion":"0.12.0","_npmUser":{"name":"tomhallam","email":"tom@freshnode.co.uk"},"_npmVersion":"2.5.1","_rev":"1-0a4b27dfbeab0abb82abb19200c608cc","_shasum":"5a992421ef197eb7b0ecea665b701f4680a6a72d","author":{"name":"Tom Hallam"},"bugs":{"url":"https://github.com/tomhallam/chirp/issues"},"directories":{},"dist-tags":{"latest":"0.0.6"},"dist":{"shasum":"5a992421ef197eb7b0ecea665b701f4680a6a72d","tarball":"http://registry.npmjs.org/chirp-generator/-/chirp-generator-0.0.6.tgz"},"maintainers":[{"name":"tomhallam","email":"tom@freshnode.co.uk"}],"readmeFilename":"README.md","time":{"modified":"2015-09-29T09:29:00.886Z","created":"2015-09-29T09:09:57.690Z","0.0.1":"2015-09-29T09:09:57.690Z","0.0.2":"2015-09-29T09:11:01.016Z","0.0.3":"2015-09-29T09:15:02.625Z","0.0.4":"2015-09-29T09:20:36.592Z","0.0.5":"2015-09-29T09:22:47.251Z","0.0.6":"2015-09-29T09:29:00.886Z"}}}