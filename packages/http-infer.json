{"name":"http-infer","description":"Convert the returns of a route to a http response","version":"0.0.1","repository":"https://github.com/srcagency/http-infer","scripts":{"test":"node test"},"devDependencies":{"tape":"^4.6.3"},"license":"MIT","gitHead":"fe9b9d4d609c6466133938ed4d349ae495879e8b","homepage":"https://github.com/srcagency/http-infer#readme","versions":[{"number":"0.0.1","date":"2016-12-05T10:27:43.194Z"}],"readme":"# http-infer\n\nConvert a simple return value from a route function into a description of a\nhttp response. The response is of the format accepted by\n[http-tell](https://github.com/srcagency/http-tell).\n\n\n```js\ninfer(value) -> {\n\t// headers\n\tcode,\n\tmessage,\n\theaders,\n\n\t// body\n\tjson,\n\traw,\n};\n```\n\nReturn values are interpreted as:\n\n- `undefined` will by translated into a `204` (`No content`) http response\n- Any object with a `code` property will be thought to be a valid response\n  definition and is therefore returned as is\n- Any other value will be wrapped as `{ code: 200, json: value }`\n\n## Examples\n\n```js\nvar infer = require('http-infer');\nvar tell = require('http-tell');\n\nhttp.createServer(function( request, response ){\n\ttell(response, infer())\n\t\t.then(() => console.log('Completed a 200 request without content'));\n})\n\t.listen(8000);\n```\n\nStreaming JSON:\n\n```js\nvar infer = require('http-infer');\nvar tell = require('http-tell');\nvar pull = require('pull-stream');\n\nhttp.createServer(function( request, response ){\n\ttell(response, infer(pull.values([ 'a', 'b', 'c' ])))\n\t\t.then(() => console.log('Streamed all values to the client'));\n})\n\t.listen(8000);\n```\n\n\"Pass through\" objects with a `code`\n\n```js\nvar infer = require('http-infer');\nvar tell = require('http-tell');\n\nhttp.createServer(function( request, response ){\n\ttell(response, infer({\n\t\tcode: 400,\n\t\tjson: { error: 'Something bad' },\n\t}))\n\t\t.then(() => console.log('Send a 400 response'));\n})\n\t.listen(8000);\n```\n","created":"2016-12-05T10:27:43.194Z","modified":"2016-12-05T10:27:43.194Z","lastPublisher":{"name":"thomas-jensen","email":"thomas@src.agency"},"owners":[{"name":"thomas-jensen","email":"thomas@src.agency"}],"other":{"_attachments":{},"_from":".","_id":"http-infer","_nodeVersion":"7.0.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/http-infer-0.0.1.tgz_1480933662656_0.7027854262851179"},"_npmUser":{"name":"thomas-jensen","email":"thomas@src.agency"},"_npmVersion":"3.10.9","_rev":"1-d25a46fd7175956e07abc860a89a8550","_shasum":"98e4690b0ffe5f6f220be295e112a2608e5cebcc","bugs":{"url":"https://github.com/srcagency/http-infer/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"98e4690b0ffe5f6f220be295e112a2608e5cebcc","tarball":"http://registry.npmjs.org/http-infer/-/http-infer-0.0.1.tgz"},"maintainers":[{"name":"thomas-jensen","email":"thomas@src.agency"}],"readmeFilename":"README.md","time":{"modified":"2016-12-05T10:27:43.194Z","created":"2016-12-05T10:27:43.194Z","0.0.1":"2016-12-05T10:27:43.194Z"}}}