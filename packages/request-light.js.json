{"name":"request-light.js","version":"0.8.13","description":"A light-weight http request library.","main":"request-light.js","scripts":{"test":"node tests/test-main.js"},"repository":"https://github.com/fisher95/request-light","keywords":["request","http","light-weight","gbk"],"license":"ISC","homepage":"https://github.com/fisher95/request-light#readme","dependencies":{"extend":"^3.0.0","iconv-lite":"^0.4.13","querystring":"^0.2.0","urlencode":"^1.1.0"},"gitHead":"26e8fd82760881474cbc232b56978d932ecf69b9","versions":[{"number":"0.8.0","date":"2016-09-12T16:14:52.023Z"},{"number":"0.8.1","date":"2016-09-12T16:39:09.466Z"},{"number":"0.8.2","date":"2016-09-13T14:51:07.006Z"},{"number":"0.8.3","date":"2016-09-20T11:48:29.065Z"},{"number":"0.8.4","date":"2016-10-16T14:51:16.805Z"},{"number":"0.8.5","date":"2016-10-31T07:54:08.100Z"},{"number":"0.8.6","date":"2016-11-23T13:01:41.964Z"},{"number":"0.8.7","date":"2016-11-25T06:42:53.577Z"},{"number":"0.8.8","date":"2016-11-25T06:49:19.989Z"},{"number":"0.8.9","date":"2016-11-25T08:14:59.089Z"},{"number":"0.8.10","date":"2016-11-25T08:47:06.675Z"},{"number":"0.8.11","date":"2016-11-25T10:16:58.601Z"},{"number":"0.8.12","date":"2016-11-25T12:09:09.641Z"},{"number":"0.8.13","date":"2016-11-25T13:01:56.842Z"}],"readme":"# request-light.js | A Light-Weight Http Request library for node.js\n\n*Under Development Yet* :)\n\nA Light Http Request library for node.js. (Supporting gbk encoding. :)\n\n## References\n\nOther http request library for node.js.\n\nhttps://github.com/request/request\n\nhttps://github.com/Mashape/unirest-nodejs\n\n\n## Attention:\n\nA light http request library for NodeJS, supporting 'gbk/gb2312' encoding.\n\n*Why it is light, cause I do not believe that I can write something that are much complicated* :)\n\nIt is a simple library drifted by someone amateur like me and please do not use it in the product level.\n\n---\n\n## Get-Started\n\n```js\nvar Request = require('request');\n\nRequest\n    .init({\n        timeout: 6000,\n        encoding: 'gb2312',\n        host: 'google.com',\n        method: 'GET',\n        path: '/base-path/'\n    });\n\n\nRequest\n    //.get('remote-address')\n    .post('remote-address')\n    .config({\n        timeout: 6000,\n        encoding: 'gb2312'\n    })\n    .headers({\n        'User-Agent': 'fisher95.com'\n    })\n    .send({\n        someKey: 'some-value'\n    })\n    .done(function(err, res){\n        if(err)\n            return R.log(err);\n        R.log(res.headers);\n        R.log(res.body);\n    });\n```\n\n---\n\n## Initialize Configure\n\nConfigure to initialize the library with global preferences of all your request by ```Request.config(configure);```.\n\n```js\nRequest.config({\n    debug: true,\n    timeout: 6000,\n    encoding: 'gb2312',\n    host: 'google.com',\n    method: 'GET',\n    path: '/base-path/'\n});\n```\n\nConfigure to specify a single request by ```Request.post(remote-address).config(configure);```\n\n```js\nvar url = 'http://google.com/';\nRequest.post(url)\n    .query({\n    \thello: 'world'\n    })\n    .config({\n        timeout: 6000,\n        encoding: 'gb2312',\n        encodings: {\n            request: 'gb2312',\n            response: 'gb2312'\n        }\n    });\n```\n\nConfigure retry when timeout globally. *(Only retry when timeout)*\n\n```js\nRequest.config({\n    debug: true,\n    timeout: 6000,\n    retry: true,            // Whether retry (only) when timeout.\n    retryMaxTime: 3000,     // Retry timeout is 3000.\n    retryMaxTimes: 5        // At most  5  request will be sent.\n});\n```\n\n\n## Callback of request\n\n```js\nvar callback = function(err, response){\n    console.log(res.code);\n    console.log(res.status);\n    console.log(res.message);\n    console.log(res.length);\n    console.log(res.headers);\n    console.log(res.body);\n}\n```\n\n\n---\n\n## Usage Sample\n\n### Download binary file.\n\n```js\nRequest.get( URL_BINARY_FILE )\n    .config( {\n        encoding: null  // set encoding as null to make the response body is instance of Buffer\n    } )\n    .done( function ( err, res ) {\n        if ( err ) {return console.error( err );}\n        fs.writeFile( FILE_DOWNLOADED, res.body, function ( err ) {\n            if ( err ) {return console.error( err );}\n            console.log( 'Saved file to: ' + FILE_DOWNLOADED );\n        } )\n    } );\n```\n\n---\n\n## Update Log\n\n- v0.8.6 *2016-11-23*\n    - Added Support to handle multi-byte characters in the hard way. [ref][1]\n    - Added response.length to represent the response body length.\n\n---\n\n\n[1]: https://nodejs.org/api/stream.html#stream_readable_setencoding_encoding \"nodejs multi-byte characters solution.\"\n\n\n","created":"2016-09-12T16:14:52.023Z","modified":"2016-11-25T13:01:56.842Z","lastPublisher":{"name":"fisher95","email":"fisher.subs@gmail.com"},"owners":[{"name":"fisher95","email":"fisher.subs@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"request-light.js","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/request-light.js-0.8.13.tgz_1480078914971_0.9800165330525488"},"_npmUser":{"name":"fisher95","email":"fisher.subs@gmail.com"},"_npmVersion":"3.10.8","_rev":"10-9dbd2480062b5043117acc0323499f83","_shasum":"ab0bab84c86bd5eb9021705d01ffe3004c3f5d5a","author":{"name":"Fisher"},"bugs":{"url":"https://github.com/fisher95/request-light/issues"},"directories":{},"dist-tags":{"latest":"0.8.13"},"dist":{"shasum":"ab0bab84c86bd5eb9021705d01ffe3004c3f5d5a","tarball":"http://registry.npmjs.org/request-light.js/-/request-light.js-0.8.13.tgz"},"maintainers":[{"name":"fisher95","email":"fisher.subs@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-25T13:01:56.842Z","created":"2016-09-12T16:14:52.023Z","0.8.0":"2016-09-12T16:14:52.023Z","0.8.1":"2016-09-12T16:39:09.466Z","0.8.2":"2016-09-13T14:51:07.006Z","0.8.3":"2016-09-20T11:48:29.065Z","0.8.4":"2016-10-16T14:51:16.805Z","0.8.5":"2016-10-31T07:54:08.100Z","0.8.6":"2016-11-23T13:01:41.964Z","0.8.7":"2016-11-25T06:42:53.577Z","0.8.8":"2016-11-25T06:49:19.989Z","0.8.9":"2016-11-25T08:14:59.089Z","0.8.10":"2016-11-25T08:47:06.675Z","0.8.11":"2016-11-25T10:16:58.601Z","0.8.12":"2016-11-25T12:09:09.641Z","0.8.13":"2016-11-25T13:01:56.842Z"}}}