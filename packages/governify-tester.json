{"name":"governify-tester","version":"0.0.2","description":"Testing endpoints via http requests","homepage":"https://github.com/isa-group/governify-tester","main":"index.js","dependencies":{"bluebird":"^3.4.7","fs":"0.0.1-security","js-yaml":"^3.8.2","moment":"^2.17.1","path":"^0.12.7","request":"^2.79.0","winston":"^2.3.1"},"devDependencies":{"chai":"^3.5.0","grunt":"^1.0.1","grunt-banner":"^0.6.0","grunt-contrib-jshint":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-dockerize":"0.0.1","grunt-header":"^1.1.0","grunt-mocha-test":"^0.13.2","grunt-release-github":"1.0.4","mocha":"^3.2.0"},"scripts":{"start":"npm index","test":"grunt test"},"keywords":["parallel","request","nodejs","node","governify","tester","tester"],"license":"GPL-3.0+","repository":"https://github.com/isa-group/governify-tester","gitHead":"fe0e43a443b277d0969db3393552efee11c9794f","versions":[{"number":"0.0.1","date":"2017-03-22T12:11:49.555Z"},{"number":"0.0.2","date":"2017-03-28T13:47:09.448Z"}],"readme":"![alt build:passed](https://travis-ci.org/isa-group/governify-tester.svg?branch=master)\n\n## 1. Install the package\n```bash\nnpm install governify-tester --save\n```\n\n\n## 2. Install the governify-cli and use it in your shell\n```bash\nnpm install governify-cli -g\n```\n[see doc ](https://github.com/isa-group/governify-cli)\n\n## 3. Use from code\nImport library in you code\n\n```javascript\nvar tester = require(\"governify-tester\");\n```\n* All results generate a logfile into the directory where is launched.\n* Also you can obtain the results of each test. It is because all methods return a Promises\n### 3.1 Simple requests with duration\n\n* Params: URL, method , number of times, duration [body], [headers]\n\n```javascript\ntester.doParallelRequestWithDuration(\"https://www.google.es/\", \"GET\", 2, 1);\n\n```\nIf you need the result, you can use the method **then** because it's a\npromise\n\n```javascript\ntester.doParallelRequestWithDuration(\"https://www.google.es/\", \"GET\", 2, 1).then(function(success) {\n    console.log(success);\n});\n\n```\n* You can pass body for test. Only you need to pass body like a string.\n* You could also pass headers in next params\n\n```javascript\n\nlib.doParallelRequestWithDuration(\"https://jsonplaceholder.typicode.com/posts\", \"POST\", 2, 1, \"{\t\\\"isagroup\\\": 1}\");\n\n```\n\n### 3.2 Simple requests once\nYou only test endpoint n times once.\n\n* Params: URL, method , number of times, [body], [headers]\n\n```javascript\n\ntester.doOneStackOfRequest(\"http://google.es\", \"GET\",2);\n\n```\nIt is also possible to pass body and headers in the same order that the first one.\n\n### 3.3 Simple requests infinite\nThis one is special because not return any result a need that you stop it.\n* Params: URL, method , number of times, [body], [headers]\n\n```javascript\n\ntester.doRequests(\"http://google.es\", \"GET\", 2);\n\n\n```\n\n### 3.4 Read test from file\nThis options is strict.\nIt only has certain types that will be described below.\nYou must write in yaml format and you only have to indicate the path of file.\n* Params: Path\n\n```javascript\ntester.doParallelRequestFromfile('./test.yaml');\n\n```\n\n### Types of tests for config file\n*  #### long\n\n\n```bash\ntestId: idoftest\ntype: long\nurl : https://twitter.com/\nduration: 3 #seconds\ncount: 2 #number of times\nmethod: GET\n```\n*  #### interval\nYou have to define intervals a its duration necessarily.\n\n```bash\ntestId: validation14\ntype: interval\nurl: http://localhost:3000/test\nrequest:\n  method: POST\n  headers:\n    content-type: application/json\n    heade1: val\n  body:\n    id: MyID\n    value: XXX\ntenants:\n  - id: t1\n    intervals:\n      - 8\n      - 5\n    duration: 1\n  - id: t2\n    intervals:\n      - 6\n      - 4\n    duration: 1\n  - id: t3\n    intervals:\n      - 1\n      - 8\n    duration: 1\n  - id: t4\n    intervals:\n      - 3\n      - 3\n    duration: 1\n```\n * #### random\n You need to write an array within the body\n ```bash\n testId: validation12\n type: random\n url : https://jsonplaceholder.typicode.com/posts\n duration: 4 #seconds\n count: 10\n request:\n   method: POST\n   headers:\n     content-type: application/json\n   body: #randomize in body\n     id:\n       - prueba\n       - prueba1\n       - prueba2\n       - prueba3\n       - prueba4\n     value:\n       - value\n       - value1\n       - value2\n       - value3\n       - value4\n     date:\n       - Date #currently date\n\n ```\n* #### randomTemplate\n```bash\ntestId: validation11\ntype: randomTemplate\nurl : https://jsonplaceholder.typicode.com/posts\nduration: 4 #seconds\ncount: 10\nrequest:\n  method: POST\n  randomFields:\n    id:\n      - prueba\n      - prueba1\n      - prueba2\n      - prueba3\n      - prueba4\n    value:\n      - value\n      - value1\n      - value2\n      - value3\n      - value4\n    date:\n      - Date #currently date\n  headers:\n    content-type: application/json\n    #randomize in body\n  body: >\n          {\n          \"id\": \"{{id}}\",\n          \"value\": \"{{value}}\",\n          \"date\": \"{{date}}\"\n          }\n\n```\n\n\n\n\n## Latest release\n\nThe version 0.0.2 is the latest stable version of governify-tester component.\nsee [release note](https://github.com/isa-group/governify-tester/releases/tag/0.0.2) for details.\n\nFor running:\n\n- Download latest version from [0.0.2](https://github.com/isa-group/governify-tester/releases/tag/0.0.2)","created":"2017-03-22T12:11:49.555Z","modified":"2017-03-28T13:47:09.448Z","lastPublisher":{"name":"isagroup","email":"isagroup.us@gmail.com"},"owners":[{"name":"isagroup","email":"isagroup.us@gmail.com"},{"name":"joseenrique","email":"joseenriqueruiznavarro@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"governify-tester","_nodeVersion":"6.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/governify-tester-0.0.2.tgz_1490708827421_0.4127125502564013"},"_npmUser":{"name":"isagroup","email":"isagroup.us@gmail.com"},"_npmVersion":"3.10.10","_rev":"3-25d740ac1ce6571d6728ea2c68ab5923","_shasum":"f8cffd1be1e06b8640e48b4fc229816a8d96ac77","author":{"name":"ISA Group","url":"http://www.isa.us.es/"},"bugs":{"url":"https://github.com/isa-group/governify-tester/issues"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"f8cffd1be1e06b8640e48b4fc229816a8d96ac77","tarball":"https://registry.npmjs.org/governify-tester/-/governify-tester-0.0.2.tgz"},"maintainers":[{"name":"isagroup","email":"isagroup.us@gmail.com"},{"name":"joseenrique","email":"joseenriqueruiznavarro@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-03-28T13:47:09.448Z","created":"2017-03-22T12:11:49.555Z","0.0.1":"2017-03-22T12:11:49.555Z","0.0.2":"2017-03-28T13:47:09.448Z"}}}