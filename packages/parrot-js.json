{"name":"parrot-js","version":"0.2.2","description":"Transparently hijack and redirect an application's HTTP requests","main":"./parrot.js","repository":"https://github.com/MakerStudios/parrot.js","gitHead":"6d61c6beb1672034cbce41a16a2c7071511d6812","homepage":"https://github.com/MakerStudios/parrot.js#readme","scripts":{},"versions":[{"number":"0.1.0","date":"2014-11-20T17:06:09.542Z"},{"number":"0.1.1","date":"2014-11-20T17:09:41.583Z"},{"number":"0.1.2","date":"2015-05-06T15:27:13.883Z"},{"number":"0.2.0","date":"2016-02-01T15:36:58.557Z"},{"number":"0.2.1","date":"2016-10-19T20:32:58.888Z"},{"number":"0.2.2","date":"2016-10-25T16:50:50.861Z"}],"readme":"## parrot.js\n\n`parrot.js` captures outbound HTTP and HTTPS traffic, from a node.js application, and redirects it to a server of your choosing. This is useful for performing blackbox testing on an application which would normally require communication with external servers in order to function. The inspiration for `parrotjs` came from [`nock`](https://github.com/pgte/nock).\n\n## Usage\n\nTo install,\n\n```\n$ npm install parrot-js\n```\n\nAt the entrypoint of your application, put this one-liner:\n\n```\n// Only hijack outbound requests in a testing scenario\nif (...)\n\trequire(\"parrot-js\").Hijack({ \"Host\": \"localhost\", \"Port\": 1234 });\n```\n\nAny outbound HTTP/HTTPS calls made after this point will not reach their intended destination, but will be redirected instead to `http://localhost:1234` with their paths, querystrings and request bodies intact. This, in conjunction with [`impostor`](https://github.com/MakerStudios/impostor), enables the author of the application to write tests which don't rely on state held across an HTTP API boundary.\n\nThe intercepted traffic has an added header, `x-parrot-intended-host`, indicating the host to which the traffic was originally addressed.\n\n## Documentation\n\n`parrot.js` only has one method:\n\n### `require(\"parrot-js\").Hijack(Options)`\n\n`Options` is an object with\n\n* `Host`: required string, the host to which HTTP and HTTPS requests should be redirected.\n* `Port`: required integer, the port to which requests should be redirected.\n* `Quiet`: optional boolean (default false), suppress logging of requests.\n\n## Configuration\n\nBeyond specifying the host and port of the interceptor, `parrot.js` can be configured without code changes via the following optional environment variables:\n\n* `PARROT_MODE` the behavior for handling requests, either `INTERCEPT` to intercept and forward to a server under your control (the default), or `PASSTHROUGH` to allow all requests through to their intended destinations.\n* `PARROT_HOST_EXCEPTIONS` a comma-delimited string, listing hosts that should do the opposite of the chosen mode.\n\nFor example,\n\n```bash\n$ PARROT_HOST_EXCEPTIONS=facebook.com node index.js\n```\n\nwill intercept traffic bound for `google.com` and most other hosts, but it will allow traffic through to `facebook.com`.\n\nOn the other hand,\n\n```bash\n$ PARROT_MODE=PASSTHROUGH PARROT_HOST_EXCEPTIONS=facebook.com,twitter.com node index.js\n```\n\nwill allow traffic through to `google.com` and most other hosts, but it will intercept traffic bound for `facebook.com` or `twitter.com`.\n\n## How does it work?\n\n`parrot.js` works by overriding the `request` method of the node.js core `http` and `https` modules. Any outbound HTTP/HTTPS requests made by your application (including indirectly, through a third party module) eventually use the core modules, so `parrot.js` captures it all.\n","created":"2014-11-20T17:06:09.542Z","modified":"2016-10-25T16:50:50.861Z","lastPublisher":{"name":"makerstudios","email":"tech-3rdparty+npm@makerstudios.com"},"owners":[{"name":"makerstudios","email":"tech-3rdparty+npm@makerstudios.com"}],"other":{"_attachments":{},"_from":".","_id":"parrot-js","_nodeVersion":"4.6.0","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/parrot-js-0.2.2.tgz_1477414248123_0.4862701322417706"},"_npmUser":{"name":"makerstudios","email":"tech-3rdparty+npm@makerstudios.com"},"_npmVersion":"2.15.11","_rev":"2-140ac76b752f6c1a6885dd28e5ed3f21","_shasum":"91b2ce389d55a0768080577e717a3ca7d0e550d4","bugs":{"url":"https://github.com/MakerStudios/parrot.js/issues"},"directories":{},"dist-tags":{"latest":"0.2.2"},"dist":{"shasum":"91b2ce389d55a0768080577e717a3ca7d0e550d4","tarball":"http://registry.npmjs.org/parrot-js/-/parrot-js-0.2.2.tgz"},"maintainers":[{"name":"makerstudios","email":"tech-3rdparty+npm@makerstudios.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-25T16:50:50.861Z","created":"2014-11-20T17:06:09.542Z","0.1.0":"2014-11-20T17:06:09.542Z","0.1.1":"2014-11-20T17:09:41.583Z","0.1.2":"2015-05-06T15:27:13.883Z","0.2.0":"2016-02-01T15:36:58.557Z","0.2.1":"2016-10-19T20:32:58.888Z","0.2.2":"2016-10-25T16:50:50.861Z"}}}