{"name":"cachelicious","version":"0.0.2","description":"Delicious Node.js file stream cacher and HTTP cache server","main":"lib/cachelicious.js","repository":"https://github.com/cblage/node-cachelicious","keywords":["stream","cache","http","server"],"dependencies":{"lru-cache":"1.1.x"},"devDependencies":{},"bundleDependencies":[],"license":"New BSD","engine":{"node":">=0.6"},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_defaultsLoaded":true,"versions":[{"number":"0.0.1","date":"2012-06-09T00:27:31.671Z"},{"number":"0.0.2","date":"2012-06-09T01:03:27.777Z"},{"number":"0.0.3","date":"2012-06-17T22:47:13.692Z"}],"readme":"Cachelicious\n=============\n\nWho said caching and serving cached files should be a chore? \n\nWith Cachelicious it's easier than baking a pie, and almost as delicious as eating it. Mmmmm, pie.... *drool*\n\n\nInstallation\n-----------\n\n    node install cachelicious\n\n\nFS Cache Usage\n-----\n\n```js\nvar CacheliciousFs = require('cachelicious').fs;\nvar fsCache = new CacheliciousFs(20971520); //20MB of cache\n\nfsCache.createReadStream(filepath, options).pipe(destination1);\nfsCache.createReadStream(filepath, {start: 2, end: 100}).pipe(destination2);\n//both will stream from the same cache :)\n\n```\n\nHTTP Server Usage\n-----\n\n```js\nvar CacheliciousHttp = require('cachelicious').http;\n\n(new CacheliciousHttp(function  (request) {\n\tvar filepath = '/var/www/foo/';\n\tif ('/' === request.url) {\n\t\treturn filepath + 'index.html';\n\t} else if ('/teapot' === request.url) {\n\t\treturn 418; //generate a 418\n\t} else {\n\t\tfilepath += request.url;\n\t}\n\treturn filepath;\n}, 209715200)).start();\t\n```\n\nSome test assets are included in the test/assets directory.\n\nYou can also try streaming video (and you should :D), like the Big Buck Bunny - http://www.bigbuckbunny.org/index.php/download/\n\nLicense\n-----\n\nNew BSD License\n\n\nContributing\n------------\n\nPull requests are welcome! I'll try to merge all valuable contributions and credit the author when I do so.","starsCount":0,"created":"2012-06-09T00:27:30.050Z","modified":"2012-09-12T12:33:56.524Z","lastPublisher":{"name":"cblage","email":"carlos@carloslage.net"},"owners":[{"name":"cblage","email":"carlos@carloslage.net"}],"other":{"_attachments":{},"_id":"cachelicious","_nodeVersion":"v0.6.19","_npmUser":{"name":"cblage","email":"carlos@carloslage.net"},"_npmVersion":"1.1.24","_rev":"1-980c849c322ef60268c7ebc859f970d6","author":{"name":"Carlos Brito Lage","email":"carlos@carloslage.met"},"directories":{},"dist-tags":{"latest":"0.0.2"},"dist":{"shasum":"e6e7f636b948880ab0b216affb901cd045b4b0b7","tarball":"http://registry.npmjs.org/cachelicious/-/cachelicious-0.0.2.tgz"},"maintainers":[{"name":"cblage","email":"carlos@carloslage.net"}],"time":{"modified":"2012-09-12T12:33:56.524Z","created":"2012-06-09T00:27:30.050Z","0.0.1":"2012-06-09T00:27:31.671Z","0.0.2":"2012-06-09T01:03:27.777Z","0.0.3":"2012-06-17T22:47:13.692Z"},"users":{}}}