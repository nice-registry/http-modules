{"name":"mole-fetch","version":"1.6.1","main":"./dist/mole-fetch.js","dependencies":{"localforage":"^1.4.2"},"devDependencies":{"babel-cli":"^6.11.4","babel-preset-es2015":"^6.9.0","chai":"^3.5.0","chai-webdriver":"^1.2.0","chromedriver":"^2.22.1","gulp":"^3.9.1","gulp-babel":"^6.1.2","gulp-minify":"0.0.13","mini-mock-api":"^0.3.0","mocha":"^3.0.0","selenium-assistant":"^0.2.0","selenium-webdriver":"^2.53.3","sw-testing-helpers":"^0.1.1"},"scripts":{"build":"gulp","test":"mocha --reporter spec ./test/automated-suite.js"},"license":"Apache-2.0","description":"Is Library for make background http request using ServiceWorker and Fetch API","versions":[{"number":"1.0.0","date":"2016-08-05T08:29:36.271Z"},{"number":"1.1.0","date":"2016-08-05T08:51:31.165Z"},{"number":"1.5.0","date":"2016-08-06T02:39:48.954Z"},{"number":"1.5.1","date":"2016-08-06T05:26:06.007Z"},{"number":"1.6.0","date":"2016-08-06T05:36:37.283Z"},{"number":"1.6.1","date":"2016-08-07T05:39:32.570Z"}],"readme":"# Mole fetch\nIs Library for make background http request using ServiceWorker and Fetch API\n\nMole fetch is help web application make any HTTP request still running incase users are close a browser accidentally or network is disconnect. Mole fetch is using ServiceWokrer and SyncManager\n\n##Installation\n\n```\nnpm install --save mole-fetch\n```\n```\ngit clone https://github.com/thangman22/mole-fetch.git\n```\n\n##Usage\n\n###HTML file\n```javascript\nconst moleFetch = new MoleFetch()\n\nfunction fetchFacebook() {\n    //Call sendRequest for request HTTP\n    moleFetch.sendRequest('facebook', 'http://localhost:5555/mock-api/online', false, 'GET')\n}\n\n//Register ServiceWoker\nif ('serviceWorker' in navigator && 'SyncManager' in window) {\n    navigator.serviceWorker.register(\"sw.js\").then((registration) => {\n        console.log('ServiceWorker registration successful with scope: ', registration.scope)\n    }).catch(function(err) {\n        console.log('ServiceWorker registration failed: ', err)\n    })\n}\n\n//Implement onResponse for recieve response from ServiceWorker when site is online\nmoleFetch.onResponse('facebook').then((value) => {\n    document.getElementById(\"result\").innerHTML = value;\n})\n\n//Implement onResponse for recieve response from Cache when site is offline\nmoleFetch.getCacheResponse('facebook',false).then((value) => {\n    document.getElementById(\"result\").innerHTML = value;\n})\n```\n\n###ServiceWorker file\n```javascript\nimportScripts('node_modules/localforage/dist/localforage.min.js')\nimportScripts('node_modules/mole-fetch/dist/mole-fetch.js')\n\nself.addEventListener('install', (event) => {\n  self.skipWaiting()\n})\n\nself.addEventListener('activate', (event) => {\n  event.waitUntil(self.clients.claim())\n})\n\nself.addEventListener('sync', (event) => {\n  let moleFetch = new MoleFetch\n  moleFetch.initBackgroudfetch(event)\n})\n\n```\n##Method\n\n####sendRequest (taskName, url, data, method)\n\nThis method will be send request to ServiceWorker and request via FetchAPI\n\n####moleFetch.onResponse(taskName)\n\nThis method will wating result from FetchAPI matched by name return as Promise\n\n####moleFetch.getCacheResponse(taskName)\n\nThis method will get result from Cache that created when browser offline and matched by name as Promise\n\n####moleFetch.getTaskStatus(taskName)\n\nThis method will get return status by taskName\n\n##Support\n\nIf youâ€™ve found an error in this library, please file an issue at: https://github.com/thangman22/mole-fetch/issues.\n\nPatches are encouraged, and may be submitted by forking this project and submitting a pull request through GitHub.\n\n\n##License\n\nCopyright 2016 Warat Wongmaneekit.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n","created":"2016-08-05T08:29:36.271Z","modified":"2016-08-07T05:39:32.570Z","lastPublisher":{"name":"thangman22","email":"warat@zocialinc.com"},"owners":[{"name":"thangman22","email":"warat@zocialinc.com"}],"other":{"_attachments":{},"_from":".","_id":"mole-fetch","_nodeVersion":"4.3.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/mole-fetch-1.6.1.tgz_1470548369328_0.48415487678721547"},"_npmUser":{"name":"thangman22","email":"warat@zocialinc.com"},"_npmVersion":"3.7.1","_rev":"1-285650b7c4c8b2e1996d90e90837e804","_shasum":"67247f6cdbaf09da6d3e2164303a3f3aeec0a688","author":{"name":"Warat Wongmaneekit","email":"canopybanj@gmail.com","url":"http://thangis.me"},"directories":{},"dist-tags":{"latest":"1.6.1"},"dist":{"shasum":"67247f6cdbaf09da6d3e2164303a3f3aeec0a688","tarball":"http://registry.npmjs.org/mole-fetch/-/mole-fetch-1.6.1.tgz"},"maintainers":[{"name":"thangman22","email":"warat@zocialinc.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-07T05:39:32.570Z","created":"2016-08-05T08:29:36.271Z","1.0.0":"2016-08-05T08:29:36.271Z","1.1.0":"2016-08-05T08:51:31.165Z","1.5.0":"2016-08-06T02:39:48.954Z","1.5.1":"2016-08-06T05:26:06.007Z","1.6.0":"2016-08-06T05:36:37.283Z","1.6.1":"2016-08-07T05:39:32.570Z"}}}