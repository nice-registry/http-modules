{"name":"httptest","version":"0.1.8","description":"Simply library for testing HTTP servers","license":"MIT","keywords":["tdd","bdd","http","api","rest","test","testing"],"repository":"https://github.com/andreychizh/node-httptest","main":"lib/index.js","scripts":{"test":"mocha ./tests/unit --reporter spec"},"dependencies":{"request":"latest","lodash":"latest"},"devDependencies":{"mocha":"latest","should":"latest","express":"latest","grunt":"latest","grunt-cli":"latest","grunt-express-server":"latest","grunt-mocha-test":"latest"},"gitHead":"3810b42a9b47ebf9c12fd3e464ab065dc9744302","homepage":"https://github.com/andreychizh/node-httptest","versions":[{"number":"0.0.1","date":"2013-07-15T21:58:55.423Z"},{"number":"0.0.2","date":"2013-07-15T22:04:24.921Z"},{"number":"0.0.3","date":"2013-07-25T20:29:31.822Z"},{"number":"0.0.4","date":"2013-08-03T23:38:57.622Z"},{"number":"0.0.5","date":"2013-08-03T23:49:43.278Z"},{"number":"0.0.6","date":"2013-08-04T09:55:09.546Z"},{"number":"0.0.7","date":"2013-08-05T20:28:58.525Z"},{"number":"0.0.8","date":"2013-11-25T07:40:14.342Z"},{"number":"0.1.0","date":"2014-05-06T07:12:37.963Z"},{"number":"0.1.1","date":"2014-05-06T07:13:39.736Z"},{"number":"0.1.2","date":"2014-05-07T01:06:47.905Z"},{"number":"0.1.3","date":"2014-05-07T01:20:14.937Z"},{"number":"0.1.4","date":"2014-05-09T22:38:27.757Z"},{"number":"0.1.5","date":"2014-05-22T11:15:22.806Z"},{"number":"0.1.6","date":"2014-05-22T11:15:52.537Z"},{"number":"0.1.7","date":"2014-07-22T15:43:04.260Z"},{"number":"0.1.8","date":"2014-07-22T15:50:50.590Z"}],"readme":"# HTTP Test [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][david-image]][david-url]\n\n[npm-url]: https://npmjs.org/package/httptest\n[npm-image]: http://img.shields.io/npm/v/httptest.svg\n\n[travis-url]: https://travis-ci.org/andreychizh/node-httptest\n[travis-image]: https://travis-ci.org/andreychizh/node-httptest.svg?branch=master\n\n[david-url]: https://david-dm.org/andreychizh/node-httptest\n[david-image]: https://david-dm.org/andreychizh/node-httptest.svg?theme=shields.io\n\nSimply library for powerful and easy testing REST API\n\n## Install:\n```bash\n$ npm install httptest --save-dev\n```\n\n## Example:\n```js\nvar httptest = require('httptest');\n\nhttptest('https://api.github.com/repos/andreychizh/')\n    .get('/node-httptest')\n    .setParam('version', 123)\n    .setHeader('User-Agent', 'Firefox');\n    .expectStatus(200)\n    .expectJSON()\n    .end(function(err, res) {\n        if (err) throw err;\n        console.log(res);\n    });\n```\n## API:\n\n### Chaining\n\nEvery method will return a `httptest` object, so methods can be chained.\n\n### httptest(uri)\n\nCreate request or group of request object and specify the base `uri`.\n\n```js\nhttptest('http://localhost:3000/')\n```\n\n### .post(uri)\n\nSet `POST` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .post('/api/1.0/cars')\n```\n\n### .get(uri)\n\nSet `GET` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .get('/api/1.0/cars')\n```\n\n### .head(uri)\n\nSet `HEAD` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .head('/api/1.0/cars/123')\n```\n\n### .put(uri)\n\nSet `PUT` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .put('/api/1.0/cars/123')\n```\n\n### .patch(uri)\n\nSet `PATCH` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .patch('/api/1.0/cars/123')\n```\n\n### .del(uri)\n\nSet `DELETE` method of request.\n\n```js\nhttptest('http://localhost:3000/')\n    .del('/api/1.0/cars/123')\n```\n\n### .setParam(param[, value])\n\nSet `GET` params of request. \n\n```js\n// As object\nhttptest('http://localhost:3000/');\n    .get('/api/1.0/cars')\n    .setParam({sort: 'asc'})\n\n// As key-value\nhttptest('http://localhost:3000/')\n    .get('/api/1.0/cars')\n    .setParam('sort', 'asc')\n    \n// Result\nhttp://localhost:3000/api/1.0/cars?sort=asc\n```\n\n### .setBody(body)\n\nSet `POST`, `PUT`, `PATCH` request body\n\n```js\n// As object\nhttptest('http://localhost:3000/')\n    .post('/api/1.0/cars')\n    .setBody({vendor: 'BMW', model: 'M5'})\n```\n\n### .setHeader(header[, value])\n\nSet headers of request.\n\n```js\n// As object\nhttptest('http://localhost:3000/')\n    .setHeader({'User-Agent': 'Firefox'})\n\n// As key-value\nhttptest('http://localhost:3000/')\n    .setHeader('User-Agent', 'Firefox')\n```\n\n### .expectStatus(status)\n\nCheck status code of response.\n\n```js\nhttptest('http://localhost:3000/')\n    .get('/api/1.0/cars')\n    .expectStatus(200)\n```\n\n### .expectJSON()\n\nChecks the type of the response data. Method also parse JSON and return JavaScript object as `res` on `.end(callback)`.\n\n```js\nhttptest('http://localhost:3000/')\n    .get('/api/1.0/cars')\n    .expectJSON()\n```\n\n### .end(callback)\n\nPerform request with given options. Invoke callback(err, res).\n\n```js\nhttptest('http://localhost:3000/')\n    .get('/api/1.0/cars')\n    .end(function(err, res) {\n        if (err) throw err;\n        console.log(res);\n    );\n```\n\n## Workflow\n\nPossible to create a common options for a group of requests. Also support override of params, headers, body, expect.\n\n```js\nvar httptest = require('httptest');\n\n// Common options\nvar http = httptest('http://localhost:3000/')\n    .setHeader('User-Agent', 'Firefox')\n    .setParam('token', 'secret_key')\n    .setParam('userId', '111')\n    .expectStatus(200)\n    .expectJSON();\n    \n// Test 1\nhttp.get('/api/cars')\n    .setParam('limit', 10)\n    .end(function(err, res) {\n        if (err) throw err;\n        console.log(res);\n    });\n    \n// Test 2\nhttp.get('/api/cars/123')\n    .setParam('fields', 'vendor')\n    .end(function(err, res) {\n        if (err) throw err;\n        console.log(res);\n    });\n    \n// Test 3\nhttp.get('/api/cars/456')\n    .setParam('fields', 'model')\n    .setParam('userId', '222')  // Override base options\n    .end(function(err, res) {\n        if (err) throw err;\n        console.log(res);\n    });\n```\n\n## Package manager page\n\n[![NPM](https://nodei.co/npm/httptest.png?downloads=true)](https://nodei.co/npm/httptest/)\n\nDirect link to the [package]\n\n[package]: https://npmjs.org/package/httptest\n\n## License\n\nReleased under the [MIT] license. Copyright (c) 2013-2014 Andrey Chizh.\n\n[MIT]: https://raw.github.com/andreychizh/node-httptest/master/LICENSE.md\n","created":"2013-07-15T21:58:52.304Z","modified":"2014-07-22T15:50:50.590Z","lastPublisher":{"name":"andreychizh","email":"info.andreychizh@gmail.com"},"owners":[{"name":"andreychizh","email":"info.andreychizh@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"httptest","_npmUser":{"name":"andreychizh","email":"info.andreychizh@gmail.com"},"_npmVersion":"1.4.14","_rev":"1-20200451816c8d2bd57f85c285162157","_shasum":"24fad5e9bcb4bb9c20c456add58cf4a535ba839c","author":{"name":"Andrey Chizh"},"bugs":{"url":"https://github.com/andreychizh/node-httptest/issues"},"directories":{},"dist-tags":{"latest":"0.1.8"},"dist":{"shasum":"24fad5e9bcb4bb9c20c456add58cf4a535ba839c","tarball":"http://registry.npmjs.org/httptest/-/httptest-0.1.8.tgz"},"maintainers":[{"name":"andreychizh","email":"info.andreychizh@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-07-22T15:50:50.590Z","created":"2013-07-15T21:58:52.304Z","0.0.1":"2013-07-15T21:58:55.423Z","0.0.2":"2013-07-15T22:04:24.921Z","0.0.3":"2013-07-25T20:29:31.822Z","0.0.4":"2013-08-03T23:38:57.622Z","0.0.5":"2013-08-03T23:49:43.278Z","0.0.6":"2013-08-04T09:55:09.546Z","0.0.7":"2013-08-05T20:28:58.525Z","0.0.8":"2013-11-25T07:40:14.342Z","0.1.0":"2014-05-06T07:12:37.963Z","0.1.1":"2014-05-06T07:13:39.736Z","0.1.2":"2014-05-07T01:06:47.905Z","0.1.3":"2014-05-07T01:20:14.937Z","0.1.4":"2014-05-09T22:38:27.757Z","0.1.5":"2014-05-22T11:15:22.806Z","0.1.6":"2014-05-22T11:15:52.537Z","0.1.7":"2014-07-22T15:43:04.260Z","0.1.8":"2014-07-22T15:50:50.590Z"}}}