{"name":"easy-pipe-proxy","version":"0.0.9","description":"http pipe proxy","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/vincentLiuxiang/easy-pipe-proxy","keywords":["http","proxy","pipe"],"license":"MIT","homepage":"https://github.com/vincentLiuxiang/easy-pipe-proxy#readme","gitHead":"f8ebe5068bea6e994111aa13bd6a5bf9d2272566","versions":[{"number":"0.0.1","date":"2016-08-19T10:16:19.886Z"},{"number":"0.0.2","date":"2016-08-19T10:27:16.837Z"},{"number":"0.0.3","date":"2016-08-19T10:39:14.764Z"},{"number":"0.0.4","date":"2016-08-19T14:18:28.493Z"},{"number":"0.0.5","date":"2016-08-19T14:38:40.533Z"},{"number":"0.0.6","date":"2016-08-20T10:26:45.460Z"},{"number":"0.0.7","date":"2016-08-20T12:34:19.310Z"},{"number":"0.0.8","date":"2016-08-20T14:19:21.040Z"},{"number":"0.0.9","date":"2016-08-21T02:38:02.573Z"}],"readme":"# easy-pipe-proxy\n\n* easy-pipe-proxy is a HTTP transparent proxy middleware, the goal of easy-pipe-proxy is to solve the browser cross-domain request. \n* It is based on high performance of node.js native HTTP pipe\n\n\n###install\n```\nnpm install easy-pipe-proxy\n```\n\n## example\n\n### connect or express\n#### proxy layer\n#### proxy.js\n```\nvar app    = require('connect')();\nvar epp    = require('easy-pipe-proxy');\n\nvar proxyConfig = {\n  host:'localhost',\n  port:'3007',\n  timeout:1000,\n  router:'/api'\n}\n\nvar proxy = new epp(proxyConfig);\n//var proxy2 = new epp(proxyConfig2);\n\n/*\n\tAll requests from the client which req.url start withs '/api',will pipe proxy to \n\thost: localhost, port:3007. \n*/\n\napp.use(proxyConfig.router,proxy.pipe())\n\n//app.use(proxyConfig2.router,proxy2.pipe())\n\napp.use(function (err,req,res,next) {\n\n  // err.eppRouter help you distinguish which proxy occurs error\n  // if err.eppRouter or err.eppCode is undefined , \n  // it means nothing error occurs in easy-pipe-proxy\n  \n  console.log(err.code,err.eppCode,err.eppRouter);\n  if (err.eppCode) {\n  \t// error occur in easy-pipe-proxy\n\tres.statusCode = err.eppCode\n  \tres.end(err.message);  \t\n  }\n  \n  // other errors\n  //...\n})\n\napp.listen(3006);\n```\n#### back-end service layer\n#### service.js\n```\nvar app    = require('connect')();\n/*\n\tif A HTTP request from client is 'localhost:3006/api/ok' via any\n\tmethod (GET/POST),\n\teasy-pipe-proxy will auto pipe this request to 'localhost:3007/ok',and then pipe\n\tthe proxy response to client;\n*/\n\napp.use('/ok',(req,res,next) => {\n  res.statusCode = 200;\n  res.end('hello world');\n})\n\n/*\n\tif A HTTP request from client is 'localhost:3006/api/pending' via any\n\tmethod (GET/POST),\n\teasy-pipe-proxy will auto pipe this request to 'localhost:3007/pending',and then pipe\n\tthe proxy response to client;\n*/\n\napp.use('/pending',(req,res,next) => {\n\n})\n\napp.listen(3007);\n```\n\n#### start example\n```\nnode proxy.js\nnode service.js\n```\nvist http://localhost:3006/api/ok\n\nIn this example, http://localhost:3007/ok and http://localhost:3006/api/ok will get the same result.\n\n\n**proxyConfig**\n\n* host [string]: The back-end service IP or domian\n* port [string/number]: The back-end service port\n* timeout [number]: default 2 min. pipe-proxy will abort proxy after timeout (mses),and it will cause a timeout error. \n* router [string]: connect's/express's router, this router controls requests which come from the client will be proxy by easy-pipe-proxy.\n\n**errorCode**\n\n```\nif some error occurs in easy-pipe-proxy, \neasy-pipe-proxy will append eppCode (easy-pipe-proxy Code) and eppRouter (easy-pipe-proxy Router) to the error object . \nConnect/express error middleware will capture this error object.  \n\nlike:\n  vist http://localhost:3006/api/pending\n  \n  app.use(function (err,req,res,next) {\n    console.log(err.eppCode,err.eppRouter);\n  })\n\nbut if nothing error occurs in easy-pipe-proxy ,the eppCode and eppRouter attribute will be undefined.\n  \n```\n**eppCode**\n\n* 408, proxy timeout\n* 500, proxy error\n\n**eppRouter**\n\n* config.router, eg: '/api', config.router\n\n**proxy header**\n\n* in order to solve some security problems, easy-pipe-proxy will change \nreq.headers.host (which comes from client ) to config.host + ':' + config.port\n\n* eg: if we pipe proxy xxx.xxx.xxx.xxx:3006 to xxx.xxx.xxx.xxx:3007 , \nand then we vist http://xxx.xxx.xxx.xxx:3006 in browser.\neasy-pipe-proxy receives req.headers.host from client should be *'xxx.xxx.xxx.xxx:3006'* , easy-pipe-proxy will change req.headers.host to *'xxx.xxx.xxx.xxx:3007'* and save *'xxx.xxx.xxx.xxx:3006'* to 'X-Proxy-Host' as a property of req.headers\n\n`code:`\n\n```\n\treq.headers['X-Proxy-Host'] = req.headers.host;\n\treq.headers.host = config.host ;\n\t\n\t...\n\t\n\tif (config.port) {\n      option.port = config.port;\n      req.headers.host =  config.host + ':' + config.port;\n    }\n```\n\n\n\n\n\n","starsCount":0,"created":"2016-08-19T10:16:19.886Z","modified":"2016-08-21T02:38:02.573Z","lastPublisher":{"name":"liuxiang","email":"hitliuyaguang@foxmail.com"},"owners":[{"name":"liuxiang","email":"hitliuyaguang@foxmail.com"}],"other":{"_attachments":{},"_from":".","_id":"easy-pipe-proxy","_nodeVersion":"5.8.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/easy-pipe-proxy-0.0.9.tgz_1471747081263_0.16612503887154162"},"_npmUser":{"name":"liuxiang","email":"hitliuyaguang@foxmail.com"},"_npmVersion":"3.7.3","_rev":"1-a9720baee80bd18ffb5713dda869292d","_shasum":"c7847a66d02cd0d5726e7b2fddc682ee1a7d4fd9","author":{"name":"liuxiang"},"bugs":{"url":"https://github.com/vincentLiuxiang/easy-pipe-proxy/issues"},"directories":{},"dist-tags":{"latest":"0.0.9"},"dist":{"shasum":"c7847a66d02cd0d5726e7b2fddc682ee1a7d4fd9","tarball":"http://registry.npmjs.org/easy-pipe-proxy/-/easy-pipe-proxy-0.0.9.tgz"},"maintainers":[{"name":"liuxiang","email":"hitliuyaguang@foxmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-21T02:38:02.573Z","created":"2016-08-19T10:16:19.886Z","0.0.1":"2016-08-19T10:16:19.886Z","0.0.2":"2016-08-19T10:27:16.837Z","0.0.3":"2016-08-19T10:39:14.764Z","0.0.4":"2016-08-19T14:18:28.493Z","0.0.5":"2016-08-19T14:38:40.533Z","0.0.6":"2016-08-20T10:26:45.460Z","0.0.7":"2016-08-20T12:34:19.310Z","0.0.8":"2016-08-20T14:19:21.040Z","0.0.9":"2016-08-21T02:38:02.573Z"},"users":{}}}