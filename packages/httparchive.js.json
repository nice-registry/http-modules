{"name":"httparchive.js","version":"1.2.2","description":"JavaScript library to manipulate HTTP Archive 1.2 JSON objects.","keywords":["HAR","HTTP","HTTPArchive","HTTP Archive"],"license":"MIT","repository":"https://github.com/codeinchaos/httparchive.js","licenses":[{"type":"MIT","url":"https://github.com/codeinchaos/httparchive.js/blob/master/LICENSE"}],"dependencies":{},"devDependencies":{"grunt":"~0.4.2","grunt-contrib-concat":"~0.3.0","grunt-contrib-uglify":"~0.3.2","grunt-contrib-watch":"~0.5.3","grunt-contrib-jshint":"~0.8.0","grunt-contrib-clean":"~0.5.0","grunt-contrib-qunit":"~0.4.0","grunt-qunit-istanbul":"~0.3.0","grunt-contrib-connect":"~0.6.0","grunt-coveralls":"~0.3.0","grunt-bumpx":"~0.2.0","load-grunt-tasks":"~0.3.0","time-grunt":"~0.2.9","phantomjs":"~1.9.7-1","qunitjs":"~1.14.0"},"scripts":{"ci":"grunt test && grunt coveralls","test":"grunt release --verbose"},"versions":[{"number":"1.0.0","date":"2014-01-05T01:00:17.130Z"},{"number":"1.0.1","date":"2014-01-05T02:00:00.155Z"},{"number":"1.0.3","date":"2014-01-06T00:51:09.658Z"},{"number":"1.1.0","date":"2014-01-06T04:38:33.201Z"},{"number":"1.2.0","date":"2014-01-06T06:33:35.256Z"},{"number":"1.2.0-1","date":"2014-01-12T23:44:09.532Z"},{"number":"1.2.1","date":"2014-01-12T23:47:29.319Z"},{"number":"1.2.2","date":"2014-02-25T05:47:32.846Z"}],"readme":"# HTTPArchive.js\n[![Build Status](https://travis-ci.org/codeinchaos/httparchive.js.png?branch=master)](https://travis-ci.org/codeinchaos/httparchive.js)\n[![Dependency Status](https://david-dm.org/codeinchaos/httparchive.js.png)](https://david-dm.org/codeinchaos/httparchive.js)\n[![devDependency Status](https://david-dm.org/codeinchaos/httparchive.js/dev-status.png)](https://david-dm.org/codeinchaos/httparchive.js#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/codeinchaos/httparchive.js/badge.png)](https://coveralls.io/r/codeinchaos/httparchive.js)\n[![Total views](https://sourcegraph.com/api/repos/github.com/codeinchaos/httparchive.js/counters/views.png)](https://sourcegraph.com/github.com/codeinchaos/httparchive.js)\n\nJavaScript library to manipulate [HTTP Archive 1.2](http://www.softwareishard.com/blog/har-12-spec/) JSON objects. You can install with [Bower](http://bower.io) or [NPM](https://npmjs.org/package/httparchive.js).\n\n## Features\n\n- Import/export HAR objects\n- Validates aginst [HAR 1.2 Spec](http://www.softwareishard.com/blog/har-12-spec/)\n- Provides default values for common properties (Dates, Page IDs, etc...)\n- Automatically calculates `headersSize` when headers are added/removed\n- Automatically parses request url to create `queryString` objects and sets `Host` header\n- Automatically updates request url when queryString array is modified\n- Export headers into printed header message per [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2)\n- Exports requests into cURL CLI commands\n- Exports queryString array into key=value string\n\n\n### TODO\n\n- Detailed API Docs.\n- Auto-calc body size when body is set\n- Construct XMLHTTPRequest objects with HTTPArchiveRequest data\n- Construct HTTPArchiveRequest object with XMLHTTPRequest response objects\n\n## Table of contents\n\n- [Quick start](#quick-start)\n- [Documentation](#documentation)\n- [Bugs and feature requests](#bugs-and-feature-requests)\n- [Compiling](#compiling)\n- [Contributing](#contributing)\n- [Community](#community)\n- [Donating](#donating)\n- [Versioning](#versioning)\n- [Authors](#authors)\n- [License](#license)\n\n## Quick start\n\nFour quick start options are available:\n\n- [Download the latest release](https://github.com/codeinchaos/httparchive.js/releases).\n- Clone the repo: `git clone git@github.com:codeinchaos/httparchive.js.git`.\n- Install with [Bower](http://bower.io): `bower install httparchive.js`.\n- Install with [NPM](http://npmjs.org): `npm install httparchive.js`.\n\n### What's included\n\nWithin the download you'll find the following files, providing both compiled and minified variations:\n\n```\nHTTPArchive.js/\n└── dist\n    ├── HTTPArchive.js\n    └── HTTPArchive.min.js\n```\n\n### Sample Usage\n\nstart by creating a new log instance:\n\n```javascript\nvar log = new HTTPArchiveLog({\n    'creator':{\n        'name':'Ahmad'\n    }\n});\n```\n\ncreate an HTTPArchivePage object and add to the log.\n\n```javascript\nvar page = new HTTPArchivePage({\n    'startedDateTime': new Date(),\n    'id':'page_62143',\n    'title':'Google',\n    'comment': null,\n    'pageTimings':{\n        'onContentLoad':90,\n        'onLoad':245\n    }\n});\n\nlog.addPage(page);\n```\n\ncreate an HTTPArchiveEntry object and add to log.\n\n```javascript\nvar entry = new HTTPArchiveEntry({\n    'pageref':'page_62143',\n    'startedDateTime': new Date()\n});\n\nlog.addEntry(entry);\n```\n\nset the entry's HTTPArchiveRequest object\n\n```javascript\nentry.request = new HTTPArchiveRequest({\n    'method': 'GET',\n    'url': 'http://www.google.ca/',\n    'httpVersion': 'HTTP/1.1',\n    'queryString':[]\n});\n```\nlets see the result\n\n```javascript\nlog.toJSON();\n```\n\nthis should output:\n\n```javascript\n{\n    \"comment\": \"\",\n    \"version\": 1.2,\n    \"creator\": {\n        \"name\": \"Ahmad\"\n    },\n    \"browser\": {\n        \"name\": null,\n        \"value\": null\n    },\n    \"pages\": [{\n        \"comment\": null,\n        \"id\": \"page_62143\",\n        \"title\": \"Google\",\n        \"pageTimings\": {\n            \"onContentLoad\": 90,\n            \"onLoad\": 245\n        },\n        \"startedDateTime\": \"2014-01-05T01:40:18.548Z\"\n    }],\n    \"entries\": [{\n        \"pageref\": \"page_62143\",\n        \"cache\": {},\n        \"timings\": {\n            \"dns\": 0,\n            \"connect\": 0,\n            \"blocked\": 0,\n            \"send\": 0,\n            \"wait\": 0,\n            \"receive\": 0\n        },\n        \"startedDateTime\": \"2014-01-05T01:40:18.549Z\",\n        \"time\": \"2014-01-05T01:40:18.549Z\",\n        \"request\": {\n            \"method\": \"GET\",\n            \"url\": \"http://www.google.ca/\",\n            \"httpVersion\": \"HTTP/1.1\",\n            \"queryString\": [],\n            \"headersSize\": 0,\n            \"bodySize\": 0,\n            \"cookies\": [],\n            \"headers\": []\n        },\n        \"response\": null\n    }]\n}\n```\n\n## Documentation\n\nRefer to the [Wiki](https://github.com/codeinchaos/httparchive.js/wiki) for detailed API documentation.\n\n## Bugs and feature requests\n\nHave a bug or a feature request? Please first read the [issue guidelines](https://github.com/codeinchaos/httparchive.js/blob/master/CONTRIBUTING.md#using-the-issue-tracker) and search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/codeinchaos/httparchive.js/issues/new).\n\n## Compiling [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\nHTTPArchive.js uses [Grunt](http://gruntjs.com/). If you haven't used Grunt before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide.\n\n### Available Grunt commands\n\n| Function  | Command       | Description                                                                                                                               |\n| --------- | ------------- | ----------------------------------------------------------------------------------------------------------------------------------------- |\n| Build     | `grunt`       | Run `grunt` to run tests locally and compile the JavaScript files into `/dist`.                                                           |\n| Tests     | `grunt test`  | Runs [JSHint](http://jshint.com) and [QUnit](http://qunitjs.com/) tests headlessly in [PhantomJS](http://phantomjs.org/) (used for CI).   |\n| Watch     | `grunt watch` | This is a convenience method for watching just Less files and automatically building them whenever you save.                              |\n\n### Troubleshooting dependencies\n\nShould you encounter problems with installing dependencies or running Grunt commands, uninstall all previous dependency versions (global and local). Then, rerun `npm install`.\n\n## Contributing\n\nPlease read through our [contributing guidelines](https://github.com/codeinchaos/httparchive.js/blob/master/CONTRIBUTING.md). Included are directions for opening issues, coding standards, and notes on development.\n\nMore over, if your pull request contains JavaScript patches or features, you must include relevant unit tests.\n\nEditor preferences are available in the [editor config](https://github.com/codeinchaos/httparchive.js/blob/master/.editorconfig) for easy use in common text editors. Read more and download plugins at <http://editorconfig.org>.\n\n## Community\n\nKeep track of development and updates.\n\n- Follow [@ahmadnassri](http://twitter.com/ahmadnassri) & [@codeinchaos](http://twitter.com/codeinchaos) on Twitter.\n- Tweet [@codeinchaos](http://twitter.com/codeinchaos) with any questions/personal support requests.\n- Implementation help may be found at Stack Overflow (tagged [`httparchive.js`](http://stackoverflow.com/questions/tagged/httparchive.js)).\n- Read and subscribe to [My Blog](http://blog.ahmadnassri.com).\n\n## Donating\nDonations are welcome to help support the continuous development of this project.\n- [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=UJ2B2BTK9VLRS)\n\n## Versioning\n\nFor transparency into our release cycle and in striving to maintain backward compatibility, HTTPArchive.js is maintained under the Semantic Versioning guidelines. Sometimes we screw up, but we'll adhere to these rules whenever possible.\n\nReleases will be numbered with the following format:\n\n`<major>.<minor>.<patch>`\n\nAnd constructed with the following guidelines:\n\n- Breaking backward compatibility **bumps the major** while resetting minor and patch\n- New additions without breaking backward compatibility **bumps the minor** while resetting the patch\n- Bug fixes and misc changes **bumps only the patch**\n\nFor more information on SemVer, please visit <http://semver.org/>.\n\n## Authors\n\n**Ahmad Nassri**\n\n- Twitter: [@AhmadNassri](http://twitter.com/ahmadnassri)\n- Website: [ahmadnassri.com](http://ahmadnassri.com)\n\n## License\n\nLicensed under [the MIT license](LICENSE).\n","starsCount":2,"created":"2014-01-05T01:00:16.424Z","modified":"2017-05-22T08:58:21.058Z","lastPublisher":{"name":"ahmadnassri","email":"ahmad@codeinchaos.com"},"owners":[{"email":"ahmad@ahmadnassri.com","name":"ahmadnassri"}],"other":{"_attachments":{},"_from":".","_id":"httparchive.js","_npmUser":{"name":"ahmadnassri","email":"ahmad@codeinchaos.com"},"_npmVersion":"1.2.18","_rev":"2-4ab3c5387e7235d29178141d3fce239b","author":{"name":"Ahmad Nassri"},"bugs":{"url":"https://github.com/codeinchaos/httparchive.js/issues"},"directories":{},"dist-tags":{"latest":"1.2.2"},"dist":{"shasum":"97394fb1ec1075a272eba14fae4bbcd64c4c550a","tarball":"http://registry.npmjs.org/httparchive.js/-/httparchive.js-1.2.2.tgz"},"maintainers":[{"email":"ahmad@ahmadnassri.com","name":"ahmadnassri"}],"readmeFilename":"README.md","time":{"modified":"2017-05-22T08:58:21.058Z","created":"2014-01-05T01:00:16.424Z","1.0.0":"2014-01-05T01:00:17.130Z","1.0.1":"2014-01-05T02:00:00.155Z","1.0.3":"2014-01-06T00:51:09.658Z","1.1.0":"2014-01-06T04:38:33.201Z","1.2.0":"2014-01-06T06:33:35.256Z","1.2.0-1":"2014-01-12T23:44:09.532Z","1.2.1":"2014-01-12T23:47:29.319Z","1.2.2":"2014-02-25T05:47:32.846Z"},"users":{"ahmadnassri":true,"timhemming":true}}}