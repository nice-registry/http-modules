{"bin":{"testarossa":"./lib/cli.js"},"name":"testarossa","version":"0.3.0","authors":[{"name":"Bruno Windels","email":"bruno.windels@nokia.com"},{"name":"Christian Kaatz","email":"christian.kaatz@here.com"}],"description":"An async test framework that is very extensible and includes a handy http helper","main":"./lib/index.js","repository":"https://github.com/ckaatz-nokia/testarossa","dependencies":{"async":"1.x","container":"0.x","underscore":"1.x","upperscore":"0.x","commander":"1.1.x"},"engines":{"node":">=0.8"},"gitHead":"4a528bb67b033ef1105c8557f83849be584dfdea","homepage":"https://github.com/ckaatz-nokia/testarossa#readme","scripts":{},"versions":[{"number":"0.0.1","date":"2014-08-15T15:45:35.595Z"},{"number":"0.0.3","date":"2014-08-15T15:53:56.123Z"},{"number":"0.1.0","date":"2014-08-18T12:50:45.107Z"},{"number":"0.1.1","date":"2014-09-18T13:32:06.301Z"},{"number":"0.1.2","date":"2014-09-18T14:06:55.481Z"},{"number":"0.1.3","date":"2014-09-19T09:07:16.684Z"},{"number":"0.1.4","date":"2014-09-19T09:28:10.819Z"},{"number":"0.1.5","date":"2014-09-19T15:22:58.421Z"},{"number":"0.1.6","date":"2014-09-23T09:07:42.511Z"},{"number":"0.1.7","date":"2014-09-25T12:58:16.350Z"},{"number":"0.2.0","date":"2014-10-07T09:31:48.811Z"},{"number":"0.2.1","date":"2014-10-08T14:48:49.202Z"},{"number":"0.2.2","date":"2014-10-09T07:57:15.586Z"},{"number":"0.2.3","date":"2015-09-04T08:29:44.622Z"},{"number":"0.3.0","date":"2015-09-23T15:40:45.399Z"}],"readme":"Testarossa\n==========\n[![NPM version](https://badge.fury.io/js/testarossa.svg)](http://badge.fury.io/js/testarossa)\n\nTestarossa, an extensible and truly async test framework for node\n\nDescription\n-----------\nSystem tests made easy, just add your properties to a testcase, post, get and validate your results.\nIt comes with different formatters like jUnit, machine and colorful console output.\n\nExample Usage\n-------------\nCheckout the example folder for a usage example or the simple example below.\n\n    module.exports = function(test) {\n        test.add(\"test-setup\", function(done) {\n          this.dataToSend = {\"name\", \"foo\"};\n          done();\n        });\n        test.get(\"/api\", {status: 200});\n        test.add(\"verify ok message\", function(done) {\n          var responseBody = JSON.parse(this.lastResponse.body);\n          responseBody.should.have.property(\"message\", \"ok\");\n          done();\n        });\n        test.post(\"/api/hello\", this.dataToSend, {status: 200});\n        test.add(\"check the last response\", function(done) {\n          var responseBody = JSON.parse(this.lastResponse.body);\n          responseBody.should.have.property(\"message\", \"hello foo\");\n          done();\n        });\n    };\n\n**http helper**\n\nUsing the http helper is quite forward for REST API testing. It takes a given path,\noptional body data and headers and a mandatory evaluate Object as shorthand validation\n(eg: {status: 200} will check against 200 reponse status code).\n\nsupported methods: get, head, post, put, delete, trace, options, connect, patch\n\n    $ test.[method](path,[body,][headers,]evaluateObject)\n\nChangelog\n---------\nv0.2.0 adding support for multiple fromatters see\n    \n    $ node lib/cli.js --help\n","created":"2014-08-15T15:45:35.595Z","modified":"2015-09-23T15:40:45.399Z","lastPublisher":{"name":"ckaatz","email":"chrkaatz@googlemail.com"},"owners":[{"name":"ckaatz","email":"chrkaatz@googlemail.com"}],"other":{"_attachments":{},"_from":".","_id":"testarossa","_nodeVersion":"2.5.0","_npmUser":{"name":"ckaatz","email":"chrkaatz@googlemail.com"},"_npmVersion":"2.13.2","_rev":"1-ce8f1cc0e9914871ff261e54265b4947","_shasum":"78970496d9ef03b6f8337977de22832eb9793882","bugs":{"url":"https://github.com/ckaatz-nokia/testarossa/issues"},"directories":{},"dist-tags":{"latest":"0.3.0"},"dist":{"shasum":"78970496d9ef03b6f8337977de22832eb9793882","tarball":"http://registry.npmjs.org/testarossa/-/testarossa-0.3.0.tgz"},"maintainers":[{"name":"ckaatz","email":"chrkaatz@googlemail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-09-23T15:40:45.399Z","created":"2014-08-15T15:45:35.595Z","0.0.1":"2014-08-15T15:45:35.595Z","0.0.3":"2014-08-15T15:53:56.123Z","0.1.0":"2014-08-18T12:50:45.107Z","0.1.1":"2014-09-18T13:32:06.301Z","0.1.2":"2014-09-18T14:06:55.481Z","0.1.3":"2014-09-19T09:07:16.684Z","0.1.4":"2014-09-19T09:28:10.819Z","0.1.5":"2014-09-19T15:22:58.421Z","0.1.6":"2014-09-23T09:07:42.511Z","0.1.7":"2014-09-25T12:58:16.350Z","0.2.0":"2014-10-07T09:31:48.811Z","0.2.1":"2014-10-08T14:48:49.202Z","0.2.2":"2014-10-09T07:57:15.586Z","0.2.3":"2015-09-04T08:29:44.622Z","0.3.0":"2015-09-23T15:40:45.399Z"}}}