{"name":"httplease","version":"0.5.2","description":"HTTP client library with support for pluggable filters, including Zipkin, ASAP, etc","main":"index.js","scripts":{"test":"npm run test:lint && npm run test:coverage && npm run test:check-coverage","test:lint":"eslint lib test","test:jasmine":"jasmine JASMINE_CONFIG_PATH=jasmine.json","test:coverage":"istanbul --config=istanbul.json cover jasmine JASMINE_CONFIG_PATH=jasmine.json","test:check-coverage":"istanbul --config=istanbul.json check-coverage","prepublish":"npm test"},"repository":{"type":"git","url":"git+https://bitbucket.org/atlassianlabs/httplease.git"},"keywords":["http","request","client","promise","caching","filters"],"license":"Apache-2.0","files":["index.js","lib"],"devDependencies":{"concat-stream":"^1.5.1","eslint":"^3.3.1","istanbul":"^0.4.3","jasmine":"^2.4.1","jasmine-core":"^2.4.1","jasmine-http-server-spy":"^0.3.0","jasmine-promise-tools":"^1.0.0","proxyquire":"^1.7.4","q":"^1.5.0"},"gitHead":"5e9bc7846d21f037e25e2860d4b501ab6b569b5b","homepage":"https://bitbucket.org/atlassianlabs/httplease#readme","versions":[{"number":"0.1.0","date":"2016-06-14T00:31:21.847Z"},{"number":"0.1.1","date":"2016-06-14T03:31:46.084Z"},{"number":"0.1.2","date":"2016-06-16T04:11:57.145Z"},{"number":"0.2.0","date":"2016-07-04T06:16:26.885Z"},{"number":"0.2.1","date":"2016-07-18T01:22:55.923Z"},{"number":"0.2.2","date":"2016-07-29T03:13:03.979Z"},{"number":"0.3.0-beta1","date":"2016-08-11T06:26:27.706Z"},{"number":"0.3.0","date":"2016-08-12T00:31:07.149Z"},{"number":"0.3.1-beta1","date":"2016-08-18T06:15:59.636Z"},{"number":"0.3.1","date":"2016-08-18T08:36:27.452Z"},{"number":"0.3.2-beta1","date":"2016-09-01T05:31:34.038Z"},{"number":"0.3.2-beta2","date":"2016-09-02T16:27:28.568Z"},{"number":"0.4.0-beta1","date":"2016-09-10T00:01:37.641Z"},{"number":"0.4.0","date":"2016-09-14T03:38:36.147Z"},{"number":"0.4.1-beta1","date":"2016-09-14T07:59:37.956Z"},{"number":"0.4.1","date":"2016-09-23T04:44:15.549Z"},{"number":"0.4.2-beta1","date":"2016-10-05T05:23:43.448Z"},{"number":"0.4.2","date":"2017-01-31T22:37:18.859Z"},{"number":"0.4.3","date":"2017-02-01T22:23:03.889Z"},{"number":"0.4.4","date":"2017-02-21T07:28:23.990Z"},{"number":"0.4.5","date":"2017-02-22T02:08:42.041Z"},{"number":"0.4.5-beta1","date":"2017-03-14T05:18:47.105Z"},{"number":"0.4.6-beta1","date":"2017-03-14T05:19:46.874Z"},{"number":"0.5.0-beta1","date":"2017-03-14T07:36:42.113Z"},{"number":"0.5.0-beta2","date":"2017-03-14T07:49:12.244Z"},{"number":"0.5.0","date":"2017-03-15T04:56:33.867Z"},{"number":"0.5.1","date":"2017-04-10T05:01:30.870Z"},{"number":"0.5.2-beta1","date":"2017-06-01T08:24:32.301Z"},{"number":"0.5.2","date":"2017-06-13T00:08:45.356Z"}],"readme":"![build-status](https://bitbucket-badges.atlassian.io/badge/atlassianlabs/httplease.svg)\n\n# httplease\n\nFeatures:\n\n* Promise based API and internals.\n* Builder interface allowing partial configuration and reuse.\n* Convenient defaults for working with JSON requests and responses.\n* Safe use of streams with robust error handling.\n* Flexibility to stream or buffer any type of requests, responses or both.\n* Supports chainable filters which can asynchronously modify requests and/or responses.\n\nExisting filters:\n\n* [httplease-asap](https://bitbucket.org/atlassianlabs/httplease-asap) -- [ASAP S2S Authentication](http://s2sauth.bitbucket.org)\n* [httplease-cache](https://bitbucket.org/atlassianlabs/httplease-cache) -- HTTP caching using the Cache-Control headers\n* [httplease-retry](https://bitbucket.org/atlassianlabs/httplease-retry) -- Automatic request retries with optional fallback to alternative servers\n\nFilters that are coming soon!\n\n* Zipkin tracing\n\nPossible future filters:\n\n* Redirects\n* Cookie jar\n\n# Usage guide\n\nInstall the library:\n\n```\nnpm install --save httplease\n```\n\nFor more examples have a look at the `test/integration` directory.\n\n\n## Simple request\n\n```\nconst httplease = require('httplease');\n\n\n// this can be saved and reused as many times as you want\nconst httpClient = httplease.builder()\n    .withBaseUrl('http://example.com/basePath')\n    .withExpectStatus([200, 204])\n    .withBufferJsonResponseHandler()\n    .withTimeout(10000)\n    .withAgentOptions({keepAlive: true});\n\n\n// make a request\nhttpClient\n    .withPath('/post')\n    .withJsonBody({someValue: 'some value'})\n    .withHeaders({'Cookie': 'key=value'})\n    .withMethodPost()\n    .send()\n    .then((response) => {\n        console.log(response.statusCode);\n        console.log('get header', response.getHeader('Some-Header'));\n        console.log('all headers', response.headers);\n        console.log('JSON body parsing by default', response.body);\n    })\n    .catch((err) => {\n        if (!err.response) {\n            // some unknown error\n            throw err;\n        }\n\n        // the response status check failed\n        console.log(err.response.statusCode);\n        console.log(err.response.headers);\n        console.log(err.response.body);\n    });\n```\n\n\n## Passing parameters in the send() function\n\nYou can mix/match the builder style with params in `send()`\n\n```\nhttplease.builder()\n    .withBufferJsonResponseHandler()\n    .withExpectStatus([200])\n    .send({\n        baseUrl: 'http://example.com/resource',\n        method: 'POST',\n        headers: {'Cookie': 'key=value'}\n    })\n    .then((response) => {\n        console.log('response complete');\n    });\n```\n\n\n## Streaming requests and responses\n\n```\nhttplease.builder()\n    .withMethodPost()\n    .withPath('http://example.com/upload-file')\n    .withHeaders({'Content-Type': 'application/json'})\n    .withStreamBody(fs.createReadStream('bigdata.json'))\n    .withDiscardBodyResponseHandler()\n    .withExpectStatus([200])\n    .send()\n    .then((response) => {\n        console.log('upload complete!');\n    });\n```\n\n```\nhttplease.builder()\n    .withMethodGet()\n    .withPath('http://example.com/')\n    .withExpectStatus([200])\n    .withResponseHandler((response) => response.pipe(process.stdout))\n    .send()\n    .then((response) => {\n        console.log('download complete!');\n    });\n```\n\n\n# Development guide\n\n## Install dependencies\n\n```\nnpm install\n```\n\n\n## Useful commands\n\n```\n# Run all checks\nnpm test\n\n# Run just the jasmine tests\nnpm run test:jasmine\n\n# Run just the linter\nnpm run test:lint\n```\n\n\n## Perform a release\n\n```\nnpm version 99.98.97\nnpm publish\ngit push\ngit push --tags\n```\n\n## Contributors\n\nPull requests, issues and comments welcome. For pull requests:\n\n* Add tests for new features and bug fixes\n* Follow the existing style\n* Separate unrelated changes into multiple pull requests\n\nSee the existing issues for things to start contributing.\n\nFor bigger changes, make sure you start a discussion first by creating an issue and explaining the intended change.\n\nAtlassian requires contributors to sign a Contributor License Agreement, known as a CLA. This serves as a record stating that the contributor is entitled to contribute the code/documentation/translation to the project and is willing to have it used in distributions and derivative works (or is willing to transfer ownership).\n\n* [CLA for corporate contributors](https://na2.docusign.net/Member/PowerFormSigning.aspx?PowerFormId=e1c17c66-ca4d-4aab-a953-2c231af4a20b)\n* [CLA for individuals](https://na2.docusign.net/Member/PowerFormSigning.aspx?PowerFormId=3f94fbdc-2fbe-46ac-b14c-5d152700ae5d)\n\n\n# License\n\nCopyright (c) 2016 Atlassian and others.\nApache 2.0 licensed, see [LICENSE](LICENSE) file.\n","created":"2016-06-14T00:31:21.847Z","modified":"2017-06-13T00:08:45.356Z","lastPublisher":{"name":"jbunton-atlassian","email":"jbunton@atlassian.com"},"owners":[{"name":"jbunton-atlassian","email":"jbunton@atlassian.com"}],"other":{"_attachments":{},"_from":".","_id":"httplease","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/httplease-0.5.2.tgz_1497312525241_0.06560365785844624"},"_npmUser":{"name":"jbunton-atlassian","email":"jbunton@atlassian.com"},"_npmVersion":"4.6.1","_rev":"16-190018f1979974f3a91d81f95baed883","_shasum":"301feb805949b017c96bbd427c0ea1884fca93f6","contributors":[{"name":"Igor Sechyn","email":"isechyn@atlassian.com"},{"name":"James Bunton","email":"jbunton@atlassian.com"},{"name":"Sam Reis","email":"sreis@atlassian.com"}],"directories":{},"dist-tags":{"latest":"0.5.2","prerelease":"0.5.2-beta1"},"dist":{"shasum":"301feb805949b017c96bbd427c0ea1884fca93f6","tarball":"https://registry.npmjs.org/httplease/-/httplease-0.5.2.tgz"},"maintainers":[{"name":"jbunton-atlassian","email":"jbunton@atlassian.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-13T00:08:45.356Z","created":"2016-06-14T00:31:21.847Z","0.1.0":"2016-06-14T00:31:21.847Z","0.1.1":"2016-06-14T03:31:46.084Z","0.1.2":"2016-06-16T04:11:57.145Z","0.2.0":"2016-07-04T06:16:26.885Z","0.2.1":"2016-07-18T01:22:55.923Z","0.2.2":"2016-07-29T03:13:03.979Z","0.3.0-beta1":"2016-08-11T06:26:27.706Z","0.3.0":"2016-08-12T00:31:07.149Z","0.3.1-beta1":"2016-08-18T06:15:59.636Z","0.3.1":"2016-08-18T08:36:27.452Z","0.3.2-beta1":"2016-09-01T05:31:34.038Z","0.3.2-beta2":"2016-09-02T16:27:28.568Z","0.4.0-beta1":"2016-09-10T00:01:37.641Z","0.4.0":"2016-09-14T03:38:36.147Z","0.4.1-beta1":"2016-09-14T07:59:37.956Z","0.4.1":"2016-09-23T04:44:15.549Z","0.4.2-beta1":"2016-10-05T05:23:43.448Z","0.4.2":"2017-01-31T22:37:18.859Z","0.4.3":"2017-02-01T22:23:03.889Z","0.4.4":"2017-02-21T07:28:23.990Z","0.4.5":"2017-02-22T02:08:42.041Z","0.4.5-beta1":"2017-03-14T05:18:47.105Z","0.4.6-beta1":"2017-03-14T05:19:46.874Z","0.5.0-beta1":"2017-03-14T07:36:42.113Z","0.5.0-beta2":"2017-03-14T07:49:12.244Z","0.5.0":"2017-03-15T04:56:33.867Z","0.5.1":"2017-04-10T05:01:30.870Z","0.5.2-beta1":"2017-06-01T08:24:32.301Z","0.5.2":"2017-06-13T00:08:45.356Z"}}}