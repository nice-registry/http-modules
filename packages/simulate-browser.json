{"name":"simulate-browser","version":"1.2.1","description":"This library can simulate the http request actions of browser.","main":"index.js","dependencies":{"light-http":"^1.4.2","q":"^1.4.1","underscore":"^1.8.3"},"devDependencies":{"prompt":"^0.2.14"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/puritys/simulateBrowser","keywords":["simulate","browser","http","request"],"license":"MIT","homepage":"https://github.com/puritys/simulateBrowser#readme","gitHead":"2d0fd2e62c6fe8a13c47fdab143531a4e33ff2f4","versions":[{"number":"1.0.0","date":"2016-01-23T16:58:36.992Z"},{"number":"1.0.1","date":"2016-01-24T14:00:22.545Z"},{"number":"1.0.2","date":"2016-01-24T17:05:10.757Z"},{"number":"1.0.3","date":"2016-01-31T09:19:56.549Z"},{"number":"1.1.0","date":"2016-08-13T07:04:41.287Z"},{"number":"1.1.1","date":"2016-08-13T09:02:49.156Z"},{"number":"1.2.0","date":"2016-08-14T09:09:24.996Z"},{"number":"1.2.1","date":"2017-06-18T16:20:00.263Z"}],"readme":"# simulateBrowser\n\n[simulateBrowser] (https://www.npmjs.com/package/simulate-browser) 是一個 command line 專用的假瀏覽器，能夠用來做網站測試或自動化功能，例如我可以寫一個自動登入 Facebook 網站並發送訊息給每一個朋友，或是自動登入 Yahoo 收信。\n\nsimulateBrowser 的使用方式如下。\n\n\nnpm install simulate-browser\n\n下面這段程式，示範一個簡單的 command line 登入 Yahoo ，並取得  Cookie。\n\n    var b = require('simulate-browser');\n    var user = \"xxx@yahoo.com.tw\";\n    var pswd = \"1231123\";\n    \n    // 連到 Yahoo Login 頁面\n    b.get(\"https://login.yahoo.com/m?.intl=tw&.done=https://tw.mobi.yahoo.com\")\n        .then(function (text) {\n            // 處理 Form 表單資料\n            var params, _crumb, reg, mat, inputs;\n            params = {\n                username: user,\n                signin: \"authtype\",\n                \"countrycode\": 886\n            };\n\n            inputs = [\"_ts\", \"_tps\", \"_muh\", \"_crumb\", \"_uuid\", \"_seqid\", \"otp_channel\", \"otp_ref_cc_intl\"];\n            for (var k in inputs) {\n                reg = new RegExp('<input type=\"hidden\" name=\"'+inputs[k]+'\" value=\"([^\\\"]+)\"');\n                mat = text.match(reg);\n                if (mat && mat[1]) params[inputs[k]] = mat[1];\n\n            }\n            // 送出 Form 表單\n            return b.post(\"https://login.yahoo.com/m?.intl=tw&.done=https%3A%2F%2Ftw.mobi.yahoo.com\", params);\n        }).fail(error)\n        .then(function (text) {\n            //var header = b.getResponseHeaders();\n            //console.log(\"Firt step header = \", header , \"\\n\\n\");\n            console.log(text);\n            var nextUrl = \"https://login.yahoo.com/account/challenge/password\";\n            var params, _crumb, reg, mat, inputs;\n            params = {\n                username: user,\n                signin: \"authtype\",\n                password: pswd,\n                _ts: ts,\n                verifyPassword: \"登入\",\n                passwordContext: \"yakEligible\"\n\n            };\n\n            inputs = [\"_ts\", \"_tps\", \"acrumb\", \"crumb\", \"config\", \"s\"];\n            for (var k in inputs) {\n                reg = new RegExp('<input type=\"hidden\" name=\"'+inputs[k]+'\" value=\"([^\\\"]+)\"');\n                mat = text.match(reg);\n                if (mat && mat[1]) params[inputs[k]] = mat[1];\n\n            }\n            console.log(\"Password page, Your input:\", params);\n            return b.post(nextUrl, params);\n        }).fail(error)\n        .then(function (text) {\n            // 連到 My Yahoo 頁面\n            return b.get(\"https://my.yahoo.com/\");\n        })\n        .then(function (text) {\n            // 印出  cookie\n            var ret;\n            ret = b.getCookieString();\n            console.log(\"cookie = \" + ret);\n        });\n\n\nInitialize cookie\n\n    var b = require('simulate-browser');\n    // object    \n    b.setCookies({\"userId\": \"xxx\", \"PHPSESSION\": \"zzzz\"});\n    // string\n    b.setCookies(\"userId=xxx; PHPSESSION=zzzz\");\n\n    b.get(\"https://tw.mobi.yahoo.com\")\n        .then(function (xx) {\n\n        });\n\n\n\n","created":"2016-01-23T16:58:36.992Z","modified":"2017-06-18T16:20:00.263Z","lastPublisher":{"name":"puritys","email":"pipi00000@gmail.com"},"owners":[{"name":"puritys","email":"pipi00000@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"simulate-browser","_nodeVersion":"5.12.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/simulate-browser-1.2.1.tgz_1497802800064_0.712831026641652"},"_npmUser":{"name":"puritys","email":"pipi00000@gmail.com"},"_npmVersion":"2.11.1","_rev":"2-8d97acbd0bca8ad5230aa08ff692c539","_shasum":"fea293729b892c44037c5c9dedad965de2179689","author":{"name":"puritys.chen@outlook.com"},"bugs":{"url":"https://github.com/puritys/simulateBrowser/issues"},"directories":{"test":"tests"},"dist-tags":{"latest":"1.2.1"},"dist":{"shasum":"fea293729b892c44037c5c9dedad965de2179689","tarball":"https://registry.npmjs.org/simulate-browser/-/simulate-browser-1.2.1.tgz"},"maintainers":[{"name":"puritys","email":"pipi00000@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-18T16:20:00.263Z","created":"2016-01-23T16:58:36.992Z","1.0.0":"2016-01-23T16:58:36.992Z","1.0.1":"2016-01-24T14:00:22.545Z","1.0.2":"2016-01-24T17:05:10.757Z","1.0.3":"2016-01-31T09:19:56.549Z","1.1.0":"2016-08-13T07:04:41.287Z","1.1.1":"2016-08-13T09:02:49.156Z","1.2.0":"2016-08-14T09:09:24.996Z","1.2.1":"2017-06-18T16:20:00.263Z"}}}