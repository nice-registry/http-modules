{"version":"2.0.1","name":"allanchau-http-error","description":"Simple Express HTTP error handler.","keywords":["api","error","errorhandler","express","handler","http","json"],"repository":"https://github.com/allanchau/node-http-error","main":"src/index.js","files":["src"],"peerDependencies":{"express":"^4.15.2"},"devDependencies":{"chai":"^3.5.0","eslint-config-allanchau":"^2.0.0","express":"^4.15.2","mocha":"^3.2.0","mocha-eslint":"^3.0.1","supertest":"^3.0.0"},"scripts":{"test":"_mocha tests"},"license":"MIT","gitHead":"72f28191dbb6b8fddee3080a6818c1646a67cca0","homepage":"https://github.com/allanchau/node-http-error#readme","versions":[{"number":"1.0.0","date":"2017-03-15T09:38:27.413Z"},{"number":"1.0.1","date":"2017-03-15T11:57:14.802Z"},{"number":"2.0.0","date":"2017-04-04T14:08:17.438Z"},{"number":"2.0.1","date":"2017-04-05T02:31:36.882Z"}],"readme":"# node-http-error\n\n[![Build Status](https://img.shields.io/travis/allanchau/node-http-error.svg)](https://travis-ci.org/allanchau/node-http-error)\n[![npm](https://img.shields.io/npm/v/allanchau-http-error.svg)](https://www.npmjs.com/package/allanchau-http-error)\n\nSimple Express HTTP error handler.\n\nThis library follows the [Microsoft API](https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#51-errors) guidelines for HTTP error responses. While defaults are provided for `code` and `message` (they are required), you should provide your own.\n\nFor an example of a compliant response, see the  [error-condition-responses](https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses) section of the guidelines.\n\n## Features\n\n- Express HTTP error handler.\n- [Microsoft API](https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#51-errors) compliant error response.\n\n## Installation\n\nThis package is available on [NPM](https://www.npmjs.com/package/allanchau-http-error):\n\n  ```shell\n  $ npm install allanchau-http-error\n  ```\n\n## Usage\n\nA simple example:\n\n```javascript\n// App.\nconst app = require('express');\nconst HttpError = require('allanchau-http-error');\n\napp.get('/', (req, res, next) => {\n\n  return next(new HttpError(400, {\n    code: 'BadArgument',\n    message: 'Previous passwords may not be reused',\n  })\n\n});\n\napp.use(HttpError.errorHandler);\n\n// JSON response.\n// 400 Bad Request\n{\n  \"error\": {\n    \"code\": \"BadArgument\",\n    \"message\": \"Previous passwords may not be reused\"\n  }\n}\n```\n\nExample of \"innererror\":\n\n```javascript\napp.get('/', (req, res, next) => {\n\n  return next(new HttpError(400, {\n    code: 'BadArgument',\n    message: 'Previous passwords may not be reused',\n    target: 'password',\n    innererror: [\n      code: 'PasswordDoesNotMeetPolicy',\n      minLength: '6',\n      maxLength: '64',\n      characterTypes: ['lowerCase', 'upperCase', 'number', 'symbol'],\n      minDistinctCharacterTypes: '2',\n      innererror: {\n        code: 'PasswordReuseNotAllowed'\n      }\n    ],\n  })\n\n});\n\n// JSON response.\n// 400 Bad Request\n{\n  \"error\": {\n    \"code\": \"BadArgument\",\n    \"message\": \"Previous passwords may not be reused\",\n    \"target\": \"password\",\n    \"innererror\": {\n      \"code\": \"PasswordError\",\n      \"innererror\": {\n        \"code\": \"PasswordDoesNotMeetPolicy\",\n        \"minLength\": \"6\",\n        \"maxLength\": \"64\",\n        \"characterTypes\": [\"lowerCase\",\"upperCase\",\"number\",\"symbol\"],\n        \"minDistinctCharacterTypes\": \"2\",\n        \"innererror\": {\n          \"code\": \"PasswordReuseNotAllowed\"\n        }\n      }\n    }\n  }\n}\n```\n\nExample of \"details\":\n\n```javascript\napp.get('/', (req, res, next) => {\n\n  return next(new HttpError(400, {\n    code: 'BadArgument',\n    message: 'Multiple errors in ContactInfo data',\n    target: 'ContactInfo',\n    details: [\n      {\n        code: 'NullValue',\n        target: 'PhoneNumber',\n        message: 'Phone number must not be null',\n      },\n      {\n        code: 'NullValue',\n        target: 'LastName',\n        message: 'Last name must not be null',\n      },\n      {\n        code: 'MalformedValue',\n        target: 'Address',\n        message: 'Address is not valid',\n      }\n    ],\n  })\n\n});\n\n// JSON response.\n// 400 Bad Request\n{\n  \"error\": {\n    \"code\": \"BadArgument\",\n    \"message\": \"Multiple errors in ContactInfo data\",\n    \"target\": \"ContactInfo\",\n    \"details\": [\n      {\n        \"code\": \"NullValue\",\n        \"target\": \"PhoneNumber\",\n        \"message\": \"Phone number must not be null\"\n      },\n      {\n        \"code\": \"NullValue\",\n        \"target\": \"LastName\",\n        \"message\": \"Last name must not be null\"\n      },\n      {\n        \"code\": \"MalformedValue\",\n        \"target\": \"Address\",\n        \"message\": \"Address is not valid\"\n      }\n    ]\n  }\n}\n```\n","created":"2017-03-15T09:38:27.413Z","modified":"2017-04-05T02:31:36.882Z","lastPublisher":{"name":"allanchau","email":"allan.chau@icloud.com"},"owners":[{"name":"allanchau","email":"allan.chau@icloud.com"}],"other":{"_attachments":{},"_from":".","_id":"allanchau-http-error","_nodeVersion":"6.10.2","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/allanchau-http-error-2.0.1.tgz_1491359494988_0.1480153570882976"},"_npmUser":{"name":"allanchau","email":"allan.chau@icloud.com"},"_npmVersion":"3.10.10","_rev":"4-33ee199f0a951189c9aa2ba2acd87c63","_shasum":"6a5b5a68ef45b221409b00bcc9066777f335d81a","author":{"name":"Allan Chau","email":"allan.chau@icloud.com","url":"http://allanchau.com"},"bugs":{"url":"https://github.com/allanchau/node-http-error/issues"},"directories":{},"dist-tags":{"latest":"2.0.1"},"dist":{"shasum":"6a5b5a68ef45b221409b00bcc9066777f335d81a","tarball":"https://registry.npmjs.org/allanchau-http-error/-/allanchau-http-error-2.0.1.tgz"},"maintainers":[{"name":"allanchau","email":"allan.chau@icloud.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-05T02:31:36.882Z","created":"2017-03-15T09:38:27.413Z","1.0.0":"2017-03-15T09:38:27.413Z","1.0.1":"2017-03-15T11:57:14.802Z","2.0.0":"2017-04-04T14:08:17.438Z","2.0.1":"2017-04-05T02:31:36.882Z"}}}