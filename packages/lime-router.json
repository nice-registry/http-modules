{"name":"lime-router","version":"0.2.7","description":"A lean and mean REST routing middleware for the limerun project (OWIN-JS reference implementation), for both HTTP and COAP servers","keywords":["limerun","lime","owin-js","owin","coap","middleware","router","route","expressjs","promise","http","connect","kraken","koa",".NET"],"repository":"https://github.com/limerun/lime-router","dependencies":{"bluebird":"*"},"licenses":[{"type":"Apache-2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}],"homepage":"https://github.com/limerun/lime-router","gitHead":"a06f0442b559f842572d4dcf296d5d7e26411c8e","scripts":{},"versions":[{"number":"0.2.0","date":"2015-02-20T20:52:39.829Z"},{"number":"0.2.2","date":"2015-02-20T20:57:08.753Z"},{"number":"0.2.3","date":"2015-02-20T21:50:08.046Z"},{"number":"0.2.4","date":"2015-02-20T22:54:03.501Z"},{"number":"0.2.5","date":"2015-02-21T01:17:08.676Z"},{"number":"0.2.6","date":"2015-03-01T23:26:00.778Z"},{"number":"0.2.7","date":"2015-03-01T23:27:49.911Z"}],"readme":"# [![limerun](./limerun.png)](http://limerun.com) lime-router\n\n[![Build Status](https://api.shippable.com/projects/54e79e255ab6cc13528d2db6/badge?branchName=master)](https://app.shippable.com/projects/54e79e255ab6cc13528d2db6/builds/latest) [![NPM](https://img.shields.io/badge/owin--js-certified-99cc33.svg?style=flat-square)](http://owinjs.org)\n[![NPM](https://img.shields.io/badge/limerun-middleware-3399cc.svg?style=flat-square)](https://nodei.co/npm/limerun/)\n[![NPM](https://img.shields.io/badge/owin--d-connected-C3C3E5.svg?style=flat-square)](https://owind.org/)\n\n[![NPM](https://nodei.co/npm/lime-router.png?downloads=true)](https://nodei.co/npm/lime-router/)\n\n## About\n\nThis is a simple router for the `limerun` Project.\n\nIt routes HTTP and COAP requests, with simple uri templates and parameter/query string parsing.  \n\n## NPM Package\n\nThis repository contains a Node Package Manager (NPM) package with a single factory constructor for the routing engine.   It is intended for use in Node applications that either run on an web server that conforms to the OWIN-JS specification or run using the OWIN-JS/owin-js HTTP or COAP bridges for use with node http or node-coap respectively.\n\n## Usage\n\n### Installation:\n\n    npm install lime-router\n    \n### Hello World (using RazorView):\n    \n``` js\n// Dependencies\nconst lime = require('limerun')\n    , router = require('limerouter')\n    , http = require('http');\n\n// Create Factories\nvar app = new lime.app(); \nvar route = router();\n\n// App\napp.use(route);\nroute.get('/', function(){\n          console.log(\"GET: \" +this.request.path);\n          return  razor.renderViewAsync('index.js.html', this);\n          });\nhttp.createServer(app.buildHttp()).listen(8000);\n``` \n\n## Methods\n\n* `route.get`:  Match `GET` requests\n* `route.post`: Match `POST` requests\n* `route.put`:  Match `PUT` requests\n* `route.head`: Match `HEAD` requests \n* `route.del`:  Match `DELETE` requests\n* `route.options`:  Match `OPTIONS` requests\n* `route.all`:  Match all above request methods.\n* `route.debugget`:  Match `GET` for `scheme='debug'` requests\n\t\n## API\n\n\nIf you want to grab a part of the path you can use capture groups in the pattern:\n\n``` js\nroute.get('/id/{customer}', function() {\n\tvar base = this.Params.base; // ex: if the path is /id/bar, then customer = bar\n```\n\nQuery paramaters in the url are also added to `owin.Params`:\n\n``` js\nroute.get('/id/{customer}', function() {\n\tvar base = this.Params.base; // ex: if the path is /id/bar?name=dog, then customer = bar\n\tvar name = this.Params.name; // ex: if the path is /id/bar?name=dog, then name = dog\n});\n```\n\nThe capture patterns matches until the next `/` or character present after the group\n\n``` js\nroute.get('/{x}x{y}', function() {\n\t// if the path was /200x200, then his.Params = {x:'200', y:'200'}\n});\n```\n\nOptional patterns are supported by adding a `?` at the end\n\n``` js\nroute.get('/{prefix}?/{top}', function() {\n\t// matches both '/a/b' and '/b'\n});\n```\n\nIf you want to just match everything you can use a wildcard `*` which works like posix wildcards\n\n``` js\nroute.get('/{prefix}/*', function() {\n\t// matches both '/a/', '/a/b', 'a/b/c' and so on.\n\t// the value of the wildcard is available through req.params.wildcard\n});\n```\n\nIf the standard capture groups aren't expressive enough for you can specify an optional inline regex \n\n``` js\nroute.get('/{digits}([0-9]+)', function() {\n\t// matches both '/24' and '/424' but not '/abefest' and so on.\n});\n```\n\nYou can also use regular expressions and the related capture groups instead:\n\n``` js\nroute.get(/^\\/foo\\/(\\w+)/, function(req, res) {\n\tvar group = req.params[1]; // if path is /foo/bar, then group is bar\n});\n```\n\n## Error handling\n\nBy default lime-router will simply move to next lime middleware function if no route matched.    The router is a Promise/A compatible async function that respects error bubbling, but has no specific handling built in.\n\nYou can provide a catch-all to a given route that is called if no route was matched:\n\n    route.get(function() {\n\t// called if no other get route matched\n\tthis.response.writeHead(404);\n\tthis.response.end('no GET handler found');\n    });\n\n## Credits\n\nThis router was ported from [gett/router](https://github.com/gett/router) which was developed under MIT license by Mathias Buus Madsen and Ian Jorgensen.\n\nIt has been developed to be a core component of the limerun OWIN-JS ecosystem.\n","created":"2015-02-20T20:52:39.829Z","modified":"2015-03-01T23:27:49.911Z","lastPublisher":{"name":"limerun","email":"build@limerun.com"},"owners":[{"name":"limerun","email":"build@limerun.com"}],"other":{"_attachments":{},"_from":".","_id":"lime-router","_npmUser":{"name":"limerun","email":"build@limerun.com"},"_npmVersion":"1.4.28","_rev":"1-64b70feaba49fe4ee198e855de9c099c","_shasum":"2f0a8a41e6dbaff9aae9e4a11210d9b8a3b33f11","bugs":{"url":"https://github.com/limerun/lime-router/issues"},"directories":{},"dist-tags":{"latest":"0.2.7"},"dist":{"shasum":"2f0a8a41e6dbaff9aae9e4a11210d9b8a3b33f11","tarball":"http://registry.npmjs.org/lime-router/-/lime-router-0.2.7.tgz"},"maintainers":[{"name":"limerun","email":"build@limerun.com"}],"readmeFilename":"README.md","time":{"modified":"2015-03-01T23:27:49.911Z","created":"2015-02-20T20:52:39.829Z","0.2.0":"2015-02-20T20:52:39.829Z","0.2.2":"2015-02-20T20:57:08.753Z","0.2.3":"2015-02-20T21:50:08.046Z","0.2.4":"2015-02-20T22:54:03.501Z","0.2.5":"2015-02-21T01:17:08.676Z","0.2.6":"2015-03-01T23:26:00.778Z","0.2.7":"2015-03-01T23:27:49.911Z"}}}