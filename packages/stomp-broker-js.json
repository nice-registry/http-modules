{"name":"stomp-broker-js","version":"0.1.3","description":"Simple STOMP 1.1 Broker for nodejs http applications.","main":"stompServer.js","scripts":{"test":"mocha"},"repository":"https://github.com/4ib3r/StompBrokerJS","keywords":["STOMP","broker","server","websocket"],"license":"MIT","homepage":"https://github.com/4ib3r/StompBrokerJS#readme","dependencies":{"ws":"^1.1.1"},"devDependencies":{"chai":"^3.5.0","mocha":"^3.2.0","stompjs":"^2.3.3"},"gitHead":"6df2713450fbb588e5641fff757a876efcdb2b8b","versions":[{"number":"0.1.0","date":"2016-12-30T11:39:44.004Z"},{"number":"0.1.1","date":"2017-01-01T11:01:54.394Z"},{"number":"0.1.2","date":"2017-01-02T10:54:44.815Z"},{"number":"0.1.3","date":"2017-01-02T11:34:39.523Z"}],"readme":"# StompBrokerJS\nNodeJS StompBroker\n\nThis is simple NodeJs STOMP 1.1 broker for embedded usage.\n\n# Features\n* Destination wildcards\n    * . is used to separate names in a path\n    * \\* is used to mach any name in a path\n    * \\*\\* is used to recursively match path names\n\n#TODO\n* Authorization\n* Heartbeat\n* Acknowledgment\n* Async send messages\n* Transactions\n* Composite Destinations\n* Message selectors\n\n#Changelog\n* 0.1.0 First working version.\n* 0.1.1 Added wildcards to destination, change subscribe method [no backward compatibility]\n* 0.1.2 Bug fixes, changed websocket library, updated documentation.\n* 0.1.3 Unsubscribe on server, updated documentation, added events.\n\n#Example\n```javascript\nvar http = require(\"http\");\nvar StompServer = require('stompServer');\n\nvar server = http.createServer();\nvar stompServer = new StompServer({server: server});\n\nserver.listen(61614);\n\nstompServer.subscribe(\"/**\", function(msg, headers) {\n  var topic = headers.destination;\n  console.log(topic, \"->\", msg);\n});\n\nstompServer.send('/test', {}, 'testMsg');\n```\n\n#Documentation\n## Classes\n\n<dl>\n<dt><a href=\"#StompServer\">StompServer</a> ⇐ <code>EventEmitter</code></dt>\n<dd></dd>\n</dl>\n\n## Typedefs\n\n<dl>\n<dt><a href=\"#ServerConfig\">ServerConfig</a> : <code>object</code></dt>\n<dd><p>STOMP Server configuration</p>\n</dd>\n<dt><a href=\"#OnSubscribedMessageCallback\">OnSubscribedMessageCallback</a> : <code>function</code></dt>\n<dd><p>Subscription callback method</p>\n</dd>\n</dl>\n\n<a name=\"StompServer\"></a>\n\n## StompServer ⇐ <code>EventEmitter</code>\n**Kind**: global class  \n**Extends:** <code>EventEmitter</code>  \n\n* [StompServer](#StompServer) ⇐ <code>EventEmitter</code>\n    * [new StompServer(config)](#new_StompServer_new)\n    * [.subscribe(topic, [callback])](#StompServer+subscribe) ⇒ <code>string</code>\n    * [.unsubscribe(id)](#StompServer+unsubscribe) ⇒ <code>boolean</code>\n    * [.send(topic, headers, body)](#StompServer+send)\n    * [\"error\"](#StompServer+event_error)\n    * [\"connecting\"](#StompServer+event_connecting)\n    * [\"connected\"](#StompServer+event_connected)\n    * [\"disconnected\"](#StompServer+event_disconnected)\n\n<a name=\"new_StompServer_new\"></a>\n\n### new StompServer(config)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| config | <code>[ServerConfig](#ServerConfig)</code> | Configuration for STOMP server |\n\n<a name=\"StompServer+subscribe\"></a>\n\n### stompServer.subscribe(topic, [callback]) ⇒ <code>string</code>\nSubsribe topic\n\n**Kind**: instance method of <code>[StompServer](#StompServer)</code>  \n**Returns**: <code>string</code> - Subscription id, when message is received event with this id is emitted  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| topic | <code>string</code> | Subscribed destination, wildcard is supported |\n| [callback] | <code>[OnSubscribedMessageCallback](#OnSubscribedMessageCallback)</code> | Callback function |\n\n**Example**  \n```js\nstompServer.subscribe(\"/test.data\", function(msg, headers) {});\n//or alternative\nvar subs_id = stompServer.subscribe(\"/test.data\");\nstompServer.on(subs_id, function(msg, headers) {});\n```\n<a name=\"StompServer+unsubscribe\"></a>\n\n### stompServer.unsubscribe(id) ⇒ <code>boolean</code>\nUnsubscribe topic with subscription id\n\n**Kind**: instance method of <code>[StompServer](#StompServer)</code>  \n**Returns**: <code>boolean</code> - Subscription is deleted  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| id | <code>string</code> | Subscription id |\n\n<a name=\"StompServer+send\"></a>\n\n### stompServer.send(topic, headers, body)\nSend message to topic\n\n**Kind**: instance method of <code>[StompServer](#StompServer)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| topic | <code>string</code> | Destination for message |\n| headers | <code>object</code> | Message headers |\n| body | <code>string</code> | Message body |\n\n<a name=\"StompServer+event_error\"></a>\n\n### \"error\"\nClient error event\n\n**Kind**: event emitted by <code>[StompServer](#StompServer)</code>  \n<a name=\"StompServer+event_connecting\"></a>\n\n### \"connecting\"\nClient connecting event, emitted after socket is opened.\n\n**Kind**: event emitted by <code>[StompServer](#StompServer)</code>  \n**Properties**\n\n| Name | Type |\n| --- | --- |\n| sessionId | <code>string</code> | \n\n<a name=\"StompServer+event_connected\"></a>\n\n### \"connected\"\nClient connected event, emitted after connection established and negotiated\n\n**Kind**: event emitted by <code>[StompServer](#StompServer)</code>  \n**Properties**\n\n| Name | Type |\n| --- | --- |\n| sessionId | <code>string</code> | \n| headers | <code>object</code> | \n\n<a name=\"StompServer+event_disconnected\"></a>\n\n### \"disconnected\"\nClient disconnected event\n\n**Kind**: event emitted by <code>[StompServer](#StompServer)</code>  \n**Properties**\n\n| Name | Type |\n| --- | --- |\n| sessionId | <code>string</code> | \n\n<a name=\"ServerConfig\"></a>\n\n## ServerConfig : <code>object</code>\nSTOMP Server configuration\n\n**Kind**: global typedef  \n\n| Param | Type | Default | Description |\n| --- | --- | --- | --- |\n| server | <code>http.Server</code> |  | Http server reference |\n| [debug] | <code>function</code> | <code>function(args) {}</code> | Debug function |\n| [path] | <code>string</code> | <code>&quot;/stomp&quot;</code> | Websocket path |\n\n<a name=\"OnSubscribedMessageCallback\"></a>\n\n## OnSubscribedMessageCallback : <code>function</code>\nSubscription callback method\n\n**Kind**: global typedef  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| msg | <code>string</code> | Message body |\n| headers | <code>object</code> | Message headers |\n| headers.destination | <code>string</code> | Message destination |\n| headers.subscription | <code>string</code> | Id of subscription |\n| headers.message-id | <code>string</code> | Id of message |\n| headers.content-type | <code>string</code> | Content type |\n| headers.content-length | <code>string</code> | Content length |\n\n","created":"2016-12-30T11:39:44.004Z","modified":"2017-01-02T11:34:39.523Z","lastPublisher":{"name":"4ib3r","email":"adrian.slawinski@javadevelopers.pl"},"owners":[{"name":"4ib3r","email":"adrian.slawinski@javadevelopers.pl"}],"other":{"_attachments":{},"_from":".","_id":"stomp-broker-js","_nodeVersion":"4.2.2","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/stomp-broker-js-0.1.3.tgz_1483356878893_0.9386418582871556"},"_npmUser":{"name":"4ib3r","email":"adrian.slawinski@javadevelopers.pl"},"_npmVersion":"2.14.7","_rev":"4-bc2b012a0cfff09b6c4c776525189c57","_shasum":"e2e08cd703c7478a7f5b21a90f981c69ea0c3bb6","author":{"name":"Adrian Sławiński","email":"adrian.slawinski@javadevelopers.pl"},"bugs":{"url":"https://github.com/4ib3r/StompBrokerJS/issues"},"directories":{},"dist-tags":{"latest":"0.1.3"},"dist":{"shasum":"e2e08cd703c7478a7f5b21a90f981c69ea0c3bb6","tarball":"http://registry.npmjs.org/stomp-broker-js/-/stomp-broker-js-0.1.3.tgz"},"maintainers":[{"name":"4ib3r","email":"adrian.slawinski@javadevelopers.pl"}],"readmeFilename":"README.MD","time":{"modified":"2017-01-02T11:34:39.523Z","created":"2016-12-30T11:39:44.004Z","0.1.0":"2016-12-30T11:39:44.004Z","0.1.1":"2017-01-01T11:01:54.394Z","0.1.2":"2017-01-02T10:54:44.815Z","0.1.3":"2017-01-02T11:34:39.523Z"}}}