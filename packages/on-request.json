{"name":"on-request","version":"1.0.0","description":"overrides the request handlers of an http server","main":"./build/lib/index","files":["build"],"dependencies":{},"devDependencies":{"ava":"0.11.0","babel-eslint":"4.1.8","babel-plugin-syntax-async-functions":"6.3.13","babel-plugin-transform-async-to-generator":"6.4.6","del":"2.2.0","eslint-config-standard":"4.4.0","eslint-plugin-standard":"1.3.1","gulp":"3.9.0","gulp-ava":"0.7.0","gulp-babel":"6.1.2","gulp-eslint":"1.1.1","gulp-task-listing":"1.0.1","request-promise":"2.0.0","test-listen":"1.0.0"},"scripts":{"gulp":"gulp","test":"gulp test"},"ava":{"files":["build/test/*.js"]},"gitHead":"49efe68c618cb389de65ff3148fdd327cf10ec87","versions":[{"number":"1.0.0","date":"2016-02-05T04:40:51.243Z"}],"readme":"_**on-request —**_ take over the `request` handler of a Node HTTP server.\n\n## How to use\n\n```js\nimport http from 'http';\nimport onRequest from 'on-request';\n\nconst srv = http.createServer((req, res) => {\n  res.end('Handling', req.url);\n});\n\nonRequest(srv, (req, res, next) => {\n  if ('/special' === req.url) {\n    res.end('Special request!');\n  } else {\n    next();\n  }\n});\n```\n\n### API\n\n#### onRequest()\n\n```js\nonRequest(srv : http.Server, fn : Function, onError : fn)\n```\n\n- Exported as `default`. Use `import onRequest from 'on-request'` (ES6) or `require('on-request').default` (legacy).\n- `onError` is executed when `next` is invoked but no other request handlers are present. By default it returns `501 Unimplemented` to prevent requests from hanging and allocating resources. It's invoked with the following parameters:\n  - The `http.IncomingRequest`\n  - The `http.OutgoingResponse` \n- The supplied `fn` function receives three parameters:\n  - The `http.IncomingRequest`\n  - The `http.OutgoingResponse` \n  - A function callback that invokes the rest of the request handlers\n\n### Caveats\n\n- Beware that `request` listeners registered **after** `onRequest` will be fired simultaneously.\n- After using `onRequest` all the existing listeners will be \"removed' and no longer exposed to `.listeners()`.\n\n## Credits\n\n- Copyright © 2016 Zeit, Inc and project authors.\n- Licensed under MIT.\n- ▲\n","created":"2016-02-05T04:40:51.243Z","modified":"2016-02-05T04:40:51.243Z","lastPublisher":{"name":"rauchg","email":"rauchg@gmail.com"},"owners":[{"name":"rauchg","email":"rauchg@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"on-request","_nodeVersion":"5.3.0","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/on-request-1.0.0.tgz_1454647249326_0.9901920068077743"},"_npmUser":{"name":"rauchg","email":"rauchg@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-8b4fae44faff1cc873c9a6ce422671e7","_shasum":"0e402698384fd0f1a1b0c5de0e35959a6c9139ab","directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"0e402698384fd0f1a1b0c5de0e35959a6c9139ab","tarball":"http://registry.npmjs.org/on-request/-/on-request-1.0.0.tgz"},"maintainers":[{"name":"rauchg","email":"rauchg@gmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2016-02-05T04:40:51.243Z","created":"2016-02-05T04:40:51.243Z","1.0.0":"2016-02-05T04:40:51.243Z"}}}