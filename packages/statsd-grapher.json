{"name":"statsd-grapher","version":"0.1.2","description":"A statsd backend that serves an http page with the graphical data","main":"server.js","repository":"https://github.com/Risto-Stevcev/statsd-grapher","dependencies":{"express":"4.13.x","express-session":"1.13.x","jade":"1.11.x","node-uuid":"1.4.x","ramda":"0.19.x","sanctuary":"0.9.x"},"devDependencies":{"chai":"3.5.x","chai-as-promised":"5.2.x","docco":"0.7.x","globby":"4.0.x","gulp":"3.9.x","gulp-coveralls":"0.1.x","gulp-istanbul":"0.10.x","gulp-mocha":"2.2.x","gulp-webdriver":"1.0.x","mocha-lcov-reporter":"1.2.x","node-statsd":"0.1.x","pure-random":"0.1.x","selenium-standalone":"5.0.x"},"scripts":{"start":"node server.js","docs":"gulp docs","test":"gulp test:unit","coveralls":"gulp coveralls"},"license":"MIT","keywords":["statsd","backend","graph","graphical","data","http","site"],"gitHead":"209e973aa19246db84d2ac111d1c0fe849add136","homepage":"https://github.com/Risto-Stevcev/statsd-grapher#readme","versions":[{"number":"0.1.2","date":"2016-03-24T09:27:53.849Z"}],"readme":"# statsd-grapher\n\n[![Build Status](https://travis-ci.org/Risto-Stevcev/statsd-grapher.svg)](https://travis-ci.org/Risto-Stevcev/statsd-grapher)\n[![Coverage Status](https://coveralls.io/repos/github/Risto-Stevcev/statsd-grapher/badge.svg?branch=master)](https://coveralls.io/github/Risto-Stevcev/statsd-grapher?branch=master)\n\n:chart_with_upwards_trend: A statsd backend that serves an http page with the graphical data. This is an alternative to using graphite, and can simply be hosted \non a free Heroku instance.\n\nView the [annotated source](http://risto-stevcev.github.io/statsd-grapher/docs/utils.html)\n\n# Quick use\n\n1. Install and set up statsd-grapher\n\n  ```bash\n  $ npm install statsd statsd-grapher --save\n  $ cp node_modules/statsd-grapher/exampleConfig.js .\n  $ ./node_modules/.bin/statsd exampleConfig.js\n  ```\n\n2. Send some data to your statsd instance\n\n3. Go to your statsd http server to view the graph. The default would be `localhost:3000/stats` \n\n\n# Configuration\n\n## Options\n\n`tokens` ([String]) - An array of tokens used to authenticate access to the graph. Makes it so that the data can only be accessed by an authenticated user (recommended)  \n`expressPort` (Integer) - The port on which the backend http server should run (default: `3000`)  \n`sessionStore` (Object) - The session store object that will be passed into the `store` option for `express-session` (default: `MemoryStore`)  \n`sessionSecret` (String) - The session secret (default: `uuid.v4()`)  \n`sessionExpires` (Integer) - The session expiration time in milliseconds (default: `3600000`)\n\n\n## Urls\n\n`http(s)://hostname:port/stats` - Views all stats. This page may be slow to load if you have a lot of metrics.\n`http(s)://hostname:port/stats/:namespace/:metric` - Views stats from a particular `namespace` and `metric`. If `metric` is set to `all`, then all metrics will be returned for that namespace. Ex: */stats/some.name.space/timers*  \n`http(s)://hostname:port/metrics/:type/:name` - Returns a `JSON` representation of the metric. Ex: */metrics/counter_rates/some.complete.name.space* \n\nNote: If you set `tokens` in your statsd configuration file, then you need to authenticate your session by appending the token as query parameter like this: `/stats?token=your_token_value`. The default session expiration time is 1 hour.\n\n\n# Graphing\n\nThe library currently uses `plotly` to graph the stats. It can often lag when handling large data sets, though I consider this to be a reasonable trade-off due to its robust set of features.\n\n\n# Example Graph\n\n[![Sample Graph](http://risto-stevcev.github.io/statsd-grapher/graph.png)](http://risto-stevcev.github.io/statsd-grapher/graph.png)\n\n\n# Contributors\n\n- Submit an issue citing the feature request first before submitting a PR\n- PRs offering different graphing libraries are encouraged :deciduous_tree:\n- Follow the coding style. Use `ramda`/`sanctuary` to write small generic functions with corresponding `mocha` tests. The functions should be composed in a `point-free` style whenever possible/practical for the DSL\n\n\n# License\n\nLicensed under the MIT license\n","created":"2016-03-24T09:27:53.849Z","modified":"2016-03-24T09:27:53.849Z","lastPublisher":{"name":"ristostevcev","email":"risto1@gmail.com"},"owners":[{"name":"ristostevcev","email":"risto1@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"statsd-grapher","_nodeVersion":"5.9.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/statsd-grapher-0.1.2.tgz_1458811671172_0.5658115099649876"},"_npmUser":{"name":"ristostevcev","email":"risto1@gmail.com"},"_npmVersion":"3.8.2","_rev":"1-35b23be3ae68859cc0790943d89356f6","_shasum":"9e03d4afa3c8ccb81f45e392e8b019e4fc2bef79","author":{"name":"Risto Stevcev"},"bugs":{"url":"https://github.com/Risto-Stevcev/statsd-grapher/issues"},"directories":{},"dist-tags":{"latest":"0.1.2"},"dist":{"shasum":"9e03d4afa3c8ccb81f45e392e8b019e4fc2bef79","tarball":"http://registry.npmjs.org/statsd-grapher/-/statsd-grapher-0.1.2.tgz"},"maintainers":[{"name":"ristostevcev","email":"risto1@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-03-24T09:27:53.849Z","created":"2016-03-24T09:27:53.849Z","0.1.2":"2016-03-24T09:27:53.849Z"}}}