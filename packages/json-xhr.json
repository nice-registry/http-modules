{"name":"json-xhr","version":"0.0.0","description":"Promise-based library for working with JSON HTTP APIs","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/RangerMauve/json-xhr","keywords":["xhr","json","http"],"license":"MIT","homepage":"https://github.com/RangerMauve/json-xhr","dependencies":{"promise":"^6.0.0","query-string":"^1.0.0"},"versions":[{"number":"0.0.0","date":"2014-10-07T15:20:26.581Z"}],"readme":"\r\n# json-xhr\r\n\r\n  Promise-based library for working with JSON HTTP APIs\r\n\r\n## Installation\r\n\r\n  Install with [component(1)](http://component.io):\r\n\r\n    $ component install RangerMauve/json-xhr\r\n\r\n  Install with [bower](http://bower.io/):\r\n\r\n    $ bower install json-xhr\r\n\r\n  Then link to build/build.js in your HTML, if no module loader is present it'll make a global called `json_xhr`\r\n\r\n  You can also build a UMD-compatible bundle for use in other applications with:\r\n\r\n    $ component build -s json_xhr\r\n\r\n## API\r\n\r\n``` javascript\r\n    var jshr = require(\"json-xhr\");\r\n    jshr.get(\"http://example.com/foobar.json\").then(function(result){\r\n        var foobar = result.response;\r\n        // foobar is a JS object that was parsed from foobar.json\r\n    }).catch(function(e){\r\n        alert(\"Error:\"+e.message);\r\n        // e is an Error object with the added properties for the request/reponse data and status\r\n    })\r\n```\r\n\r\n### json_xhr(verb,url,data)\r\n\r\nSends a `verb request to the specified URL.\r\nIf the verb is GET, it turns the data into a querystring which is appended to the URL.\r\nOtherwise the data is stringified and sent as the body of the request.\r\nThe return value is a Promise (the then/promise implementation in this case) which resolves to an object that looks like:\r\n``` javascript\r\n    {\r\n        status: \"the status code of the response\",\r\n        response: \"the JSON.parse'd response body or an empty object if there was no body\",\r\n        request: \"the XMLHttpRequest instance used for the request\"\r\n    }\r\n```\r\n\r\nIf there was an error it rejects with it, if the error was the result of an Error-like status code (4xx or 5xx),\r\nthen it will reject to an Error object with the following added properties:\r\n``` javascript\r\n    {\r\n        status: \"the status code of the response\",\r\n        response: \"the JSON.parse'd response body or an empty object if there was no body\",\r\n        request: \"the XMLHttpRequest instance used for the request\"\r\n    }\r\n```\r\n\r\n### json_xhr(verb, url)\r\n\r\nSame as above, but the data is set to an empty object\r\n\r\n### json_xhr(url, data)\r\n\r\nSame as the first version, but it sets the verb to `GET`\r\n\r\n### json_xhr[get, post, put, delete]\r\n\r\nShorthand for different verbs, acts the same as `json_xhr(url,data)`\r\n\r\n## License\r\n\r\n  The MIT License (MIT)\r\n\r\n  Copyright (c) 2014 <copyright holders>\r\n\r\n  Permission is hereby granted, free of charge, to any person obtaining a copy\r\n  of this software and associated documentation files (the \"Software\"), to deal\r\n  in the Software without restriction, including without limitation the rights\r\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n  copies of the Software, and to permit persons to whom the Software is\r\n  furnished to do so, subject to the following conditions:\r\n\r\n  The above copyright notice and this permission notice shall be included in\r\n  all copies or substantial portions of the Software.\r\n\r\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n  THE SOFTWARE.\r\n","created":"2014-10-07T15:20:26.581Z","modified":"2014-10-07T15:20:26.581Z","lastPublisher":{"name":"rangermauve","email":"RangerMauve@hotmail.com"},"owners":[{"name":"rangermauve","email":"RangerMauve@hotmail.com"}],"other":{"_attachments":{},"_from":".","_id":"json-xhr","_npmUser":{"name":"rangermauve","email":"RangerMauve@hotmail.com"},"_npmVersion":"1.4.9","_rev":"1-c8f2632e443ab8ddfc4feb55a80a1e96","_shasum":"8af1614ed69eacef74e41a5a37258202546484f4","author":{"name":"RangerMauve"},"bugs":{"url":"https://github.com/RangerMauve/json-xhr/issues"},"directories":{},"dist-tags":{"latest":"0.0.0"},"dist":{"shasum":"8af1614ed69eacef74e41a5a37258202546484f4","tarball":"http://registry.npmjs.org/json-xhr/-/json-xhr-0.0.0.tgz"},"maintainers":[{"name":"rangermauve","email":"RangerMauve@hotmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2014-10-07T15:20:26.581Z","created":"2014-10-07T15:20:26.581Z","0.0.0":"2014-10-07T15:20:26.581Z"}}}