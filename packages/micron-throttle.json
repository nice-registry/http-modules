{"name":"micron-throttle","description":"Token bucket based HTTP request throttle for Node.js","version":"0.1.0","repository":"https://github.com/thisandagain/micron-throttle","main":"./lib/index.js","scripts":{"test":"make test"},"dependencies":{"assert-plus":"~0.1.4","lodash":"~2.0.0","lru-cache":"~2.3.1"},"devDependencies":{"async":"~0.2.9","hint-hint":"~0.3.0","tap":"~0.3.1"},"optionalDependencies":{},"engines":{"node":">=0.8"},"readme":"## Micron-throttle\n#### Token bucket based HTTP request throttle for Node.js\n\n[![Build Status](https://travis-ci.org/thisandagain/micron-throttle.png)](https://travis-ci.org/thisandagain/micron-throttle)\n\n### Installation\n```bash\nnpm install micron-throttle\n```\n\n### Basic Use\nThe throttle module can be used in just about any application that supports the `function (req, res, next)` middleware convention (such as express, connect, union or restify). For example in restify:\n```js\nvar http        = require('restify'),\n    throttle    = require('micron-throttle');\n\n// Create the server and pass-in the throttle middleware\nvar server      = restify.createServer();\nserver.use(throttle({\n    burst: 100,\n    rate: 50,\n    ip: true,\n    overrides: {\n        '192.168.1.1': {\n            rate: 0,        // unlimited\n            burst: 0\n        }\n    }\n}));\n\n// Define a route\nserver.get('/hello/:name', function (req, res, next) {\n    res.send('hello ' + req.params.name);\n});\n\n// Listen\nserver.listen(3333);\n```\n\n### Options\n<table>\n    <thead>\n        <tr>\n            <th>Name</th>\n            <th>Default</th>\n            <th>Type</th>\n            <th>Description</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr><td>rate</td><td>10</td><td>Number</td><td>Steady state number of requests/second to allow</td></tr>\n        <tr><td>burst</td><td>25</td><td>Number</td><td>If available, the amount of requests to burst to</td></tr>\n        <tr><td>ip</td><td>true</td><td>Boolean</td><td>Do throttling on a /32 (source IP)</td></tr>\n        <tr><td>xff</td><td>false</td><td>Boolean</td><td>Do throttling on a /32 (X-Forwarded-For)</td></tr>\n        <tr><td>username</td><td>false</td><td>Boolean</td><td>Do throttling on <code>req.username</code></td></tr>\n        <tr><td>overrides</td><td>null</td><td>Object</td><td>Per \"key\" overrides</td></tr>\n        <tr><td>tokensTable</td><td>n/a</td><td>Object</td><td>Storage engine; must support set/get</td></tr>\n        <tr><td>maxKeys</td><td>10000</td><td>Number</td><td>If using the built-in storage table, the maximum distinct throttling keys to allow at a time</td></tr>\n    </tbody>\n</table>\n\n### Testing\n```bash\nnpm test\n```\n\n### Credits\nThis module is adapted from [restify's](https://github.com/mcavage/node-restify) throttle plug-in â€“ originally developed by [Mark Cavage](https://github.com/mcavage).","versions":[{"number":"0.1.0","date":"2013-11-25T23:14:50.086Z"}],"starsCount":1,"created":"2013-11-25T23:14:49.198Z","modified":"2013-11-25T23:14:50.086Z","lastPublisher":{"name":"diy","email":"help@diy.org"},"owners":[{"name":"diy","email":"help@diy.org"}],"other":{"_attachments":{},"_from":".","_id":"micron-throttle","_npmUser":{"name":"diy","email":"help@diy.org"},"_npmVersion":"1.2.11","_rev":"1-225af0b9ff8b9c97a3fc9284377014b0","author":{"name":"Andrew Sliwinski","email":"andrewsliwinski@acm.org","url":"http://andrewsliwinski.com"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"b2ada56b5b867ba6fb51f709015f54ea8ff467d2","tarball":"http://registry.npmjs.org/micron-throttle/-/micron-throttle-0.1.0.tgz"},"maintainers":[{"name":"diy","email":"help@diy.org"}],"readmeFilename":"README.md","time":{"modified":"2013-11-25T23:14:50.086Z","created":"2013-11-25T23:14:49.198Z","0.1.0":"2013-11-25T23:14:50.086Z"},"users":{"fhefh2016":true}}}