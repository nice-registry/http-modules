{"name":"context-statuses","version":"1.0.1","description":"Descriptive HTTP status codes, for code readability","main":"index.js","scripts":{"commit":"git-cz","test":"mocha test/ -w","test:single":"mocha test/","semantic-release":"semantic-release pre && npm publish && semantic-release post"},"repository":"https://github.com/ifreddyrondon/context-statuses","keywords":["http","status","codes","readability"],"license":"MIT","homepage":"https://github.com/ifreddyrondon/context-statuses#readme","engine":">=6.7.0","devDependencies":{"chai":"4.0.1","commitizen":"2.9.6","cz-conventional-changelog":"2.0.0","eslint":"3.19.0","eslint-config-airbnb-base":"11.2.0","eslint-plugin-import":"2.3.0","mocha":"3.4.2","semantic-release":"^6.3.6"},"config":{"commitizen":{"path":"node_modules/cz-conventional-changelog"}},"gitHead":"3c8a93e334f2b188de921fd01e09dd3983666f89","versions":[{"number":"1.0.0","date":"2017-05-28T17:42:47.454Z"},{"number":"1.0.1","date":"2017-06-02T19:07:00.301Z"}],"readme":"# context-statuses\n\nUsing bare status codes in your responses isn't recommended.  **context-statuses** named constants that you can use to make code more obvious and readable.\n\n```\nconst contextStatuses = require('context-statuses');\n\napp.get('/ping', (req, res) => {\n    res.status(contextStatuses.HTTP_200_OK).send('pong');\n});\n```\n\nFor more information on proper usage of HTTP status codes see [RFC 2616][rfc2616]\nand [RFC 6585][rfc6585].\n\n## Informational - 1xx\n\nThis class of status code indicates a provisional response.\n\n    HTTP_100_CONTINUE\n    HTTP_101_SWITCHING_PROTOCOLS\n\n## Successful - 2xx\n\nThis class of status code indicates that the client's request was successfully received, understood, and accepted.\n\n    HTTP_200_OK\n    HTTP_201_CREATED\n    HTTP_202_ACCEPTED\n    HTTP_203_NON_AUTHORITATIVE_INFORMATION\n    HTTP_204_NO_CONTENT\n    HTTP_205_RESET_CONTENT\n    HTTP_206_PARTIAL_CONTENT\n    HTTP_207_MULTI_STATUS\n\n## Redirection - 3xx\n\nThis class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request.\n\n    HTTP_300_MULTIPLE_CHOICES\n    HTTP_301_MOVED_PERMANENTLY\n    HTTP_302_FOUND\n    HTTP_303_SEE_OTHER\n    HTTP_304_NOT_MODIFIED\n    HTTP_305_USE_PROXY\n    HTTP_306_RESERVED\n    HTTP_307_TEMPORARY_REDIRECT\n\n## Client Error - 4xx\n\nThe 4xx class of status code is intended for cases in which the client seems to have erred.  Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition.\n\n    HTTP_400_BAD_REQUEST\n    HTTP_401_UNAUTHORIZED\n    HTTP_402_PAYMENT_REQUIRED\n    HTTP_403_FORBIDDEN\n    HTTP_404_NOT_FOUND\n    HTTP_405_METHOD_NOT_ALLOWED\n    HTTP_406_NOT_ACCEPTABLE\n    HTTP_407_PROXY_AUTHENTICATION_REQUIRED\n    HTTP_408_REQUEST_TIMEOUT\n    HTTP_409_CONFLICT\n    HTTP_410_GONE\n    HTTP_411_LENGTH_REQUIRED\n    HTTP_412_PRECONDITION_FAILED\n    HTTP_413_REQUEST_ENTITY_TOO_LARGE\n    HTTP_414_REQUEST_URI_TOO_LONG\n    HTTP_415_UNSUPPORTED_MEDIA_TYPE\n    HTTP_416_REQUESTED_RANGE_NOT_SATISFIABLE\n    HTTP_417_EXPECTATION_FAILED\n    HTTP_422_UNPROCESSABLE_ENTITY\n    HTTP_423_LOCKED\n    HTTP_424_FAILED_DEPENDENCY\n    HTTP_428_PRECONDITION_REQUIRED\n    HTTP_429_TOO_MANY_REQUESTS\n    HTTP_431_REQUEST_HEADER_FIELDS_TOO_LARGE\n    HTTP_451_UNAVAILABLE_FOR_LEGAL_REASONS\n\n## Server Error - 5xx\n\nResponse status codes beginning with the digit \"5\" indicate cases in which the server is aware that it has erred or is incapable of performing the request.  Except when responding to a HEAD request, the server SHOULD include an entity containing an explanation of the error situation, and whether it is a temporary or permanent condition.\n\n    HTTP_500_INTERNAL_SERVER_ERROR\n    HTTP_501_NOT_IMPLEMENTED\n    HTTP_502_BAD_GATEWAY\n    HTTP_503_SERVICE_UNAVAILABLE\n    HTTP_504_GATEWAY_TIMEOUT\n    HTTP_505_HTTP_VERSION_NOT_SUPPORTED\n    HTTP_507_INSUFFICIENT_STORAGE\n    HTTP_511_NETWORK_AUTHENTICATION_REQUIRED\n\n## Helper functions\n\nThe following helper functions are available for identifying the category of the response code.\n\n    isInformational() # 1xx\n    isSuccess()       # 2xx\n    isRedirect()      # 3xx\n    isClientError()   # 4xx\n    isServerError()   # 5xx\n","created":"2017-05-28T17:42:47.454Z","modified":"2017-06-02T19:07:00.301Z","lastPublisher":{"name":"ifreddyrondon","email":"ifreddyrondon@gmail.com"},"owners":[{"name":"ifreddyrondon","email":"ifreddyrondon@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"context-statuses","_nodeVersion":"6.10.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/context-statuses-1.0.1.tgz_1496430418242_0.8097600296605378"},"_npmUser":{"name":"ifreddyrondon","email":"ifreddyrondon@gmail.com"},"_npmVersion":"3.10.10","_rev":"2-6d378e29fe3e124770859208fdadb382","_shasum":"50932069109e069972123429be2c3e38be3a6f0d","author":{"name":"Freddy Rondon","email":"ifreddyrondon@gmail.com"},"bugs":{"url":"https://github.com/ifreddyrondon/context-statuses/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"50932069109e069972123429be2c3e38be3a6f0d","tarball":"https://registry.npmjs.org/context-statuses/-/context-statuses-1.0.1.tgz"},"maintainers":[{"name":"ifreddyrondon","email":"ifreddyrondon@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-02T19:07:00.301Z","created":"2017-05-28T17:42:47.454Z","1.0.0":"2017-05-28T17:42:47.454Z","1.0.1":"2017-06-02T19:07:00.301Z"}}}