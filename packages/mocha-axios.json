{"name":"mocha-axios","version":"1.3.0","description":"http assertions for mocha using axios","main":"integration.js","scripts":{"coveralls":"cat coverage/lcov.info | coveralls","lint":"eslint .","pretest":"npm run lint","posttest":"istanbul check-coverage","test":"istanbul cover -x *.test.js _mocha -- *.test.js","preversion":"npm test","postversion":"git push && git push --tags"},"repository":"https://github.com/jdrydn/mocha-axios","files":["integration.js","withModify.js"],"license":"MIT","dependencies":{"axios":"^0.16.2","deep-extend":"^0.5.0","ms":"^2.0.0"},"devDependencies":{"body-parser":"^1.17.2","coveralls":"^2.13.1","eslint":"^3.19.0","eslint-plugin-mocha":"^4.9.0","express":"^4.15.3","istanbul":"^1.1.0-alpha.1","lodash.get":"^4.4.2","lodash.set":"^4.3.2","mocha":"^3.4.2"},"engines":{"node":">=7.8.0"},"gitHead":"dd539daa37e082c23974b3cea954941e23efebdd","homepage":"https://github.com/jdrydn/mocha-axios#readme","versions":[{"number":"1.0.0","date":"2017-06-07T10:42:22.959Z"},{"number":"1.0.1","date":"2017-06-07T10:49:09.422Z"},{"number":"1.0.2","date":"2017-06-07T10:53:43.914Z"},{"number":"1.1.0","date":"2017-06-07T15:00:32.085Z"},{"number":"1.2.0","date":"2017-06-14T08:51:44.497Z"},{"number":"1.2.1","date":"2017-06-14T14:47:16.754Z"},{"number":"1.3.0","date":"2017-06-15T17:08:29.396Z"}],"readme":"# mocha-axios\n\n[![NPM](https://badge.fury.io/js/mocha-axios.svg)](https://www.npmjs.com/package/mocha-axios)\n[![Circle CI](https://circleci.com/gh/jdrydn/mocha-axios/tree/master.svg?style=shield)](https://circleci.com/gh/jdrydn/mocha-axios)\n[![Coverage Status](https://coveralls.io/repos/github/jdrydn/mocha-axios/badge.svg?branch=master)](https://coveralls.io/github/jdrydn/mocha-axios?branch=master)\n\nHTTP assertions for [mocha](https://www.npmjs.com/package/mocha) using [axios](https://www.npmjs.com/package/axios).\n\n## About\n\nThis is a simplified HTTP testing library designed to decrease the amount of time you spend writing end-to-end tests.\nDesigned to drop into `mocha` tests, backed by `axios`, written with ES6 `async/await`.\n\n## Installation\n\n```sh\n$ npm install --save-dev mocha mocha-axios\n```\n\n## Usage\n\n```js\nconst app = require('./example-app')\nconst integration = require('mocha-axios');\n\ndescribe('some-awesome-API', function () {\n  it('should login correctly', integration({\n    app,\n    req: {\n      method: 'POST',\n      url: '/login',\n      data: {\n        method: 'email',\n        email: 'james@jdrydn.com',\n        password: 'correct-horse-battery-staple',\n      },\n    },\n    res: {\n      status: 200,\n      headers: {\n        'X-Auth-Token': 'e409413fd5b4bad63f0ee4093b0b0e9b',\n      },\n      data: {\n        user: {\n          id: '1',\n          username: 'jdrydn',\n        },\n      },\n    },\n  }));\n});\n```\n\n## API\n\n```js\nintegration({\n\n  // Any \"app\" that can be passed into http.createServer\n  // For integration tests this is an express API\n  app,\n  // app: express(),\n\n  // The request object should be an object that can be dropped into axios\n  // See https://www.npmjs.com/package/axios#request-config\n  req: {\n    method: 'GET',\n    url: '/',\n    params: { one: 'two' },\n  },\n\n  // The response object is a similar-ish axios response object\n  res: {\n    // Include a status property to check the status of the response\n    status: 200,\n\n    // Include a headers property to check individual headers of the response\n    headers: {\n      // Including a regex value to test it\n      'Content-Type': /json/,\n      // Include a string value to exact-match it\n      'X-Powered-By': 'Express',\n    },\n\n    // Include a data property to check the body of the response\n    // If you don't set the responseType in the req then JSON is assumed\n    data: 'Hello, world!',\n  },\n\n  // You can specify a before function, which can return a Promise, to execute before anything actually happens\n  before() {},\n  // And you can specify a after function, which can return a Promise, to execute after all assertions have been made\n  after() {},\n})\n```\n\n## Extensions\n\nYou can optionally write your own extensions for `mocha-axios`, by registering them globally like so:\n\n```js\nconst integration = require('mocha-axios');\n\nintegration.with('auth', {\n  before(username, req) {\n    req.headers['x-auth-token'] = createSignedTokenFor(username);\n  },\n});\n\nit('should fetch Malcom\\'s inbox', integration({\n  app,\n  auth: 'tuckerm@gov.uk',\n  req: {\n    method: 'GET',\n    url: '/user/2321/inbox',\n  },\n  res: {\n    status: 200,\n  },\n}));\n```\n\n### modify\n\nTo make it easier to mock HTTP endpoints where the data may change over time, there's a way to mock certain values in\nthe response data to fixed values. **Please note:** this will only overwrite values that have the same type, e.g.\n`strings` `numbers` etc, in order to correctly return errors regarding missing properties / unusual properties!\n\nThis requires `lodash`, either the entire library (if you're already using it) or the two individually packaged\n`_.get` `_.set`, so don't forget to install them (with `--save-dev` if you're not going to use it yourself!)\n\n```js\nconst integration = require('mocha-axios');\n\n// Set res-modify to anything you want\nintegration.with('res-modify', require('mocha-axios/withModify'));\n\nit('should fetch a member profile', integration({\n  app,\n  req: {\n    method: 'GET',\n    url: '/member/2321/',\n  },\n  res: {\n    status: 200,\n    modify: {\n      'user.id': 'some-id',\n      'user.created_date': 'YESTERDAY',\n    },\n    data: {\n      user: {\n        id: 1,\n        username: 'jdrydn',\n        created_date: 'YESTERDAY',\n      },\n    },\n  },\n}));\n```\n\nA list of known extensions is coming soon!\n\n## More\n\n- [Open an issue](https://github.com/jdrydn/mocha-axios) or [drop me a tweet](https://twitter.com/jdrydn) :sunglasses:\n","created":"2017-06-07T10:42:22.959Z","modified":"2017-06-15T17:08:29.396Z","lastPublisher":{"name":"jdrydn","email":"james@jdrydn.com"},"owners":[{"name":"jdrydn","email":"james@jdrydn.com"}],"other":{"_attachments":{},"_from":".","_id":"mocha-axios","_nodeVersion":"7.8.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/mocha-axios-1.3.0.tgz_1497546508447_0.5339944625739008"},"_npmUser":{"name":"jdrydn","email":"james@jdrydn.com"},"_npmVersion":"4.2.0","_rev":"7-809b2c7ff4d2a25e85a4467a8ec12857","_shasum":"7ef3db950537ea05de31fab9b3555567c80c4616","author":{"name":"James D","email":"james@jdrydn.com","url":"https://jdrydn.com"},"bugs":{"url":"https://github.com/jdrydn/mocha-axios/issues"},"directories":{},"dist-tags":{"latest":"1.3.0"},"dist":{"shasum":"7ef3db950537ea05de31fab9b3555567c80c4616","tarball":"https://registry.npmjs.org/mocha-axios/-/mocha-axios-1.3.0.tgz"},"maintainers":[{"name":"jdrydn","email":"james@jdrydn.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-15T17:08:29.396Z","created":"2017-06-07T10:42:22.959Z","1.0.0":"2017-06-07T10:42:22.959Z","1.0.1":"2017-06-07T10:49:09.422Z","1.0.2":"2017-06-07T10:53:43.914Z","1.1.0":"2017-06-07T15:00:32.085Z","1.2.0":"2017-06-14T08:51:44.497Z","1.2.1":"2017-06-14T14:47:16.754Z","1.3.0":"2017-06-15T17:08:29.396Z"}}}