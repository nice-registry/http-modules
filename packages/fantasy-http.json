{"name":"fantasy-http","version":"0.0.0","description":"fantasy-http ============","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"license":"MIT","devDependencies":{"LiveScript":"~1.2.0"},"dependencies":{"fantasy-io":"0.0.1"},"deprecated":"Use Oban instead","versions":[{"number":"0.0.0","date":"2013-11-25T21:58:34.086Z"}],"readme":"fantasy-http\n============\n\n(Mostly) purely functional wrapper around Node's http module\n\nUsage\n-----\n\n```livescript\nPromise = require \\fantasy-promises\n{Readable} = require \\stream\nrequire \\fantasy-streams\n{serve, listen} = require \\fantasy-http\n\nmain = listen 8000 serve ->\n\tPromise.of {status-code: 200 body: Readable.of \"hello\"}\n\nmain.unsafe-perform!\n```\n\n```bash\n$ curl localhost:8000\nhello\n```\n\nAPI\n---\n### Response\n```haskell\ntype Response = { body :: Readable Buffer\n                , status-code :: Int\n                , status :: String\n                , headers :: Map String String }\n```\nThe objects you'll be mostly playing with. ``Readable`` is anything with a ``.pipe Writable`` method; a Node steam will do. Note there's no distiction between a successful and failing response.\n\n### ```serve :: (Request → Promise Response) → Server```\nTakes a request handler (a function that turns requests into fantasy-promises for Responses) and creates a Node HTTP server with an appropriate ``(Request, Response) → ()`` handler.\n\n### ```listen :: Integer → Server → IO ()```\nCreates an IO action to tell the server to listen on the port. Run it with ``.unsafePerform()``.\n\nLicence\n-------\n[MIT](/licence.md). &copy; 2013 Matt Brennan.","created":"2013-11-25T21:58:31.237Z","modified":"2014-07-13T10:47:56.640Z","lastPublisher":{"name":"quarterto","email":"mwrbrennan@gmail.com"},"owners":[{"name":"quarterto","email":"mwrbrennan@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fantasy-http","_npmUser":{"name":"quarterto","email":"mwrbrennan@gmail.com"},"_npmVersion":"1.3.11","_rev":"1-dd23554e872616afed9d8534f53569ed","author":{"name":"Matt Brennan","email":"mwrbrennan@gmail.com"},"directories":{},"dist-tags":{"latest":"0.0.0"},"dist":{"shasum":"cb6cc3f8e0f2c4730de5f5296b2dc2b86375c9f4","tarball":"http://registry.npmjs.org/fantasy-http/-/fantasy-http-0.0.0.tgz"},"maintainers":[{"name":"quarterto","email":"mwrbrennan@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2014-07-13T10:47:56.640Z","created":"2013-11-25T21:58:31.237Z","0.0.0":"2013-11-25T21:58:34.086Z"}}}