{"name":"http-status-lists","version":"0.0.4","description":"HTTP status codes agrouped by categories like for example REST or SUCCESFUL codes","keywords":["http","status","codes","rest","services"],"repository":"https://github.com/r01010010/http_status_lists","devDependencies":{},"main":"./lib/HTTPStatus","engines":{"node":">= 0.4.0"},"scripts":{"test":"mocha"},"gitHead":"a70547f9a5c68db3e9666aa0af0d3aebc5c7bb04","homepage":"https://github.com/r01010010/http_status_lists","versions":[{"number":"0.0.2","date":"2015-02-14T17:18:08.414Z"},{"number":"0.0.3","date":"2015-02-14T17:24:12.993Z"},{"number":"0.0.4","date":"2015-02-14T17:30:14.739Z"}],"readme":"# HTTP Status codes for node\n\nUtility to interact with HTTP status codes grouped by categories (All, REST, Successful, Errors, etc)\n\n## This module is based on\nThis module is based on https://github.com/wdavidw/node-http-status\n\n## Usage\n\nOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\n\n## API\n\nThis module is extremely simple.\n\n### API sample\n\n```javascript\n    var HTTPStatus = require('http-status-lists');\n\n    // Print \"Internal Server Error\"\n    console.log(HTTPStatus.ALL[500]);\n\n    // Print 500\n    console.log(HTTPStatus.ALL.C500_INTERNAL_SERVER_ERROR);\n\n    // Print 201 with using the REST commonly used group\n    console.log(HTTPStatus.REST.C201_CREATED);\n```\n\n### Code example\n\n```javascript\n\t/**\n     * Commonly used for REST Apis\n     */\n    REST: {\n        200: 'OK', // When a successful GET, PUT, PATCH or DELETE. Can also be used for a POST that doesn't result in a creation.\n        201: 'Created', // When a POST that results in a creation. Should be combined with a Location header pointing to the location of the new resource\n        204: 'No Content', // When a successful request won't be returning a body (like a DELETE request)\n        302: 'Found', // When a successful request as a query returns results\n        304: 'Not Modified', // When HTTP caching headers are in play\n        400: 'Bad Request', // When request is malformed, such as if the body does not parse\n        401: 'Unauthorized', // When no or invalid authentication details are provided. Also useful to trigger an auth popup if the API is used from a browser\n        403: 'Forbidden', // When authentication succeeded but authenticated user doesn't have access to the resource\n        404: 'Not Found', // When a non-existent resource is requested\n        405: 'Method Not Allowed', // When an HTTP method is being requested that isn't allowed for the authenticated user\n        410: 'Gone', // When the resource at this end point is no longer available. Useful as a blanket response for old API versions\n        415: 'Unsupported Media Type', // When an incorrect content type was provided as part of the request\n        422: 'Unprocessable Entity', // When there's  validation errors\n        429: 'Too Many Requests', // When a request is rejected due to rate limiting\n        500: 'Internal Server Error', // When there's unknown technical errors\n\n        C200_OK: 200,\n        C201_CREATED: 201,\n        C204_NO_CONTENT: 204,\n        C302_FOUND: 302,\n        C304_NOT_MODIFIED: 304,\n        C400_BAD_REQUEST: 400,\n        C401_UNAUTHORIZED: 401,\n        C403_FORBIDDEN: 403,\n        C404_NOT_FOUND: 404,\n        C405_METHOD_NOT_ALLOWED: 405,\n        C410_GONE: 410,\n        C415_UNSUPPORTED_MEDIA_TYPE: 415,\n        C422_UNPROCESSABLE_ENTITY: 422,\n        C429_TOO_MANY_REQUESTS: 429,\n        C500_INTERNAL_SERVER_ERROR: 500\n    }\n```\n\nContributors\n------------\n\n*   Paloma Jiménez: r01010010@gmail.com\n","created":"2015-02-14T17:18:08.414Z","modified":"2015-02-14T17:30:14.739Z","lastPublisher":{"name":"r01010010","email":"r01010010@gmail.com"},"owners":[{"name":"r01010010","email":"r01010010@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"http-status-lists","_nodeVersion":"0.10.33","_npmUser":{"name":"r01010010","email":"r01010010@gmail.com"},"_npmVersion":"2.1.8","_rev":"1-e65db66f72f9e3c059d61d995b35d7d7","_shasum":"234006416cdf4cb032ae63473e17ea118a3827ed","author":{"name":"Paloma Jiménez","email":"r01010010@gmail.com"},"bugs":{"url":"http://github.com/r01010010/http_status_codes_extended/issues","email":"r01010010@gmail.com"},"contributors":[],"directories":{},"dist-tags":{"latest":"0.0.4"},"dist":{"shasum":"234006416cdf4cb032ae63473e17ea118a3827ed","tarball":"http://registry.npmjs.org/http-status-lists/-/http-status-lists-0.0.4.tgz"},"maintainers":[{"name":"r01010010","email":"r01010010@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-14T17:30:14.739Z","created":"2015-02-14T17:18:08.414Z","0.0.2":"2015-02-14T17:18:08.414Z","0.0.3":"2015-02-14T17:24:12.993Z","0.0.4":"2015-02-14T17:30:14.739Z"}}}