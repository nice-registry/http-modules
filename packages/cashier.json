{"name":"cashier","version":"0.1.5","dependencies":{},"repository":"https://github.com/mafintosh/cashier","description":"a module for caching static http responses in memory","keywords":["cache","watch","static","connect","http"],"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"_engineSupported":true,"_defaultsLoaded":true,"versions":[{"number":"0.1.0","date":"2012-05-21T21:23:30.337Z"},{"number":"0.1.1","date":"2012-05-23T07:24:10.571Z"},{"number":"0.1.4","date":"2012-05-23T14:24:41.705Z"},{"number":"0.1.5","date":"2012-05-23T14:49:16.462Z"}],"readme":"# Cashier\n\nA module for caching static http responses in memory. It's available through npm\n\n\tnpm install cashier\n\nCashier allows you to cache in memory a result from a function and serve it using http.  \nIt does so by wrapping a function into connect compatible middleware.\n\n## Usage\n\n``` js\nvar cashier = require('cashier');\nvar fs = require('fs');\n\nvar serveFiles = cashier(function(url, callback) {\n\tvar filename = '.'+url;\n\n\tfs.readFile(filename, function(err, buf) {\n\t\tif (err) return callback(err);\n\t\tcallback(null, {data:buf, watch:[filename]}); // see more options below\n\t});\n});\n\n// let's mount it using express\n\nvar express = require('express');\nvar app = express();\n\napp.use(serveFiles);\napp.listen(8080);\n```\n\nIf you save the above example as `example.js` and afterwards run it and visit \n`http://localhost:8080/example.js` you should see the file being served.\n\nCashier is ensuring that we actually only read the file from disk once - any subsequent requests will be served from the cache.\nSince we pass the `watch` option Cashier will clear the cache if any of the files in the array changes.\n\n## Options\n\n* `data` a buffer or a string to be responded (a gzipped version will also be saved)\n* `watch` a file or array of files to be watched - the cache will clear if they are modified.\n* `type` the content-type of the response\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2012 Mathias Buus Madsen &lt;mathiasbuus@gmail.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","created":"2012-05-21T21:23:26.900Z","modified":"2012-05-23T14:49:16.462Z","lastPublisher":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"owners":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"other":{"_attachments":{},"_id":"cashier","_nodeVersion":"v0.6.18","_npmUser":{"name":"mafintosh","email":"mathiasbuus@gmail.com"},"_npmVersion":"1.1.21","_rev":"1-595b6b4ebfbdf1805f739effba98b7be","author":{"name":"Mathias Buus Madsen","email":"mathiasbuus@gmail.com"},"directories":{},"dist-tags":{"latest":"0.1.5"},"dist":{"shasum":"35944e122722c5338c62701959e60f76788b111e","tarball":"http://registry.npmjs.org/cashier/-/cashier-0.1.5.tgz"},"maintainers":[{"name":"mafintosh","email":"mathiasbuus@gmail.com"}],"time":{"modified":"2012-05-23T14:49:16.462Z","created":"2012-05-21T21:23:26.900Z","0.1.0":"2012-05-21T21:23:30.337Z","0.1.1":"2012-05-23T07:24:10.571Z","0.1.4":"2012-05-23T14:24:41.705Z","0.1.5":"2012-05-23T14:49:16.462Z"}}}