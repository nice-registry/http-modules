{"name":"prequest","version":"1.0.0","description":"Promisified HTTP requests with `bluebird` and `request` modules.","main":"prequest.js","scripts":{"test":"grunt test"},"repository":"https://github.com/alyssaq/prequest","keywords":["promise","bluebird","promise","http","prequest"],"dependencies":{"bluebird":"^3.0.5","object-assign":"^2.1.1","request":"^2.53.0"},"devDependencies":{"body-parser":"^1.12.0","express":"^4.12.0","grunt":"^0.4.5","grunt-cafe-mocha":"^0.1.13","grunt-cli":"^0.1.13","grunt-contrib-jshint":"^0.11.0","grunt-express-server":"^0.4.19","mocha":"^2.1.0"},"engines":{"node":">=0.10.0"},"license":"MIT","gitHead":"ffd9804d97525018cf1df25e635a20033e6753fc","homepage":"https://github.com/alyssaq/prequest#readme","versions":[{"number":"0.0.1","date":"2014-09-08T10:13:21.234Z"},{"number":"0.0.2","date":"2014-09-08T10:36:41.635Z"},{"number":"0.0.3","date":"2015-02-28T15:28:55.043Z"},{"number":"1.0.0","date":"2015-11-24T15:53:04.041Z"}],"readme":"# prequest\n[![Build Status](https://travis-ci.org/alyssaq/prequest.png?branch=master)](https://travis-ci.org/alyssaq/prequest)\n\nPromisified HTTP requests with [`bluebird`](https://github.com/petkaantonov/bluebird/blob/master/API.md) and [`request`](https://github.com/mikeal/request) modules.\n\n## Grab it\n\n    $ npm install prequest\n\n## prequest usage\n#### GET example\nWith this wrapper, we can easily make requests and catch any http failures in a promise's catch. By default, method is `GET`:\n```js\nvar prequest = require('prequest');\n\nprequest('http://localhost:4567/api').then(function (body) {\n  console.log('Success!');\n}).catch(function (err) { // Any HTTP status >= 400 falls here\n  console.error('Failed.', err.statusCode, ' >= 400');\n});\n\n```\n\nIf you need the full response (e.g. to view headers), specify `arrayResponse: true` to have the response and body in an array. You may use bluebird's `spread` to access the items directly:\n```js\nprequest({\n  url:'http://localhost:4567/api',\n  arrayResponse: true\n}).spread(response, body) {\n  console.log('Success!', response.headers, body);\n});\n```\n\n#### POST example\nAll options supported by [`request`](https://github.com/mikeal/request) can be supplied to prequest.\nBy default, `json: true` is enabled to set body payload as a JSON representation. If you do not want this, simply override it to false.\n```js\nvar prequest = require('prequest');\n\nprequest({\n  method: 'POST',\n  url:'http://localhost:4567/api',\n  body: {\n    someData: [1, 2, 3]\n  }\n}).then(body) {\n  console.log('Success!',  body);\n}).catch(function (err) { // Any HTTP status >= 400 falls here\n  console.error('Failed.', err.statusCode, ' >= 400');\n});\n```\n\nTo use the other methods: [delete, patch, head], specify it in method.\n\n## Testing\n\nTo run the tests:\n\n    $ npm install\n    $ npm test\n\n## The past, without prequest\nWithout this wrapper, a common pattern to `promisify` requests:\n```js\nvar Promise = require('bluebird');\nvar prequest = Promise.promisify(require('request'));\n\nprequest(url).then(function (response) {\n  if (reponse.statusCode === 200) {\n    // continue;\n  } else if (reponse.statusCode >= 500) {\n    // handle this error case\n  } else if (reponse.statusCode >= 400) {\n    // you get the point...\n  }\n}).catch(function (err) {\n  console.error(err);\n  // network issue\n})\n```\n## Contribute\n1. Fork it!\n2. Create your feature branch: `git checkout -b my-new-feature`\n3. Commit your changes: `git commit -m 'Add some feature'`\n4. Push to the branch: `git push origin my-new-feature`\n5. Submit a pull request :D\n\n## License\n[MIT](http://alyssaq.github.io/mit-license/)\n","starsCount":1,"created":"2014-09-08T10:13:21.234Z","modified":"2015-11-24T15:53:04.041Z","lastPublisher":{"name":"alyssa","email":"alyssaquek@gmail.com"},"owners":[{"name":"alyssa","email":"alyssaquek@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"prequest","_nodeVersion":"5.1.0","_npmUser":{"name":"alyssa","email":"alyssaquek@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-a8947dc1f1a07dd55efc79162298ecdc","_shasum":"7f1f0342564add775b825dbbfaf00fc6458096e7","author":{"name":"Alyssa Quek"},"bugs":{"url":"https://github.com/alyssaq/prequest/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"7f1f0342564add775b825dbbfaf00fc6458096e7","tarball":"http://registry.npmjs.org/prequest/-/prequest-1.0.0.tgz"},"maintainers":[{"name":"alyssa","email":"alyssaquek@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-11-24T15:53:04.041Z","created":"2014-09-08T10:13:21.234Z","0.0.1":"2014-09-08T10:13:21.234Z","0.0.2":"2014-09-08T10:36:41.635Z","0.0.3":"2015-02-28T15:28:55.043Z","1.0.0":"2015-11-24T15:53:04.041Z"},"users":{"george55":true}}}