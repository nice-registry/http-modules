{"name":"proxy-tcp","version":"0.2.1","repository":"https://github.com/kaven276/proxy-tcp","description":"map local port to remote address directly or by http tunnel, bypass firewall, expose less service port to external network like internet","main":"server.js","bin":{"proxy-tcp":"./server.js"},"scripts":{"test":"echo \"Error: no test specified\" && exit 1","start":"node server.js"},"keywords":["tcp","forward","proxy","http","tunnel"],"license":"MIT","dependencies":{"debug":"^2.2.0"},"gitHead":"6d27c91d47de7b943e3d17472f264def18f89ab5","homepage":"https://github.com/kaven276/proxy-tcp","versions":[{"number":"0.1.0","date":"2015-12-30T06:34:58.557Z"},{"number":"0.2.0","date":"2015-12-30T06:49:21.917Z"},{"number":"0.2.1","date":"2015-12-30T06:56:51.097Z"}],"readme":"安装、运行\n============\n\n安装\n\n```shell\nnpm -g install proxy-tcp\n```\n\n运行：推荐使用 [pm2](http://pm2.keymetrics.io/)\n\n第一个参数为配置文件的路径，其中 .mapping 中设置端口映射关系。\n\n### by pm2\n\n```shell\ncd `npm -g root`/proxy-tcp\npm2 start . --name proxy-tcp --instances 2 -- \"./example/pm2.json\"\n```\n\nor\n\n```shell\npm2 start `npm -g root`/proxy-tcp/example/pm2.json\n```\n\nedit pm2.json, change mapping part to meet your requirement.\n\n\n### direct from shell\n\n```\nproxy-tcp `npm -g root`/proxy-tcp/example/pm2.json\n```\n\nintroduce\n===========\n\n连接内网被屏蔽互联网访问的 tcp 服务，如 oracle\n\n```text\n                               (directly)\n                          / -------------------> \\\nclient ------> proxy-tcp                          target(TCP server)\n             (TCP server) \\ --- http tunnel ---> /\n                                    ^\n               (http server that accept method:connect request)\n```\n\n客户端侧启动 port mapper，将连接到本地端口的连接接续到最终目标监听地址，包括两种方式：\n\n1. 直接通过 net.connect 接续到目标地址\n2. 间接通过 http.request({method:'connect',...} 通过 http tunnel 来连接目标地址\n\n配置数据格式，形如\n\n```json\n\"mapping\": {\n  \"127.0.0.1:6003\": {\n    \"target\": \"qhtdb1:61521\",\n    \"proxy\": \"localhost:80\"\n  },\n  \":6001\": {\n    \"target\": \"qhtdb1:61521\"\n  }\n}\n```\n\n1. key 为监听地址，格式如 ip:port，其中ip为监听多个地址中的那个地址，可以为空(默认监听所有地址)\n2. 配置项中有 proxy 的代表要通过 http tunnel 接续，target 地址必须是 http tunnel proxy 可以解析和访问的地址\n3. 配置项中没有 proxy 的代表要直接连接最终目标地址，target 地址必须是本 tcp proxy 可以解析和访问的地址\n\nuse cases\n==========\n\nIn DMZ\n------------\n\n在 DMZ 区域，防火墙策略经常是内网地址到外网地址之间双向不能直接连接，\n只能通过 DMZ 区的地址间接连接。\n\n通过本代理，一方比如说外部要想访问内部服务，可以采用如下方案：\n\n1. 在 DMZ 区域启动本代理，配置本地端口(外网地址)到内网地址(host:port)的映射关系\n2. 原外网客户端配置访问代理外网地址和端口即可访问到内网服务\n\n意义：\n\n1. 在DMZ 部署带有应用逻辑的软件不方便，因为受到网络访问限制，更新调试都受到影响\n2. 有了本代理，将DMZ两侧TCP连接接续，又不破坏企业的防火墙配置策略，避免和运维单位人员冲突\n3. 对于内外侧的网络应用程序，开发时完全不用考虑DMZ的影响，只当是可以直连，不必修改架构\n\n\nhide internal TCP service behind firewall, access through exposed http service\n-------------\n\n很多时候，组织内部网络中的服务，特别是http服务，通过一个统一的对外 reverse http server 来访问，\n外部互联网用户访问该组织的服务，都先访问该对外http服务，并由之反向代理到内部http服务。\n但是，当一些内部服务，如 oracle service，他是基于 TCP 而不是 http 的，\n那么默认情况下，oracle client 端软件只能直接发出TCP数据，无法使用 http tunnel。\n因此，可以做以下三项工作来弥补：\n\n1. 网关http service支持 http tunnel，将 connect host:port 请求代理到内部目标TCP服务\n2. 客户端侧启动本代理，将本地端口映射为访问http tunnel再转到目标内部TCP服务地址\n3. 客户端从原来的直接指定目标地址，转变为指定本代理的监听地址\n","starsCount":0,"created":"2015-12-30T06:34:58.557Z","modified":"2015-12-30T06:56:51.097Z","lastPublisher":{"name":"kaven276","email":"kaven276@vip.sina.com"},"owners":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"other":{"_attachments":{},"_from":".","_id":"proxy-tcp","_npmUser":{"name":"kaven276","email":"kaven276@vip.sina.com"},"_npmVersion":"1.4.28","_rev":"1-3e4efaad94778ca28d9ff08eb541bfc4","_shasum":"46fcbaaaa688f98b0d57f046f0581756a866ed3f","author":{"name":"kaven276@vip.sina.com"},"bugs":{"url":"https://github.com/kaven276/proxy-tcp/issues"},"directories":{},"dist-tags":{"latest":"0.2.1"},"dist":{"shasum":"46fcbaaaa688f98b0d57f046f0581756a866ed3f","tarball":"http://registry.npmjs.org/proxy-tcp/-/proxy-tcp-0.2.1.tgz"},"maintainers":[{"name":"kaven276","email":"kaven276@vip.sina.com"}],"readmeFilename":"README.md","time":{"modified":"2015-12-30T06:56:51.097Z","created":"2015-12-30T06:34:58.557Z","0.1.0":"2015-12-30T06:34:58.557Z","0.2.0":"2015-12-30T06:49:21.917Z","0.2.1":"2015-12-30T06:56:51.097Z"},"users":{}}}