{"name":"fetch-reject","version":"1.2.4","description":"A simple wrapper for fetch which rejects on HTTP error","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/matankb/fetch-reject","keywords":["fetch"],"license":"MIT","homepage":"https://github.com/matankb/fetch-reject#readme","gitHead":"bc8e7be69cac3bf2d5de019390d8b280f7e02d64","versions":[{"number":"1.0.0","date":"2016-09-13T15:31:13.575Z"},{"number":"1.0.1","date":"2016-09-14T12:55:27.713Z"},{"number":"1.1.0","date":"2016-09-15T23:40:30.790Z"},{"number":"1.2.0","date":"2016-09-24T19:08:58.604Z"},{"number":"1.2.1","date":"2016-10-15T13:26:09.547Z"},{"number":"1.2.2","date":"2016-10-16T15:48:45.587Z"},{"number":"1.2.3","date":"2016-10-16T21:20:56.025Z"},{"number":"1.2.4","date":"2016-10-16T21:35:32.677Z"}],"readme":"# Fetch Reject\r\n>A simple wrapper for fetch which rejects on HTTP error\r\n\r\nNormal `fetch` does not throw on HTTP error (non-200 status code). This wrapper allows it to do so.\r\n## Install\r\n```\r\n$ npm install --save fetch-reject;\r\n```\r\n## Usage\r\n```js\r\nimport fetch from 'fetch-reject';\r\n\r\n// use just like normal fetch\r\nfetch('http://httpstat.us/500')\r\n  .then(date => doSomething(data));\r\n  .catch(err => {\r\n    console.log(err) // -> 'GET ... 500 (Internal Server Error)'\r\n    console.log(err.status) // -> 500\r\n  })\r\n\r\n```\r\n## API\r\n\r\nSee the [`fetch` docs](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) for more.\r\n\r\n### fetch(url, [init])\r\n\r\nSame as normal `fetch`, but it rejects with an [`Error` object](#Returns) on non-200.\r\n\r\n#### Returns\r\n\r\nType: `Error`\r\n\r\nWill be `reject`-ed on non-200 response. An error object containing the `statusText` of the response. Has a `status` field which is equal to `response.status`;\r\n\r\n### createFetchReject(originFetch)\r\n\r\nReturns a `fetch` function similar to the one documented above, but using the provided `originFetch` function. Can be used to enhance polyfills.\r\n\r\n### originFetch\r\n\r\nType: `function`\r\n\r\nA function that complies with the original `fetch` spec. Will be used instead of `window.fetch` internally\r\n\r\n#### Returns\r\nType: `function`\r\n\r\nA function that acts similarly to `fetch` (detailed above), but uses the provided `originFetch` function instead.\r\n## License\r\n\r\n[MIT  Â© Matan Kotler-Berkowitz](https://github.com/matankb/fetch-reject/blob/master/LICENSE)\r\n","created":"2016-09-13T15:31:13.575Z","modified":"2016-10-16T21:35:32.677Z","lastPublisher":{"name":"matankb","email":"205matan@gmail.com"},"owners":[{"name":"matankb","email":"205matan@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"fetch-reject","_nodeVersion":"6.7.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/fetch-reject-1.2.4.tgz_1476653730716_0.9224080913700163"},"_npmUser":{"name":"matankb","email":"205matan@gmail.com"},"_npmVersion":"3.10.3","_rev":"1-7fc862040820c429b834c2b19db6ed3d","_shasum":"3fc85ab895534943ae7a1478e2029e8c1f553690","author":{"name":"Matan Kotler-Berkowitz"},"bugs":{"url":"https://github.com/matankb/fetch-reject/issues"},"directories":{},"dist-tags":{"latest":"1.2.4"},"dist":{"shasum":"3fc85ab895534943ae7a1478e2029e8c1f553690","tarball":"http://registry.npmjs.org/fetch-reject/-/fetch-reject-1.2.4.tgz"},"maintainers":[{"name":"matankb","email":"205matan@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-16T21:35:32.677Z","created":"2016-09-13T15:31:13.575Z","1.0.0":"2016-09-13T15:31:13.575Z","1.0.1":"2016-09-14T12:55:27.713Z","1.1.0":"2016-09-15T23:40:30.790Z","1.2.0":"2016-09-24T19:08:58.604Z","1.2.1":"2016-10-15T13:26:09.547Z","1.2.2":"2016-10-16T15:48:45.587Z","1.2.3":"2016-10-16T21:20:56.025Z","1.2.4":"2016-10-16T21:35:32.677Z"}}}