{"name":"hm-webui-httprequest","version":"0.0.4","description":"A hm-webui plugin to do easy http requests from a scripting language","keywords":["hm-webui","hm-webui-plugin","http","url","script"],"repository":"https://github.com/hm-webui/hm-webui-httprequest","license":"MIT","dependencies":{"extend":"^3.0.0","q":"^1.4.1"},"devDependencies":{"dependency-check":"^2.6.0","grunt":"^1.0.1","grunt-contrib-jshint":"^1.1.0","grunt-contrib-watch":"^1.0.0"},"jshintConfig":{"eqnull":true,"unused":true,"undef":true,"node":true},"hmWebUI":{"icon":"globe.png","type":["httprequest"],"priority":20,"singleton":true},"gitHead":"a3bc5a1e51e087d8ee02b8a6d41ee5f65ae0f0e0","homepage":"https://github.com/hm-webui/hm-webui-httprequest#readme","scripts":{},"versions":[{"number":"0.0.1","date":"2016-06-26T18:58:14.089Z"},{"number":"0.0.2","date":"2016-06-26T19:54:26.430Z"},{"number":"0.0.3","date":"2016-07-08T14:51:00.427Z"},{"number":"0.0.4","date":"2017-01-22T15:04:56.778Z"}],"readme":"![Logo](https://github.com/hm-webui/hm-webui-httprequest/raw/master/globe.png)\n\n# HM WebUI HTTP Request Plugin\n\nThis plugin makes it easy to request data from webservers with a get or post request from another plugin (e.g. the [HM WebUI Javascript Plugin](https://github.com/hm-webui/hm-webui-javascript)).\n\n## Installation\n\nIn the Plugins section of HM WebUI create a new instance of the hm-webui-httprequest plugin.\n\nThere are no settings in the plugin settings screen.\n\n## Usage\n\nThe plugin is supporting the following functions:\n\n### get\n---\n\n#### Parameter\n\nname | type | required | comment\n:---|:---|:---|:---\nurl | String | yes | the url (http:// ord https://) to get the data from\noptions | Object | no | a object containing options for the http request (for details visit the [Node HTTP documentation](https://nodejs.org/api/http.html#http_http_request_options_callback))\n\n#### Returns\n\nThe function returns a promise with the following methods:\n\nname | comment\n:--- | :---\n.then() | Called when the data has been received successful. The first parameter of the promise function contains an object described below in the **Result**\n.fail() | Called when the data receiving failed. The first parameter of the promise function contains a string with detailed error message\n.fin() | Called always (on success and error)\n\n#### Result\n\nThe .then() promise function is receiving the following result object:\n\n```js\n{\n  statusCode: 200, //the http statuc code\n  statusMessage: 'Ok', //the http status message,\n  headers: {}, //a object with all headers returned by the server,\n  body: '' // the body is a parsed JSON object if the server is sending application/json in the Content-Type header otherwise it is a string\n}\n\n```\n\n#### Example\n\nHere an example how you can receive data from a server with the [HM WebUI Javascript Plugin](https://github.com/hm-webui/hm-webui-javascript)\n\n```js\n//receive data with a get request\nhmwebui.callPluginFunction('hm-webui-httprequest.0','get','http://www.google.de').then(function(result){\n    //result is an object described above\n}).fail(function(err){\n    //err is a string with a detailed error message\n});\n```\n\n### post\n---\n\n#### Parameter\n\nname | type | required | comment\n:---|:---|:---|:---\nurl | String | yes | the url (http:// ord https://) to send the data to\npayload | Object<br>String | yes | the data to send to the server<br><br>A object is transferred to x-www-form-urlencoded form and the Content-Type header is set<br><br>If you want to send the data as is then ou have to provide the data as string (e.g. use JSON.stringify(...) to transfer JSON data)\noptions | Object | no | a object containing options for the http request (for details visit the [Node HTTP documentation](https://nodejs.org/api/http.html#http_http_request_options_callback))\n\n#### Returns\n\nThe function returns a promise with the following methods:\n\nname | comment\n:--- | :---\n.then() | Called when the data has been sent successful. The first parameter of the promise function contains an object described below in the **Result**\n.fail() | Called when the data sending failed. The first parameter of the promise function contains a string with detailed error message\n.fin() | Called always (on success and error)\n\n#### Result\n\nThe .then() promise function is receiving the following result object:\n\n```js\n{\n  statusCode: 200, //the http statuc code\n  statusMessage: 'Ok', //the http status message,\n  headers: {}, //a object with all headers returned by the server,\n  body: '' // the body is a parsed JSON object if the server is sending application/json in the Content-Type header otherwise it is a string\n}\n\n```\n\n#### Example\n\nHere an example how you can send data to a server from the [HM WebUI Javascript Plugin](https://github.com/hm-webui/hm-webui-javascript)\n\n```js\n//send data with a post request\nhmwebui.callPluginFunction('hm-webui-httprequest.0','post','http://www.example.com/login','user=test&password=test').then(function(result){\n    //result is an object described above\n}).fail(function(err){\n    //err is a string with a detailed error message\n});\n\n//send Object data with a post request\nhmwebui.callPluginFunction('hm-webui-httprequest.0','post','http://www.example.com/login',{user: 'test', password: 'test'}).then(function(result){\n    //result is an object described above\n}).fail(function(err){\n    //err is a string with a detailed error message\n});\n\n//send JSON data with a post request\nhmwebui.callPluginFunction('hm-webui-httprequest.0','post','http://www.example.com/login',JSON.stringify({user: 'test', password: 'test'})).then(function(result){\n    //result is an object described above\n}).fail(function(err){\n    //err is a string with a detailed error message\n});\n```\n\n## Changelog\n\n0.0.4 (2017-01-22)\n* add post function\n\n0.0.3 (2016-11-25)\n* small bugfix\n\n0.0.2 (2016-11-18)\n* small bugfix\n\n0.0.1 (2016-10-15)\n* initial version\n","created":"2016-06-26T18:58:14.089Z","modified":"2017-01-22T15:04:56.778Z","lastPublisher":{"name":"paspat","email":"paspat2016@gmail.com"},"owners":[{"name":"paspat","email":"paspat2016@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"hm-webui-httprequest","_nodeVersion":"4.4.3","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/hm-webui-httprequest-0.0.4.tgz_1485097494916_0.8334703235886991"},"_npmUser":{"name":"paspat","email":"paspat2016@gmail.com"},"_npmVersion":"2.15.1","_rev":"2-215e415a8a7e1c35b5367638b1b8c34c","_shasum":"5446224abfdde0a382b8234954fef012c7e6f0ea","author":{"name":"paspat"},"bugs":{"url":"https://github.com/hm-webui/hm-webui-httprequest/issues"},"contributors":[{"name":"paspat"}],"directories":{},"dist-tags":{"latest":"0.0.4"},"dist":{"shasum":"5446224abfdde0a382b8234954fef012c7e6f0ea","tarball":"https://registry.npmjs.org/hm-webui-httprequest/-/hm-webui-httprequest-0.0.4.tgz"},"maintainers":[{"name":"paspat","email":"paspat2016@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-22T15:04:56.778Z","created":"2016-06-26T18:58:14.089Z","0.0.1":"2016-06-26T18:58:14.089Z","0.0.2":"2016-06-26T19:54:26.430Z","0.0.3":"2016-07-08T14:51:00.427Z","0.0.4":"2017-01-22T15:04:56.778Z"}}}