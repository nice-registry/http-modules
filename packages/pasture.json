{"name":"pasture","version":"0.1.0","description":"Some HTTP parsing utilities I accidently started writing","main":"pasture.js","scripts":{"test":"macchiato test"},"repository":"https://github.com/sonewman/pasture","license":"MIT","homepage":"https://github.com/sonewman/pasture#readme","devDependencies":{"macchiato":"^4.1.0"},"gitHead":"cd0c0323e69171deaa2218dd0ac246f427e88937","versions":[{"number":"0.1.0","date":"2015-06-07T21:12:12.735Z"}],"readme":"# Pasture\n\nA few helper methods for parsing http headers from a tcp stream.\n\nThis is by no means complete, but hopefully will be someday soon.\n\n### Installation\n```\nnpm i pasture\n```\n\n### Usage\n\n#### pasture.scan(chunk, lookingFor)\n```javascript\n// scan a buffer for a matching buffer or array of charCodes\npasture.scan(new Buffer('abcdefghijk'), new Buffer('ghi'));\n// => 6\n\npasture.scan([97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], [103, 104, 105]);\n// => 6\n```\n\n#### pasture.getHeaderEndingIndex(buffer)\n```javascript\n// get a the start index of the end of the HTTP header.\n// this is particularly useful for slicing a buffer to obtain\n// just the header\nconst req = new Buffer('GET /abc HTTP/1.1\\r\\nHost: 0.0.0.0:3000\\r\\nContent-Length: 0\\r\\n\\r\\n');\nconst i = pasture.getHeaderEndingIndex(req);\n// => 56\nconst header = req.slice(0, i);\n// => new Buffer('GET /abc HTTP/1.1\\r\\nHost: 0.0.0.0:3000\\r\\nContent-Length: 0');\n\n\n// if the ending cannot be found -1 is returned\npasture.getHeaderEndingIndex(new Buffer('GET /abc HTTP/1.1\\r\\nHost: 0.0.0.0:3000\\r\\nContent-Length: 0\\r\\n'));\n// => -1\n```\n\n#### pasture.readHeader(headerString)\n```javascript\n// read a header from a buffer into an object containing values\nconst req = new Buffer('GET /abc HTTP/1.1\\r\\nHost: 0.0.0.0:3000\\r\\nContent-Length: 0\\r\\n\\r\\n');\nconst i = pasture.getHeaderEndingIndex(req);\npasture.readHeader(req.slice(0, i));\n// => {\n//   host: '0.0.0.0:3000',\n//   method: 'GET',\n//   path: '/abc',\n//   version: '1.1',\n//   headers: { 'Content-Length': '0' }\n// };\n```\n","created":"2015-06-07T21:12:12.735Z","modified":"2015-06-07T21:12:12.735Z","lastPublisher":{"name":"sonewman","email":"newmansam@outlook.com"},"owners":[{"name":"sonewman","email":"newmansam@outlook.com"}],"other":{"_attachments":{},"_from":".","_id":"pasture","_nodeVersion":"2.2.1","_npmUser":{"name":"sonewman","email":"newmansam@outlook.com"},"_npmVersion":"2.11.0","_rev":"1-3836ad28c022bdad3389010538901869","_shasum":"f4fc0fdfb762b01159732e5febc13c65d4bf4eb4","author":{"name":"Sam Newman"},"bugs":{"url":"https://github.com/sonewman/pasture/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"f4fc0fdfb762b01159732e5febc13c65d4bf4eb4","tarball":"http://registry.npmjs.org/pasture/-/pasture-0.1.0.tgz"},"maintainers":[{"name":"sonewman","email":"newmansam@outlook.com"}],"readmeFilename":"readme.md","time":{"modified":"2015-06-07T21:12:12.735Z","created":"2015-06-07T21:12:12.735Z","0.1.0":"2015-06-07T21:12:12.735Z"}}}