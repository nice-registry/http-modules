{"name":"shortquest","version":"0.1.0","description":"HTTP request client supporting shortcut urls","homepage":"https://github.com/flarebyte/shortquest","repository":"https://github.com/flarebyte/shortquest","license":"MIT","files":["index.js"],"keywords":["shortquest","curie","request","uri","url","http","SSL","AWS","OAuth","JSON","promise","asynchronous","pipe"],"dependencies":{"URIjs":"^1.15.0","bluebird":"^2.9.13","fs-extra":"^0.18.1","moment":"^2.10.2","joi":"^6.4.1","lodash":"^3.7.0","request":"^2.55.0","string":"^3.1.1"},"devDependencies":{"chai":"^2.3.0","grunt-bump":"^0.3.1","grunt-cli":"^0.1.13","grunt-contrib-jshint":"^0.10.0","grunt-contrib-nodeunit":"^0.4.1","grunt-contrib-watch":"^0.6.1","grunt-mocha-cli":"^1.11.0","jshint-stylish":"^1.0.0","load-grunt-tasks":"^1.0.0","nock":"^1.7.1","is-my-json-valid":"^2.10.1","time-grunt":"^1.0.0"},"scripts":{"test":"grunt"},"gitHead":"b8cc779d537fe50a86c0299978aebdb6092f30c7","versions":[{"number":"0.1.0","date":"2015-06-15T12:15:53.082Z"}],"readme":"#  [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][daviddm-url]][daviddm-image]\n\n> HTTP request client supporting shortcut urls\n\nThis library has the following purposes:\n - provide shortcuts for urls the same way a curie would (e.g wiki:picasso instead of http://mywiki.com/picasso).\n - provide contextualisation for urls (e.g env becomes stage in http://env.mywiki.com/picasso)\n - provide automatic headers based on rules.\n - provide automatic authentication based on rules.\n - provide automatic SSL certificates based on rules.\n - provide JSON support.\n - provide support for request.js.\n - provide support for (asynchronous) promises.\n - provide support for piping.\n\nThe main idea is help to store urls in a compact form.\nIt is very similar to the concept of curie.\n\nFor instance:\n```\n{\n\tname: \"Picasso\",\n\twebsites: [\"wikipedia:Picasso\",\"bbc:Picasso\",\"tate:Picasso\"]\n}\n```\nThe exact urls, as well as all information concerning headers and authorisation are provided by the rules engine.\n\n## Install\n\n```sh\n$ npm install --save shortquest\n```\n\n\n## Usage\n\nAll the possible rules are described in details in RULES.md.\nYou should also consult the request.js documentation as this library is used under the hood.\nIn addition, the unit tests (test.js) are also a good source of examples.\n\n### GET Request\n\n```js\nvar shortquest = require('shortquest');\n\nvar rulesConf = {\n    rules: [{\n        when: [{\n            trigger: \"uri starts with\",\n            value: \"wiki:\"\n        }],\n        then: [{\n            action: \"replace start\",\n            values: [\"wiki:\", \"http://mywiki.com/\"]\n        }]\n    }]\n};\nvar myshortquest = shortquest(rulesConf);\n\nmyshortquest.request(\"wiki:picasso\", function(error, response, body) {\n            console.log(body);\n            //will get the body for url: http://mywiki.com/picasso\n        });\n```\n\n### POST, PUT, DELETE Requests\n\nYou could perform any kind of requests by specifying the method with POST,PUT,DELETE,PATCH or HEAD.\nThe body could be some json or a string.\nNote that for a good JSON support you will need to add a \"set JSON\" rule.\n\nExample:\n```js\nmyshortquest.request({\n            uri: \"wiki:picasso\",\n            method: 'POST',\n            body: {title: \"good story\"}\n        }, function(error, response, body) {\n            //log success or error\n        });\n```\n\n### Passing parameters\n\nYou can pass request parameters with parameterObj:\n\n```js\nmyshortquest.request({\n            uri: \"wiki:picasso\",\n            parameterObj: {search: \"birth\"}\n        }, function(error, response, body) {\n            //log success or error\n        });\n```\n\n### Passing a form\n\nYou can pass a form with formObj:\n\n```js\nmyshortquest.request({\n            uri: \"wiki:picasso\",\n            method: \"POST\",\n            formObj: {firstName: \"Pablo\"}\n        }, function(error, response, body) {\n            //log success or error\n        });\n```\n\n### Passing tags\n\nYou can pass tags that can be used by the rule engine:\n\n```js\nmyshortquest.request({\n            uri: \"wiki:picasso\",\n            method: \"POST\",\n            tags: [\"sandbox\", \"XML\"]\n        }, function(error, response, body) {\n            //log success or error\n        });\n```\n\n### Pipe a request\n\nIt is possible to pipe requests:\n\nExample:\n```js\nmyshortquest.request(\"curie:latest/123.jpg\").pipe(requests.request({\n            uri: \"curie:update/post123.json\",\n            method: 'POST'\n        }));\n```\n\n### Async\n\nYou can also do asynchronous requests using promises (we are using bluebird internally);\n\nExample:\n```js\n    myshortquest.requestAsync(\"curie:latest/123.jpg\").then(function(data) {\n        var response = data[0];\n        var body = data[1];\n     });\n\n```\n\n## License\n\nMIT Â© [Olivier Huin]()\n\n## Contributors\n\n..and with the help of Aradhna ..\n\n[npm-url]: https://npmjs.org/package/shortquest\n[npm-image]: https://badge.fury.io/js/shortquest.svg\n[travis-url]: https://travis-ci.org/flarebyte/shortquest\n[travis-image]: https://travis-ci.org/flarebyte/shortquest.svg?branch=master\n[daviddm-url]: https://david-dm.org/flarebyte/shortquest.svg?theme=shields.io\n[daviddm-image]: https://david-dm.org/flarebyte/shortquest\n","created":"2015-06-15T12:15:53.082Z","modified":"2015-06-15T12:15:53.082Z","lastPublisher":{"name":"olih","email":"npm.olivier.huin@flarebyte.com"},"owners":[{"name":"olih","email":"npm.olivier.huin@flarebyte.com"}],"other":{"_attachments":{},"_from":".","_id":"shortquest","_nodeVersion":"0.12.2","_npmUser":{"name":"olih","email":"npm.olivier.huin@flarebyte.com"},"_npmVersion":"2.7.4","_rev":"1-b0946e2dd0bc7427be62119c30b19391","_shasum":"683800019a07b662b3fafccdc0b1d8d86d6b8db6","author":{"name":"Olivier Huin","email":"npm.olivier.huin@flarebyte.com"},"bugs":{"url":"https://github.com/flarebyte/shortquest/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"683800019a07b662b3fafccdc0b1d8d86d6b8db6","tarball":"http://registry.npmjs.org/shortquest/-/shortquest-0.1.0.tgz"},"maintainers":[{"name":"olih","email":"npm.olivier.huin@flarebyte.com"}],"readmeFilename":"README.md","time":{"modified":"2015-06-15T12:15:53.082Z","created":"2015-06-15T12:15:53.082Z","0.1.0":"2015-06-15T12:15:53.082Z"}}}