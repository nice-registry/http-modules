{"name":"abs-proxy","version":"0.7.4","repository":"https://github.com/unbxd/node-abs-proxy","description":"HTTP proxying with ability to override or define routes","main":"index.js","scripts":{"test":"make test"},"dependencies":{"http-proxy":"^1.12.0","httpdispatcher":"^0.4.0"},"devDependencies":{"chai":"^3.4.1","cheerio":"^0.19.0","mocha":"^2.3.4","request":"^2.67.0"},"gitHead":"e455e18dd9697ebeee2631c14b64549c1add3c1a","homepage":"https://github.com/unbxd/node-abs-proxy#readme","versions":[{"number":"0.7.2","date":"2016-01-18T15:47:51.109Z"},{"number":"0.7.3","date":"2016-01-18T16:44:09.108Z"},{"number":"0.7.4","date":"2016-02-09T14:24:43.042Z"}],"readme":"# abs-proxy\nHTTP proxying with ability to override existing routes or define new routes.\n\n[![Build Status](https://travis-ci.org/unbxd/node-abs-proxy.svg?branch=master)](https://travis-ci.org/unbxd/node-abs-proxy)\n\n### Usage\n##### Require & instantiate\n```javascript\nvar absProxy = require('abs-proxy');\n\nvar proxy = absProxy.createAbsProxy({host: 'httpbin.org', port: 80});\n```\n\n##### As a proxy\nLets create a reverse proxy to [httpbin](https://httpbin.org/):\n\n```javascript\nvar http = require('http');\nhttp.createServer(function(req, res) {\n  proxy.dispatch(req, res);\n}).listen(8080, 'localhost');\n```\n\nNote that default value for `port` is 80 and can be skipped from being included in the parameter hash for `Proxy`.\n\n##### Override an existing path\n###### GET\n```javascript\nproxy.onGet('/', function(req, res) {\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end('Hello, world!\\n');\n});\n\nvar http = require('http');\nhttp.createServer(function(req, res) {\n    proxy.dispatch(req, res);\n}).listen(8080, 'localhost');\n```\n\n###### POST\n```javascript\nproxy.onPost('/post', function(req, res) {\n    res.writeHead(201, {'Content-Type': 'text/plain'});\n    res.end('You just posted!\\n');\n});\n\nvar http = require('http');\nhttp.createServer(function(req, res) {\n    proxy.dispatch(req, res);\n}).listen(8080, 'localhost');\n```\n\n##### Implement a new path\n###### GET\n```javascript\nproxy.onGet('/non-existant-path', function(req, res) {\n    res.writeHead(200, {'Content-Type': 'text/plain'});\n    res.end('Hello, world!\\n');\n});\n\nvar http = require('http');\nhttp.createServer(function(req, res) {\n    proxy.dispatch(req, res);\n}).listen(8080, 'localhost');\n```\n\n###### POST\n```javascript\nproxy.onPost('/non-existant-path', function(req, res) {\n    res.writeHead(201, {'Content-Type': 'text/plain'});\n    res.end('You just posted!\\n');\n});\n\nvar http = require('http');\nhttp.createServer(function(req, res) {\n    proxy.dispatch(req, res);\n}).listen(8080, 'localhost');\n```\n","created":"2016-01-18T15:47:51.109Z","modified":"2016-02-09T14:24:43.042Z","lastPublisher":{"name":"basavanagowda","email":"basavanagowda@gmail.com"},"owners":[{"name":"basavanagowda","email":"basavanagowda@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"abs-proxy","_nodeVersion":"5.3.0","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/abs-proxy-0.7.4.tgz_1455027880426_0.8709887741133571"},"_npmUser":{"name":"basavanagowda","email":"basavanagowda@gmail.com"},"_npmVersion":"3.3.12","_rev":"1-9ae501a4c95854d2b99968f5d0ac6fcf","_shasum":"377c39087d989ade017ada675e268c44eb2b97ca","author":{"name":"Unbxd Inc.,","email":"dev@unbxd.com","url":"http://unbxd.github.com"},"bugs":{"url":"https://github.com/unbxd/node-abs-proxy/issues"},"directories":{},"dist-tags":{"latest":"0.7.4"},"dist":{"shasum":"377c39087d989ade017ada675e268c44eb2b97ca","tarball":"http://registry.npmjs.org/abs-proxy/-/abs-proxy-0.7.4.tgz"},"maintainers":[{"name":"basavanagowda","email":"basavanagowda@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-09T14:24:43.042Z","created":"2016-01-18T15:47:51.109Z","0.7.2":"2016-01-18T15:47:51.109Z","0.7.3":"2016-01-18T16:44:09.108Z","0.7.4":"2016-02-09T14:24:43.042Z"}}}