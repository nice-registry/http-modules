{"name":"vingle-corgi","version":"1.3.0","description":"Restful HTTP Framework for AWS Lambda - AWS API Gateway Proxy Integration","main":"./dst/index.js","typings":"./dst/index.d.ts","scripts":{"clean":"rm -Rf dst","prebuild":"npm run clean","build":"tsc -d","prepublish":"npm run build","pretest":"npm run build","ci:publish":"publish","test":"mocha dst/**/__test__/**/*.js"},"repository":"https://github.com/balmbees/corgi","license":"ISC","homepage":"https://github.com/balmbees/corgi#readme","dependencies":{"@types/joi":"10.4.0","@types/lodash":"4.14.65","@types/node":"7.0.27","@types/swagger-schema-official":"2.0.5","@types/underscore.string":"0.0.30","joi":"10.5.2","joi-to-swagger":"1.1.0","lodash":"4.17.4","path-to-regexp":"1.7.0","swagger-schema-official":"2.0.0-bab6bed","typescript":"2.3.4","underscore.string":"3.3.4"},"devDependencies":{"@types/chai":"4.0.0","@types/chai-as-promised":"0.0.31","@types/mocha":"2.2.41","chai":"4.0.1","chai-as-promised":"6.0.0","mocha":"3.4.2","publish":"0.6.0"},"gitHead":"7908c80f4d97058235cd8f8f514701343a0485ac","versions":[{"number":"1.0.0","date":"2017-06-02T08:48:56.339Z"},{"number":"1.0.1","date":"2017-06-02T08:54:12.168Z"},{"number":"1.0.2","date":"2017-06-02T08:55:57.741Z"},{"number":"1.0.3","date":"2017-06-02T08:58:16.738Z"},{"number":"1.0.4","date":"2017-06-02T09:01:07.046Z"},{"number":"1.0.5","date":"2017-06-02T09:03:13.551Z"},{"number":"1.0.6","date":"2017-06-02T09:09:22.854Z"},{"number":"1.0.7","date":"2017-06-02T11:32:10.391Z"},{"number":"1.0.8","date":"2017-06-02T11:46:25.934Z"},{"number":"1.0.9","date":"2017-06-02T11:53:55.517Z"},{"number":"1.0.10","date":"2017-06-02T11:55:24.980Z"},{"number":"1.0.11","date":"2017-06-02T13:15:21.846Z"},{"number":"1.0.12","date":"2017-06-05T05:48:59.556Z"},{"number":"1.0.13","date":"2017-06-05T05:50:36.177Z"},{"number":"1.1.0","date":"2017-06-05T11:32:23.931Z"},{"number":"1.2.0","date":"2017-06-05T13:47:53.726Z"},{"number":"1.2.1","date":"2017-06-06T03:08:38.405Z"},{"number":"1.2.2","date":"2017-06-06T03:43:08.881Z"},{"number":"1.2.3","date":"2017-06-07T01:33:11.567Z"},{"number":"1.2.4","date":"2017-06-07T03:08:09.566Z"},{"number":"1.2.5","date":"2017-06-07T09:36:46.073Z"},{"number":"1.2.6","date":"2017-06-08T02:21:57.682Z"},{"number":"1.2.7","date":"2017-06-08T14:57:14.684Z"},{"number":"1.2.8","date":"2017-06-09T02:40:24.778Z"},{"number":"1.2.9","date":"2017-06-09T03:05:20.843Z"},{"number":"1.2.10","date":"2017-06-12T07:02:31.159Z"},{"number":"1.2.11","date":"2017-06-13T01:55:02.174Z"},{"number":"1.3.0","date":"2017-06-20T11:49:14.311Z"}],"readme":"[![Travis Build Status](https://travis-ci.org/balmbees/corgi.svg?branch=master)](https://travis-ci.org/balmbees/corgi)\n[![npm version](https://badge.fury.io/js/vingle-corgi.svg)](https://badge.fury.io/js/vingle-corgi)\n\n# Corgi\nRestful HTTP Framework for AWS Lambda - AWS API Gateway Proxy Integration\n\n<img width=\"500px\" height=\"auto\" src=\"https://scontent-hkg3-1.cdninstagram.com/t51.2885-15/e35/13735891_1160668067329731_1019397372_n.jpg\" />\n\n## Features\n1. Cascade Routing\n2. Route parameter\n    such as \"users/:userId/followings\"\n3. Parameter Validation\n    it uses [Joi](https://github.com/hapijs/joi)\n4. Exception Handling\n    refer [example](src/__test__/e2e/complex_api.ts)\n5. Swagger Document Generation\n    [Swagger](http://swagger.io/) is API Documentation spec. Corgi support automatic swagger document generation.\n    refer [example](src/__test__/swagger_spec.ts)\n\nWhole thing supports async/await for sure, written in typescript also\n\n## TODO\n1. HTTP Body Parser\n    1. Base64Encoding support (HTTP Body Parser)\n2. View Framework\n    should support Swagger Response schema\n3. HTTP Header Parser (getter)\n    should support HTTP Header Set / Get, ignoring cases\n\n## Why do i need a extra Framework for Lambda?\n\nSo simple lambda handler looks like this\n\n```js\nexports.myHandler = function(event, context, callback) {\n   console.log(\"value1 = \" + event.key1);\n   console.log(\"value2 = \" + event.key2);\n   callback(null, \"some success message\");\n}\n```\n\nlet's say you connected API Gateway, (using serverless maybe),\nas Lambda Proxy. and wanna build some Restful API with that.\n\n```js\nexports.myHandler = function(event, context, callback) {\n  if (\n    event.path === '/api/someapi'\n    && event.method == 'GET'\n  ) {\n    callback(\n      null, {\n        statusCode: 200,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          data: {\n            response: \"XXX\"\n          }\n        })\n      }\n    )\n  } else {\n    callback(\n      null, {\n        statusCode: 404,\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          error: 'Not Found',\n        })\n      }\n    )\n  }\n}\n```\n\nOk, fairly good, since it's on lambda and api gateway so everything is managed and scaled....etc.\nbut surely, it will be really messy soon.\n\nthere are several frameworks that built for this,\n(even the one that running express itself on lambda even though it's completely unnecessary to run HTTP Server on lambda, which is what exactly AWS APIGateway is for)\n[lambda-req](https://www.npmjs.com/package/lambda-req)\n[aws-serverless-express](https://github.com/awslabs/aws-serverless-express)\n[serverless-express](https://claudiajs.com/tutorials/serverless-express.html)\n\nwe did considered about using any kind of those express wrapping seriously,\nbut we just felt like it would be nicer to just write one for Lambda.\n\ninspired by [Grape](https://github.com/ruby-grape/grape) a lot,since we really liked it\n\n## Corgi Example\n\n```typescript\nexport const routes: Routes = [\n  new Namespace('/api/:userId', {\n    params: {\n      userId: Joi.number(),\n    },\n    before: async function() {\n      this.params.user = await User.findByUserId(this.params.userId)\n    },\n    exceptionHandler: async function(error) {\n      if (error.name == 'ValidationError') {\n        const validationError = error as Joi.ValidationError;\n        return this.json(\n          {\n            errors: validationError.details.map(e => e.message),\n          },\n          422\n        );\n      }\n    },\n    children: [\n      Route.GET('/followers', {}, 'List of users that following me', async function() {\n        return this.json({\n          data: {}\n        })\n      }),\n      new Namespace('/followings', {\n        children: [\n          Route.POST('/', '', {}, async function() {\n            return this.json({ userId: this.params.user.id });\n          }),\n          Route.DELETE('/', '', {}, async function() {\n            const userId = Number(this.params.userId);\n            return this.json({ userId: this.params.user.id });\n          }),\n        ]\n      })\n    ]\n  })\n];\n\nconst router = new Router(routes);\nexports.myHandler = router.handler();\n```\n\nOr refer src/__test__/e2e/complex_api.ts\n\n\n","created":"2017-06-02T08:48:56.339Z","modified":"2017-06-20T11:49:14.311Z","lastPublisher":{"name":"kurtlee","email":"breath103@gmail.com"},"owners":[{"name":"kurtlee","email":"breath103@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"vingle-corgi","_nodeVersion":"6.11.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/vingle-corgi-1.3.0.tgz_1497959353328_0.28959274641238153"},"_npmUser":{"name":"kurtlee","email":"breath103@gmail.com"},"_npmVersion":"3.10.10","_rev":"29-de55025bbe0687f2a2ad3fba8baafe00","_shasum":"c43e9d3a8f4c0278fa18897adb8373a618ac6644","author":{"name":"Kurt Lee"},"bugs":{"url":"https://github.com/balmbees/corgi/issues"},"directories":{},"dist-tags":{"latest":"1.3.0"},"dist":{"shasum":"c43e9d3a8f4c0278fa18897adb8373a618ac6644","tarball":"https://registry.npmjs.org/vingle-corgi/-/vingle-corgi-1.3.0.tgz"},"maintainers":[{"name":"kurtlee","email":"breath103@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-20T11:49:14.311Z","created":"2017-06-02T08:48:56.339Z","1.0.0":"2017-06-02T08:48:56.339Z","1.0.1":"2017-06-02T08:54:12.168Z","1.0.2":"2017-06-02T08:55:57.741Z","1.0.3":"2017-06-02T08:58:16.738Z","1.0.4":"2017-06-02T09:01:07.046Z","1.0.5":"2017-06-02T09:03:13.551Z","1.0.6":"2017-06-02T09:09:22.854Z","1.0.7":"2017-06-02T11:32:10.391Z","1.0.8":"2017-06-02T11:46:25.934Z","1.0.9":"2017-06-02T11:53:55.517Z","1.0.10":"2017-06-02T11:55:24.980Z","1.0.11":"2017-06-02T13:15:21.846Z","1.0.12":"2017-06-05T05:48:59.556Z","1.0.13":"2017-06-05T05:50:36.177Z","1.1.0":"2017-06-05T11:32:23.931Z","1.2.0":"2017-06-05T13:47:53.726Z","1.2.1":"2017-06-06T03:08:38.405Z","1.2.2":"2017-06-06T03:43:08.881Z","1.2.3":"2017-06-07T01:33:11.567Z","1.2.4":"2017-06-07T03:08:09.566Z","1.2.5":"2017-06-07T09:36:46.073Z","1.2.6":"2017-06-08T02:21:57.682Z","1.2.7":"2017-06-08T14:57:14.684Z","1.2.8":"2017-06-09T02:40:24.778Z","1.2.9":"2017-06-09T03:05:20.843Z","1.2.10":"2017-06-12T07:02:31.159Z","1.2.11":"2017-06-13T01:55:02.174Z","1.3.0":"2017-06-20T11:49:14.311Z"}}}