{"name":"resilient-server","version":"0.1.1","description":"Dummy HTTP server for register discovery services according to the Resilient discovery protocol","license":"MIT","preferGlobal":true,"engineStrict":true,"repository":"https://github.com/h2non/resilient-server","main":"./lib","bin":{"resilient-server":"./bin/resilient-server"},"engines":{"node":">= 0.10.0"},"scripts":{"start":"./bin/resilient-server","test":"mocha"},"keywords":["resilient","reactive","server","discovery","balancer","balance","register","servers","dummy","discovering","dynamic","app","uri"],"dependencies":{"lodash":"^2.4.1","restify":"^2.8.1","semver":"^4.1.0","yargs":"^1.2.6"},"devDependencies":{"chai":"^1.9.1","grunt":"^0.4.5","grunt-contrib-clean":"^0.6.0","grunt-mocha-cli":"^1.10.0","grunt-nar":"^0.4.0","grunt-shell-spawn":"^0.3.0","load-grunt-tasks":"^0.6.0","mocha":"^1.20.1","superagent":"^0.18.2"},"gitHead":"8edb078a33b1a2b4c8d348ba75997dab9d70b705","homepage":"https://github.com/h2non/resilient-server","versions":[{"number":"0.1.0","date":"2014-10-25T11:58:08.413Z"},{"number":"0.1.1","date":"2014-11-04T23:49:31.527Z"}],"readme":"# resilient-server [![Build Status](https://api.travis-ci.org/h2non/resilient-server.svg?branch=master)][travis] [![Dependency Status](https://gemnasium.com/h2non/resilient-server.svg)][gemnasium] [![NPM version](https://badge.fury.io/js/resilient-server.svg)][npm]\n\nDummy HTTP server fully compatible with the [Resilient](http://resilient-http.github.io) [specification](https://github.com/resilient-http/spec) discovery protocol.\n\nThe stored servers are persisted as volatile data (in-memory). After a server restart is required data re-registering\n\nIt was designed to be used for testing, demo and development proposals with resilient based applications\n\nAdditionally it implements full CORS support for direct browser consumption\n\n## Installation\n\nYou must have [node.js](http://nodejs.org) already installed\n\nInstall the package\n```bash\n$ npm install -g resilient-server\n```\n\nStart the server\n```bash\n$ resilient-server -p 8080 -h 0.0.0.0 --api-key awesome\n```\n\nShow the help\n```bash\n$ resilient-server --help\n```\n\n## HTTP API\n\n#### GET /:appName\n\nGet a list of servers for the given application service, optionally specifiying the app semantic version\n\n##### Request\n\n```\ncurl -i http://localhost:8080/my-app-api?version=1.0.0\n```\n\n##### Response\n\nValid response\n```json\nHTTP/1.1 200 OK\nContent-Type: application/json\nServer: resilient-server 0.1.0\n\n[\n  \"http://api1.server.me\",\n  \"http://api2.server.me\",\n  \"http://api3.server.me\"\n]\n```\n\nMissing app name\n```\nHTTP/1.1 404 Not Found\n```\n\n#### GET /all\n\nGet the complete list of registered apps and servers URIs\n\n##### Request\n\n```\ncurl -i http://localhost:8080/all\n```\n\n##### Response\n\nValid response\n```json\nHTTP/1.1 200 OK\nContent-Type: application/json\nServer: resilient-server 0.1.0\n\n[\n  {\n    \"name\": \"app\",\n    \"updated\": 1415144314038,\n    \"servers\": [\n      \"http://api2.server.me\",\n      \"http://api2.server.me\",\n      \"http://api3.server.me\"\n    ]\n  }\n]\n```\n\nMissing app name\n```\nHTTP/1.1 404 Not Found\n```\n\n#### POST|PUT /:appName\n\nUpdate the servers for the given application service, optionally specifiying the app semantic version\n\n**Note**: this service could require an API key token, if it's was defined via `--api-token` flag\n\n##### Request\n\n```\ncurl -i -H \"Accept: application/json\" \\\n  -H \"API-Token: awesome\" \\\n  -H \"Version: 1.0.0\" \\\n  -X POST -d '[\"http://newapi.server.com\"]' \\\n  http://localhost:8080/my-app-api\n```\n\n##### Response\n\nValid response\n```\nHTTP/1.1 204 No Content\n```\n\nInvalid response\n```\nHTTP/1.1 400 Bad Request\n```\n\n#### DELETE /:appName\n\nRemoves the servers of a given app from the registry, optionally specifiying the app semantic version\n\n##### Request\n\n```\ncurl -i -H \"Accept: application/json\" \\\n  -H \"API-Token: awesome\" \\\n  -H \"Version: 1.0.0\" \\\n  -X DELETE  \\\n  http://localhost:8080/my-app-api\n```\n\n##### Response\n\nValid response\n```\nHTTP/1.1 204 No Content\n```\n\nInvalid response\n```\nHTTP/1.1 404 Not Found\n```\n\n## Development\n\nYou must have installed [node.js](http://nodejs.org) >= `0.10`\n\nClone this repository\n\n```bash\ngit clone https://github.com/h2non/resilient-server.git && cd resilient-server\n```\n\nInstall runtime and developmennt dependencies\n\n```bash\nnpm install\n```\n\nRun tests\n\n```bash\ngrunt test\n```\n\nRun the server\n\n```\n./bin/resilient-server --port 8080 --debug\n```\n\nShow help\n\n```\n./bin/resilient-server --help\n```\n\nRun as a service (using [forever](https://github.com/nodejitsu/forever))\n\n```bash\nforever -m 5 ./bin/resilient-server\n```\n\n## License\n\nMIT - Tomas Aparicio\n\n[travis]: http://travis-ci.org/h2non/resilient-server\n[gemnasium]: https://gemnasium.com/h2non/resilient-server\n[npm]: http://npmjs.org/package/resilient-server\n","created":"2014-10-25T11:58:08.413Z","modified":"2014-11-04T23:49:31.527Z","lastPublisher":{"name":"h2non","email":"tomas@aparicio.me"},"owners":[{"name":"h2non","email":"tomas@aparicio.me"}],"other":{"_attachments":{},"_from":".","_id":"resilient-server","_nodeVersion":"0.10.33","_npmUser":{"name":"h2non","email":"tomas@aparicio.me"},"_npmVersion":"2.1.5","_rev":"1-47a08d97c25adbdbc6589ebc0b45571d","_shasum":"3d6274fbe68162e166d5249424d19721f98121c8","bugs":{"url":"https://github.com/h2non/resilient-server/issues"},"directories":{"lib":"./lib"},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"3d6274fbe68162e166d5249424d19721f98121c8","tarball":"http://registry.npmjs.org/resilient-server/-/resilient-server-0.1.1.tgz"},"maintainers":[{"name":"h2non","email":"tomas@aparicio.me"}],"readmeFilename":"README.md","time":{"modified":"2014-11-04T23:49:31.527Z","created":"2014-10-25T11:58:08.413Z","0.1.0":"2014-10-25T11:58:08.413Z","0.1.1":"2014-11-04T23:49:31.527Z"}}}