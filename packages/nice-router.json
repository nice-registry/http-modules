{"name":"nice-router","version":"1.1.1","description":"A nice, simple http router.","main":"router.js","scripts":{"test":"mocha"},"repository":"https://github.com/tdb-alcorn/nice-router","keywords":["router","http"],"license":"MIT","homepage":"https://github.com/tdb-alcorn/nice-router#readme","dependencies":{"deepor":"^1.0.0","nice-logger":"^1.0.0"},"devDependencies":{"mocha":"^3.2.0","nice-open":"^1.0.0"},"gitHead":"ddf64fecfdac21c44c17cd1985786eb061d07730","versions":[{"number":"1.0.0","date":"2016-12-07T23:36:26.894Z"},{"number":"1.1.0","date":"2017-01-09T20:37:12.831Z"},{"number":"1.1.1","date":"2017-01-20T00:11:52.630Z"}],"readme":"# nice-router\n\nA nice, simpler router for handling those pesky HTTP(S) requests.\n\n## Example\n\n```javascript\nvar Router = require(\"nice-router\");\nvar router = new Router();\nrouter.addRoute(\"/ping\", \"GET\", function(req, res) {\n    res.writeHead(200);\n    res.end(\"pong\");\n});\nrouter.addStatic(\"/smiley.jpg\", \"image/jpeg\");\nrouter.listen(8080);\n```\n\n### Basic HTTPS example\n\nTo use this example you will need to generate self-signed certificates `server.key` and\n`server.crt`. If you are unsure about how to do that, see this [Stack\nOverflow](http://stackoverflow.com/questions/10175812/how-to-create-a-self-signed-certificate-with-openssl).\n\n```javascript\nvar fs = require(\"fs\");\nvar Router = require(\"nice-router\");\nvar router = new Router();\nrouter.useHTTPS({\n    key: fs.readFileSync(\"key.pem\"),\n    cert: fs.readFileSync(\"cert.pem\"),\n};\nrouter.addRoute(\"/amIEncrypted\", \"GET\", function(req, res) {\n    res.writeHead(200);\n    res.end(\"yes!\");\n});\nrouter.listen(8080);\n```\n\n## Methods\n\n- `#addRoute(path, method, handler)`: Adds a route to the router which will respond to `method`\n  requests to `path` by doing `handler`. The signature of handlers is `handler(request, response,\n  headers, query, body)`. The `request` and `response` objects are the same as those from the node\n  `http`/`https` modules. `headers` and `query` are basic key/value objects. `body` is a Buffer, so\n  call `body.toString(\"utf-8\")` if you just want a string.\n- `#listen(port) -> Promise`: Start the server on the specified port, which must be open.\n- `#close -> Promise`: Stop the server.\n- `#useHTTPS(options[, callback])`: Switches the server to using HTTPS, restarting if the server was already running. `options` is the same as the options parameter in node's `https.createServer`. Accepts an optional `callback` which will be called if the server is restarted.\n- `#addStatic(path, contentType)`: Adds a handler which responds to `GET` requests at `path` with\n  the contents of the file at `path`.\n","created":"2016-12-07T23:36:26.894Z","modified":"2017-01-20T00:11:52.630Z","lastPublisher":{"name":"alcorn","email":"tdb.alcorn@gmail.com"},"owners":[{"name":"alcorn","email":"tdb.alcorn@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"nice-router","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/nice-router-1.1.1.tgz_1484871110486_0.875422436511144"},"_npmUser":{"name":"alcorn","email":"tdb.alcorn@gmail.com"},"_npmVersion":"3.10.8","_rev":"3-9b2aa5fe7a77c68764029f29395a5ed0","_shasum":"1f238958dc3ec8253f44afc590afc4d3c4c1b1c4","author":{"name":"Tom Alcorn","email":"tdb.alcorn@gmail.com"},"bugs":{"url":"https://github.com/tdb-alcorn/nice-router/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.1.1"},"dist":{"shasum":"1f238958dc3ec8253f44afc590afc4d3c4c1b1c4","tarball":"https://registry.npmjs.org/nice-router/-/nice-router-1.1.1.tgz"},"maintainers":[{"name":"alcorn","email":"tdb.alcorn@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-20T00:11:52.630Z","created":"2016-12-07T23:36:26.894Z","1.0.0":"2016-12-07T23:36:26.894Z","1.1.0":"2017-01-09T20:37:12.831Z","1.1.1":"2017-01-20T00:11:52.630Z"}}}