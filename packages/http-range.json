{"name":"http-range","version":"1.0.0","description":"Node.js parser for Content-Range and Range HTTP/1.1 header fields.","main":"./lib/index.js","scripts":{"test":"mocha --reporter spec --slow 5 --check-leaks"},"repository":"https://github.com/clns/node-http-range","keywords":["content-range","range","http","header","parser","http/1.1"],"license":"ISC","homepage":"https://github.com/clns/node-http-range","devDependencies":{"mocha":"^2.1.0"},"gitHead":"304268b87c89fca11c51b3a4e32ccde88d45f181","versions":[{"number":"1.0.0","date":"2015-02-28T02:00:04.952Z"}],"readme":"# http-range\nNode.js parser for [Content-Range](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.16)\nand [Range](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35) HTTP header fields\naccording to the HTTP/1.1 specifications.\n\n[![Build Status](https://travis-ci.org/clns/node-http-range.svg?branch=master)](https://travis-ci.org/clns/node-http-range)\n\n## Installation\n\n```sh\n$ npm install http-range\n```\n\n## Usage\n\n```js\nvar ContentRange = require('http-range').ContentRange;\nvar Range = require('http-range').Range;\n\n// Parsing and creating 'Content-Range' header\nContentRange.prototype.parse('bytes 0-49/50');  // Content-Range: bytes 0-49/50\nnew ContentRange('bytes', '0-49', 50).toString(); // => bytes 0-49/50\n\n// Parsing and creating 'Range' header\nRange.prototype.parse('bytes=0-49');  // Range: bytes=0-49\nnew Range('bytes', '0-49'); // => bytes=0-49\n```\n\nFor more usages check the [test files](test).\n\n## API\n\n### `ContentRange` Class\n\n###### new ContentRange(unit, range, length)\n\n- `unit` {String} Usually 'bytes', but can be any token\n- `range` {[RangeSpec](#rangespec-class)|String} A [RangeSpec](#rangespec-class) instance, a string like '0-49' or '\\*' if unknown\n- `length` {Number|'\\*'} The total length of the full entity-body or '\\*' if this length is unknown or difficult to determine\n\nThrows error if arguments are invalid.\n\n###### Properties\n\n- `unit` {String}\n- `range` {[RangeSpec](#rangespec-class)}\n- `length` {Number|null} Null if unknown\n\n###### Methods\n\n- `toString()` Return a valid string value\n- `parse(input)` Parse an input string. Throws error if invalid\n\n#### Allowed Content-Range(s)\n\n- `Content-Range: bytes 0-49/50`\n- `Content-Range: bytes 0-49/*`\n- `Content-Range: bytes */50`\n- `Content-Range: bytes */*`\n\n### `Range` Class\n\n###### new Range(unit, ranges)\n\n- `unit` {String} Usually 'bytes', but can be any token\n- `ranges` {[RangeSpec](#rangespec-class)[]|String} An array of [RangeSpec](#rangespec-class) instances or a string like '0-49[,50-99][...]'\n\nThrows error if arguments are invalid.\n\n###### Properties\n\n- `unit` {String}\n- `ranges` {[RangeSpec](#rangespec-class)[]}\n\n###### Methods\n\n- `toString()` Return a valid string value\n- `parse(input)` Parse an input string. Throws error if invalid\n\n#### Allowed Range(s)\n\n- `Range: bytes=0-49`\n- `Range: bytes=0-49,50-99,-30`\n- `Range: bytes=1-`\n- `Range: bytes=-50`\n\n### `RangeSpec` Class\n\n###### new RangeSpec(low, high, size)\n\n- `low` {Number|undefined}\n- `high` {Number|undefined}\n- `size` {Number|undefined} For validation only, optional\n\nThrows error if arguments are invalid.\n\n###### Properties\n\n- `low` {Number|undefined}\n- `high` {Number|undefined}\n\n###### Methods\n\n- `toString()` Return a valid string value\n- `parse(input)` Parse an input string. Throws error if invalid\n\n#### Examples of valid ranges\n\n- `*`\n- `0-49`\n- `-49`\n- `34-`\n\n## Tests\n\n```sh\n$ make test\n```\n","starsCount":1,"created":"2015-02-28T02:00:04.952Z","modified":"2015-02-28T02:00:04.952Z","lastPublisher":{"name":"calin","email":"calin@softped.com"},"owners":[{"name":"calin","email":"calin@softped.com"}],"other":{"_attachments":{},"_from":".","_id":"http-range","_nodeVersion":"0.12.0","_npmUser":{"name":"calin","email":"calin@softped.com"},"_npmVersion":"2.6.0","_rev":"1-33a226c992bfeb30bbd7209729b919ae","_shasum":"d0446406f9ddefe9255ce6131824ba30631f2ffd","author":{"name":"Calin Seciu"},"bugs":{"url":"https://github.com/clns/node-http-range/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"d0446406f9ddefe9255ce6131824ba30631f2ffd","tarball":"http://registry.npmjs.org/http-range/-/http-range-1.0.0.tgz"},"maintainers":[{"name":"calin","email":"calin@softped.com"}],"readmeFilename":"README.md","time":{"modified":"2015-02-28T02:00:04.952Z","created":"2015-02-28T02:00:04.952Z","1.0.0":"2015-02-28T02:00:04.952Z"},"users":{"glebec":true}}}