{"name":"okhttp","version":"1.1.0","description":"http client for node, inspired by Square's Android OkHttp","keywords":["http","okhttp","babel","node","multipart","form","formencoding","get","hendrixstring"],"main":"lib/index.js","scripts":{"test":"node test/test.js","build":"babel src --out-dir lib","prepublish":"npm run clean && npm run build","clean":"rm -r lib/*"},"engines":{"node":"*"},"email":"tomer.shalev@gmail.com","license":"Apache-2.0","repository":"https://github.com/HendrixString/node-okhttp","devDependencies":{"babel-cli":"^6.3.17","babel-plugin-transform-object-assign":"^6.3.13","babel-preset-es2015":"^6.1.18"},"homepage":"https://github.com/HendrixString/node-okhttp","gitHead":"ca128a4ccd938943eab5ef2152210f38d999fd8f","versions":[{"number":"1.0.0","date":"2015-12-18T16:39:00.941Z"},{"number":"1.0.2","date":"2015-12-18T17:05:38.174Z"},{"number":"1.0.3","date":"2015-12-18T17:58:36.170Z"},{"number":"1.0.4","date":"2015-12-20T18:12:48.083Z"},{"number":"1.0.5","date":"2015-12-21T23:38:08.350Z"},{"number":"1.1.0","date":"2016-10-25T22:15:55.350Z"}],"readme":"# node-OkHttP\na lightweight `HTTP` library for `Node.js` inspired by `Square's Android OkHttp` Builder patterns and flavours\nfor constructing a legit `HTTP` requests of all types.\nWritten entirely in EcmaScript 6 (Harmony) and transpiled with `Babel`.\n\n[![NPM](https://nodei.co/npm/okhttp.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/okhttp/)\n\n## How to use\n- `npm install okhttp`\n- `npm install --production okhttp` (if you have the following modules installed globally `babel-cli, babel-plugin-transform-object-assign,babel-preset-es2015`,\nthen use)\n\n\n## Features\n- supports all `HTTP` methods.\n- supports MultiPart requests.\n- includes Builders for:\n  - `Request` builder.\n  - `Form Encoding` body builder.\n  - `Multipart` body builder.\n  - `Mime` builder.\n  - `Request Body` composer.\n- use `Promise` api for intuitive async.\n- most important: quick and easy to use.\n\n## Guide\n```javascript\nconst okhttp                = require('okhttp');\n\nvar MimeBuilder             = okhttp.MimeBuilder;\nvar Request                 = okhttp.Request;\nvar RequestBody             = okhttp.RequestBody;\nvar RequestBuilder          = okhttp.RequestBuilder;\nvar FormEncodingBuilder     = okhttp.FormEncodingBuilder;\nvar MultiPartBuilder        = okhttp.MultiPartBuilder;\n\n/**\n * @param msg a {data, response, request} Object\n */\nprivate function onComplete(msg):void {\n    console.log('data ' + msg.data + ', response ' + msg.response.statusCode + ', request ' + msg.request.method);\n}\n\nprivate function onError(err):void {\n    console.error(err);\n}\n\n```\n\n\n#### 1) Simple textual `GET` request\n\n```javascript\nnew RequestBuilder().GET('http://google.com').buildAndExecute().then(onComplete).catch(onError);\n\n```\n\n#### 2) Simple binary `GET` request\n- data returns as a buffer\n\n```javascript\nnew RequestBuilder().GET('http://maps.google.com/mapfiles/kml/pushpin/blue-pushpin.png').bufferResponse().buildAndExecute().then(onComplete).catch(onError);\n\n```\n\n#### 2) Simple `JSON POST` request\n\n```javascript\nnew RequestBuilder().url('http://httpbin.org/post')\n                    .POST(RequestBody.create({a:'a1', b:'b1'}, new MimeBuilder().contentType('application/json', 'charset', 'utf8').build()))\n                    .buildAndExecute().then(onComplete).catch(onError);\n\n```\n\n#### 3) `Form Encoding POST (www-form-urlencoded)` request\n\n```javascript\nlet fe_body = new FormEncodingBuilder().add('key1', 'value1').add('key2', 'value2').build();\n\nnew RequestBuilder().url('http://httpbin.org/post').POST(fe_body).buildAndExecute()\n                    .then(onComplete).catch(onError);\n\n```\n\n#### 4) `MultiPart` request: \n- send a multipart file upload request to Google Drive API\n- to obtain token, use [https://developers.google.com/oauthplayground/](https://developers.google.com/oauthplayground/)\n```javascript\nlet json    = JSON.stringify({title:'test'});\nvar image   = fs.readFileSync(path.resolve(__dirname, 'test.jpg'));\n\nlet mp_body = new MultiPartBuilder().addPart(RequestBody.create(json, 'Content-Type: application/json; charset=UTF-8'))\n                                    .addPart(RequestBody.create(image, new MimeBuilder().contentType('image/jpeg').contentTransferEncoding('binary').build()))\n                                    .type(MultiPartBuilder.FORMDATA).build();\n\nnew RequestBuilder().url('https://www.googleapis.com/upload/drive/v2/files?uploadType=multipart')\n                    .header('Authorization', 'Bearer OAUTH2_TOKEN_HERE')\n                    .POST(mp_body).buildAndExecute().then(onComplete).catch(onError);\n\n```\n\n#### 5) `POST` image request\n- send an image into `Google Glass Mirror API`\n\n```javascript\npublic function uploadImage(image, itemId, oauthToken):void {\n\n      var body = RequestBody.create(image, 'Content-Type: image/png');\n      \n      new RequestBuilder().url(\"https://www.googleapis.com/upload/mirror/v1/timeline\" + \"/\" + itemId + \"/attachments\")\n                          .query(\"access_token\", oauthToken)\n                          .POST(body).build().execute()\n                          .then(onComplete).catch(onError);\n}\n\n```\n\n### Dev Dependencies\n* [`babel-cli`](https://github.com/babel/babel/tree/master/packages/babel-cli)\n* [`babel-preset-es2015`](https://github.com/babel/babel/tree/master/packages/babel-preset-es2015)\n* [`babel-plugin-transform-object-assign`](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-assign)\n\n### Terms\n* completely free source code. [Apache License, Version 2.0.](http://www.apache.org/licenses/LICENSE-2.0)\n* if you like it -> star or share it with others\n\n### Contact Author\n* [tomer.shalev@gmail.com](tomer.shalev@gmail.com)\n* [Google+ TomershalevMan](https://plus.google.com/+TomershalevMan/about)\n* [Facebook - HendrixString](https://www.facebook.com/HendrixString)\n","created":"2015-12-18T16:39:00.941Z","modified":"2016-10-25T22:15:55.350Z","lastPublisher":{"name":"hendrixstring","email":"tomer.shalev@gmail.com"},"owners":[{"name":"hendrixstring","email":"tomer.shalev@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"okhttp","_nodeVersion":"6.2.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/okhttp-1.1.0.tgz_1477433753328_0.10170344333164394"},"_npmUser":{"name":"hendrixstring","email":"tomer.shalev@gmail.com"},"_npmVersion":"3.8.9","_rev":"2-d2ed3d5f254bbd09b6fd762a8cf40e35","_shasum":"cdf382157feb69c12ff3a63fdee37672ca0f2143","author":{"name":"Tomer Shalev"},"bugs":{"url":"https://github.com/HendrixString/node-okhttp/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"cdf382157feb69c12ff3a63fdee37672ca0f2143","tarball":"http://registry.npmjs.org/okhttp/-/okhttp-1.1.0.tgz"},"maintainers":[{"name":"hendrixstring","email":"tomer.shalev@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-25T22:15:55.350Z","created":"2015-12-18T16:39:00.941Z","1.0.0":"2015-12-18T16:39:00.941Z","1.0.2":"2015-12-18T17:05:38.174Z","1.0.3":"2015-12-18T17:58:36.170Z","1.0.4":"2015-12-20T18:12:48.083Z","1.0.5":"2015-12-21T23:38:08.350Z","1.1.0":"2016-10-25T22:15:55.350Z"}}}