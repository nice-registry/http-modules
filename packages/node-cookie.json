{"name":"node-cookie","version":"2.0.0","description":"sign, encrypt and parse http cookies","main":"index.js","scripts":{"lint":"standard","pretest":"npm run lint","posttest":"npm run coverage","test:local":"FORCE_COLOR=true node bin/index.js --local","test":"nyc npm run test:local","test:win":"set FORCE_COLOR=true && node bin/index.js --win","coverage":"nyc report --reporter=text-lcov | coveralls"},"keywords":["cookies","cookie-parser","signed-cookies"],"license":"MIT","dependencies":{"cookie":"^0.3.1","cookie-signature":"^1.0.6","simple-encryptor":"^1.1.0"},"devDependencies":{"coveralls":"^2.13.1","cz-conventional-changelog":"^2.0.0","japa":"^1.0.3","japa-cli":"^1.0.1","lodash":"^4.17.4","nyc":"^11.0.2","standard":"^10.0.2","supertest":"^3.0.0"},"repository":"https://github.com/poppinss/node-cookie","homepage":"https://github.com/poppinss/node-cookie#readme","config":{"commitizen":{"path":"./node_modules/cz-conventional-changelog"}},"nyc":{"include":["src"]},"gitHead":"40e925b8f23e3c5e8614055db0c62765bbe23ae5","versions":[{"number":"1.0.0","date":"2015-12-29T16:01:43.229Z"},{"number":"1.0.1","date":"2016-04-08T19:26:54.998Z"},{"number":"1.0.2","date":"2016-04-09T09:53:39.239Z"},{"number":"1.0.3","date":"2016-05-10T17:40:30.323Z"},{"number":"1.0.4","date":"2017-04-25T08:43:41.416Z"},{"number":"2.0.0","date":"2017-06-12T09:53:03.100Z"}],"readme":"\n# Node Cookie\n\n> Easily parse and write signed & encrypted cookies on Node.js HTTP requests.\n\n[![NPM Version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Appveyor][appveyor-image]][appveyor-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n\n<a href=\"http://i1117.photobucket.com/albums/k594/thetutlage/poppins-1_zpsg867sqyl.png\">\n<img src=\"http://i1117.photobucket.com/albums/k594/thetutlage/poppins-1_zpsg867sqyl.png\" width=\"300px\" align=\"right\" vspace=\"20px\" />\n</a>\n\n`node-cookie` makes it simpler to create **encrypted** and **signed** cookies for HTTP requests.\n\nYou can use it with any framework or library of your choice.\n\n## See also\n\n1. [node-req](https://npmjs.org/package/node-req)\n2. [node-res](https://npmjs.org/package/node-res)\n\n## Basic Setup\n\n```javascript\nconst http = require('http')\nconst nodeCookie = require('node-cookie')\n\nhttp.createServer(function (req, res) {\n\n  // this will update set-cookie header on res object.\n  nodeCookie.create(res, 'user', 'virk')\n\n}).listen(3000)\n```\n\n## Signing cookies with a secret\n\n```javascript\nconst http = require('http')\nconst nodeCookie = require('node-cookie')\n\nhttp.createServer(function (req, res) {\n\n  nodeCookie.create(res, 'user', 'virk', '16charlongsecret')\n\n}).listen(3000)\n```\n\n## Signing & encrypting cookies with a secret\n\n```javascript\nconst http = require('http')\nconst nodeCookie = require('node-cookie')\n\nhttp.createServer(function (req, res) {\n\n  nodeCookie.create(res, 'user', 'virk', '16charlongsecret', true)\n\n}).listen(3000)\n```\n\n## Methods\n\n### parse\nParses cookies from HTTP header `Cookie` into\na javascript object. Also it will unsign\nand decrypt cookies encrypted and signed\nby this library using a secret.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| secret  | String | No | &nbsp; |\n| decrypt  | Boolean | No | &nbsp; |\n\n**Returns**\nObject\n\n**Example**\n```js\nnodeCookie.parse(req)\n\n// or if cookies were signed when writing\nnodeCookie.parse(req, 'SECRET')\n\n// also if cookies where encrypted\nnodeCookie.parse(req, 'SECRET', true)\n```\n\n----\n### get\nReturns value for a single cookie by its key. It is\nrecommended to make use of this function when you\nwant to pull a single cookie. Since the `parse`\nmethod will eagerly unsign and decrypt all the\ncookies.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| req | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n| secret  | String | No | &nbsp; |\n| decrypt  | Boolean | No | &nbsp; |\n| cookies  | Object | No | Use existing cookies object over re-parsing them from the header. |\n\n**Returns**\nMixed\n\n**Example**\n```js\nnodeCookie.get(req, 'sessionId')\n\n// or if session cookie was signed\nnodeCookie.get(req, 'sessionId', 'SECRET')\n\n// also or if session cookie was encrypted\nnodeCookie.get(req, 'sessionId', 'SECRET', true)\n```\n\n----\n### create\nWrite cookie to the HTTP response object. It will append\nduplicate cookies to the `Set-Cookie` header, since\nbrowsers discard the duplicate cookies by themselves\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n| value | * | Yes | &nbsp; |\n| options  | Object | No | &nbsp; |\n| secret  | String | No | &nbsp; |\n| encrypt  | Boolean | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeCookie.create(res, 'sessionId', 1)\n\n// sign session id\nnodeCookie.create(res, 'sessionId', 1, {}, 'SECRET')\n\n// sign and encrypt session id\nnodeCookie.create(res, 'sessionId', 1, {}, 'SECRET', true)\n```\n\n----\n### clear\nClears the cookie from browser by setting it's expiry\nin past. This is required since there is no other\nway to instruct the browser to delete a cookie.\n\nAlso this method will override the `expires` value on\nthe options object.\n\n**Params**\n\n| Param | Type | Required | Description |\n|-----|-------|------|------|\n| res | Object | Yes | &nbsp; |\n| key | String | Yes | &nbsp; |\n| options  | Object | No | &nbsp; |\n\n**Returns**\nVoid\n\n**Example**\n```js\nnodeCookie.clear(res, 'sessionId')\n```\n\n----\n\n[appveyor-image]: https://img.shields.io/appveyor/ci/thetutlage/node-cookie/master.svg?style=flat-square\n\n[appveyor-url]: https://ci.appveyor.com/project/thetutlage/node-cookie\n\n[npm-image]: https://img.shields.io/npm/v/node-cookie.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/node-cookie\n\n[travis-image]: https://img.shields.io/travis/poppinss/node-cookie/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/poppinss/node-cookie\n\n[coveralls-image]: https://img.shields.io/coveralls/poppinss/node-cookie/develop.svg?style=flat-square\n\n[coveralls-url]: https://coveralls.io/github/poppinss/node-cookie","starsCount":1,"created":"2015-12-29T16:01:43.229Z","modified":"2017-06-12T09:53:03.100Z","lastPublisher":{"name":"virk","email":"virk@adonisjs.com"},"owners":[{"name":"adonisjs","email":"virk@adonisjs.com"},{"name":"amanvirk","email":"virk.officials@gmail.com"}],"other":{"_attachments":{},"_id":"node-cookie","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/node-cookie-2.0.0.tgz_1497261182134_0.13084827922284603"},"_npmUser":{"name":"virk","email":"virk@adonisjs.com"},"_npmVersion":"5.0.0","_rev":"4-bafd6adc49297fe8c28de877ede36ff2","author":{"name":"amanvirk"},"bugs":{"url":"https://github.com/poppinss/node-cookie/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"2.0.0"},"dist":{"integrity":"sha512-x1u3vT89KWiMYlcUJpacOw+MhZOXk/ES8YIAa1fCd+VyxQNRYome/2tFvCKQzLT6EygdFAlDEkwWMkkz0qsjrA==","shasum":"29b1860ba0a4d0f1532084bd24d34578cc45a016","tarball":"https://registry.npmjs.org/node-cookie/-/node-cookie-2.0.0.tgz"},"maintainers":[{"name":"adonisjs","email":"virk@adonisjs.com"},{"name":"amanvirk","email":"virk.officials@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-12T09:53:03.100Z","created":"2015-12-29T16:01:43.229Z","1.0.0":"2015-12-29T16:01:43.229Z","1.0.1":"2016-04-08T19:26:54.998Z","1.0.2":"2016-04-09T09:53:39.239Z","1.0.3":"2016-05-10T17:40:30.323Z","1.0.4":"2017-04-25T08:43:41.416Z","2.0.0":"2017-06-12T09:53:03.100Z"},"users":{"shakakira":true}}}