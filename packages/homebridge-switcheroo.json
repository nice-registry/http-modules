{"name":"homebridge-switcheroo","version":"2.0.0","description":"User defined switches for http requests. Simple on/off or multiswitch radio buttons. Useful for lights, A/V systems, home automation, whatever","license":"MIT","homepage":"https://github.com/chriszelazo/homebridge-switcheroo#readme","repository":"https://github.com/chriszelazo/homebridge-switcheroo","keywords":["homebridge-plugin","switch","multiswitch","radio","button","http","control","homekit","smarthome"],"main":"index.js","engines":{"node":">=0.12.0","homebridge":">=0.2.0"},"dependencies":{"request":"^2.65.0"},"gitHead":"7e1c52fcc4b25470effbe243b4f57172c85d1341","scripts":{},"versions":[{"number":"1.0.0","date":"2016-12-06T05:13:23.604Z"},{"number":"0.0.1","date":"2016-12-06T07:09:46.047Z"},{"number":"0.0.2","date":"2016-12-06T07:45:17.824Z"},{"number":"0.0.3","date":"2016-12-06T09:13:30.233Z"},{"number":"1.0.1","date":"2016-12-06T10:20:54.745Z"},{"number":"2.0.0","date":"2017-02-22T11:26:08.339Z"}],"readme":"[![npm version](https://badge.fury.io/js/homebridge-switcheroo.svg)](https://badge.fury.io/js/homebridge-switcheroo)\n\n# homebridge-switcheroo\nUser defined switches for http requests. Simple on/off or multiswitch radio buttons. Useful for lights, A/V systems, home automation, whatever\n\n\n## Switch Types\n\n### Switch (standard on/off)\nMeant to be used as a simple on/off switch. \n ==> light, projector, fan, garage door, car ignition (bad idea)\n\n```\n{\n        \"accessory\": \"Switcheroo\",   // remember this *must* be 'Switcheroo'\n        \"type\": \"switch\",\n        \"name\": \"Kitchen Light\",\n        \"host\": \"192.168.0.XXX/kitchen\",\n        \"on\"  : \"/light/on\",\n        \"off\" : \"/light/off\"\n}\n```\n\n### Multiswitch (radio buttons)\nWorks like a switcher - only one input can ever be on at one time.\n ==> A/V input switcher, KVM control, temperature settings, really bad piano\n\nDefine your `multiswitch` with whatever `name` you want to appear as the input title on Homekit controls. Then, the appropriate endpoint `path` to call. Complete http endpoints are constructed as `host` + `path`.\nCurrently only built to support one http method per switch service, meaning, all endpoint calls will be either `GET` (default) or `POST` etc.\n```\n{\n    \"accessory\": \"Switcheroo\",\n    \"type\": \"multiswitch\",\n    \"name\": \"My HDMI Switcher\",\n    \"host\": \"192.168.0.10X:8080\",   // don't forget to specify a port, if necessary\n    \"multiswitch\": [\n       { \"name\" : \"Apple TV\"     , \"path\" : \"/switcher/appletv\" },\n       { \"name\" : \"HDMI\"         , \"path\" : \"/switcher/aux\"     },\n       { \"name\" : \"Chromecast\"   , \"path\" : \"/switcher/chrome\"  },\n       { \"name\" : \"PS4\"          , \"path\" : \"/switcher/ps4\"     },\n       { \"name\" : \"Raspberry Pi\" , \"path\" : \"/switcher/pi\"      }\n    ]\n}\n```\n\n\n## Configuration Params\n\n|        Parameter       |                                     Description                                     | Required |\n| -----------------------| ----------------------------------------------------------------------------------- |:--------:|\n| `name`                 | name of the accessory                                                               |     ✓    |\n| `type`                 | `switch` or `multiswitch`                                                           |     ✓    |\n| `host`                 | url for whatever is receiving these requests                                        |     ✓    |\n| `on` / `off`           | (only switch)  endpoint paths for the on/off states                                 |     ✓    |\n| `on_body` / `off_body` | (only switch)  bodies for on/off state requests                                     |          |\n| `multiswitch`          | (only multiswitch)  list of inputs for the multiswitch - `name` and endpoint `path` |     ✓    |\n| `http_method`          | `GET` (default), `POST`,  `PUT`, `DELETE`                                           |          |\n| `username`             | username for request                                                                |          |\n| `password`             | password for request                                                                |          |\n| `send_immediately`     | option for request                                                                  |          |\n| `manufacturer`         | will show in Home app description of this Homekit accessory, ex. 'LG'               |          |\n| `model`                | will show in Home app description of this Homekit accessory, ex. 'HD 2000'          |          |\n\n\n\n## Debug logging\n\nRunning `homebridge` manually will allow you to see the Switcheroo console logs.\n\n![Switcheroo logging](https://github.com/chriszelazo/homebridge-switcheroo/raw/master/logging.png) \n\n\n## Tips\n\n  - Run Homebridge on startup and have it restart if crashed, [read my notes](https://github.com/chriszelazo/Apartment-Homebridge-Setup#auto-restart-homebridge-after-a-crash)\n  - Make sure specify a port in the if necessary. (i.e. `\"base_url\" : \"http://192.168.0.XXX:2000\"`)\n  - Verify the correct `http_method` is begin used. Switcheroo defaults to `GET`\n\n## Installation\nRead about an example Raspberry Pi + Homebridge setup guide with this package [here](https://github.com/chriszelazo/Apartment-Homebridge-Setup)\n\n1. Install homebridge using: `npm install -g homebridge`\n2. Install homebridge-http using: `npm install -g homebridge-switcheroo`\n3. Update your config file\n\n\n## Changes from `1.X.X`\n\n###  New \n - define unique paths for each `multiswitch` item\n - `manufacturer`, `model` params\n\n### Renamed\n - 'switch_type' -> 'type'\n - 'Switch'      -> 'switch'\n - 'Multiswitch' -> 'multiswitch'\n - 'base_url'    -> 'host'\n - 'on_url'      -> 'on'\n - 'off_url'     -> 'off'\n\n","starsCount":2,"created":"2016-12-06T05:13:23.604Z","modified":"2017-06-04T04:44:12.593Z","lastPublisher":{"name":"chriszelazo","email":"chris.zelazo@gmail.com"},"owners":[{"name":"chriszelazo","email":"chris.zelazo@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"homebridge-switcheroo","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/homebridge-switcheroo-2.0.0.tgz_1487762768118_0.43042942811734974"},"_npmUser":{"name":"chriszelazo","email":"chris.zelazo@gmail.com"},"_npmVersion":"3.10.8","_rev":"8-2e3c032ef6acdf011ba6568f0b4a3300","_shasum":"246c70ba736b12c620cbb9507ff7a339f98205f1","author":{"name":"Chris Zelazo"},"bugs":{"url":"https://github.com/chriszelazo/homebridge-switcheroo/issues"},"directories":{},"dist-tags":{"latest":"2.0.0"},"dist":{"shasum":"246c70ba736b12c620cbb9507ff7a339f98205f1","tarball":"https://registry.npmjs.org/homebridge-switcheroo/-/homebridge-switcheroo-2.0.0.tgz"},"maintainers":[{"name":"chriszelazo","email":"chris.zelazo@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-04T04:44:12.593Z","created":"2016-12-06T05:13:23.604Z","1.0.0":"2016-12-06T05:13:23.604Z","0.0.1":"2016-12-06T07:09:46.047Z","0.0.2":"2016-12-06T07:45:17.824Z","0.0.3":"2016-12-06T09:13:30.233Z","1.0.1":"2016-12-06T10:20:54.745Z","2.0.0":"2017-02-22T11:26:08.339Z"},"users":{"sziszi":true,"pzuccar":true}}}