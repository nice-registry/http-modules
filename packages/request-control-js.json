{"name":"request-control-js","version":"3.3.0","description":"Fight back against the rising tide of http requests.","main":"src/core.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/cobbdb/request-control","keywords":["http","request","iframe","image","tracking","pixel","swf","ajax","vendor","spam"],"license":"MIT","homepage":"https://github.com/cobbdb/request-control","devDependencies":{"grunt":"0.4.5","grunt-browserify":"4.0.0","grunt-contrib-jshint":"0.11.2","grunt-contrib-uglify":"0.9.1","matchdep":"0.3.0"},"dependencies":{"lumberjackjs":"1.2.0","curb":"1.0.1"},"gitHead":"dc865a33603cd029b7ff87e5b6fc94bcf719f597","versions":[{"number":"0.0.5","date":"2015-05-08T21:00:22.455Z"},{"number":"1.0.0","date":"2015-06-05T17:12:04.868Z"},{"number":"1.0.1","date":"2015-06-05T17:13:58.261Z"},{"number":"1.0.2","date":"2015-06-05T22:07:37.693Z"},{"number":"2.0.1","date":"2015-06-08T18:43:26.919Z"},{"number":"2.1.0","date":"2015-06-08T18:58:11.433Z"},{"number":"2.1.1","date":"2015-06-08T20:28:30.355Z"},{"number":"2.2.0","date":"2015-08-03T21:43:24.566Z"},{"number":"3.0.0","date":"2015-08-06T21:12:30.257Z"},{"number":"3.1.0","date":"2015-08-07T03:10:42.919Z"},{"number":"3.1.1","date":"2015-08-07T03:19:50.737Z"},{"number":"3.1.2","date":"2015-08-07T03:30:26.446Z"},{"number":"3.1.3","date":"2015-08-07T03:35:23.791Z"},{"number":"3.1.4","date":"2015-08-07T22:22:56.882Z"},{"number":"3.2.0","date":"2015-08-09T05:56:04.799Z"},{"number":"3.2.1","date":"2015-08-09T06:07:32.924Z"},{"number":"3.2.2","date":"2015-08-10T18:22:45.102Z"},{"number":"3.3.0","date":"2015-09-03T21:26:26.694Z"}],"readme":"<a href=\"https://github.com/cobbdb/request-control\">\n    <img alt=\"logo\" src=\"http://i.imgur.com/xrtq29k.png\" width=\"300\">\n</a>\n\n[![Bower version](https://badge.fury.io/bo/request-control.svg)](http://badge.fury.io/bo/request-control) [![NPM version](https://badge.fury.io/js/request-control-js.svg)](http://badge.fury.io/js/request-control-js)\n\nThrottle aggressive 3rd party http requests.\n\n    $ bower install request-control\n    $ npm install request-control-js\n\n-------------\nAs viewability becomes the gold standard in advertising metrics, many vendors are\nhungry for related data. Unfortunately, some programatic and remnant creatives\ncan end up plaguing your site with a relentless flow of http requests - especially\nfrom video ads.\n\nRequest Control provides you a throttle to take back control of your site performance\nand enforce a speed limit on http requests per second.\n\n***Will this interfere with other site content?***\nDefinitely not. Throttling does not engage for the top window context by default - this means only your site's iframes will be affected. There is also a (configurable) grace period of 100 requests before the throttle will kick in, meaning your standard site content will be unaffected.\n\n***Won't this interfere with revenue from video remnants?***\nNope! Since this is only a throttle, video metrics will still be reported from video ads - just at a more sane rate. Once the throttle kicks in, only 1 out of every N (configurable) requests per second will be made.\n\nRequest Control is intended to throttle malicious reporting - which may make upwards of 10 http requests per second! At roughly 100KB per request this can add up to some *very* expensive site visits for your mobile customers.\n\n### Using the Throttle\nTo load Request Control on your site, simply include the built script from `dist/reqctrl.min.js` and then start the throttle when you're ready to enforce a request speed limit. Request Control will automatically reapply the throttle when possible in any iframes for you.\n\nYou can install the JS global object with `bower install request-control`.\n```html\n<script src=\"path/to/reqctrl.min.js\"></script>\n<script>\n    RequestControl();\n</script>\n```\n\nRequest Control is also provided as a CommonJS module with `npm install request-control-js`.\n```javascript\nvar Throttle = require('request-control-js');\nThrottle();\n```\n\n### Configuration\nTo better tune the throttle for your site, there are a few options you can customize.\n```javascript\n// Default values are as follows:\nRequestControl({\n    throttle: 100,\n    grace: 800,\n    top: false,\n    log: false\n});\n```\n\n* **throttle** *{Number}* Time in milliseconds to wait between successive http requests.\nFalsy (`0 false null undefined`) to run the system but disable the\nthrottle and allow all requests to complete.\n* **grace** *{Number}* Number of requests to allow before engaging the throttle.\n* **top** *{Boolean}* True to throttle the top window as well as iFrames.\n* **log** *{Boolean}* True to enable logging. RequestControl logs with\n[Lumberjack](https://github.com/cobbdb/lumberjack) to 4\nchannels: `image`, `ajax`, `append`, `gate`.\n\n### Debugging your Site\nRequest Control features logging and DOM element highlighting to help you find those\nproblem areas on your site. Just open the JavaScript console in your browser\nand set the `rcDebug` variable in the **top window**.\n```javascript\n// Enable DOM node highlighting and enable logging on the fly.\nrcDebug = true;\n\n// Print a detailed report of network activity.\n// Available reports are: image, ajax, append. You can request reports for\n// any of these.\nRequestControl.log.report('image ajax'); // Report only image and ajax data.\nRequestControl.log.report('append'); // Get append data only.\nRequestControl.log.report(); // Get summary only.\n\n// Bind callbacks to log events.\nRequestControl.log.on('gate', function (data) {\n    if (data.blocked) {\n        // Report metrics on blocked content.\n    }\n});\n```\n\n### Stopping the Throttle\nAfter the throttle has been started, you can turn it off with the callable that is\nreturned when you first started the system.\n```javascript\n// Start the throttle.\nvar halt = RequestControl();\n\n// Some time later, stop the throttle.\nhalt();\n```\n\n---------\n* See: http://cobbdb.github.io/request-control\n* See: http://github.com/cobbdb/request-control\n* License: MIT\n","created":"2015-05-08T21:00:22.455Z","modified":"2015-09-03T21:26:26.694Z","lastPublisher":{"name":"cobbdb","email":"cobbdb@gmail.com"},"owners":[{"name":"cobbdb","email":"cobbdb@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"request-control-js","_nodeVersion":"0.12.4","_npmUser":{"name":"cobbdb","email":"cobbdb@gmail.com"},"_npmVersion":"2.10.1","_rev":"1-73a29bef7d4ffd9199a6e3befe0df41b","_shasum":"cb83dd2c004082a98a4b678b05da4996a2340ead","author":{"name":"Dan Cobb","email":"cobbdb@gmail.com","url":"http://www.github.com/cobbdb"},"bugs":{"url":"https://github.com/cobbdb/request-control/issues"},"directories":{},"dist-tags":{"latest":"3.3.0"},"dist":{"shasum":"cb83dd2c004082a98a4b678b05da4996a2340ead","tarball":"http://registry.npmjs.org/request-control-js/-/request-control-js-3.3.0.tgz"},"maintainers":[{"name":"cobbdb","email":"cobbdb@gmail.com"}],"readmeFilename":"readme.md","time":{"modified":"2015-09-03T21:26:26.694Z","created":"2015-05-08T21:00:22.455Z","0.0.5":"2015-05-08T21:00:22.455Z","1.0.0":"2015-06-05T17:12:04.868Z","1.0.1":"2015-06-05T17:13:58.261Z","1.0.2":"2015-06-05T22:07:37.693Z","2.0.1":"2015-06-08T18:43:26.919Z","2.1.0":"2015-06-08T18:58:11.433Z","2.1.1":"2015-06-08T20:28:30.355Z","2.2.0":"2015-08-03T21:43:24.566Z","3.0.0":"2015-08-06T21:12:30.257Z","3.1.0":"2015-08-07T03:10:42.919Z","3.1.1":"2015-08-07T03:19:50.737Z","3.1.2":"2015-08-07T03:30:26.446Z","3.1.3":"2015-08-07T03:35:23.791Z","3.1.4":"2015-08-07T22:22:56.882Z","3.2.0":"2015-08-09T05:56:04.799Z","3.2.1":"2015-08-09T06:07:32.924Z","3.2.2":"2015-08-10T18:22:45.102Z","3.3.0":"2015-09-03T21:26:26.694Z"}}}