{"name":"generic-error-creator","version":"1.0.9","description":"Generic error creator for node server using es2015, covers most HTTP default errors and allow extending them for custom erros.","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["error","creator","factory","custom","errors"],"license":"ISC","dependencies":{"http-errors":"^1.5.1","lodash":"^4.17.2","lodash-uuid":"0.0.3"},"gitHead":"e5e30ff3635aa11ec3a68bbc3f9f219de3b18b39","_resolved":"file:generic-error-creator","deprecated":"Moved to new package - extendable-http-error","versions":[{"number":"1.0.0","date":"2016-11-22T11:47:12.639Z"},{"number":"1.0.1","date":"2016-11-22T12:04:13.167Z"},{"number":"1.0.2","date":"2016-11-22T12:13:12.845Z"},{"number":"1.0.3","date":"2016-11-22T12:42:27.209Z"},{"number":"1.0.4","date":"2016-11-22T12:44:58.735Z"},{"number":"1.0.5","date":"2016-11-22T14:19:49.155Z"},{"number":"1.0.6","date":"2016-11-23T09:26:48.255Z"},{"number":"1.0.7","date":"2016-11-23T09:28:31.346Z"},{"number":"1.0.8","date":"2016-11-23T09:40:47.519Z"},{"number":"1.0.9-np","date":"2016-11-24T12:50:31.183Z"},{"number":"1.0.9","date":"2016-11-24T12:50:40.099Z"}],"readme":"# Generic Error Creator\n\n## Introduction\n\n> Error creator for creating custom made and common HTTP errors for node application.\n> Each http error contains the http status code.\n> The user can define the error code for the application to identify.\n\n## Installation\n\n> npm install generic-error-creator --save\n\n## Code Samples\n\n### Use specific error:\n```\nconst errorCreator = require('generic-error-creator').customHttpErrorsCreator;\n\n//No need to change status it got the default type of http error status\nfunction (req, res, next) {    \n    let errMsg = \"Error Route Not Found\";\n    let section = \"Routes\";\n    let code = 9404; //error code for the client to identify the error\n    let params = {url: req.url};\n    \n    let err = new errorCreator.NotFound(errMsg, section, code, params);\n    next(err);\n}\n\n```\n\n### Make all errors global\n``` \nrequire('generic-error-creator').initGlobalErrors();\n\nconsole.log(new InternalServerError(\"Internal Server Error\", \"Core\", 9500)); \n```\n\n```\nInternalServerError: Interl Server Error\n  at /Users/Username/WebstormProjects/Project/app.js:12:15\n  at Layer.handle [as handle_request] (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/layer.js:95:5)\n  at next (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/route.js:131:13)\n  at Route.dispatch (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/route.js:112:3)\n  at Layer.handle [as handle_request] (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/layer.js:95:5)\n  at /Users/Username/WebstormProjects/Project/node_modules/express/lib/router/index.js:277:22\n  at Function.process_params (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/index.js:330:12)\n  at next (/Users/Username/WebstormProjects/Project/node_modules/express/lib/router/index.js:271:10)\n  at expressInit (/Users/Username/WebstormProjects/Project/node_modules/express/lib/middleware/init.js:33:5)\ncode: 9500,\nsection: 'Core',\nuuid: '8a77fc8b-601c-4fbb-89df-570ced4fa42b'\n```\n\n### Custom Error\n> Before changing the 'this',\n> need to call the super method so the new extended error could be changed.\n```\nconst genericErrorCreator = require('generic-error-creator');\nconst ErrorCreator = require('generic-error-creator').customHttpErrorsCreator;\n\nclass BadLoginRequest extends ErrorCreator.BadRequest {\n    constructor(msg, section, code, reason){\n        reason = reason.toUpperCase();\n        super(msg, section, code, {reason: reason});\n        this.name = \"BadLoginRequest\";\n    }\n}\n\nconst customErrors = {\n    BadLoginRequest\n};\n\ngenericErrorCreator.initGlobalErrors(customErrors);\n\nconsole.log(new BadLoginRequest(\"Bad Login Request!\", \"SpecialLogin\", 9876, \"User is not special enough\"));\n```\n\n### Convert Error To Object To Send To The Client\n```\nconst app = express();\nconst genericErrorCreator = require('generic-error-creator');\nconst customErrors = {\n    CustomError: require('./errors/custom-error')\n};\n\ngenericErrorCreator.initGlobalErrors(customErrors);\n\napp.use(genericErrorCreator.prettifyErrorMiddleware);\n\napp.get('/', function (req, res, next) {\n    let err = new CustomError(\"Custom Error!!\", \"Custom\", 9876, \"User is not custom enough\");\n    next(err);\n});\n\napp.use(function (err, req, res, next) {\n    res.status(err.status).json(err);\n});\n```","created":"2016-11-22T11:47:12.639Z","modified":"2016-11-28T09:34:04.060Z","lastPublisher":{"name":"joni7777","email":"jonathan_erel@adsap.co"},"owners":[{"name":"joni7777","email":"jonathan_erel@adsap.co"}],"other":{"_attachments":{},"_from":"generic-error-creator","_id":"generic-error-creator","_nodeVersion":"6.9.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/generic-error-creator-1.0.9.tgz_1479991839455_0.007239987142384052"},"_npmUser":{"name":"joni7777","email":"jonathan_erel@adsap.co"},"_npmVersion":"3.10.8","_rev":"12-e22dc43cb45acb66f36c5b5277515871","_shasum":"ec923a056194803ff7860afa7e7b14ddba413668","author":{"name":"Jonathan Erel & Ben Hodeda"},"directories":{},"dist-tags":{"latest":"1.0.9"},"dist":{"shasum":"ec923a056194803ff7860afa7e7b14ddba413668","tarball":"http://registry.npmjs.org/generic-error-creator/-/generic-error-creator-1.0.9.tgz"},"maintainers":[{"name":"joni7777","email":"jonathan_erel@adsap.co"}],"readmeFilename":"README.md","time":{"modified":"2016-11-28T09:34:04.060Z","created":"2016-11-22T11:47:12.639Z","1.0.0":"2016-11-22T11:47:12.639Z","1.0.1":"2016-11-22T12:04:13.167Z","1.0.2":"2016-11-22T12:13:12.845Z","1.0.3":"2016-11-22T12:42:27.209Z","1.0.4":"2016-11-22T12:44:58.735Z","1.0.5":"2016-11-22T14:19:49.155Z","1.0.6":"2016-11-23T09:26:48.255Z","1.0.7":"2016-11-23T09:28:31.346Z","1.0.8":"2016-11-23T09:40:47.519Z","1.0.9-np":"2016-11-24T12:50:31.183Z","1.0.9":"2016-11-24T12:50:40.099Z"}}}