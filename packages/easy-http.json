{"name":"easy-http","description":"Wrapper for creating convenience methods for HTTP codes","version":"0.0.7","repository":"https://github.com/DeadAlready/node-easy-http","main":"index.js","dependencies":{},"optionalDependencies":{},"engines":{"node":">=0.8.0"},"scripts":{},"versions":[{"number":"0.0.1","date":"2012-10-22T11:42:15.264Z"},{"number":"0.0.2","date":"2012-10-22T11:59:05.016Z"},{"number":"0.0.3","date":"2012-10-22T12:25:37.243Z"},{"number":"0.0.4","date":"2012-10-22T13:42:03.782Z"},{"number":"0.0.5","date":"2012-10-22T14:47:57.420Z"},{"number":"0.0.6","date":"2012-11-08T14:49:23.531Z"},{"number":"0.0.7","date":"2013-01-07T12:01:23.535Z"}],"readme":"[easy-http](https://github.com/DeadAlready/node-easy-http) is a middleware for express or restify creating convenience methods for HTTP codes.\n\n# Installation\n\n    $ npm install easy-http\n\n# Usage\n\neasy-http module will return a function for creating the middleware. \n\n## Default usage\n\n    var easyHttp = require('easy-http');\n    app.use(easyHttp());\n\n    app.get('/', function(req, res, next){\n      res.OK();\n    });\n\nThe functions are also usable via the HTTP codes\n\n    app.get('/', function(req, res, next){\n      res[404]();\n    });\n\nAll status codes 300 and up will send a serialized HttpError object as the body of the response.\n\nAll status codes are enumerable on the function.\n\n    console.log(require('easy-http').OK); //Prints 200\n\n## HttpError\n\nThe HttpError object is a custom error object that also holds the HTTP code.\nIt extends the regular Error object with the following properties\n\n+ body: *Error body\n+ statusCode: *HTTP status code\n+ httpCode: *HTTP status code\n\n### codeToHttpError\n\nBesides exporting the HttpError object, easy-http also exports the codeToHttpError function,\nwhich creates the HttpError object. The function takes 2 parameters\n\n+ code: *HTTP status code, default 500\n+ message: *Error message, default 'Server Internal Error'\n\n## Configuring\n\nYou can also configure the easy-http middleware to change the function names or messages or add custom ones.\n\nThis is done by invoking the easy-http function with an object \ncontaining information about the functions in the following format:\n\n    {\n      [code]:{\n        name:[name],\n        message:[message]\n      }\n    }\n\nWhere [code] is the HTTP code, [name] is the name the function will be given \nand [message] the default message sent.\n\n## Default functions\n\nThe following is a JSON description of all the default functions that are created\n\n    {\n      \"CONTINUE\": {\"code\": \"100\",\"message\": \"Continue\"},\n      \"S_PROTOCOLS\": {\"code\": \"101\",\"message\": \"Switching Protocols\"},\n      \"PROCESSING\": {\"code\": \"102\",\"message\": \"Processing\"},\n      \"OK\": {\"code\": \"200\",\"message\": \"OK\"},\n      \"CREATED\": {\"code\": \"201\",\"message\": \"Created\"},\n      \"ACCEPTED\": {\"code\": \"202\",\"message\": \"Accepted\"},\n      \"N_INFORMATION\": {\"code\": \"203\",\"message\": \"Non-Authoritative Information\"},\n      \"NO_CONTENT\": {\"code\": \"204\",\"message\": \"No Content\"},\n      \"R_CONTENT\": {\"code\": \"205\",\"message\": \"Reset Content\"},\n      \"P_CONTENT\": {\"code\": \"206\",\"message\": \"Partial Content\"},\n      \"MULTISTATUS\": {\"code\": \"207\",\"message\": \"Multi-Status\"},\n      \"M_CHOICES\": {\"code\": \"300\",\"message\": \"Multiple Choices\"},\n      \"M_PERMANENTLY\": {\"code\": \"301\",\"message\": \"Moved Permanently\"},\n      \"M_TEMPORARILY\": {\"code\": \"302\",\"message\": \"Moved Temporarily\"},\n      \"SEE_OTHER\": {\"code\": \"303\",\"message\": \"See Other\"},\n      \"NOT_MODIFIED\": {\"code\": \"304\",\"message\": \"Not Modified\"},\n      \"USE_PROXY\": {\"code\": \"305\",\"message\": \"Use Proxy\"},\n      \"T_REDIRECT\": {\"code\": \"307\",\"message\": \"Temporary Redirect\"},\n      \"BAD_REQUEST\": {\"code\": \"400\",\"message\": \"Bad Request\"},\n      \"UNAUTHORIZED\": {\"code\": \"401\",\"message\": \"Unauthorized\"},\n      \"P_REQUIRED\": {\"code\": \"428\",\"message\": \"Precondition Required\"},\n      \"FORBIDDEN\": {\"code\": \"403\",\"message\": \"Forbidden\"},\n      \"NOT_FOUND\": {\"code\": \"404\",\"message\": \"Not Found\"},\n      \"M_N_ALLOWED\": {\"code\": \"405\",\"message\": \"Method Not Allowed\"},\n      \"N_ACCEPTABLE\": {\"code\": \"406\",\"message\": \"Not Acceptable\"},\n      \"P_A_REQUIRED\": {\"code\": \"407\",\"message\": \"Proxy Authentication Required\"},\n      \"R_TIMEOUT\": {\"code\": \"408\",\"message\": \"Request Time-out\"},\n      \"CONFLICT\": {\"code\": \"409\",\"message\": \"Conflict\"},\n      \"GONE\": {\"code\": \"410\",\"message\": \"Gone\"},\n      \"L_REQUIRED\": {\"code\": \"411\",\"message\": \"Length Required\"},\n      \"P_FAILED\": {\"code\": \"412\",\"message\": \"Precondition Failed\"},\n      \"R_E_T_LARGE\": {\"code\": \"413\",\"message\": \"Request Entity Too Large\"},\n      \"R_T_LARGE\": {\"code\": \"414\",\"message\": \"Request-URI Too Large\"},\n      \"U_M_TYPE\": {\"code\": \"415\",\"message\": \"Unsupported Media Type\"},\n      \"R_R_N_SATISFIABLE\": {\"code\": \"416\",\"message\": \"Requested Range Not Satisfiable\"},\n      \"E_FAILED\": {\"code\": \"417\",\"message\": \"Expectation Failed\"},\n      \"IM_A_TEAPOT\": {\"code\": \"418\",\"message\": \"I'm a teapot\"},\n      \"U_ENTITY\": {\"code\": \"422\",\"message\": \"Unprocessable Entity\"},\n      \"LOCKED\": {\"code\": \"423\",\"message\": \"Locked\"},\n      \"F_DEPENDENCY\": {\"code\": \"424\",\"message\": \"Failed Dependency\"},\n      \"U_COLLECTION\": {\"code\": \"425\",\"message\": \"Unordered Collection\"},\n      \"U_REQUIRED\": {\"code\": \"426\",\"message\": \"Upgrade Required\"},\n      \"T_M_REQUESTS\": {\"code\": \"429\",\"message\": \"Too Many Requests\"},\n      \"R_H_F_T_LARGE\": {\"code\": \"431\",\"message\": \"Request Header Fields Too Large\"},\n      \"I_S_ERROR\": {\"code\": \"500\",\"message\": \"Internal Server Error\"},\n      \"N_IMPLEMENTED\": {\"code\": \"501\",\"message\": \"Not Implemented\"},\n      \"BAD_GATEWAY\": {\"code\": \"502\",\"message\": \"Bad Gateway\"},\n      \"S_UNAVAILABLE\": {\"code\": \"503\",\"message\": \"Service Unavailable\"},\n      \"G_TIMEOUT\": {\"code\": \"504\",\"message\": \"Gateway Time-out\"},\n      \"H_V_N_SUPPORTED\": {\"code\": \"505\",\"message\": \"HTTP Version not supported\"},\n      \"V_A_NEGOTIATES\": {\"code\": \"506\",\"message\": \"Variant Also Negotiates\"},\n      \"I_STORAGE\": {\"code\": \"507\",\"message\": \"Insufficient Storage\"},\n      \"B_L_EXCEEDED\": {\"code\": \"509\",\"message\": \"Bandwidth Limit Exceeded\"},\n      \"NOT_EXTENDED\": {\"code\": \"510\",\"message\": \"Not Extended\"},\n      \"N_A_REQUIRED\": {\"code\": \"511\",\"message\": \"Network Authentication Required\"}\n    }\n\n## License\n\nThe MIT License (MIT)\nCopyright (c) 2012 Karl D端端na\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.","created":"2012-10-22T11:42:12.807Z","modified":"2014-05-01T09:20:27.222Z","lastPublisher":{"name":"dead.already","email":"dead.already@itdragons.com"},"owners":[{"name":"dead.already","email":"dead.already@itdragons.com"}],"other":{"_attachments":{},"_id":"easy-http","_npmUser":{"name":"dead.already","email":"dead.already@itdragons.com"},"_npmVersion":"1.1.65","_rev":"1-6836f138fd4d955fc448d5853ab018a8","author":{"name":"Karl D端端na","email":"karl.dyyna@gmail.com"},"directories":{},"dist-tags":{"latest":"0.0.7"},"dist":{"shasum":"62cf7cb7881933c3cc527d23430ce0cdc2f9b341","tarball":"http://registry.npmjs.org/easy-http/-/easy-http-0.0.7.tgz"},"maintainers":[{"name":"dead.already","email":"dead.already@itdragons.com"}],"readmeFilename":"README.md","time":{"modified":"2014-05-01T09:20:27.222Z","created":"2012-10-22T11:42:12.807Z","0.0.1":"2012-10-22T11:42:15.264Z","0.0.2":"2012-10-22T11:59:05.016Z","0.0.3":"2012-10-22T12:25:37.243Z","0.0.4":"2012-10-22T13:42:03.782Z","0.0.5":"2012-10-22T14:47:57.420Z","0.0.6":"2012-11-08T14:49:23.531Z","0.0.7":"2013-01-07T12:01:23.535Z"}}}