{"name":"http-body-parser","version":"1.1.9","description":"ðŸŽ¨ A body parser for node, koa, koa2, express. support json, form, text, multipart and stream type body.","main":"lib/index.js","scripts":{"build":"babel src -d lib","pretest":"npm run build","test":"ava test/*.spec.js","prepare":"npm run build"},"repository":"https://github.com/eqfox/http-body-parser","keywords":["node","http","koa","koa2","express","express4","async","await","promise","json","text","stream","form","query","file","upload","body","parser"],"license":"ISC","homepage":"https://github.com/eqfox/http-body-parser#readme","engines":{"node":">=6.0"},"devDependencies":{"ava":"^0.19.1","babel-cli":"^6.24.1","babel-preset-env":"^1.4.0","eslint":"^3.19.0","eslint-config-airbnb-base":"^11.1.3","eslint-plugin-import":"^2.2.0","express":"^4.15.2","koa":"^2.2.0","supertest":"^3.0.0"},"dependencies":{"uuid":"^3.0.1"},"gitHead":"a65153e13f7394f1ba96b5a6d19171898f3f5bd0","versions":[{"number":"1.1.0","date":"2017-05-08T05:10:43.687Z"},{"number":"1.1.1","date":"2017-05-08T06:40:04.151Z"},{"number":"1.1.2","date":"2017-05-15T07:17:51.611Z"},{"number":"1.1.3","date":"2017-05-15T07:23:28.182Z"},{"number":"1.1.4","date":"2017-05-15T07:24:43.888Z"},{"number":"1.1.5","date":"2017-05-15T09:10:05.357Z"},{"number":"1.1.6","date":"2017-05-15T10:10:37.565Z"},{"number":"1.1.7","date":"2017-05-15T10:38:22.018Z"},{"number":"1.1.8","date":"2017-05-15T11:12:16.512Z"},{"number":"1.1.9","date":"2017-05-16T06:33:52.717Z"}],"readme":"http-body-parser\n===============\n\n[![NPM version][npm-image]][npm-url]\n[![build status][travis-image]][travis-url]\n[![Coveralls][coveralls-image]][coveralls-url]\n[![David deps][david-image]][david-url]\n[![node version][node-image]][node-url]\n[![Gittip][gittip-image]][gittip-url]\n\n[npm-image]: https://img.shields.io/npm/v/http-body-parser.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/http-body-parser\n[travis-image]: https://img.shields.io/travis/eqfox/http-body-parser.svg?style=flat-square\n[travis-url]: https://travis-ci.org/eqfox/http-body-parser\n[coveralls-image]: https://img.shields.io/coveralls/eqfox/http-body-parser.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/eqfox/http-body-parser?branch=master\n[david-image]: https://img.shields.io/david/eqfox/http-body-parser.svg?style=flat-square\n[david-url]: https://david-dm.org/eqfox/http-body-parser\n[node-image]: https://img.shields.io/badge/node.js-%3E=_7.6-green.svg?style=flat-square\n[node-url]: http://nodejs.org/download/\n[gittip-image]: https://img.shields.io/gittip/dead-horse.svg?style=flat-square\n[gittip-url]: https://www.gittip.com/dead-horse/\n\n\nðŸ”¥ A body parser for koa, express. support `json`, `form`, `text`, `multipart` and `stream` type body.\n\n## Install\n\n[![NPM](https://nodei.co/npm/http-body-parser.png?downloads=true)](https://nodei.co/npm/http-body-parser/)\n\n## Usage\n\n### Koa\n```js\nconst Koa = require('koa');\nconst bodyParser = require('http-body-parser').koa;\n\nconst app = new Koa();\napp.use(bodyParser({}));\n\napp.use(async ctx => {\n  // the parsed body will store in ctx.request.body\n  // if nothing was parsed, body will be an empty object {}\n  ctx.body = ctx.request.body;\n});\n```\n\n### Express\n```js\nconst express = require('express');\nconst bodyParser = require('http-body-parser').express;\n\nconst app = express();\napp.use(bodyParser({}));\n\nserver.use('/', function(req, res) {\n  res.send(req.body)\n})\n```\n\n## Features\n* Based on the ES6 syntax, the code is concise\n* No third party module dependent\n* Support Koa and Express\n\n## Options\n\n- default options\n```js\n{\n    enableTypes: ['json', 'form', 'text', 'multipart', 'stream'],\n    json: {\n      limit: 1024*1024,\n      strict: true,\n      extendsTypes: []\n    },\n    text: {\n      limit: 1024*1024,\n      extendsTypes: []\n    },\n    form: {\n      limit: 56*1024,\n      extendsTypes: []\n    },\n    stream: {\n      limit: 1024*1024,\n      path: `the operating system's default directory`\n    },\n    multipart: {\n      limit: 1024*1024,\n      path: `the operating system's default directory`\n    }\n}\n```\n* **enableTypes**: parser will only parse when request type hits enableTypes, default is `['json', 'form', 'text', 'multipart', 'stream']`.\n* **encode**: requested encoding. Default is `utf-8`.\n* **limit**: limit of the body. If the body ends up being larger than this limit, a 413 error code is returned.\n* **strict**: when set to true, JSON parser will only accept arrays and objects. Default is `true`.\n* **extendTypes**: support extend types, eg:  `application/x-javascript`\n* **path**: which folder the uploaded files should be stored, active on `multipart, stream`\n\n## Raw Body\n\nYou can access raw request body by `ctx.request.rawBody`\n","starsCount":1,"created":"2017-05-08T05:10:43.687Z","modified":"2017-05-16T06:33:52.717Z","lastPublisher":{"name":"eqfox","email":"sunwei@eqfox.com"},"owners":[{"name":"eqfox","email":"sunwei@eqfox.com"}],"other":{"_attachments":{},"_from":".","_id":"http-body-parser","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/http-body-parser-1.1.9.tgz_1494916432456_0.4560228430200368"},"_npmUser":{"name":"eqfox","email":"sunwei@eqfox.com"},"_npmVersion":"4.6.1","_rev":"11-651a22c11ff7e557197a808eea9a3e53","_shasum":"5866732425214e75f6ad0d5868e2673811124c81","author":{"name":"sunwei","email":"sunwei@eqfox.com","url":"http://www.eqfox.com"},"bugs":{"url":"https://github.com/eqfox/http-body-parser/issues"},"directories":{},"dist-tags":{"latest":"1.1.9"},"dist":{"shasum":"5866732425214e75f6ad0d5868e2673811124c81","tarball":"https://registry.npmjs.org/http-body-parser/-/http-body-parser-1.1.9.tgz"},"maintainers":[{"name":"eqfox","email":"sunwei@eqfox.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-16T06:33:52.717Z","created":"2017-05-08T05:10:43.687Z","1.1.0":"2017-05-08T05:10:43.687Z","1.1.1":"2017-05-08T06:40:04.151Z","1.1.2":"2017-05-15T07:17:51.611Z","1.1.3":"2017-05-15T07:23:28.182Z","1.1.4":"2017-05-15T07:24:43.888Z","1.1.5":"2017-05-15T09:10:05.357Z","1.1.6":"2017-05-15T10:10:37.565Z","1.1.7":"2017-05-15T10:38:22.018Z","1.1.8":"2017-05-15T11:12:16.512Z","1.1.9":"2017-05-16T06:33:52.717Z"},"users":{"eqfox":true}}}