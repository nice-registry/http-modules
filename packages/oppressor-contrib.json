{"name":"oppressor-contrib","version":"1.0.1","description":"fork of the streaming http compression response negotiator","main":"index.js","dependencies":{"negotiator":"~0.6.1","response-stream":"~0.0.0","through":"~0.1.4"},"devDependencies":{"tap":"~0.3.0"},"scripts":{"test":"tap test/*.js"},"repository":"https://github.com/vladikoff/oppressor-contrib","homepage":"https://github.com/vladikoff/oppressor-contrib","keywords":["gzip","compress","deflate","http","negotiator","pipe","stream","request","response"],"license":"MIT","gitHead":"78e44606b037938b71ca1e0bf3d95fc60cd4c01c","versions":[{"number":"1.0.1","date":"2016-11-16T17:08:21.162Z"}],"readme":"# oppressor-contrib\n\n> Fork of https://github.com/substack/oppressor\n\nstreaming http compression response negotiator\n\n[![Build Status](https://travis-ci.org/vladikoff/oppressor-contrib.svg?branch=master)](https://travis-ci.org/vladikoff/oppressor-contrib)\n# example\n\nYou can use plain old streams:\n\n``` js\nvar oppressor = require('oppressor');\nvar fs = require('fs');\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n    fs.createReadStream(__dirname + '/data.txt')\n        .pipe(oppressor(req))\n        .pipe(res)\n    ;\n});\nserver.listen(8000);\n```\n\nor you can use fancy streaming static file server modules like\n[filed](http://github.com/mikeal/filed) that set handy things like etag,\nlast-modified, and content-type headers for you:\n\n``` js\nvar oppressor = require('oppressor');\nvar filed = require('filed');\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n     filed(__dirname + '/data.txt')\n        .pipe(oppressor(req))\n        .pipe(res)\n    ;\n});\nserver.listen(8000);\n```\n\n# methods\n\n``` js\nvar oppressor = require('oppressor')\n```\n\n## var stream = oppressor(req)\n\nReturn a [duplex stream](https://github.com/substack/stream-handbook#duplex)\nthat will be compressed with gzip, deflate, or no compression depending on the\naccept-encoding headers sent.\n\noppressor will emulate calls to http.ServerResponse methods like `writeHead()`\nso that modules like [filed](http://github.com/mikeal/filed) that expect to be\npiped directly to the response object will work.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install oppressor\n```\n\n# license\n\nMIT\n","created":"2016-11-16T17:08:21.162Z","modified":"2016-11-16T17:10:51.512Z","lastPublisher":{"name":"vladikoff","email":"vlad@vladikoff.com"},"owners":[{"name":"jrgm","email":"jrgmorrison@gmail.com"},{"name":"stomlinson","email":"shane@shanetomlinson.com"},{"name":"vladikoff","email":"vlad@vladikoff.com"}],"other":{"_attachments":{},"_from":".","_id":"oppressor-contrib","_nodeVersion":"4.5.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/oppressor-contrib-1.0.1.tgz_1479316098937_0.7234159742947668"},"_npmUser":{"name":"vladikoff","email":"vlad@vladikoff.com"},"_npmVersion":"2.15.9","_rev":"3-004432b505266b237c5627a2b7270aeb","_shasum":"746323815b811a0261f9d598a417a35c00a437cb","author":{"name":"James Halliday and contributors"},"bugs":{"url":"https://github.com/vladikoff/oppressor-contrib/issues"},"directories":{"example":"example","test":"test"},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"746323815b811a0261f9d598a417a35c00a437cb","tarball":"http://registry.npmjs.org/oppressor-contrib/-/oppressor-contrib-1.0.1.tgz"},"maintainers":[{"name":"jrgm","email":"jrgmorrison@gmail.com"},{"name":"stomlinson","email":"shane@shanetomlinson.com"},{"name":"vladikoff","email":"vlad@vladikoff.com"}],"readmeFilename":"readme.markdown","time":{"modified":"2016-11-16T17:10:51.512Z","created":"2016-11-16T17:08:21.162Z","1.0.1":"2016-11-16T17:08:21.162Z"}}}