{"name":"mekanika-adapter-http","version":"0.3.0","description":"Mekanika HTTP adapter","main":"index.js","scripts":{"browserify":"browserify index.js -o dist/adapter-http.js -s HttpAdapter","build":"npm run browserify && npm run compress","compress":"uglifyjs dist/adapter-http.js -cm -o dist/adapter-http.min.js","coverage":"istanbul cover _mocha","lint":"jshint --config .jshintrc index.js lib/*.js test/*.js","test":"mocha -R spec test"},"repository":"https://github.com/mekanika/adapter-http","license":"MIT","dependencies":{"component-emitter":"^1.2.0","superagent":"^1.2.0"},"devDependencies":{"chai":"^2.3.0","clone-component":"^0.2.2","expect.js":"^0.3.1","express":"^4.12.3","jshint":"^2.7.0","mocha":"^2.2.4"},"gitHead":"87b46dd0604cb1c3272a9980c35d7e6e9f536a0f","homepage":"https://github.com/mekanika/adapter-http#readme","versions":[{"number":"0.2.0","date":"2015-03-30T06:09:46.535Z"},{"number":"0.3.0","date":"2015-05-07T04:58:01.636Z"}],"readme":"\n# adapter-http\n\n\n[Query envelope](https://github.com/mekanika/qe) to HTTP adapter \n\n\n## Install\n\n    npm install mekanika-adapter-http\n\nCommonJS:\n\n```js\nvar http = require('mekanika-adapter-http');\n```\n\nBrowser (exposes as `HttpAdapter` globals):\n\n```html\n<script src=\"dist/adapter-http.min.js\"></script>\n```\n\n\n## Usage\n\nThe HTTP adapter exposes an `.exec( qe, callback )` method and a `.config` object property.\n\n```js\nhttp.exec( {do:'find', on:'users'}, function (err, res) {\n  if (err) throw new Error(err);\n  console.log( res );\n});\n```\n\n### .exec( qe, cb )\n\nThe adapter can be run calling `exec` and passing it:\n\n- **qe** - a valid Mekanika [Qe](https://github.com/mekanika/qe)\n- **cb** - a callback that accepts `(err, res)` parameters\n\nThe query envelope MUST sepcify an action: `{do:'find'}` which is used to run a superagent call (eg. `post()`, `get()` etc).\n\nExec returns the `superagent` instance, and passes its results to the callback:\n\n#### err - Error handling\nA superagent error object. Information on error handling is available via [superagent error docs](https://visionmedia.github.io/superagent/#error-handling).\n\n#### res - Response handling\nSuperagent [response object](https://visionmedia.github.io/superagent/#response-properties).\n\nSome notable `res` properties:\n\n- **res.text** - unparsed response body string\n- **res.body** - parsed according to `Content-Type` (may be empty)\n- **res.header** - object of parsed header fields\n- **res.type** - Content-Type void of the charset\n- **res.charset** - content type charset if provided\n- **res.error** - provided on `4xx` and `5xx` responses\n- **res.status** - response status flags\n\n### Config\nConfig defaults as follows, each of which can be overridden before calling `.exec()`:\n\n```js\nexports.config = {\n    protocol: 'http'\n  , host: 'localhost'\n  , port: 80\n  , contentType: 'application/json'\n  , withCredentials: false\n  , headers: {}\n}\n```\n\nConfig affects how superagent creates the call and where it points to.\n\n\n## HTTP request and URL construction\n\nThe base URL constructed from adapter config is as follows:\n\n    protocol:// + host + :port [+ /resource]\n\nThe port is omitted from the URL if is the default `80`. The resource is added if one is provided, and ids are appended to the resource URL (separated by commas if several are provided). URL queries are appended if provided by the _Qe_.\n\nThe HTTP request methods map to the default _Qe_ actions as follows:\n\n_Qe_ action | HTTP method\n:-----------|:-----------\nfind        | GET\ncreate      | POST\nupdate      | POST\nremove      | DELETE\n\n`find` and `update` requests append _Qe_ identifiers to the URL. So a _Qe_ of `{on:'users', ids:['12345']}`, would by default build the following URL:\n\n    http://localhost/users/12345\n\nMultiple ids are separated by commas `{on:'users', ids:['12345','14421']}`\n\n    http://localhost/users/12345,14421\n\n\n## Tests\n\nEnsure you have installed the development dependencies:\n\n    npm install\n\nTo run the tests:\n\n    npm test\n\n### Coverage\n\nCoverage reports are generated with [istanbul](https://github.com/gotwarlost/istanbul) (`npm install -g istanbul`):\n\n    npm run coverage\n\n\n## License\n\nCopyright 2013-2015 Mekanika\n\nReleased under the **MIT License** ([MIT](http://opensource.org/licenses/MIT))\n","created":"2015-03-30T06:09:46.535Z","modified":"2015-05-07T04:58:01.636Z","lastPublisher":{"name":"cayuu","email":"cayuu@neonrelic.com"},"owners":[{"name":"cayuu","email":"cayuu@neonrelic.com"}],"other":{"_attachments":{},"_from":".","_id":"mekanika-adapter-http","_nodeVersion":"1.8.1","_npmUser":{"name":"cayuu","email":"cayuu@neonrelic.com"},"_npmVersion":"2.8.3","_rev":"1-c70098564e6d60b8dd2ee85a33a79cf4","_shasum":"a522f01d2ee7e7d2dd6ece405d675cc4b307ad04","bugs":{"url":"https://github.com/mekanika/adapter-http/issues"},"directories":{},"dist-tags":{"latest":"0.3.0"},"dist":{"shasum":"a522f01d2ee7e7d2dd6ece405d675cc4b307ad04","tarball":"http://registry.npmjs.org/mekanika-adapter-http/-/mekanika-adapter-http-0.3.0.tgz"},"maintainers":[{"name":"cayuu","email":"cayuu@neonrelic.com"}],"readmeFilename":"README.md","time":{"modified":"2015-05-07T04:58:01.636Z","created":"2015-03-30T06:09:46.535Z","0.2.0":"2015-03-30T06:09:46.535Z","0.3.0":"2015-05-07T04:58:01.636Z"}}}