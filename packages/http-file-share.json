{"name":"http-file-share","version":"1.0.0","description":"Read and write files under a directory over HTTP","main":"index.js","scripts":{"test":"./node_modules/mocha/bin/mocha test"},"repository":"https://github.com/limulus/http-file-share","keywords":["http","file","share","get","put"],"license":"MIT","homepage":"https://github.com/limulus/http-file-share","devDependencies":{"mocha":"^1.21.4","ncp":"^0.6.0","node-mocks-http":"^1.0.4","portfinder":"^0.2.1","request":"^2.42.0","temp":"^0.8.1"},"dependencies":{"mime":"^1.2.11","rimraf":"^2.2.8","subdir":"0.0.3"},"gitHead":"cb65e34b982b702696cd0e3a2daad802f0f63d77","versions":[{"number":"1.0.0","date":"2014-09-16T06:33:39.448Z"}],"readme":"# http-file-share   [![Build Status](https://travis-ci.org/limulus/http-file-share.svg?branch=master)](https://travis-ci.org/limulus/http-file-share)\n\nRead and write files under a directory over HTTP\n\n\n## Synopsis\n\nProvides a REST-like interface for GET-ing, PUT-ing and DELETE-ing static files on a server. No attempts at authentication are made, so do not use this module without the appropriate logic to intercept non-authenticated requests — or only ever use it on single-user workstations.\n\nUltimately, a WebDAV server may be a more complete solution for you if that’s what you need. On the other hand, if you need something quick, simple and doesn’t rely on a bunch of broken modules, this might be your ticket.\n\n\n## Installation\n\n```shell\nnpm install http-file-share\n```\n\n\n## Usage\n\nThe following creates an HTTP server that listens on localhost port 8000 and shares the contents of the `public` directory under the `/shared/` URL.\n\n```javascript\nvar http = require(\"http\")\nvar path = require(\"path\")\nvar httpFileShare = require(\"http-file-share\")\n\nvar sharePath = path.join(__dirname, \"public\")\nvar shareRequestHandler = httpFileShare(sharePath, /^\\/shared/)\nvar server = http.createServer(shareRequestHandler)\n\nserver.listen(8000, \"127.0.0.1\", function () {\n  console.log(\"Sharing on http://127.0.0.1:8000/shared/\")\n})\n```\n\n\n## Exports\n\n### httpFileShare(sharePath, [baseRoute], [contentTypeMappingFunction])\n\nConvenience function that returns a request handler. See the `Share` constructor below for argument descriptions.\n\n\n### httpFileShare.Share\n\n\n#### new Share(sharePath, [baseRoute], [contentTypeMappingFunction])\n\nConstructor for a shared directory.\n\n  - `sharePath` is the path to the directory you want to share.\n  - `baseRoute` is a regular expression that matches URLs you want this handler to respond to. The default is `/^\\//`.\n  - `contentTypeMappingFunction` is used to specify a function for mapping file paths to Content-type header values. The default is to use the `lookup` method of the <a href=\"https://www.npmjs.org/package/mime\">mime</a> module.\n\n\n#### Share.prototype.handleRequest(request, response)\n\nHandle a request.\n\n  - `request` is an `http.IncomingMessage` object.\n  - `response` is an `http.ServerResponse` object.\n","created":"2014-09-16T06:33:39.448Z","modified":"2014-09-16T06:33:39.448Z","lastPublisher":{"name":"limulus","email":"eric@limulus.net"},"owners":[{"name":"limulus","email":"eric@limulus.net"}],"other":{"_attachments":{},"_from":".","_id":"http-file-share","_npmUser":{"name":"limulus","email":"eric@limulus.net"},"_npmVersion":"1.4.23","_rev":"1-fbc98f238905409ba2640bd8cbd817a6","_shasum":"7549700d4df7f2c4a5267ef7b13809d2fb73f9f2","author":{"name":"Eric McCarthy","email":"eric@limulus.net","url":"http://www.limulus.net/"},"bugs":{"url":"https://github.com/limulus/http-file-share/issues"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"7549700d4df7f2c4a5267ef7b13809d2fb73f9f2","tarball":"http://registry.npmjs.org/http-file-share/-/http-file-share-1.0.0.tgz"},"maintainers":[{"name":"limulus","email":"eric@limulus.net"}],"readmeFilename":"README.md","time":{"modified":"2014-09-16T06:33:39.448Z","created":"2014-09-16T06:33:39.448Z","1.0.0":"2014-09-16T06:33:39.448Z"}}}