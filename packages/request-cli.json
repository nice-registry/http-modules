{"name":"request-cli","version":"1.0.0","description":"CLI binary to realize HTTP requests in a Curl fashion using nodejs request/request module.","main":"index.js","scripts":{"test":"mocha"},"keywords":["request","http","cli"],"bin":{"request":"index.js","req":"index.js"},"license":"WTF","dependencies":{"commander":"^2.8.0","npmlog":"^1.2.0","fs-extra":"^0.18.2","request":"^2.55.0"},"devDependencies":{"body-parser":"^1.12.3","express":"^4.12.3","should":"^6.0.1"},"gitHead":"ec16cb51f1555a9480f4660eaddf1836452fad52","versions":[{"number":"1.0.0","date":"2015-07-15T13:20:49.042Z"}],"readme":"# request-cli\n\nA cli program to execute http request with request/request node js module.\n\nIn the fashion of the famous curl, with ease of NodeJS.\n\n\n# Install\n\n```npm i request-cli -g```\n\n\nIf i have not yet published this module to NPM, please use this syntax meanwhile.\n\n```npm i maboiteaspam/request-cli -g```\n\n\n# Options\n\n```sh\n\nUsage: req <url> [options]\n\nOptions:\n\n-h, --help                    output usage information\n-V, --version                 output the version number\n\n--raw                         Raw display, no pretty print\n\n--body                        Display Body response\n\n-i, --reqheaders              Display Request headers\n\n-I, --resheaders              Display Response headers\n\n-m, --method <HTTPMethod>     Request HTTP method\n\n-X, --request <HTTPMethod>    Request HTTP method. (Curl Style)\n\n-k, --insecure                Allow insecure ssl certificates. (Curl Style)\n\n-u, --useragent <UserAgent>   User agent to inject to your query\n\n-A, --user-agent <UserAgent>  User agent to inject to your query (Curl Style)\n\n-c, --cookies <cookies>       Set cookie string, such \"a=v1&b=v2\", don t forget quotes \n                              on unix because of the &.\n                              \n-b, --cookie <name=data>      Pass the data to the HTTP server as a cookie. (Curl Style)\n\n-d, --data <data>             Sends the specified data in a POST request to the HTTP server, \n                              in the same way that a browser does when a user has filled \n                              in an HTML form and presses the submit button. (Curl Style)\n                              \n-e, --referer <url>           Sends the \"Referrer Page\" information to the HTTP server. (Curl Style)\n\n-H, --header <header>         Extra header to include in the request when sending HTTP \n                              to a server. (Curl Style)\n                              \n--data-raw <data>             This posts data similarly to --data but without the \n                              special interpretation of the @ character. (Curl Style)\n                              \n--data-urlencode  <data>      This posts data, similar to the other --data options \n                              with the exception that this performs URL-encoding. (Curl Style)\n                              \n-L, --location                Follow redirects. (Curl Style)\n\n-o, --output <file>           Output to specified file. (Curl Style)\n\n-u, --user <user:password>    HTTP Auth. (Curl Style)\n\n-u, --user <user:password>    HTTP Auth. (Curl Style)\n\n-T, --upload-file <file>      Send a file to a remote HTTP server (Like webdav) using PUT method. (Curl Style)\n\n--pre-crlf                    Multipart/* specifics. It will add newline/CRLF before the boundary. See more at request/request.\n\n--post-crlf                   Multipart/* specifics. It will add newline/CRLF after the boundary. See more at request/request.\n```\n\n\n# Usage\n\n```sh\n    request http://some.com/curl\n    req http://some.com/curl -u 'some user agent'\n    req http://some.com/curl -X POST -d \"{\\\"some\\\":\\\"data\\\"}\"\n    req http://some.com/curl -X POST -d some=data\n    \n    # if you want/need to do some webdav thing, here you go\n    req http://user:pass@some.com/curl URL_TO_STORE_FILE.EXT -T THE_PATH_TO_STORE.ext\n    req http://user:pass@some.com/curl URL_TO_STORE_FILE.EXT -X DELETE\n    req http://user:pass@some.com/curl URL_TO_FOLDER_TO_CREATE -X MKCOL\n    # use DELETE method to remove a folder too.\n```\n\n\n# Status\n\nIn development. It needs to implement all listed options above.\n","starsCount":1,"created":"2015-07-15T13:20:49.042Z","modified":"2015-07-15T13:20:49.042Z","lastPublisher":{"name":"maboiteaspam","email":"cpasmaboiteaspam@gmail.com"},"owners":[{"name":"maboiteaspam","email":"cpasmaboiteaspam@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"request-cli","_nodeVersion":"0.12.4","_npmUser":{"name":"maboiteaspam","email":"cpasmaboiteaspam@gmail.com"},"_npmVersion":"2.10.1","_rev":"1-2f2a11ab7c051a38a40db1f09ca72c12","_shasum":"c0d1f926cf9c58bf81326fa4fcd16a38e62b24d8","author":{"name":"maboiteaspam"},"directories":{},"dist-tags":{"latest":"1.0.0"},"dist":{"shasum":"c0d1f926cf9c58bf81326fa4fcd16a38e62b24d8","tarball":"http://registry.npmjs.org/request-cli/-/request-cli-1.0.0.tgz"},"maintainers":[{"name":"maboiteaspam","email":"cpasmaboiteaspam@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-15T13:20:49.042Z","created":"2015-07-15T13:20:49.042Z","1.0.0":"2015-07-15T13:20:49.042Z"},"users":{"yi":true}}}