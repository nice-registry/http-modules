{"name":"locomotive-http-socketio-server","version":"0.1.1","description":"Locomotive boot server that also listens on socket.io","keywords":["locomotive","express","socket.io","websockets"],"repository":"https://github.com/kayakyakr/locomotive-http-socketio-server","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/MIT"}],"main":"./lib/httpSocketioServer","dependencies":{"socket.io":"*"},"engines":{"node":">= 0.4.0"},"homepage":"https://github.com/kayakyakr/locomotive-http-socketio-server","versions":[{"number":"0.1.1","date":"2014-01-24T22:48:33.773Z"}],"readme":"locomotive-http-socketio-server\n===============================\n\nIntegration of locomotive (express) and socket.io\n\n## Installation\n\n    npm install locomotive-http-socketio-server\n    \n## Usage\n\nChange your server.js file to use httpSocketioServer. The socket.io instance will be available off app.sio.\n\n```\nvar locomotive = require('locomotive')\n  , bootable = require('bootable');\nlocomotive.boot.httpSocketioServer = require('locomotive-http-socketio-server');\n\n// Create a new application and initialize it with *required* support for\n// controllers and views.  Move (or remove) these lines at your own peril.\nvar app = new locomotive.Application();\napp.phase(locomotive.boot.controllers(__dirname + '/app/controllers'));\napp.phase(locomotive.boot.views());\n\n// Add phases to configure environments, run initializers, draw routes, and\n// start an HTTP server.  Additional phases can be inserted as neeeded, which\n// is particularly useful if your application handles upgrades from HTTP to\n// other protocols such as WebSocket.\napp.phase(require('bootable-environment')(__dirname + '/config/environments'));\napp.phase(bootable.initializers(__dirname + '/config/initializers'));\napp.phase(locomotive.boot.routes(__dirname + '/config/routes'));\napp.phase(locomotive.boot.httpSocketioServer(3000, '0.0.0.0'));\n\n// Handle the socket.io events that are specific to your application\napp.phase(require(__dirname + '/lib/socket'))\n\n// Boot the application.  The phases registered above will be executed\n// sequentially, resulting in a fully initialized server that is listening\n// for requests.\napp.boot(function(err) {\n  if (err) {\n    console.error(err.message);\n    console.error(err.stack);\n    return process.exit(-1);\n  }\n});\n```\n\nThen, in lib/socket.js:\n\n```\nmodule.exports = function(){\n  // listen to the connect event\n  this.sio.sockets.on('connection', function(socket){\n    \n  });\n}\n```\n\n## License and other\n\nThis code is provided under the MIT license. No support is provided, use at your own risk.\n","created":"2014-01-24T22:48:33.773Z","modified":"2014-01-24T22:48:33.773Z","lastPublisher":{"name":"kayakyakr","email":"kayakyakr@gmail.com"},"owners":[{"name":"kayakyakr","email":"kayakyakr@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"locomotive-http-socketio-server","_npmUser":{"name":"kayakyakr","email":"kayakyakr@gmail.com"},"_npmVersion":"1.3.25","_rev":"1-1a650f50e99915c11052f3aaa292190c","author":{"name":"Charles DuBose","email":"kayakyakr@gmail.com","url":"http://www.yakrware.com/"},"bugs":{"url":"https://github.com/kayakyakr/locomotive-http-socketio-server/issues"},"directories":{},"dist-tags":{"latest":"0.1.1"},"dist":{"shasum":"93a6daa9e547e040d3b7922b25e66be3ef7c12a5","tarball":"http://registry.npmjs.org/locomotive-http-socketio-server/-/locomotive-http-socketio-server-0.1.1.tgz"},"maintainers":[{"name":"kayakyakr","email":"kayakyakr@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2014-01-24T22:48:33.773Z","created":"2014-01-24T22:48:33.773Z","0.1.1":"2014-01-24T22:48:33.773Z"}}}