{"name":"cashed","version":"0.1.0","description":"An in memory HTTP file serving cache that compresses once and serves many times","keywords":["cache","compression","http","memory"],"main":"./src/index.coffee","scripts":{"test":"./node_modules/.bin/mocha --recursive"},"dependencies":{"mock-http-response":"*","negotiator":"*","filed":"git://github.com/mikeal/filed.git#d91f70647a703e8db610a8b67c6d31bef457ed9d","oppressor":"*"},"devDependencies":{"coffee-script":"1.3.x","mocha":"1.4.x"},"readme":"Cashed\n======\nCash rules everything around me, C.R.E.A.M! Get the money, dolla dolla\nbill ya'll\n\nCashed is an in memory compress once serve many times static file server\nwith propper support for Etags and 304 responses.\n\nWhy?\n====\nCompressing static resources is an imporant optimization for serving\nresources as fast as possible. The problem with compression in node.js is\nthat it's a CPU bound activity, meaning while the asset is being compressed\nthe event loop is temporarily blocked. Also, it just doesn't make sense to\nhave to compress the same resource every time it's requested as the same\nresult will be produced every time.\n\nWhat's the magic?\n=================\nWhen a request is received for a static resource by `cashed` and we don't\nhave a matching file/compression-algo payload stashed in memory we generate\none and push the results through the response stream and stash them in\nmemory as well. So all subsequent requests for the same static resource will\nbe served pre-compressed and directly from memory. Cashed currently supports\nGzip and Deflate compression algorithms and caches them both independently.\n\nAs a free side effect of using `filed` we also get Etag based caching for\nfree. When an Etag cache it is detected by `cashed` the resulting HTTP\npayload the HTTP client will receive in the 304 response is typically\n~53 bytes, because the resource doesn't have to be sent to the client, just\nsome cache hit headers and the 304 status code.\n","versions":[{"number":"0.1.0","date":"2012-09-29T18:38:36.323Z"}],"created":"2012-09-29T18:38:34.602Z","modified":"2012-09-29T18:38:36.323Z","lastPublisher":{"name":"josephmoniz","email":"joseph.moniz@gmail.com"},"owners":[{"name":"josephmoniz","email":"joseph.moniz@gmail.com"}],"other":{"_attachments":{},"_id":"cashed","_npmUser":{"name":"josephmoniz","email":"joseph.moniz@gmail.com"},"_npmVersion":"1.1.49","_rev":"1-0aabb43a5ec42fc282f3e976d85a7f8c","author":{"name":"Joseph Moniz","email":"joseph.moniz@gmail.com"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"f953035c6c48d2a56f3cb8d8d28686a546b8f50b","tarball":"http://registry.npmjs.org/cashed/-/cashed-0.1.0.tgz"},"maintainers":[{"name":"josephmoniz","email":"joseph.moniz@gmail.com"}],"time":{"modified":"2012-09-29T18:38:36.323Z","created":"2012-09-29T18:38:34.602Z","0.1.0":"2012-09-29T18:38:36.323Z"}}}