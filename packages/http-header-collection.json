{"name":"http-header-collection","description":"Standard object and utilities for dealing with http headers.","version":"1.1.0","scripts":{"dev":"npm run build && npm test","build":"rollup -c","test":"mocha -r ./test/lib/helper test"},"repository":"https://github.com/cmawhorter/http-header-collection","main":"dist/http-header-collection.umd.js","module":"dist/http-header-collection.es2015.js","jsnext:main":"dist/http-header-collection.es2015.js","engines":{"node":">=0.12.0 - <9.0.0"},"license":"MIT","dependencies":{},"devDependencies":{"babel-plugin-external-helpers":"^6.18.0","babel-preset-es2015":"^6.18.0","expect":"^1.20.2","mocha":"^3.2.0","rollup":"^0.41.1","rollup-plugin-babel":"^2.7.1","source-map-support":"^0.4.9"},"gitHead":"3aa6cddf7b50dbfc8c7e050e43f895ef03e0906d","homepage":"https://github.com/cmawhorter/http-header-collection#readme","versions":[{"number":"1.1.0","date":"2017-06-12T20:17:24.461Z"}],"readme":"# http-header-collection [![Build Status](https://travis-ci.org/cmawhorter/http-header-collection.svg?branch=master)](http://travis-ci.org/cmawhorter/http-header-collection)\n\nA collection of utility functions with no dependencies that help when working with a collection of http headers.\n\n## Getting started\n\nLook at `./tests/*` or the example below.\n\n## Example class \n\nThis example is used in [apigateway-http-request](https://github.com/cmawhorter/apigateway-http-request/blob/ea9eb6620a43095fb0cb76073b8ab1d83a9c5ae7/src/lib/http-headers.js) to process incoming HTTP headers in AWS' non-RFC compliant methodology i.e. no dupe header names allowed.\n\nYou can use this example to create your own implementation or use the utility functions directly.\n\n\n```js\nimport { remove, replace, toHash, fromHash, find } from 'http-header-collection';\n\nexport default class HttpHeaders {\n  constructor(arrOrHash) {\n    this._collection = [];\n    this.import(arrOrHash);\n  }\n\n  import(arrOrHash) {\n    if (Array.isArray(arrOrHash)) {\n      this._collection = arrOrHash;\n    }\n    else if (null !== arrOrHash && undefined !== arrOrHash) {\n      this._collection = fromHash(arrOrHash, true);\n    }\n  }\n\n  get(headerName) {\n    let headerValues = find(this._collection, headerName);\n    return null === headerValues ? undefined : headerValues[0];\n  }\n\n  add(headerName, headerValue) {\n    // apigateway doesn't support dupe header names (multiple values)\n    replace(this._collection, headerName, [headerValue]);\n  }\n\n  remove(headerName) {\n    remove(this._collection, headerName);\n  }\n\n  toRawHeaders() {\n    let rawHeaders = [];\n    for (let [headerId, headerName, headerValues] of this._collection) {\n      let headerValue = headerValues[0];\n      if (headerValue && null !== headerValue) {\n        rawHeaders.push(`${headerName}: ${headerValue}`);\n      }\n    }\n    return rawHeaders;\n  }\n\n  toJSON() {\n    let flattenHeaderValues       = true;\n    let strictHeaderValueRequired = true;\n    return toHash(this._collection, flattenHeaderValues, strictHeaderValueRequired);\n  }\n\n  toString() {\n    return this.toRawHeaders().join('\\n');\n  }\n\n  // array methods\n\n  _nativeArrayMethod(method, args) {\n    return this._collection[method].apply(this._collection, args);\n  }\n\n  get length() {\n    return this._collection.length;\n  }\n\n  forEach()   { return this._nativeArrayMethod('forEach', arguments); }\n  every()     { return this._nativeArrayMethod('every', arguments); }\n  filter()    { return this._nativeArrayMethod('filter', arguments); }\n  find()      { return this._nativeArrayMethod('find', arguments); }\n  includes()  { return this._nativeArrayMethod('includes', arguments); }\n  map()       { return this._nativeArrayMethod('map', arguments); }\n  some()      { return this._nativeArrayMethod('some', arguments); }\n}\n\n```\n","created":"2017-06-12T20:17:24.461Z","modified":"2017-06-12T20:17:24.461Z","lastPublisher":{"name":"cmawhorter","email":"cory.mawhorter@gmail.com"},"owners":[{"name":"cmawhorter","email":"cory.mawhorter@gmail.com"}],"other":{"_attachments":{},"_id":"http-header-collection","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-header-collection-1.1.0.tgz_1497298644354_0.9487060240935534"},"_npmUser":{"name":"cmawhorter","email":"cory.mawhorter@gmail.com"},"_npmVersion":"5.0.3","_rev":"1-e83409785a5899ead7f043ddd19b41c1","author":{"name":"Cory Mawhorter","email":"cory.mawhorter@gmail.com"},"bugs":{"url":"https://github.com/cmawhorter/http-header-collection/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"integrity":"sha512-UsrPnl9F0o4eKTdixmw2tf1dgdafWfHiIh+RrFq2p+o716e+dDnrMrzsf7PVrs0tc0249FEU6xejZ2jCWPeBCw==","shasum":"e097f4b74358ab8b476a975fae2115dc4dde4a41","tarball":"https://registry.npmjs.org/http-header-collection/-/http-header-collection-1.1.0.tgz"},"maintainers":[{"name":"cmawhorter","email":"cory.mawhorter@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-12T20:17:24.461Z","created":"2017-06-12T20:17:24.461Z","1.1.0":"2017-06-12T20:17:24.461Z"}}}