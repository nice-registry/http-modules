{"name":"contentful-webhook-listener","version":"1.0.2","description":"A Simple HTTP Webserver for listening to Contentful API Webhooks with JavaScript","main":"index.js","scripts":{"test":"eslint index.js"},"repository":"https://github.com/keithws/contentful-webhook-listener.js","keywords":["contentful","webhook","listener","server","web","hook","listening","api","contentful-webhook","webhook-listener"],"license":"MIT","homepage":"https://github.com/keithws/contentful-webhook-listener.js#readme","devDependencies":{"eslint":"^3.9.1"},"gitHead":"2599338901035dc1352b4b6615a1ec6b110a743b","versions":[{"number":"1.0.0","date":"2016-11-03T22:43:21.213Z"},{"number":"1.0.1","date":"2016-11-03T22:50:44.102Z"},{"number":"1.0.2","date":"2016-11-09T01:04:46.864Z"}],"readme":"# Contentful Webhook Listener\n\n[![Build Status](https://travis-ci.org/keithws/contentful-webhook-listener.js.svg?branch=master)](https://travis-ci.org/keithws/contentful-webhook-listener.js) [![NPM Dependency Status](https://david-dm.org/keithws/contentful-webhook-listener.js.svg)](https://david-dm.org/keithws/contentful-webhook-listener.js) [![NPM Verion](https://img.shields.io/npm/v/contentful-webhook-listener.svg)](https://www.npmjs.com/package/contentful-webhook-listener)\n\nA Simple HTTP Webserver for listening to Contentful API Webhooks with JavaScript. This uses Node.js to create a web server and then emits events for each action (create, save, autoSave, etc) that occurs in Contentful.\n\n> [Contentful][4] is a content management platform for web applications, mobile apps and connected devices. It allows you to create, edit & manage content in the cloud and publish it anywhere via powerful API. Contentful offers tools for managing editorial teams and enabling cooperation between organizations.\n\n> Webhooks in Contentful can notify you or someone else when content has changed by calling a preconfigured HTTP endpoint. This can be used for notifications, static site generators or other forms of post-processing sourced from Contentful.\n\nSetup a custom callback that executes on-demand and it will receive the latest version of the Entry, Asset, or Content Type for each `create`, `save`, `autoSave`, `archive`, `unarchive`, or `publish` event in Contentful. The `unpublish` and `delete` events in Contentful send a DeletedEntry or DeletedAsset payload.\n\nSee the [Contentful Content Management API][2] documentation for more details webhooks.\n\nPair this with [ngork][5] for local development that responds to actions in Contentful or consider the [contentful-webhook-tunnel][6] module which automates the whole process.\n\n## Install\n\n```shell\nnpm install contentful-webhook-listener\n```\n\n## Usage\n\n```node\nvar listener = require(\"contentful-webhook-listener\");\nvar webhook = listener.createServer();\nvar port = 5000;\n\nwebhook.on(\"publish\", function (payload) {\n\n\tconsole.log(payload);\n\n});\n\nwebhook.listen(port);\n```\n\n`listener` extends the `http` module, so all the methods, properties, and events from the `http` module are available on the `listener` module.\n\n`createServer()` accepts a options argument in addition to the standard requestListener function. The options argument accepts a `auth` property which will enable and enforce HTTP Basic Authentication. The `auth` property value should be the username and password in `<username>:<password>` format.\n\n```node\nvar listener = require(\"contentful-webhook-listener\");\nvar webhook = listener.createServer({\n\t\"auth\": \"username:password\"\n}, function requestListener (request, response) {\n\n\tconsole.log(\"request received\");\n\n});\nvar port = 5000;\n\nwebhook.on(\"publish\", function (payload) {\n\n\tconsole.log(payload);\n\n});\n\nwebhook.listen(port, function callback () {\n\n\tconsole.log(\"server is listening\");\n\n});\n```\n\n## Payload Properties\n\nThe payload returned has the following properties for the `create`, `save`, `autoSave`, `archive`, `unarchive`, or `publish` events. Sample data from the Contentful API sample space with cats.\n\n```json\n{\n\t\"contentType\": \"cat\",\n\t\"fields\": {\n\t\t\"name\": {\n\t\t\t\"en-US\": \"Nyan Cat\"\n\t\t},\n\t\t\"likes\": {\n\t\t\t\"en-US\": [\n\t\t\t\t\"rainbows\",\n\t\t\t\t\"fish\"\n\t\t\t]\n\t\t},\n\t\t\"color\": {\n\t\t\t\"en-US\": \"rainbow\"\n\t\t},\n\t\t\"bestFriend\": {\n\t\t\t\"type\": \"Link\",\n\t\t\t\"linkType\": \"Entry\",\n\t\t\t\"id\": \"happycat\"\n\t\t},\n\t\t\"birthday\": {\n\t\t\t\"en-US\": \"2011-04-04T22:00:00+00:00\"\n\t\t},\n\t\t\"lives\": {\n\t\t\t\"en-US\": 1337\n\t\t},\n\t\t\"image\": {\n\t\t\t\"type\": \"Link\",\n\t\t\t\"linkType\": \"Asset\",\n\t\t\t\"id\": \"nyancat\"\n\t\t}\n\t},\n\t\"id\": \"cat_nyancat\",\n\t\"kind\": \"Entry\",\n\t\"origin\": \"ContentManagement\",\n\t\"space\": \"cfexampleapi\",\n\t\"sys\": {\n\t\t\"space\": {\n\t\t\t\"sys\": { }\n\t\t},\n\t\t\"type\": \"Entry\",\n\t\t\"contentType\": {\n\t\t\t\"sys\": { }\n\t\t},\n\t\t\"id\": \"cat_nyancat\",\n\t\t\"revision\": 1,\n\t\t\"createdAt\": \"2016-10-24T19:48:51.128Z\",\n\t\t\"updatedAt\": \"2016-11-03T03:12:28.855Z\"\n\t},\n\t\"webhookName\": \"localhost\"\n}\n```\n\nThe payload has the following properties for the `unpublish` and `delete` events:\n\n```json\n{\n\t\"contentType\": \"cat\",\n\t\"fields\": null,\n\t\"id\": \"cat_nyancat\",\n\t\"kind\": \"Entry\",\n\t\"origin\": \"ContentManagement\",\n\t\"space\": \"cfexampleapi\",\n\t\"sys\": {\n\t\t\"space\": {\n\t\t\t\"sys\": { }\n\t\t},\n\t\t\"type\": \"DeletedEntry\",\n\t\t\"contentType\": {\n\t\t\t\"sys\": { }\n\t\t},\n\t\t\"id\": \"cat_nyancat\",\n\t\t\"revision\": 2,\n\t\t\"createdAt\": \"2016-11-03T03:10:55.676Z\",\n\t\t\"updatedAt\": \"2016-11-03T03:10:55.676Z\",\n\t\t\"deletedAt\": \"2016-11-03T03:10:55.676Z\"\n\t},\n\t\"webhookName\": \"localhost\"\n}\n```\n\n## Todo\n\n* add a command line interface\n\n## Change Log\n\n_1.0.2 — November 8, 2016_\n\n* closer server after emitting an error\n* only set contentType when contentType is available\n\n_1.0.1 — November 3, 2016_\n\n* fixed npm badge in readme\n* fixed date of first release in change log\n\n_1.0.0 — November 3, 2016_\n\n* initial version\n* provides functionality similar the [Contentful Webhook Listener][3] but with Node.js instead of Ruby\n\n## License\n\ncontentful-webhook-listener.js is available under the [MIT License][1].\n\n\n\n\n[1]: https://github.com/keithws/contentful-webhook-listener/blob/master/LICENSE\n[2]:  https://www.contentful.com/developers/docs/references/content-management-api/#/reference/webhooks/create/update-a-webhook\n[3]: https://github.com/contentful/contentful-webhook-listener.rb\n[4]: http://www.contentful.com/\n[5]: https://ngrok.com\n[6]: https://github.com/keithws/contentful-webhook-tunnel\n","created":"2016-11-03T22:43:21.213Z","modified":"2016-11-09T01:04:46.864Z","lastPublisher":{"name":"keithws","email":"keith.w.shaw@gmail.com"},"owners":[{"name":"keithws","email":"keith.w.shaw@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"contentful-webhook-listener","_nodeVersion":"6.3.1","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/contentful-webhook-listener-1.0.2.tgz_1478653484956_0.011454323306679726"},"_npmUser":{"name":"keithws","email":"keith.w.shaw@gmail.com"},"_npmVersion":"3.10.3","_rev":"3-30bd7392adf21c59479f7271ee319ef7","_shasum":"6f157543bf55d0be23aa062d16218b0fbc2a17ba","author":{"name":"Keith W. Shaw","email":"keith.w.shaw@gmail.com"},"bugs":{"url":"https://github.com/keithws/contentful-webhook-listener.js/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"6f157543bf55d0be23aa062d16218b0fbc2a17ba","tarball":"http://registry.npmjs.org/contentful-webhook-listener/-/contentful-webhook-listener-1.0.2.tgz"},"maintainers":[{"name":"keithws","email":"keith.w.shaw@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-11-09T01:04:46.864Z","created":"2016-11-03T22:43:21.213Z","1.0.0":"2016-11-03T22:43:21.213Z","1.0.1":"2016-11-03T22:50:44.102Z","1.0.2":"2016-11-09T01:04:46.864Z"}}}