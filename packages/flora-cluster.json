{"name":"flora-cluster","version":"0.7.1","description":"Simple cluster manager module with status tracking for HTTP servers","main":"index.js","scripts":{"test":"grunt test","lint":"eslint lib"},"keywords":["cluster","process manager","zero downtime","status tracking"],"homepage":"https://github.com/godmodelabs/flora-cluster","license":"MIT","repository":"https://github.com/godmodelabs/flora-cluster","dependencies":{"bunyan":"^1.5.1"},"devDependencies":{"chai":"^3.4.1","eslint":"^3.10.2","eslint-config-airbnb-base":"^11.0.0","eslint-plugin-import":"^2.2.0","grunt":"^1.0.1","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.0.0","grunt-eslint":"^19.0.0","grunt-jsdoc":"^2.0.0","grunt-mocha-istanbul":"^5.0.2","grunt-mocha-test":"^0.13.2","istanbul":"^0.4.2","load-grunt-tasks":"^3.4.0","mocha":"^3.2.0","mocha-bamboo-reporter":"^1.1.0"},"engines":{"node":">=6"},"gitHead":"2173819c6b6528bd6c51bb1e00b25cf68d36790f","versions":[{"number":"0.4.0","date":"2015-07-10T15:02:55.631Z"},{"number":"0.5.0","date":"2015-09-14T10:23:40.931Z"},{"number":"0.5.1","date":"2015-12-04T13:08:14.866Z"},{"number":"0.5.2","date":"2016-02-17T14:45:32.250Z"},{"number":"0.5.3","date":"2016-03-01T14:21:29.106Z"},{"number":"0.5.4","date":"2016-03-07T18:02:19.472Z"},{"number":"0.5.5","date":"2016-03-11T10:14:23.098Z"},{"number":"0.6.0","date":"2016-03-15T16:15:59.281Z"},{"number":"0.6.1","date":"2016-03-16T18:22:59.145Z"},{"number":"0.6.2","date":"2016-04-07T12:48:04.448Z"},{"number":"0.6.3","date":"2016-05-04T14:06:14.089Z"},{"number":"0.7.0","date":"2017-01-03T17:17:02.176Z"},{"number":"0.7.1","date":"2017-01-12T15:45:25.565Z"}],"readme":"Flora Cluster\n=============\n\n[![Build Status](https://travis-ci.org/godmodelabs/flora-cluster.svg?branch=master)](https://travis-ci.org/godmodelabs/flora-cluster)\n[![NPM version](https://badge.fury.io/js/flora-cluster.svg)](https://www.npmjs.com/package/flora-cluster)\n[![Dependencies](https://img.shields.io/david/godmodelabs/flora-cluster.svg)](https://david-dm.org/godmodelabs/flora-cluster)\n\nSimple cluster manager module with status tracking for HTTP servers.\n\nFlora requires __node v6__ or higher.\n\nFeatures\n--------\n\n- Updates in production with zero downtime - *complete worker code is replaceable without shutdown*\n- Self-monitoring process-management - *respawn workers on error (as you would expect)*\n- Rollback generation if reload fails - *best chances to have a running version everytime*\n- Aggregated status with connection-/request-tracking - *see in realtime what happens in production*\n- Status extendible (global counters and per-request infos) - *trace your app in realtime - in production*\n- Node.js cluster based implementation\n\n\nExamples\n--------\n\n### master.js\n\nThe master process will start 3 workers and restarts them on crashes:\n\n```js\nconst { Master } = require('flora-cluster');\n\nconst master = new ClusterMaster({\n    exec: require('path').join(__dirname, 'worker.js',\n    workers: 3 // defaults to os.cpus().length\n});\n\nmaster.run();\n```\n\n### worker.js\n\n```js\nconst { createServer } = require('http');\nconst { Worker } = require('flora-cluster');\n\nconst worker = new ClusterWorker();\n\nconst httpServer = createServer((req, res) => {\n    res.writeHead(200, { 'Content-Type': 'text/plain' });\n    res.end('Hello World\\n');\n});\n\nworker.attach(httpServer);\n\nworker.on('close', () => httpServer.close());\n\nhttpServer.listen(1337);\n\nhttpServer.on('listening', () => worker.ready());\n```\n\n### server-status\n\nYou can retrieve an aggregated status from all workers:\n\n```js\nworker.serverStatus((err, status) => console.log(status));\n```\n\n### full example\n\nSee \"example\" folder.\n\n\nBest practices\n--------------\n\n### Startup-Tests\n\nYou can perform extended tests in your worker on startup - just exit if something fails. On a graceful\nreload, the master process will cancel the reload and shutdown all workers of the new generation.\nReload is assumed to be successful when all workers called their ready() function. The old generation\nof workers is shutdown not before all new workers are up and running.\n\n### Status\n\nAggregated status over all workers can be requested from inside a worker and from the master process.\nSo it is possible to integrate the status into your application. Another possibility is to start a\nHTTP server inside the master process on a management port for those requests.\n\n\nLicense\n-------\n\n[MIT](LICENSE)\n","created":"2015-07-10T15:02:55.631Z","modified":"2017-01-12T15:45:25.565Z","lastPublisher":{"name":"nicokaiser","email":"nico@kaiser.me"},"owners":[{"name":"nicokaiser","email":"nico@kaiser.me"},{"name":"not-implemented","email":"not-implemented@mark-plomer.de"},{"name":"riplexus","email":"riplexus@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"flora-cluster","_nodeVersion":"6.9.2","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/flora-cluster-0.7.1.tgz_1484235925020_0.7042276232969016"},"_npmUser":{"name":"nicokaiser","email":"nico@kaiser.me"},"_npmVersion":"3.10.9","_rev":"3-a72d4f2e3ee7d3238c95179c6f391ef2","_shasum":"0baa5f65ac9fcb6dd0d2962621dfcc511330a8fd","author":{"name":"BÃ¶rseGo AG","email":"it@boerse-go.de"},"bugs":{"url":"https://github.com/godmodelabs/flora-cluster/issues"},"contributors":[{"name":"Mark Plomer","email":"mark.plomer@boerse-go.de"},{"name":"Nico Kaiser","email":"nico.kaiser@boerse-go.de"}],"directories":{},"dist-tags":{"latest":"0.7.1"},"dist":{"shasum":"0baa5f65ac9fcb6dd0d2962621dfcc511330a8fd","tarball":"https://registry.npmjs.org/flora-cluster/-/flora-cluster-0.7.1.tgz"},"maintainers":[{"name":"nicokaiser","email":"nico@kaiser.me"},{"name":"not-implemented","email":"not-implemented@mark-plomer.de"},{"name":"riplexus","email":"riplexus@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-01-12T15:45:25.565Z","created":"2015-07-10T15:02:55.631Z","0.4.0":"2015-07-10T15:02:55.631Z","0.5.0":"2015-09-14T10:23:40.931Z","0.5.1":"2015-12-04T13:08:14.866Z","0.5.2":"2016-02-17T14:45:32.250Z","0.5.3":"2016-03-01T14:21:29.106Z","0.5.4":"2016-03-07T18:02:19.472Z","0.5.5":"2016-03-11T10:14:23.098Z","0.6.0":"2016-03-15T16:15:59.281Z","0.6.1":"2016-03-16T18:22:59.145Z","0.6.2":"2016-04-07T12:48:04.448Z","0.6.3":"2016-05-04T14:06:14.089Z","0.7.0":"2017-01-03T17:17:02.176Z","0.7.1":"2017-01-12T15:45:25.565Z"}}}