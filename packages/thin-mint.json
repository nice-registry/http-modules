{"name":"thin-mint","version":"1.0.3","description":"HTTP cookie utility","main":"lib/index.js","homepage":"https://github.com/continuationlabs/thin-mint","repository":"https://github.com/continuationlabs/thin-mint","license":"MIT","scripts":{"test":"belly-button && lab -v -t 100 -a code"},"devDependencies":{"belly-button":"1.x.x","code":"1.x.x","lab":"6.x.x"},"keywords":["cookie","http"],"gitHead":"7fe7c5b177ba07b904730a9de2ed59c179c6af7b","versions":[{"number":"1.0.0","date":"2015-09-09T16:46:56.082Z"},{"number":"1.0.1","date":"2015-09-18T02:19:50.044Z"},{"number":"1.0.2","date":"2015-10-13T02:24:13.423Z"},{"number":"1.0.3","date":"2015-10-23T01:20:13.092Z"}],"readme":"# thin-mint\n\n[![Current Version](https://img.shields.io/npm/v/thin-mint.svg)](https://www.npmjs.org/package/thin-mint)\n[![Build Status via Travis CI](https://travis-ci.org/continuationlabs/thin-mint.svg?branch=master)](https://travis-ci.org/continuationlabs/thin-mint)\n![Dependencies](http://img.shields.io/david/continuationlabs/thin-mint.svg)\n![devDependencies](http://img.shields.io/david/dev/continuationlabs/thin-mint.svg)\n\nHTTP cookie utility. `thin-mint` provides parsing and stringification of individual HTTP cookies.\n\n## Example\n\n```javascript\nvar ThinMint = require('thin-mint');\nvar str = 'foo=bar; domain=continuation.io; path=/baz; expires=Sun, 20 Mar 2016 07:05:03 GMT; max-age=1234; secure; httponly';\nvar cookie = new ThinMint(str);\n\n/*\ncookie = {\n  name: 'foo',\n  value: 'bar',\n  domain: 'continuation.io',\n  path: '/baz',\n  secure: true,\n  httpOnly: true,\n  expires: 1458457503000,\n  maxAge: 1234,\n  expiration: 1441772074919,\n  input: {\n    cookie: 'foo=bar; domain=continuation.io; path=/baz; expires=Sun, 20 Mar 2016 07:05:03 GMT; max-age=1234; secure; httponly',\n    name: 'foo',\n    value: 'bar',\n    domain: 'continuation.io',\n    path: '/baz',\n    secure: 'secure',\n    httpOnly: 'httponly',\n    expires: 'Sun, 20 Mar 2016 07:05:03 GMT',\n    maxAge: '1234'\n  }\n}\n*/\n\nconsole.log(cookie.toString());\n```\n\n## Methods\n\n### `Cookie(cookieStr)` Constructor\n\n- Arguments\n  - `cookieStr` (string) - An HTTP cookie\n- Constructs\n  - object - An object representation of the `cookieStr` argument with the following schema:\n    - `name` (string) - The cookie name. Defaults to `null`.\n    - `value` (string) - The cookie value, as parsed by `decodeURIComponent()``. Defaults to `null`.\n    - `domain` (string) - The cookie domain, converted to lowercase. Defaults to `null`.\n    - `path` (string) - The cookie path, which must begin with `/`. Defaults to `null`.\n    - `secure` (boolean) - The cookie's `secure` attribute. Defaults to `false`.\n    - `httpOnly` (boolean) - The cookie's `httpOnly` attribute. Defaults to `false`.\n    - `expires` (number) - The cookie's `expires` attribute passed through `Date.parse()`. Defaults to `Infinity`.\n    - `maxAge` (number) - The cookie's `max-age` attribute. Defaults to `Infinity`.\n    - `expiration` (number) - The cookie's expiration time. Uses `max-age`, or falls back to `expires`. Defaults to `Infinity` if neither are provided.\n    - `input` (object) - An object containing the raw input values without any processing. Contains the following properties.\n      - `cookie` (string) - The original string passed to the constructor.\n      - `name` (string) - The cookie name. Defaults to `null`.\n      - `value` (string) - The cookie value. Defaults to `null`.\n      - `domain` (string) - The cookie domain. Defaults to `null`.\n      - `path` (string) - The cookie path. Defaults to `null`.\n      - `secure` (string) - The cookie's `secure` attribute. Defaults to `null`.\n      - `httpOnly` (string) - The cookie's `httpOnly` attribute. Defaults to `null`.\n      - `expires` (string) - The cookie's `expires` attribute. Defaults to `null`.\n      - `maxAge` (string) - The cookie's `max-age` attribute. Defaults to `null`.\n\n### `Cookie.prototype.toRequestCookie()`\n\n  - Arguments\n    - None\n  - Returns\n    - string - Request cookie string representation of the cookie. If the cookie has a value, then the string will be of the form `name=value`, where `value` is encoded using `encodeURIComponent()`. If the cookie has no value, then the string is just the cookie name.\n\nConverts the `Cookie` into a request cookie string.\n\n### `Cookie.prototype.toString()`\n\n- Arguments\n  - None\n- Returns\n  - string - String representation of the cookie containing all fields.\n\nCreates a string representation of the `Cookie` object.\n","created":"2015-09-09T16:46:56.082Z","modified":"2016-08-09T15:58:49.530Z","lastPublisher":{"name":"cjihrig","email":"cjihrig@gmail.com"},"owners":[{"name":"cjihrig","email":"cjihrig@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"thin-mint","_nodeVersion":"4.2.1","_npmUser":{"name":"cjihrig","email":"cjihrig@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-904b87edeaa747ccf73dbdfbae0077c6","_shasum":"434abd092eea9a95a3219e095e00d035bb6590c3","author":{"name":"Continuation Labs","email":"contact@continuation.io","url":"http://continuation.io/"},"bugs":{"url":"https://github.com/continuationlabs/thin-mint/issues"},"directories":{},"dist-tags":{"latest":"1.0.3"},"dist":{"shasum":"434abd092eea9a95a3219e095e00d035bb6590c3","tarball":"http://registry.npmjs.org/thin-mint/-/thin-mint-1.0.3.tgz"},"maintainers":[{"name":"cjihrig","email":"cjihrig@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-08-09T15:58:49.530Z","created":"2015-09-09T16:46:56.082Z","1.0.0":"2015-09-09T16:46:56.082Z","1.0.1":"2015-09-18T02:19:50.044Z","1.0.2":"2015-10-13T02:24:13.423Z","1.0.3":"2015-10-23T01:20:13.092Z"}}}