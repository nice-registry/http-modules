{"name":"zlogjs-adapter","version":"0.2.16","description":"log http request, response, and get the logged messages","main":"./lib/adapter.js","scripts":{"test":"mocha test"},"repository":"https://github.com/Emallates/zlogjs-adapter","keywords":["zglog","zlogjs","zglog-new","logger","analytics"],"license":"MIT","homepage":"https://github.com/Emallates/zlogjs-adapter#readme","devDependencies":{"mocha":"^2.4.5","should":"^8.3.1","extend":"*","async-waterfall":"*"},"dependencies":{"enoa-client":"*","on-headers":"^1.0.1","extend":"*","async-waterfall":"*"},"gitHead":"ec5a45c603dd26f30fa427fa591522cfb2b5b444","versions":[{"number":"0.0.1","date":"2016-07-20T06:22:43.025Z"},{"number":"0.0.2","date":"2016-07-20T07:47:55.592Z"},{"number":"0.0.3","date":"2016-07-21T05:54:34.296Z"},{"number":"0.0.4","date":"2016-07-21T09:08:44.930Z"},{"number":"0.0.5","date":"2016-07-23T07:22:46.377Z"},{"number":"0.0.6","date":"2016-07-23T07:46:19.777Z"},{"number":"0.0.7","date":"2016-07-24T10:26:38.272Z"},{"number":"0.0.8","date":"2016-07-26T05:53:34.171Z"},{"number":"0.0.9","date":"2016-07-26T13:12:09.111Z"},{"number":"0.1.0","date":"2016-07-26T13:21:30.112Z"},{"number":"0.1.1","date":"2016-07-26T13:24:54.413Z"},{"number":"0.1.2","date":"2016-07-27T07:14:05.655Z"},{"number":"0.1.3","date":"2016-07-27T07:22:27.174Z"},{"number":"0.1.4","date":"2016-07-27T12:34:52.478Z"},{"number":"0.1.5","date":"2016-07-28T09:04:41.337Z"},{"number":"0.1.6","date":"2016-08-01T09:11:47.455Z"},{"number":"0.1.7","date":"2016-08-02T12:49:23.408Z"},{"number":"0.1.8","date":"2016-08-03T06:04:27.170Z"},{"number":"0.1.9","date":"2016-08-03T12:44:10.095Z"},{"number":"0.2.0","date":"2016-08-04T06:00:30.063Z"},{"number":"0.2.1","date":"2016-08-04T08:04:27.060Z"},{"number":"0.2.2","date":"2016-08-04T09:49:00.905Z"},{"number":"0.2.3","date":"2016-08-06T11:47:32.948Z"},{"number":"0.2.4","date":"2016-08-08T12:53:54.814Z"},{"number":"0.2.5","date":"2016-08-09T15:06:08.806Z"},{"number":"0.2.6","date":"2016-08-10T11:36:17.512Z"},{"number":"0.2.7","date":"2016-08-10T11:38:10.998Z"},{"number":"0.2.8","date":"2016-08-10T11:53:13.770Z"},{"number":"0.2.9","date":"2016-08-13T13:07:34.005Z"},{"number":"0.2.10","date":"2016-08-13T13:21:49.862Z"},{"number":"0.2.11","date":"2016-08-14T12:05:36.909Z"},{"number":"0.2.12","date":"2016-08-18T13:14:01.977Z"},{"number":"0.2.13","date":"2016-10-13T12:09:15.859Z"},{"number":"0.2.14","date":"2016-10-15T06:47:20.969Z"},{"number":"0.2.15","date":"2016-10-15T06:58:07.067Z"},{"number":"0.2.16","date":"2016-10-16T12:40:31.254Z"}],"readme":"# zlogjs-adapter\n\n\nlog http request, response, and get the logged messages\n\n[![Join the chat at https://gitter.im/Emallates/zlogjs-adapter](https://badges.gitter.im/Emallates/zlogjs-adapter.svg)](https://gitter.im/Emallates/zlogjs-adapter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Version][version-svg]][package-url]&nbsp;[![Build Status][travis-svg]][travis-url]</br>[![ISSUES][issues-url]][issues-url]&nbsp;[![FORKS][forks-url]][forks-url]&nbsp;[![STARS][stars-url]][stars-url]&nbsp;[![Downloads][downloads-image]][downloads-url]</br>[![License][license-image]][license-url]\n\n[version-svg]: https://img.shields.io/npm/v/zlogjs-adapter.svg?style=flat-square\n[package-url]: https://npmjs.org/package/zlogjs-adapter\n[travis-svg]: https://img.shields.io/travis/Emallates/zlogjs-adapter/master.svg?style=flat-square\n[travis-url]: https://api.travis-ci.org/Emallates/zlogjs-adapter.svg?branch=master\n[issues-url]:https://img.shields.io/github/issues/Emallates/zlogjs-adapter.svg?style=flat-square\n[forks-url]:https://img.shields.io/github/forks/Emallates/zlogjs-adapter.svg?style=flat-square\n[stars-url]:https://img.shields.io/github/stars/Emallates/zlogjs-adapter.svg?style=flat-square\n[downloads-image]: https://img.shields.io/npm/dm/zlogjs-adapter.svg?style=flat-square\n[downloads-url]: http://npm-stat.com/charts.html?package=zlogjs-adapter\n[license-image]: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n[license-url]: https://raw.githubusercontent.com/Emallates/zlogjs-adapter/master/LICENSE\n\n##DESCRIPTION\nzlogjs-adapter is just for experminetal purposes for [enoa-client](https://github.com/Emallates/enoa-client), you can log the http request, response and get the saved logged messages.<br/>\n `zlogjs-adapter` is build for [enoa-client](https://github.com/Emallates/enoa-client) just for experimental purposes.<br/>\n\n<!--NO_HTML-->\nTable of Contents\n-----------------\n\n1. [Prerequisites](#prerequisites)\n1. [Installation](#installation)\n1. [Configuration](#configuration)\n\t- [zlogjs-adapter configuration](#zlogjs-adapter)\n1. [Overview](#overview)\n\t- [Features](#features)\n\t- [Methods](#methods)\n1. [Issues or Suggestions](#issues-or-suggestions)\n1. [License](#license)\n\n<!--/NO_HTML-->\n\n## Prerequisites\nClients should be registered with the regarding service\n\n## Installation\n\nInstall stable version from NPM:\n```\nnpm install zlogjs-adapter --save\n```\n\n\n## Configuration\n\nzlogjs-adapter can be used with enoa-client, for more information on how to use enoa-client in your App view the [enoa-client](https://github.com/Emallates/enoa-client).\n\n\n#### zlogjs-adapter configuration\n\n##### Example\n\n```javascript\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'),\n       plugin:'zlogjs-http-logger', \n       host:'host', port:'port' ,\n       mode:\"remote\"\n     }\n   }\n};\nvar client = require('enoa-client')(zlog);\n//client is initialized now\n```\n##### SKIP API EXAMPLE\n```javascript\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'), \n       host:'host', port:'port' ,\n       mode:\"remote\",\n       SKIP:{\n         \"/api/a\":\"CODE\":{\"<\":304, \">\":200},\n         \"/api/b\":200\n         \"/api/c\":\"CODE\":{\"<=\":400, \">=\":499},\n         \"/api/d\":true\n       }\n     }\n   }\n}\nvar client = require('enoa-client')(zlog);\n//client is initialized now\n```\n##### GLOBAL SKIP EXAMPLE\n```javascript\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'), \n       host:'host', port:'port' ,\n       mode:\"central\",\n       SKIP_CODE:450\n     }\n   }\n};\nvar client = require('enoa-client')(zlog);\n//client is initialized now\n```\n##### TAGS EXAMPLE\n```javascript\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'), \n       host:'host', port:'port' ,\n       mode:\"central\",\n       TAGS:{\n          \"/api/a\":\"tag1\",\n          \"/api/b\":\"tag1:tvalue\",\n          \"/api/c\":[\"tag1:tvalue\",\"tag2:tvalue\"],\n          \"/api/d\":[\"tag1\",\"tag2\"],\n          \"/api/e\":{\"tag1\":\"tvalue\",\"tag2\":\"tvalue\"},\n          \"splitter\":\":\"\n       }\n     }\n   }\n}\nvar client = require('enoa-client')(zlog);\n//client is initialized now\n```\n## Overview\n\n#### Features\n1. [Log Messages]()\n2. [Get Messages]()\n3. [Get Terms]()\n4. [Get Stats]()\n5. [Get History]()\n6. [Inject Rules]()\n\n#### Methods\n\n#### Logger && Log\n\n```javascript\n//express\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'),\n       plugin:'zlogjs-express-logger', \n       host:'host', port:'port' ,\n       mode:\"remote\"\n     }\n   }\n};\nvar client = require('enoa-client')(zlog);\nexpress_app.use(client.adapter.logger);\n//normal use\nclient.adapter.log(//parameters)\n```\n```javascript\n//http\nvar zlog = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'),\n       plugin:'zlogjs-http-logger', \n       host:'host', port:'port' ,\n       mode:\"remote\"\n     }\n   }\n};\nvar client = require('enoa-client')(zlog);\nhttp.createServer(function (req, res) {\n  /*HANDLERS BASED ON ROUTES*/\n  req._start = new Date;\n  //Handlers\n  /*HTTP-SERVER-LOGGER*/\n  client.zlog.logger(req, res, res.body, function(err, data){ /*console.log(err, data);*/ });\n}).listen(PORT, function(){});\n//normal use\nclient.adapter.log(//parameters)\n```\n#### Log using service\n\n```javascript\n//config\nvar adapter = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'), host:'host', port:'port',\n       mode : 'central'\n     }\n   }\n} \nvar client = require('enoa-client')(adapter);\n\n```\n#### Log using local file\n\n```javascript\n//config\nvar adapter = { \n   collections:{\n     adapter:{\n       appId:'app_id',\n       apiKey:'api_key',\n       adapter:require('zlogjs-adapter'), host:'host', port:'port',\n       mode : 'local', //|| leave mode \n     }\n   }\n} \nvar client = require('enoa-client')(adapter);\n\n```\n\n\n\n#### Messages\n\n```javascript\n// parameters --> (page, limit, callback)\nclient.adapter.messages(10, 10, callback);\nclient.adapter.messages(10, 10, callback);\n\n```\n\n#### MessageById\n\n```javascript\n//ref is always given inside messages body along with id\nclient.adapter.getMessageById({id:'id'}, callback);\n\n```\n#### Operations History\n```javascript\nclien.adapter.operationsHitsory(interval,callback);\n\n```\n\n#### System Status per Operation\n```javascript\n  client.adapter.systemStatusPerOperation(callback);\n```\n\n#### Syestem responses by ERROR, EXCEPTION, and SUCCESS\n\n```javascript\nclient.adapter.status(callback);\n```\n#### Locations\n\n```javascript\nclient.adapter.locations(callback);\n```\n#### Callers IP's\n\n```javascript\nclient.adapter.callers(callback);\n```\n#### Operations by methods\n\n```javascript\nclient.adapter.operations(time, callback);\n```\n#### Browsers\n\n```javascript\nclient.adapter.browsers(callback);\n```\n\n\n#### Successes/Key\n```javascript\n//overall success calls on the specific api's\nclient.adapter.successPerKey({api:\"true\"}, callback);\n//How many success calls were executed by a specific user\nclient.adapter.successPerKey({userid:\"_id\"}, callback);\n//How many success calls were executed while performing a read operation\nclient.adapter.successPerKey({operation:\"read\"}, callback);\n//How many success calls were generated by a specific API\nclient.adapter.successPerKey({api:\"/api/example/:params\"}, callback);\n```\n\n#### Errors/Key\n```javascript\n//overall error calls on the specific api's\nclient.adapter.errorsPerKey({api:\"true\"}, callback);\n//How many errors calls were executed by a specific user\nclient.adapter.errorsPerKey({userid:\"_id\"}, callback);\n//How many errors calls were executed while performing a read operation\nclient.adapter.errorsPerKey({operation:\"read\"}, callback);\n//How many errors calls were generated by a specific API\nclient.adapter.errorsPerKey({api:\"/api/example/:params\"}, callback);\n```\n\n#### Exceptions/Key\n```javascript\n//overall exception calls on the specific api's\nclient.adapter.exceptionsPerKey({api:\"true\"}, callback);\n//How many exceptions calls were executed by a specific user\nclient.adapter.exceptionsPerKey({userid:\"_id\"}, callback);\n//How many exceptions calls were executed while performing a read operation\nclient.adapter.exceptionsPerKey({operation:\"read\"}, callback);\n//How many exceptions calls were generated by a specific API\nclient.adapter.exceptionsPerKey({api:\"/api/example/:params\"}, callback);\n```\n\n\n#### Unique Calls/Key\n```javascript\n//overall unique calls from the specific ip\nclient.adapter.uniqueCalls({http_client_ip:\"ipexample\"}, callback);\n\n```\n\n#### Key Calls\n```javascript\n//overall calls from the specific ip\nclient.adapter.keyCalls({http_client_ip:\"ipexample\"}, callback);  \n```\n\n#### Key Calls History by fields\n```javascript\n//overall calls from the specific ip\nclient.adapter.keyCallsHistoryV1(field, keyValueCriteria, callback);  \n```\n\n#### Terms\n\n```javascript\nclient.adapter.terms(callback);\n//OR\nclient.adapter.find().type('terms').exec(callback);\n```\n\n#### Field-Statistics\n\n```javascript\nclient.adapter.fieldStat('field_name',callback);\n// OR\nclient.adapter.find().select('field').type('fstat').exec(callback);\n```\n\n\n#### Classes\n\n```javascript\nclient.adapter.classify('field_name',callback);\n// OR\nclient.adapter.find().select('field_name').type('classify').exec(callback);\n```\n\n#### History\n\n```javascript\nclient.adapter.history({interval:'year', where:'level',not:'abc',range:{'level':{'>=':[6]}}},callback);\n//OR\nclient.adapter.find().type('history').where('level').not('abc').range({'level':{'>=':[6]}}).interval('year').exec(callback)\n```\n\n\n#### Field-specific-history\n\n```javascript\nclient.adapter.history({field:'level',interval:'year', where:'level',not:'abc',range:{'level':{'>=':[6]}}},callback)\n// OR\nclient.adapter.find().type('fhistory').where('level').not('abc').range({'level':{'>=':[6]}}).interval('year').field('level').exec(callback);\n```\n\n#### Terms-statistics\n\n```javascript\nclient.adapter.subClassStat({key:'level', value:'6', order:'term'},callback);\n//OR\nclient.adapter.find().type('cstat').key('level').value('6').order('term').exec(callback)\n```\n\n\n#### Total\n\n```javascript\n// Get total of Events\nclient.adapter.total(null,callback);\n// Get total of key\nclient.adapter.total(key,callback);\n```\n\n#### Find\n\n```javascript\n\nclient.adapter.find().select('*').exec(callback);\nclient.adapter.find({select:'*'}).exec(callback);\n\n```\n\n#### Select\n\n```javascript\nclient.adapter.find().select('*').exec(callback);\n//OR\nclient.adapter.find().select().exec(callback);\n//SELECT CUSTOM MODEL\nclient.adapter.find().select('key').exec(callback);\nclient.adapter.find().select(['key1','key2','key3','key4']).exec(callback);\n\n```\n#### Where\n\n```javascript\nclient.adapter.find().select().where('key1').exec(callback);\nclient.adapter.find().select().where(['key1',{key2:value}]).exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).exec(callback);\n\n```\n#### Not\n\n```javascript\nclient.adapter.find().select('*').where('key1').not('abc').exec(callback);\nclient.adapter.find().select().where(['key1',{key2:value}]).not({level:1}).exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).not({level:2, title:'abc'}).exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).not('abc').exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).not(['level','title']).exec(callback);\n\n```\n\n#### Range\n\n```javascript\nclient.adapter.find().select('*').where('key1').range({'level':{'>':[6]}}).exec(callback);\nclient.adapter.find().select('*').where('key1').range({'level':{'<':[6]}}).exec(callback);\nclient.adapter.find().select('*').where('key1').range({'level':{'<=':[6]}}).exec(callback);\nclient.adapter.find().select('*').where('key1').range({'level':{from:0, to:1}}).exec(callback);\n\n```\n\n#### Time\n\n```javascript\nclient.adapter.find().select('*').where('key1').time({from:'2015-05-2', to:'2016-02-03'}).exec(callback);\nclient.adapter.find().select('*').where('key1').time({from:'2015-05-2T00:00:000Z', to:'2016-02-03T00:00:000Z'}).exec(callback);\nclient.adapter.find().select('*').where('key1').time('last year').exec(callback);\n\n```\n\n\n####Pagination\n\n```javascript\nclient.adapter.find().select('*').paginate({page:5, limit:100}).exec(callback);\nclient.adapter.find().select('*').paginate({page:5, limit:100}).exec(callback);\nclient.adapter.find().select('*').paginate({skip:50, limit:100}).exec(callback);\n```\n####Page\n\n```javascript\nclient.adapter.find().select('*').page(10).exec(callback);\n```\n####Skip\n\n```javascript\nclient.adapter.find().select('*').skip(100).exec(callback);\nclient.adapter.find().select().where(['key1',{key2:value}]).skip({level:1}).exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).skip({level:8, title:'xyz'}).exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).skip('abc').exec(callback);\nclient.adapter.find().select().where({or:['key1',{key2:value}], and:['abc',{level:1}]}).skip(['1x','pid']).exec(callback);\n```\n####Limit\n\n```javascript\nclient.adapter.find().select('*').limit(10).exec(callback);\n```\n\n####Glimit\n\n```javascript\nclient.adapter.find().select('*').paginate(adapter.glimit('global')).exec(callback);\nclient.adapter.find().select('*').page(adapter.glimit('page')).exec(callback);\nclient.adapter.find().select('*').skip(adapter.glimit('skip')).exec(callback);\nclient.adapter.find().select('*').limit(adapter.glimit('limit')).exec(callback);\n```\n####Terms\n\n```javascript\nclient.adapter.find().select('code').type('fstat').exec(callback);\n```\n####Stats\n\n```javascript\nclient.adapter.find().select('code').type('fstat').exec(callback);\n//OR\nclient.adapter.stat('code',callback);\n```\n####Rules\n#####Set Rules OR Inject(Operator)\n```javascript\nvar operator = {\n   \"title\":\".\", \n   \"description\":\"This operator concatenates two strings arrays or objects\",\n   \"function\":{type:\"Function\",value:function(a, b){ var result = Object.prototype.toString.call(a) == '[object String]' ? '' : Object.prototype.toString.call(a) == '[object Array]' ? [] : Object.prototype.toString.call(a) == '[object Object]' ? {} : false; if(Object.prototype.toString.call(a) == '[object String]' && Object.prototype.toString.call(b) == '[object String]' ) result = a+b; if(Object.prototype.toString.call(a) == '[object Array]' && Object.prototype.toString.call(b) == '[object Array]' ){ for(i in a) result.push(a[i]); for(i in b) result.push(b[i]); if(Object.prototype.toString.call(a) == '[object Object]' && Object.prototype.toString.call(b) == '[object Object]' ){ for(key in a) result[key] = a[key]; for(key in b) result[key] = b[key]; }}}}\n};\n eclient.adapter.rules({ftype:'set',type:'operator', rule:operator}, Callback);\n```\n\n#####Set Rules OR Inject(Keyword)\n```javascript\nvar keyword = {\n     \"title\":\"AA\", \n     \"description\":\"This key word means inside the rule executors which action will be executed it can contain the refferance of action or direct action itself as a function\",\n     \"function\":{\"type\":\"Function\",\"value\":function (){  return \"A\"; }}\n};\n eclient.adapter.rules({ftype:'set',type:'keyword', rule:keyword}, Callback);\n```\n\n#####Set Rules OR Inject(Object)\n```javascript\nvar rule = {\n      \"t1\" :{\"type\":\"title\", \"value\":\"isPrince\"},\n         \"d1\" : {\"type\":\"operations\", \"value\":[\"==\",\"!=\"]},\n         \"e1\":[{\"type\":\"target\", \"value\":\"king\", \"factname\":\"father\",\"actref\":\"a1\", \"opref\":0},{\"type\":\"target\", \"value\":\"minister\", \"factname\":\"mother\",\"actref\":\"a3\",\"opref\":1},{\"type\":\"target\", \"value\":\"great king\", \"factname\":\"grandfather\",\"actref\":\"a2\",\"opref\":0}],\n          \"a1\":{\n            \"type\":\"action\",\n            \"value\":{\"type\":\"Function\",\"value\":function (msg){  console.log(msg+'isPrince'); }},\n            \"params\":\"fact\"\n            \"actref\":\"a2\"\n          },\n         \"a2\":{\n           \"type\":\"action\",\n           \"value\": {\"type\":\"Function\",\"value\":function (){  console.log('confratulations, you belong to a Royal famliy'); }},\n           \"params\":\"grandfather\"\n         },\n         \"a3\":{\n            \"type\":\"action\",\n            \"value\":{\"type\":\"Function\",\"value\":function (){  console.log(\"isNotPrince\");  }}\n          },\n         \"c1\":{\"type\":\"description\", \"value\":\"if the fact father or mother is king, and queen respectively then you are a prince, and if grand father is great king , then you belong to royal family\"}\n};\n eclient.adapter.rules({ftype:'set',type:'rule', rule:rule}, Callback);\n //OR\n eclient.adapter.rules({ftype:'set',type:'knowledgebase', rule:rule}, Callback);\n```\n\n#####Set Rules OR Inject(Array)\n```javascript\nvar arr = [\n        {\n       \"t1\" :{\"type\":\"title\", \"value\":\"testT4\"},\n           \"d1\" : {\"type\":\"operations\", \"value\":\"==\"},\n           \"e1\":[{\"type\":\"target\", \"value\":\"parent\", \"factname\":\"father\", \"actref\":\"a1\"},{\"type\":\"target\", \"value\":\"parent\", \"factname\":\"mother\", \"actref\":\"a1\"},{\"type\":\"target\", \"value\":\"parent\", \"factname\":\"grantfather\", \"actref\":\"a2\"}],\n           \"a1\":{\"type\":\"action\", \"value\":\"king\"},\n           \"a2\":{\"type\":\"action\", \"value\":{type:\"Function\", value:function(){ console.log(\"Your Father!\");}}},\n           \"a3\":{\"type\":\"action\", \"value\":{type:\"Function\", value:function(){ console.log(\"King\");}}},\n           \"c1\":{\"type\":\"description\", \"value\":\"if the fact equal value father it will return king || true\"}\n    },{\n       \"t1\" :{\"type\":\"title\", \"value\":\"testT5\"},\n           \"d1\" : {\"type\":\"operations\", \"value\":\">\"},\n           \"e1\":{\"type\":\"target\", \"value\":6547852.0265, \"factname\":\"sales\"},\n           \"a1\":{\"type\":\"action\", \"value\":\"return\"},\n           \"c1\":{\"type\":\"description\", \"value\":\"if the fact greater then value sales it will return true\"}\n    },{\n       \"t1\":{\"type\":\"title\", \"value\":\"testT6\"},\n           \"d1\":{\"type\":\"operations\", \"value\":\"==\"},\n           \"e1\":{\"type\":\"target\", \"value\":\"this\", \"factname\":\"father\"},\n           \"a1\":{\"type\":\"action\", \"value\":\"return\"},\n           \"c1\":{\"type\":\"description\", \"value\":\"if the fact is equal to father then it will return true\"}\n     }\n];\n \n eclient.adapter.rules({ftype:'set',type:'knowledgebase', rule:arr}, Callback);\n```\n#####Get Keyword\n```javascript\n //get saved customized operators  \n eclient.adapter.rules({ftype:'get',type:'keyword'}, Callback);\n eclient.adapter.rules({ftype:'get',type:'keyword', key:'title || identifier'}, Callback);\n```\n\n#####Get Operator\n```javascript\n //get saved standard operators  \n eclient.adapter.rules({ftype:'get',type:'operator', key:'title || identifier'}, Callback);\n eclient.adapter.rules({ftype:'get',type:'operator'}, Callback);\n```\n#####Get Kb || a single rule\n```javascript\n   \n eclient.adapter.rules({ftype:'get',type:'knwoledgebase', key:'title || identifier'}, Callback);\n eclient.adapter.rules({ftype:'get',type:'knowledgebase'}, Callback);\n```\n\n\n\n## Issues or Suggestions\nAs zlogjs-adapter is just an experimantal adapter for [enoa-client](https://github.com/Emallates/enoa-client), anybody who can build or contribute is welcome.\n\n\n## License\n\n**[MIT](./LICENSE)**\n\n","created":"2016-07-20T06:22:43.025Z","modified":"2016-10-16T12:40:31.254Z","lastPublisher":{"name":"emallates","email":"ws.emallates@gmail.com"},"owners":[{"name":"emallates","email":"ws.emallates@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"zlogjs-adapter","_nodeVersion":"5.6.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/zlogjs-adapter-0.2.16.tgz_1476621628515_0.03320476575754583"},"_npmUser":{"name":"emallates","email":"ws.emallates@gmail.com"},"_npmVersion":"3.7.5","_rev":"1-1fdd33e8420e9984f828c04c75e411a5","_shasum":"d5dc25fa4db5f4d701fe82a78e454e3454e61080","author":"","bugs":{"url":"https://github.com/Emallates/zlogjs-adapter/issues"},"directories":{},"dist-tags":{"latest":"0.2.16"},"dist":{"shasum":"d5dc25fa4db5f4d701fe82a78e454e3454e61080","tarball":"http://registry.npmjs.org/zlogjs-adapter/-/zlogjs-adapter-0.2.16.tgz"},"maintainers":[{"name":"emallates","email":"ws.emallates@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-10-16T12:40:31.254Z","created":"2016-07-20T06:22:43.025Z","0.0.1":"2016-07-20T06:22:43.025Z","0.0.2":"2016-07-20T07:47:55.592Z","0.0.3":"2016-07-21T05:54:34.296Z","0.0.4":"2016-07-21T09:08:44.930Z","0.0.5":"2016-07-23T07:22:46.377Z","0.0.6":"2016-07-23T07:46:19.777Z","0.0.7":"2016-07-24T10:26:38.272Z","0.0.8":"2016-07-26T05:53:34.171Z","0.0.9":"2016-07-26T13:12:09.111Z","0.1.0":"2016-07-26T13:21:30.112Z","0.1.1":"2016-07-26T13:24:54.413Z","0.1.2":"2016-07-27T07:14:05.655Z","0.1.3":"2016-07-27T07:22:27.174Z","0.1.4":"2016-07-27T12:34:52.478Z","0.1.5":"2016-07-28T09:04:41.337Z","0.1.6":"2016-08-01T09:11:47.455Z","0.1.7":"2016-08-02T12:49:23.408Z","0.1.8":"2016-08-03T06:04:27.170Z","0.1.9":"2016-08-03T12:44:10.095Z","0.2.0":"2016-08-04T06:00:30.063Z","0.2.1":"2016-08-04T08:04:27.060Z","0.2.2":"2016-08-04T09:49:00.905Z","0.2.3":"2016-08-06T11:47:32.948Z","0.2.4":"2016-08-08T12:53:54.814Z","0.2.5":"2016-08-09T15:06:08.806Z","0.2.6":"2016-08-10T11:36:17.512Z","0.2.7":"2016-08-10T11:38:10.998Z","0.2.8":"2016-08-10T11:53:13.770Z","0.2.9":"2016-08-13T13:07:34.005Z","0.2.10":"2016-08-13T13:21:49.862Z","0.2.11":"2016-08-14T12:05:36.909Z","0.2.12":"2016-08-18T13:14:01.977Z","0.2.13":"2016-10-13T12:09:15.859Z","0.2.14":"2016-10-15T06:47:20.969Z","0.2.15":"2016-10-15T06:58:07.067Z","0.2.16":"2016-10-16T12:40:31.254Z"}}}