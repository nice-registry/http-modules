{"name":"ruuter","version":"1.0.5","description":"A basic framework for creating an HTTP server with routes.  Easily write files and header messages upon requests.","main":"ruuter.js","scripts":{"test":"mocha"},"repository":"https://github.com/Auto-ruuter/Ruuter","license":"MIT","devDependencies":{"chai":"^3.4.1","chai-http":"^1.0.0","mkdirp":"^0.5.1","mocha":"^2.3.4"},"dependencies":{"mkdirp":"^0.5.1"},"homepage":"https://github.com/Auto-ruuter/Ruuter#readme","bin":{"ruuter":"ruuter.js"},"engines":{"node":"*"},"gitHead":"e039c6e39184e94cf48fc3a80f6fcde339aba778","versions":[{"number":"1.0.0","date":"2016-01-20T09:40:57.540Z"},{"number":"1.0.1","date":"2016-01-20T09:48:12.348Z"},{"number":"1.0.2","date":"2016-01-20T09:51:17.257Z"},{"number":"1.0.3","date":"2016-01-20T20:21:59.157Z"},{"number":"1.0.4","date":"2016-01-20T20:35:12.893Z"},{"number":"1.0.5","date":"2016-01-20T20:39:10.909Z"}],"readme":"# About Ruuter\n\nA basic framework for creating an HTTP server with routes.  Easily write files and header messages upon requests.\n\n# Installation\n\n```\nnpm install ruuter\n```\n# Getting Started\n\nRuuter consists of an HTTP router and helpful methods that streamline writing response headers and expand options for writing data to a new file. Here is the simplest way to implement Ruuter:\n\n### Creating a new router: `.Router()`\n\nThe Router constructor function initializes a basic router object.\nThe following example demonstrates typical implementation.\n\n```javascript\nvar ruuter = require('ruuter');\nvar router = new ruuter.Router();\n```\n\n### Setting Up Routes\n\nEach Router instance defines basic HTTP methods (GET, POST, PUSH, DELETE, etc.)  to be contained within the main object.\n\nThe following example demonstrates how to create a create a `GET` request to `/test1`:\n```javascript\nvar router = new ruuter.Router();\nrouter.get('/test1', function (req, res) {\n  headMessage(res, 200, 'text/plain', 'test stuff 1 ');\n  return res.end();\n});\n```\n\n### Writing a server response: `.headMessage(res, status, Content-Type, Status-Message)`\n\n```\nruuter.headMessage(res, status, Content-Type, Status-Message);\n```\n\nThe ruuter headMessage function takes the server response, status code, content type, and status message as arguments. The function takes these arguments and writes the response header and message automatically.\n\n### Writing a new file: `.writeFile(path, ext, data, options[,callback])`\n\nThe ruuter writeFile function offers users a variety of options for naming and saving new files.\n\nThe following example demonstrates proper use of this function:\n\n```javascript\nvar ruuter = require('ruuter');\nvar writeFile = ruuter.writeFile(path, ext, data, options[,callback]);\n```\n`options` is an object or string with the following defaults:\n\n```\n{\n  namingConvention: null,\n  overwrite: null\n}\n```\n\nWhen `options.namingConvention` equals ``‘date’``, the new file will be named using the current date, with the format: year-month-day (e.g. 2016-1-3).  \n\nWhen `options.namingConvention` equals ``‘time’``, the new file will be named using the current time, with the format: hours-minutes-seconds-milliseconds (e.g. 15-8-3-5)).    \n\nWhen `options.namingConvention` equals ``‘dateTime’``, the new file will be named using the current date and time (e.g. 2016-1-3_15-8-3-5).  \n\nWhen `options.overwrite` equals `true`, the new file will overwrite any existing file with the same name.\n\nWhen `options.overwrite` equals `false`, the new file will not overwrite any existing file with the same name.\n\n####Authors\n\n[Jesse Thach](https://github.com/jessethach), [Eugene Troy](https://github.com/energene), [Chris Lee](https://github.com/clee46), and [James Mason](https://github.com/jhm90)\n","created":"2016-01-20T09:40:57.540Z","modified":"2016-05-16T11:45:41.907Z","lastPublisher":{"name":"jhm90","email":"jhm90.npm@gmail.com"},"owners":[{"name":"sumtype","email":"jm@netarts.io"}],"other":{"_attachments":{},"_from":".","_id":"ruuter","_nodeVersion":"4.2.3","_npmUser":{"name":"jhm90","email":"jhm90.npm@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-7020bdbbc3710c824efbb799add9f18a","_shasum":"456d34fb71f68b219acf1767d6e9df2842af4782","author":{"name":"Jesse Thach, Eugene Troy, Chris Lee, James Mason"},"bugs":{"url":"https://github.com/Auto-ruuter/Ruuter/issues"},"directories":{"test":"test"},"dist-tags":{"latest":"1.0.5"},"dist":{"shasum":"456d34fb71f68b219acf1767d6e9df2842af4782","tarball":"http://registry.npmjs.org/ruuter/-/ruuter-1.0.5.tgz"},"maintainers":[{"name":"sumtype","email":"jm@netarts.io"}],"readmeFilename":"README.md","time":{"modified":"2016-05-16T11:45:41.907Z","created":"2016-01-20T09:40:57.540Z","1.0.0":"2016-01-20T09:40:57.540Z","1.0.1":"2016-01-20T09:48:12.348Z","1.0.2":"2016-01-20T09:51:17.257Z","1.0.3":"2016-01-20T20:21:59.157Z","1.0.4":"2016-01-20T20:35:12.893Z","1.0.5":"2016-01-20T20:39:10.909Z"}}}