{"name":"redux-request-state","version":"1.1.0","description":"Redux utilities to deal with HTTP request states (loading, succeeded, failed).","main":"index.js","scripts":{"test":"tape tests/*.js"},"repository":"https://github.com/gustavohenke/redux-request-state","keywords":["redux"],"license":"MIT","devDependencies":{"tape":"^4.6.3"},"gitHead":"962a4e2aa66536fc6c4e7f81b4fedb4d97cdd194","homepage":"https://github.com/gustavohenke/redux-request-state#readme","versions":[{"number":"1.0.0","date":"2017-02-15T17:52:27.594Z"},{"number":"1.1.0","date":"2017-02-22T18:38:22.459Z"}],"readme":"# redux-request-state\r\n[![Build status](https://travis-ci.org/gustavohenke/redux-request-state.svg?branch=master)](https://travis-ci.org/gustavohenke/redux-request-state)\r\n\r\nRedux utilities to deal with HTTP request states (loading, succeeded, failed).\r\n\r\n- [Installation](#installation)\r\n- [Motivation](#motivation)\r\n- [API](#api)\r\n- [License](#license)\r\n\r\n## Installation\r\nInstall with npm:\r\n\r\n```\r\nnpm install redux-request-state\r\n```\r\n\r\n## Motivation\r\nIn a big application, you may end up writing lots of reducers to deal with the three states of a\r\nHTTP request - loading, succeeded and failed.  \r\nThey will probably all look similar with the following:\r\n\r\n```js\r\nimport { createStore, combineReducers } from \"redux\";\r\n\r\n// reducer, probably repeated quite a lot in a big application\r\nexport function accounts ( state = {}, action ) {\r\n    switch ( action.type ) {\r\n        case BEGIN_ACCOUNTS_REQUEST:\r\n            return Object.assign( {}, state, {\r\n                loading: true\r\n            });\r\n\r\n        case ACCOUNTS_REQUEST_SUCCESS:\r\n            return Object.assign( {}, state, {\r\n                loading: false,\r\n                data: action.payload\r\n            });\r\n\r\n        case ACCOUNTS_REQUEST_FAILURE:\r\n            return Object.assign( {}, state, {\r\n                loading: false,\r\n                error: action.payload\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst store = createStore( combineReducers({ accounts }) );\r\n```\r\n\r\nThe intention of redux-request-state is to help you get rid of such common reducer, so the above\r\nbecomes as simple as invoking a factory function:\r\n\r\n```js\r\nimport { createStore, combineReducers } from \"redux\";\r\nimport { createRequestReducer, createRequestSelectors } from \"redux-request-state\";\r\n\r\nconst store = createStore( combineReducers({\r\n    accounts: createRequestReducer({\r\n        begin: BEGIN_ACCOUNTS_REQUEST,\r\n        success: ACCOUNTS_REQUEST_SUCCESS,\r\n        failure: ACCOUNTS_REQUEST_FAILURE\r\n    })\r\n}));\r\n```\r\n\r\n## API\r\n### `createRequestReducer( actions )`\r\nCreates a reducer based on the action names given. Returns the reducer function.\r\n\r\nParameters:\r\n- `actions`: `object`\r\n  - `begin`: Action type that begins the request. Sets the request state to loading.\r\n  - `success`: Action type that signals a request as succeeded. Sets the request state to not loading,\r\n    and saves the payload as the `data` key of the state.\r\n  - `failure`: Action type that signals a request as failed. Sets the request state to not loading,\r\n    and saves the payload as the `error` key of the state.\r\n\r\n### `createRequestSelectors( baseStateSelector, selectorNames )`\r\n> *DEPRECATED*  \r\n> This function is too verbose and doesn't blend well with ES6 modules.\r\n> It may be removed in the near future.\r\n\r\nCreates selector functions to query the state as stored by a reducer created with `createRequestReducer`.\r\nThe returned object contains functions named after `selectorNames`, and they will query the\r\ncorresponding piece of state.\r\n\r\nParameters:\r\n- `baseStateSelector`: `function`  \r\n  Function to return the base location of the state.\r\n- `selectorNames`: `object`\r\n  - `isLoading`: name of the selector to query the loading state\r\n  - `getData`: name of the selector to query the request result\r\n  - `getError`: name of the selector to query the request error\r\n\r\n### `selectors`\r\nIt's an object which contains the following selector functions:\r\n\r\n- `isLoading`: queries the loading state\r\n- `getData`: queries the request result\r\n- `getError`: queries the request error\r\n\r\nThey all work by returning the corresponding key in the given state object.  \r\nIf given a function, it will be used to select the base state where the reducer data lies.\r\n\r\nThese selectors are available also from `redux-request-state/selectors`.\r\n\r\n```js\r\nimport { getData } from \"redux-request-state/selectors\";\r\n\r\nconst data = getData( state.accounts );\r\n\r\n// Same as above\r\nconst data = getData( state => state.accounts )( state );\r\n\r\n// Function composition!\r\nconst accountsNumber = compose( state => state.accounts, getData, accounts => accounts.length );\r\n\r\n// Perhaps you like reselect? https://github.com/reactjs/reselect\r\nconst baseAccountsSelector = state => state.accounts;\r\nconst listAccounts = createSelector( baseAccountsSelector, getData );\r\nconst accountsNumber = createSelector( listAccounts, accounts => accounts.length );\r\n```\r\n\r\n## License\r\nMIT\r\n","created":"2017-02-15T17:52:27.594Z","modified":"2017-02-22T18:38:22.459Z","lastPublisher":{"name":"gustavohenke","email":"guhenke@gmail.com"},"owners":[{"name":"gustavohenke","email":"guhenke@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"redux-request-state","_nodeVersion":"6.9.2","_npmOperationalInternal":{"host":"packages-18-east.internal.npmjs.com","tmp":"tmp/redux-request-state-1.1.0.tgz_1487788700704_0.6921176821924746"},"_npmUser":{"name":"gustavohenke","email":"guhenke@gmail.com"},"_npmVersion":"3.10.3","_rev":"2-9938f08f0323b5ba52cf2eec2b39463b","_shasum":"8da2f302cd5ea9edc33af378d9c3df6dc255bdb3","author":{"name":"Gustavo Henke"},"bugs":{"url":"https://github.com/gustavohenke/redux-request-state/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"8da2f302cd5ea9edc33af378d9c3df6dc255bdb3","tarball":"https://registry.npmjs.org/redux-request-state/-/redux-request-state-1.1.0.tgz"},"maintainers":[{"name":"gustavohenke","email":"guhenke@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-02-22T18:38:22.459Z","created":"2017-02-15T17:52:27.594Z","1.0.0":"2017-02-15T17:52:27.594Z","1.1.0":"2017-02-22T18:38:22.459Z"}}}