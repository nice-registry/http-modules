{"name":"request.hpkp","version":"0.0.3","description":"request.js HTTP Public Key Pinning (HPKP) drop-in support","main":"index.js","dependencies":{"node-forge":"^0.6.40","node-hashes":"^0.1.0","request":"^2.72.0"},"devDependencies":{},"scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"keywords":["request.js","hpkp","public","key","pinning","https"],"license":"MIT","repository":"https://github.com/hortopan/request.hpkp","homepage":"https://github.com/hortopan/request.hpkp#readme","gitHead":"c3dd8ca22f2884feed0eee50196ef296d0911997","versions":[{"number":"0.0.1","date":"2016-06-30T12:32:17.549Z"},{"number":"0.0.2","date":"2016-06-30T14:43:50.712Z"},{"number":"0.0.3","date":"2016-07-08T13:16:37.737Z"}],"readme":"# request.hpkp\n\n[Request.js](https://www.npmjs.com/package/request) drop-in replacement with support for https public key pinning ([HPKP](https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning)).\n\nThe module supports both public-key-pins and public-key-pins-report-only and implements report-uri callbacks.\n\n## Installation\n\n```\nnpm install request.hpkp --save\n```\n\n## Usage\n\n```javascript\nconst request = require('request.hpkp');\nrequest.get('https://domain.com', function(err,res,body){\n    //this request will fail if HPKP check fails.\n});\n```\n## How does it work\n**\"public-key-pins\"** header is parsed and cached (for a TTL determined by the max-age parameter in this header) on the first sucessful https request to a host.\n\nSubsequent calls to the same host are going to be checked against the cached keys.\n\n### Key cache\nThe module will by default save keys for a hostname in a JSON file saved within the os.tmpdir().\n\nThe storage path can be overwritten by calling Request.hpkpCache\n\n```javascript\nconst request = require('request.hpkp');\n//set cache dir to /tmp/cacheDir (make sure the locatione exists!)\n\nrequest.hpkpCache('/tmp/cacheDir');\n\nrequest.get('https://domain.com', function(err,res,body){\n    //this request will fail if HPKP check fails.\n});\n```\n\n### Alternative key cache stores\n\nYou can use your own storage to cache and retrieve keys by overwritting set and get functions within the request.hpkpCache.\n\n```javascript\nconst request = require('request.hpkp');\n\nrequest.hpkpCache({\n    get: function(hostname){\n    },\n    \n    set: function(hostname, data){\n    }\n);\n\n// the get function also needs to check data.expiresAt and delete when data is expired so that the pinned keys are refreshed as required.\n```\n\n## What's missing + need to know\n* Somewhat hackish usage of request.js , need to refactor\n* No automatic testing so far. Need to write some tests\n* Report-uri doesn't send certificate only expected pins.\n\n\n## Release History\n* 0.0.2 Fixed issue with request.js helper functions parameters\n* 0.0.1 Initial release","created":"2016-06-30T12:32:17.549Z","modified":"2016-11-07T14:12:44.380Z","lastPublisher":{"name":"alex.hortopan","email":"alex@hortopan.com"},"owners":[{"name":"alex.hortopan","email":"alex@hortopan.com"}],"other":{"_attachments":{},"_from":".","_id":"request.hpkp","_nodeVersion":"5.0.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/request.hpkp-0.0.3.tgz_1467983796493_0.7400451481807977"},"_npmUser":{"name":"alex.hortopan","email":"alex@hortopan.com"},"_npmVersion":"3.3.6","_rev":"3-300bb62f940d7ba15871c8ae83406bb2","_shasum":"c732c5045e1f60d9098e26670c813ab5f4b11276","author":{"name":"Alex Hortopan"},"bugs":{"url":"https://github.com/hortopan/request.hpkp/issues"},"directories":{},"dist-tags":{"latest":"0.0.3"},"dist":{"shasum":"c732c5045e1f60d9098e26670c813ab5f4b11276","tarball":"http://registry.npmjs.org/request.hpkp/-/request.hpkp-0.0.3.tgz"},"maintainers":[{"name":"alex.hortopan","email":"alex@hortopan.com"}],"readmeFilename":"README.MD","time":{"modified":"2016-11-07T14:12:44.380Z","created":"2016-06-30T12:32:17.549Z","0.0.1":"2016-06-30T12:32:17.549Z","0.0.2":"2016-06-30T14:43:50.712Z","0.0.3":"2016-07-08T13:16:37.737Z"}}}