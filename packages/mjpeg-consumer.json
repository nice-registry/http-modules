{"name":"mjpeg-consumer","version":"1.1.0","description":"a stream implementation that consumes http mjpeg streams and emits jpegs as buffers","main":"index.js","scripts":{"test":"nodeunit test/test.js","coveralls":"jscoverage lib/mjpeg-consumer.js && USE_COVERAGE=1 node_modules/.bin/nodeunit --reporter=lcov test/test.js | node_modules/.bin/coveralls"},"dependencies":{"buffertools":"~2.1.0"},"devDependencies":{"coveralls":"^2.11.4","file-on-write":"~0.2.0","jscoverage":"^0.6.0","nodeunit":"^0.9.1","request":"^2.67.0"},"engines":{"node":">=0.10.0"},"repository":"https://github.com/mmaelzer/mjpeg-consumer","license":"MIT","keywords":["mjpg","mjpeg","motion jpeg","stream","http","ip camera"],"gitHead":"e18b2b3c580bc6908a47ca910efad34bdc179e81","homepage":"https://github.com/mmaelzer/mjpeg-consumer#readme","versions":[{"number":"0.1.0","date":"2012-12-30T19:36:14.431Z"},{"number":"0.2.0","date":"2013-01-04T04:42:10.149Z"},{"number":"0.3.0","date":"2014-01-02T04:22:31.748Z"},{"number":"0.3.1","date":"2014-01-04T20:55:21.088Z"},{"number":"0.4.0","date":"2014-04-16T03:05:51.173Z"},{"number":"0.5.0","date":"2015-06-10T02:47:02.950Z"},{"number":"0.6.0","date":"2015-06-10T02:52:07.769Z"},{"number":"0.6.1","date":"2015-06-13T15:21:02.938Z"},{"number":"0.6.2","date":"2015-07-05T18:57:06.472Z"},{"number":"1.0.0","date":"2015-11-28T06:34:26.310Z"},{"number":"1.0.1","date":"2015-11-28T06:41:26.243Z"},{"number":"1.0.2","date":"2015-12-04T04:37:11.258Z"},{"number":"1.0.3","date":"2015-12-04T05:00:14.662Z"},{"number":"1.0.4","date":"2015-12-04T15:36:34.000Z"},{"number":"1.0.5","date":"2015-12-08T04:30:15.055Z"},{"number":"1.1.0","date":"2016-02-26T06:19:56.351Z"}],"readme":"mjpeg-consumer\n==================\n  \nA node.js transform stream implementation that consumes http multipart mjpeg streams and emits jpegs.\n\n[![build status](https://secure.travis-ci.org/mmaelzer/mjpeg-consumer.png)](http://travis-ci.org/mmaelzer/mjpeg-consumer)\n[![Coverage Status](https://coveralls.io/repos/mmaelzer/mjpeg-consumer/badge.svg?branch=master&service=github)](https://coveralls.io/github/mmaelzer/mjpeg-consumer?branch=master)\n\n  \n### Install\n\n```bash\nnpm install mjpeg-consumer\n```\n  \n----------------------  \n### Usage\nThe `mjpeg-consumer` isn't very useful without a writable pipe to pipe jpegs to. I've built the [file-on-write](https://github.com/mmaelzer/file-on-write) stream to write a file every time `write` is called on it. The below example opens a stream to an IP camera, pipes the results to the `mjpeg-consumer` which processes the stream and emits parsed jpegs to the `file-on-write` writer.\n\n```javascript\nvar request = require(\"request\");\nvar MjpegConsumer = require(\"mjpeg-consumer\");\nvar FileOnWrite = require(\"file-on-write\");\n\nvar writer = new FileOnWrite({ \n\tpath: './video',\n\text: '.jpg'\n});\nvar consumer = new MjpegConsumer();\n\nrequest(\"http://mjpeg.sanford.io/count.mjpeg\").pipe(consumer).pipe(writer);\n```\n","created":"2012-12-30T19:36:12.719Z","modified":"2016-02-26T06:19:56.351Z","lastPublisher":{"name":"mmaelzer","email":"mmaelzer@gmail.com"},"owners":[{"name":"mmaelzer","email":"mmaelzer@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"mjpeg-consumer","_nodeVersion":"0.12.10","_npmOperationalInternal":{"host":"packages-5-east.internal.npmjs.com","tmp":"tmp/mjpeg-consumer-1.1.0.tgz_1456467593812_0.27912594517692924"},"_npmUser":{"name":"mmaelzer","email":"mmaelzer@gmail.com"},"_npmVersion":"2.14.9","_rev":"1-1fbb3b4bdf673a9e95c6059b385d1557","_shasum":"60a00ffc2daf48a07edcdc6f93bd3139aeb9ee22","author":{"name":"Mike Maelzer","email":"mmaelzer@gmail.com"},"bugs":{"url":"https://github.com/mmaelzer/mjpeg-consumer/issues"},"directories":{},"dist-tags":{"latest":"1.1.0"},"dist":{"shasum":"60a00ffc2daf48a07edcdc6f93bd3139aeb9ee22","tarball":"http://registry.npmjs.org/mjpeg-consumer/-/mjpeg-consumer-1.1.0.tgz"},"maintainers":[{"name":"mmaelzer","email":"mmaelzer@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-02-26T06:19:56.351Z","created":"2012-12-30T19:36:12.719Z","0.1.0":"2012-12-30T19:36:14.431Z","0.2.0":"2013-01-04T04:42:10.149Z","0.3.0":"2014-01-02T04:22:31.748Z","0.3.1":"2014-01-04T20:55:21.088Z","0.4.0":"2014-04-16T03:05:51.173Z","0.5.0":"2015-06-10T02:47:02.950Z","0.6.0":"2015-06-10T02:52:07.769Z","0.6.1":"2015-06-13T15:21:02.938Z","0.6.2":"2015-07-05T18:57:06.472Z","1.0.0":"2015-11-28T06:34:26.310Z","1.0.1":"2015-11-28T06:41:26.243Z","1.0.2":"2015-12-04T04:37:11.258Z","1.0.3":"2015-12-04T05:00:14.662Z","1.0.4":"2015-12-04T15:36:34.000Z","1.0.5":"2015-12-08T04:30:15.055Z","1.1.0":"2016-02-26T06:19:56.351Z"}}}