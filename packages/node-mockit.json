{"name":"node-mockit","version":"0.0.1","preferGlobal":true,"description":"http protocal mock script make test easy","bin":{"cli":"./cli.js","mock":"./mock.js"},"keywords":["mock","js","test"],"license":"MIT","homepage":"https://github.com/ipconfiger/node-mockit","dependencies":{"request":"latest","commander":"latest"},"gitHead":"066334ad5dc2af5a031d7e1721d9643b0e589fa1","scripts":{},"versions":[{"number":"0.0.1","date":"2015-10-21T08:21:45.751Z"}],"readme":"#顾名思义就是用nodejs写的用来mock Http的服务端和客户端的工具\n\n##开发的目的\n\n方便客户端开发人员和服务端开发人员的协作，双方可以通过本工具的配置来协定交互协议，并且可以并行开发，在开发期间可以用mock.js和cli.js分别模拟服务端和客户端。可以提高整个团队的协作效率。\n\n另，如果有诸如开发的API之类，可以在不部署测试服务器的情况下，将配置好的脚本发给合作方，用于辅助接口接入使用。\n\n##使用方法\n1. 安装nodejs （必须）\n2. sudo npm install https://github.com/ipconfiger/node-mockit.git -g\n3. mkdir ./scripts\n3. cli -e > ./scripts/test.js\n4. mock -s ./scripts  即可启动mock服务端\n\n服务自己会检测配置脚本的变化，并且立即更新，所以修改了测试脚本后不需要重启\n\n用  cli -s 脚本地址 -h 服务根地址  就可以向服务地址提交指定脚本的请求，用于验证服务端实现\n比如 cli -s ./scripts -b http://127.0.0.1:25300\n\n\n##配置文件说明：\n\n    exports.config={\n\t    name:\"test7\",   // 接口名，输出错误提示的时候用到\n\t    url:\"/test\",    //接口地址\n\t    request:{       //请求部分配置\n\t        method:\"POST\",  //请求的方法\n\t        headers:{Authorization:\"Basic token\"}, //请求的header（可选项）\n\t        type:\"body\",  //请求的方式，有body,form,get 三个选项后续请求说明中详细说明\n\t        data:{        //请求的数据\n\t            name:\"alex\",\n\t            password:\"XXXX\",\n\t        }\n\t    },\n\t    response:{       //返回数据定义\n\t        content_type:\"application/json\",     //返回内容类型\n\t        success:{                            //请求正确时的返回内容\n\t            rs:true,\n\t            info:\"\"\n\t        },\n\t        error:{                              //请求错误时的返回内容\n\t            rs:false,\n\t            error:\"error info\"\n\t        }\n\t    }\n\t}\n\t\n\n##请求方式说明：\n\n###body：\n\n通过post发送数据，将请求内容用json序列化后放在body中\n\n###form：\n\n通过form表单发送的数据\n\n###get：\n\nGET请求通过querystring发送数据\n\n##命令参数\n\n    mock -h\n\n    Usage: mock [options]\n\n    Options:\n\n      -h, --help           输出命令说明\n      -V, --version        输出版本号\n      -s,--scripts [type]  设定脚本所在目录，比如./scripts\n      -p,--port [type]     设定服务器工作目录，比如 25300\n      -l,--level [type]    设定请求验证级别0=不检测 1=只检测键 2=全检测 默认：1\n      \n\n\n---------------------------------------------------------------------------\n\n    cli --help\n\n    Usage: cli [options]\n\n    Options:\n\n      -h, --help          输出命令说明\n      -V, --version       输出版本号\n      -e,--example        输出example配置脚本\n      -s,--script [type]  设定脚本所在目录，比如./scripts\n      -b,--host [type]    设定服务器地址和端口 [http://127.0.0.1:25300]\n","created":"2015-10-21T08:21:45.751Z","modified":"2015-10-21T08:21:45.751Z","lastPublisher":{"name":"ipconfiger","email":"superpowerlee@gmail.com"},"owners":[{"name":"ipconfiger","email":"superpowerlee@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"node-mockit","_nodeVersion":"4.2.1","_npmUser":{"name":"ipconfiger","email":"superpowerlee@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-9e0003f81d5a833e874d30b7991f80f3","_shasum":"68127d1975ae8bcd0e112f61100a9a9a051d87b2","author":{"name":"Alexander.Li"},"bugs":{"url":"https://github.com/ipconfiger/node-mockit/issues"},"directories":{},"dist-tags":{"latest":"0.0.1"},"dist":{"shasum":"68127d1975ae8bcd0e112f61100a9a9a051d87b2","tarball":"http://registry.npmjs.org/node-mockit/-/node-mockit-0.0.1.tgz"},"maintainers":[{"name":"ipconfiger","email":"superpowerlee@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-10-21T08:21:45.751Z","created":"2015-10-21T08:21:45.751Z","0.0.1":"2015-10-21T08:21:45.751Z"}}}