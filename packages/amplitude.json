{"name":"amplitude","version":"3.5.0","description":"A node wrapper for Amplitude analytics http api","files":["amplitude.js"],"scripts":{"prepublish-please":"npm test","prepublish":"publish-please guard","contributors":"node tasks/generate-contributors-list","lint":"standard *.js test/*.js | snazzy","test":"npm run lint && mocha","publish-please":"publish-please"},"main":"amplitude.js","repository":"https://github.com/crookedneighbor/amplitude","keywords":["analytics","amplitude"],"dependencies":{"superagent":"^3.3.1"},"devDependencies":{"chai":"^3.0.0","ecmascript-version-detector":"^1.0.3","glob":"^7.1.1","mocha":"^3.0.0","nock":"9.0.2","publish-please":"^2.1.4","sinon":"^1.17.6","sinon-chai":"^2.8.0","snazzy":"^6.0.0","standard":"^10.0.0"},"license":"ISC","standard":{"globals":["describe","context","before","beforeEach","after","afterEach","it","expect","sandbox"]},"gitHead":"8a5943c6fbafaa0a354e170ce9543cf0dd60c718","homepage":"https://github.com/crookedneighbor/amplitude#readme","versions":[{"number":"1.0.0","date":"2015-06-26T13:34:26.124Z"},{"number":"1.0.1","date":"2015-06-26T13:36:16.398Z"},{"number":"1.0.2","date":"2015-06-26T13:38:29.240Z"},{"number":"1.0.3","date":"2015-06-26T13:44:05.580Z"},{"number":"1.0.4","date":"2015-07-03T01:48:21.961Z"},{"number":"1.0.5","date":"2015-07-10T03:25:36.746Z"},{"number":"1.0.6","date":"2015-07-19T15:08:57.507Z"},{"number":"1.0.7","date":"2015-08-15T20:47:00.417Z"},{"number":"2.0.0","date":"2015-08-21T03:12:29.329Z"},{"number":"2.0.1","date":"2015-10-27T22:24:37.067Z"},{"number":"2.0.2","date":"2015-11-15T14:47:35.398Z"},{"number":"2.0.3","date":"2015-11-15T16:47:51.354Z"},{"number":"2.0.4","date":"2016-06-01T01:24:36.546Z"},{"number":"3.0.0","date":"2016-08-05T16:40:55.586Z"},{"number":"3.2.0","date":"2017-01-03T14:51:37.591Z"},{"number":"3.1.0","date":"2017-01-03T14:52:52.353Z"},{"number":"3.2.1","date":"2017-01-03T23:27:53.184Z"},{"number":"3.3.0","date":"2017-01-19T14:40:30.192Z"},{"number":"3.4.0","date":"2017-02-02T04:09:29.316Z"},{"number":"3.5.0","date":"2017-04-24T12:19:51.026Z"}],"readme":"# amplitude\n\n![Build Status](https://travis-ci.org/crookedneighbor/amplitude.svg?branch=master) ![npm version](https://badge.fury.io/js/amplitude.svg)\n\nServer side implementation of [Amplitude](https://amplitude.com)'s http api.\n\n## Install\n\n```bash\nnpm install amplitude --save\n```\n\n## Basic Initialization\n\n```javascript\nvar Amplitude = require('amplitude')\n// The only required field is the api token\nvar amplitude = new Amplitude('api-token')\n```\n\n## Track an event\n\nPass in any keys listed on the [Amplitude http api](https://amplitude.zendesk.com/hc/en-us/articles/204771828-HTTP-API). The only required keys are `event_type` and either `user_id` or `device_id`. If you initialized the Amplitude object with a user/device id, they can be ignored when calling the track method.\n\n```javascript\nvar data = {\n  event_type: 'some value', // required\n  user_id: 'some id', // only required if device id is not passed in\n  device_id: 'some id', // only required if user id is not passed in\n  session_id: 1492789357923, // must be unix timestamp in ms, not required\n  event_properties: {\n    //...\n  },\n  user_properties: {\n    //...\n  }\n}\namplitude.track(data)\n```\n\nYou can also pass an array of `event` objects:\n```javascript\nvar data = [\n  {\n    event_type: 'some value', // required\n    user_id: 'some id', // only required if device id is not passed in\n    device_id: 'some id', // only required if user id is not passed in\n    event_properties: {\n      //...\n    },\n    user_properties: {\n      //...\n    }\n  },\n  {\n    event_type: 'another value', // required\n    user_id: 'some id', // only required if device id is not passed in\n    device_id: 'some id', // only required if user id is not passed in\n    event_properties: {\n      //...\n    },\n    user_properties: {\n      //...\n    }\n  }\n]\namplitude.track(data)\n```\n\n## Identify API\n\nThe `identify` method allows you to [make changes to a user without sending an analytics event](https://amplitude.zendesk.com/hc/en-us/articles/205406617). \n\n```javascript\nvar data = {\n  user_id: 'some id', // only required if device id is not passed in\n  device_id: 'some id', // only required if user id is not passed in\n  event_properties: {\n    //...\n  },\n  user_properties: {\n    //...\n  }\n}\namplitude.identify(data)\n```\n\nYou can also pass an array of `identify` objects:\n```javascript\nvar data = [\n  {\n    user_id: 'some id', // only required if device id is not passed in\n    device_id: 'some id', // only required if user id is not passed in\n    event_properties: {\n      //...\n    },\n    user_properties: {\n      //...\n    }\n  },\n  {\n    user_id: 'some id', // only required if device id is not passed in\n    device_id: 'some id', // only required if user id is not passed in\n    event_properties: {\n      //...\n    },\n    user_properties: {\n      //...\n    }\n  }\n]\namplitude.identify(data)\n```\n\n### CamelCase Data\n\nIf you prefer camelCase variables, you can pass in the camelCase version instead to the `track` and `identify` methods:\n\n```javascript\nvar data = {\n  eventType: 'some value', // required\n  userId: 'some id', // only required if device id is not passed in\n  deviceId: 'some id', // only required if user id is not passed in\n  sessionId: 1492789357923, // must be unix timestamp in ms, not required\n  eventProperties: {\n    //...\n  },\n  userProperties: {\n    //...\n  }\n}\namplitude.track(data)\n```\n\nThis is the full list of properties that will be automatically transformed:\n\n```\nuserId -> user_id\ndeviceId -> device_id\nsessionId -> session_id\neventType -> event_type\neventProperties -> event_properties\nuserProperties -> user_properties\nappVersion -> app_version\nosName -> os_name\ndeviceBrand -> device_brand\ndeviceManufacturer -> device_manufacturer\ndeviceModel -> device_model\ndeviceType -> device_type\nlocationLat -> location_lat\nlocationLng -> location_lng\n```\n\n### User/Device/Session ID\n\nIf the user/device/session id will always be the same, you can initialize the object with it. Passing a user id or device id in the `track` and `identify` methods will override the default value set at initialization.\n\n```javascript\nvar amplitude = new Amplitude('api-token', { user_id: 'some-user-id' })\n// or\nvar amplitude = new Amplitude('api-token', { device_id: 'some-device-id' })\n// or\nvar amplitude = new Amplitude('api-token', { session_id: 1492789357923 })\n\namplitude.track({\n  event_type: 'some value'\n})\n\namplitude.track({\n  event_type: 'some value',\n  user_id: 'will-override-the-default-id'\n})\n```\n\n### Promises\n\nAll methods return a Promise.\n\n```javascript\namplitude.track(data)\n  .then(function(result) {\n    //... do something\n  }).catch(function(error) {\n    //... do something\n  })\n```\n\n## Dashboard API\n\n### Export your data\n\nThe export method requires your [secret key](https://amplitude.zendesk.com/hc/en-us/articles/206728448-Where-can-I-find-my-app-s-API-Key-or-Secret-Key-) to be added when initializing the amplitude object. This method uses the [export api](https://amplitude.zendesk.com/hc/en-us/articles/205406637-Export-API-Export-your-app-s-event-data) and requires a start and end string in the format `YYYYMMDDTHH`.\n\nThe method returns a stream.\n\n```javascript\nvar fs = require('fs')\nvar stream = fs.createWriteStream('./may-2016-export.zip')\n\nvar amplitude = new Amplitude('api-token', { secretKey: 'secret' })\n\namplitude.export({\n  start: '20160501T20',\n  end: '20160601T20'\n}).pipe(stream)\n```\n\n### User Search\n\nThe user search method requires your [secret key](https://amplitude.zendesk.com/hc/en-us/articles/206728448-Where-can-I-find-my-app-s-API-Key-or-Secret-Key-) to be added when initializing the amplitude object. This method uses the [dashboard api](https://amplitude.zendesk.com/hc/en-us/articles/205469748-Dashboard-Rest-API-Export-Amplitude-Dashboard-Data#user%20search).\n\nSearch for a user with a specified Amplitude ID, Device ID, User ID, or User ID prefix.\n\n```javascript\nvar amplitude = new Amplitude('api-token', { secretKey: 'secret' })\n\namplitude.userSearch('user/device/amplitude id or user id prefix').then(function (res) {\n  var matches = res.matches // Array of matches\n\n  // How the match was made\n  // If exact match was made with user id or device id, type === 'match_user_or_device_id'\n  // If exact match was made with Amplitude ID, type === 'match_amplitude_id'\n  // If a partial match was made with a user id prefix, type === 'match_user_prefix'\n  // If no match was made, type === 'nomatch'\n  var type = res.type\n})\n```\n\n### User Activity\n\nThe user activity method requires your [secret key](https://amplitude.zendesk.com/hc/en-us/articles/206728448-Where-can-I-find-my-app-s-API-Key-or-Secret-Key-) to be added when initializing the amplitude object. This method uses the [dashboard api](https://amplitude.zendesk.com/hc/en-us/articles/205469748-Dashboard-Rest-API-Export-Amplitude-Dashboard-Data#user-activity).\n\nGet a user summary and their recent events. This method requires an Amplitude ID. You can use the [user search](#user-search) method to find that.\n\n```javascript\nvar amplitude = new Amplitude('api-token', { secretKey: 'secret' })\n\namplitude.userActivity('Amplitude ID').then(function (res) {\n  var userData = res.userData // data about the user\n  var events = res.events // an array of events associated with the user\n})\n```\n\nIf there is nothing found for the passed Amplitude ID, the Promise will still resolve. The `userData` object will contain empty values and the `events` array will be empty:\n\n```javascript\n{\n  userData: {\n    num_sessions: 0,\n    purchases: 0,\n    revenue: 0,\n    merged_amplitude_ids: [],\n    num_events: 0,\n    canonical_amplitude_id: 1,\n    user_id: null,\n    last_location: null,\n    usage_time: 0,\n    last_device_id: null,\n    device_ids: []\n  },\n  events: []\n}\n```\n\nIf you do not know the Amplitude ID, you can use the [userSearch](#user-search) method to find it.\n\n```javascript\nvar amplitude = new Amplitude('api-token', { secretKey: 'secret' })\n\namplitude.userSearch('user-id').then(function (res) {\n  // If you're using a prefix, you may get multiple matches and\n  // you may need to handle the case where there is not a match\n  var match = res.matches[0]\n\n  return amplitude.userActivity(match.amplitude_id)\n}).then(function (res) {\n  var userData = res.userData // data about the user\n  var events = res.events // an array of events associated with the user\n})\n```\n\n### Event Segmentation\n\nThe event segmentation method requires your [secret key](https://amplitude.zendesk.com/hc/en-us/articles/206728448-Where-can-I-find-my-app-s-API-Key-or-Secret-Key-) to be added when initializing the amplitude object. This method uses the [dashboard api](https://amplitude.zendesk.com/hc/en-us/articles/205469748-Dashboard-Rest-API-Export-Amplitude-Dashboard-Data#event-segmentation).\n\nGet metrics for an event with segmentation.\n\n```javascript\nvar amplitude = new Amplitude('api-token', { secretKey: 'secret' })\n\namplitude.eventSegmentation({\n  e: {\n    'event_type': 'event_name'\n  },\n  start: '20170104',\n  end: '20170117',\n})\n.then((res) => {\n  var segmentationData = res.data\n})\n```\n\nExample response:\n\n```javascript\n{ series: [ [ 2, 25, 3, 1, 0, 0, 2, 3, 5, 1, 0, 0, 0, 0 ] ],\n  seriesLabels: [ 0 ],\n  xValues: \n   [ '2017-01-04',\n     '2017-01-05',\n     '2017-01-06',\n     '2017-01-07',\n     '2017-01-08',\n     '2017-01-09',\n     '2017-01-10',\n     '2017-01-11',\n     '2017-01-12',\n     '2017-01-13',\n     '2017-01-14',\n     '2017-01-15',\n     '2017-01-16',\n     '2017-01-17' ] }\n```\n\nIf the event does not exist, Amplitude will throw a 400 error.\n\n## Changelog\n\nView the [releases page](https://github.com/crookedneighbor/amplitude/releases) for changes in each version.\n\n<!---\nDo not change anything below this comment. It is generated automatically.\n------>\n\n## Contributors\n\n+ [Erki Esken](http://deekit.net/)\n+ [Matthew Keesan](http://keesan.net)\n+ Geoff Dutton\n+ Matt Pardee\n+ [Chase Seibert](http://chase-seibert.github.io/blog/)\n","starsCount":2,"created":"2015-06-26T13:34:26.124Z","modified":"2017-04-26T16:44:31.846Z","lastPublisher":{"name":"bladebarringer","email":"blade@crookedneighbor.com"},"owners":[{"name":"bladebarringer","email":"blade@crookedneighbor.com"}],"other":{"_attachments":{},"_from":".","_id":"amplitude","_nodeVersion":"4.3.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/amplitude-3.5.0.tgz_1493036389211_0.4828711722511798"},"_npmUser":{"name":"bladebarringer","email":"blade@crookedneighbor.com"},"_npmVersion":"3.10.7","_rev":"8-2d8299c757b5f197dd31b0d9156d399a","_shasum":"63edadbd9a0aef49467f66c11340fe9b371cd7c3","author":{"name":"Blade Barringer","email":"blade@crookedneighbor.com"},"bugs":{"url":"https://github.com/crookedneighbor/amplitude/issues"},"contributors":[{"name":"Erki Esken","email":"erki@deekit.net","url":"http://deekit.net/"},{"name":"Matthew Keesan","email":"hi@keesan.net","url":"http://keesan.net"},{"name":"Geoff Dutton","email":"g.dutton@gmail.com"},{"name":"Matt Pardee","email":"matt.pardee@gmail.com"},{"name":"Chase Seibert","email":"chase.seibert@gmail.com","url":"http://chase-seibert.github.io/blog/"}],"directories":{},"dist-tags":{"latest":"3.5.0"},"dist":{"shasum":"63edadbd9a0aef49467f66c11340fe9b371cd7c3","tarball":"https://registry.npmjs.org/amplitude/-/amplitude-3.5.0.tgz"},"maintainers":[{"name":"bladebarringer","email":"blade@crookedneighbor.com"}],"readmeFilename":"README.md","time":{"modified":"2017-04-26T16:44:31.846Z","created":"2015-06-26T13:34:26.124Z","1.0.0":"2015-06-26T13:34:26.124Z","1.0.1":"2015-06-26T13:36:16.398Z","1.0.2":"2015-06-26T13:38:29.240Z","1.0.3":"2015-06-26T13:44:05.580Z","1.0.4":"2015-07-03T01:48:21.961Z","1.0.5":"2015-07-10T03:25:36.746Z","1.0.6":"2015-07-19T15:08:57.507Z","1.0.7":"2015-08-15T20:47:00.417Z","2.0.0":"2015-08-21T03:12:29.329Z","2.0.1":"2015-10-27T22:24:37.067Z","2.0.2":"2015-11-15T14:47:35.398Z","2.0.3":"2015-11-15T16:47:51.354Z","2.0.4":"2016-06-01T01:24:36.546Z","3.0.0":"2016-08-05T16:40:55.586Z","3.2.0":"2017-01-03T14:51:37.591Z","3.1.0":"2017-01-03T14:52:52.353Z","3.2.1":"2017-01-03T23:27:53.184Z","3.3.0":"2017-01-19T14:40:30.192Z","3.4.0":"2017-02-02T04:09:29.316Z","3.5.0":"2017-04-24T12:19:51.026Z"},"users":{"cdll":true,"jordanskole":true}}}