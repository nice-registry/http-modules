{"name":"http-switch","version":"1.4.1","description":"Switches incomming HTTP requests","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/JaegerMa/http-switch.js","keywords":["http","server","switch","handler"],"license":"MIT","homepage":"https://github.com/JaegerMa/http-switch.js#readme","gitHead":"c8f36e61b617eb03be607ea9c125a66d46d145bc","versions":[{"number":"1.0.0","date":"2017-05-14T13:04:32.266Z"},{"number":"1.0.1","date":"2017-05-14T13:15:37.253Z"},{"number":"1.1.0","date":"2017-05-14T13:38:48.347Z"},{"number":"1.2.0","date":"2017-05-29T17:45:59.069Z"},{"number":"1.3.1","date":"2017-06-13T19:23:56.092Z"},{"number":"1.4.0","date":"2017-06-15T20:41:42.714Z"},{"number":"1.4.1","date":"2017-06-15T20:49:23.830Z"}],"readme":"# http-switch\n  Simple switch for http requests\n\n```shell\nnpm install --save http-switch\n```\nBasically Http-Switch is another http handler, but it allows you to create your own server and handles only the 'request'-event. This makes it possible to use either `http`, `https`, `spdy` or any other `http`-compatible server.\n\n## Usage\n\n```js\nconst http = require('http');\nconst HTTPSwitch = require('http-switch');\n\nlet server = http.createServer();\nlet httpSwitch = new HTTPSwitch(server);\n\nhttpSwitch.for('/', (request, response) => //Handles requests matching string '/'\n{\n\t/* Serve index.html */\n});\n\nhttpSwitch.for(/^\\/foo/, (request, response) => //Handles requests matching regex ^/foo\n\t\t\t\t\t\t//which includes every string starting with /foo\n\t\t\t\t\t\t//even '/foo/bar' and '/foobar'\n{\n\t/* Serve foo.html */\n});\n\nlet handler404 =\n{\n\thandle: function(request, response)\n\t{\n\t\t/* Serve 404.html */\n\t}\n};\n\nhttpSwitch.for({ hostname: 'example.com' }, handler404); //Handles every request for example.com\n\nhttpSwitch.for({ hostname: '.+\\.example.com', pathname: /^/ }, handler404); //Handles every request for *.example.com\n\nhttpSwitch.for(/^/, handler404); //Handles every request\n\nserver.listen(80);\n```\n\nHandlers are processed sequentially, so handler 3 will be called only if handler 1 and 2 don't match\n\n### Examples\n- `/`  \nHandler 1\n- `/foo`  \nHandler 2\n- `/foo/bar/abc`  \nHandler 2\n- `/foobar/abc`  \nHandler 2\n- `/barfoo`  \nHandler 3\n- `/abc`  \nHandler 3\n\n### Exceptions\n\nIf the handler-function returns a Promise, HTTP-Switch will catch exceptions in that Promise and end the connection.\n\n```js\n\nhttpHandler.on(/^\\/foo/, async (request, response) =>\n{\n\tlet foo = await something();\n\n\tthrow new Error();\n\t//Response will be closed with http code 500\n}\n```\n\n## API\n\n### `new HTTPSwitch([server])`\n\n#### arguments\n\n- `server: object`  \nAny object compatible to http.Server  \nIf ommited, you have to pass requests manually via the switchRequest-method\n\n#### returns\n\n- `HTTPSwitch: object`\n\n### `HTTPSwitch.for(pathname, onRequest)`\n\n#### arguments\n\n- `pathname: string or RegExp`\n- `onRequest: function(request, response)`\n\n#### returns\n\n- `this`\n\n### `HTTPSwitch.for(path, onRequest)`\n\n#### arguments\n\n- `path: object`\n\t- `pathname | path: string or RegExp`\n\t- `hostname | host: string or RegExp`\n\t- `port: int`\n- `onRequest: function(request, response)`\n\n#### returns\n\n- `this`\n\n### `HTTPSwitch.addHandler(pathname, onRequest)`\nSame as `HTTPSwitch.for`\n\n### `HTTPSwitch.addHandler(path, onRequest)`\nSame as `HTTPSwitch.for`\n\n### `HTTPSwitch.switchRequest(request, response)`\n\n#### arguments\n\n- `request: http.IncommingMessage`\n- `response: http.ServerResponse`\n\n#### returns\n\n- `handler: object`\n","created":"2017-05-14T13:04:32.266Z","modified":"2017-06-15T20:49:23.830Z","lastPublisher":{"name":"jaegerma","email":"JaegerMa.npm@lightning-mail.de"},"owners":[{"name":"jaegerma","email":"JaegerMa.npm@lightning-mail.de"}],"other":{"_attachments":{},"_id":"http-switch","_nodeVersion":"8.0.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/http-switch-1.4.1.tgz_1497559762882_0.29569690744392574"},"_npmUser":{"name":"jaegerma","email":"JaegerMa.npm@lightning-mail.de"},"_npmVersion":"5.0.0","_rev":"7-027ae3d35343de080b3379be7d6518b8","author":{"name":"JaegerMa"},"bugs":{"url":"https://github.com/JaegerMa/http-switch.js/issues"},"directories":{},"dist-tags":{"latest":"1.4.1"},"dist":{"integrity":"sha512-gLt0JKtuT3UpaYOjrl3yG4L4ByLh/g0JAcGEPvo3P1e2zhpV6a9mXsh+dS8jNcqZpC9bKdR/tAY0FqquOxVdLw==","shasum":"e3e85c843792a50394fbd977a3e5286a7084b0ee","tarball":"https://registry.npmjs.org/http-switch/-/http-switch-1.4.1.tgz"},"maintainers":[{"name":"jaegerma","email":"JaegerMa.npm@lightning-mail.de"}],"readmeFilename":"README.md","time":{"modified":"2017-06-15T20:49:23.830Z","created":"2017-05-14T13:04:32.266Z","1.0.0":"2017-05-14T13:04:32.266Z","1.0.1":"2017-05-14T13:15:37.253Z","1.1.0":"2017-05-14T13:38:48.347Z","1.2.0":"2017-05-29T17:45:59.069Z","1.3.1":"2017-06-13T19:23:56.092Z","1.4.0":"2017-06-15T20:41:42.714Z","1.4.1":"2017-06-15T20:49:23.830Z"}}}