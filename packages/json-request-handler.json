{"name":"json-request-handler","version":"1.0.1","description":"A function to accept a JSON request http body","main":"index.js","scripts":{"test":"node test.js"},"repository":"https://github.com/jenca-cloud/json-request-handler","keywords":["JSON","request","HTTP"],"license":"MIT","homepage":"https://github.com/jenca-cloud/json-request-handler","devDependencies":{"async":"^1.5.0","from2-string":"^1.1.0","hyperquest":"^1.2.0","hyperrequest":"0.0.4","tape":"^4.3.0"},"dependencies":{"concat-stream":"^1.5.1"},"gitHead":"9ebca5c621b17a073f49b1ffdfd7b88a8da116c4","versions":[{"number":"1.0.0","date":"2016-01-24T20:03:13.964Z"},{"number":"1.0.1","date":"2016-01-24T20:40:34.437Z"}],"readme":"# json-request-handler\n\nA function to accept a JSON request http body.\n\n```\nvar jsonRequest = require('json-request-handler')\n\nvar handler = jsonRequest(function(req, res){\n\n  // req.jsonBody is populated with the processed body\n  var prop = req.jsonBody.prop\n\n}, function(err, req, res){\n\n  // if you define this function it means don't automatically\n  // handle errors and return the error here instead\n  res.end(err.toString())\n\n})\n\nvar server = http.createServer(handler)\n\nserver.listen(80)\n```\n\n## install\n\n```bash\n$ npm install json-request-handler\n```\n\n## test\n\n```bash\n$ npm test\n```\n\n## API\n\n#### `jsonRequest(fn, errorfn)`\n\nYou pass a handler function that will be called once the HTTP request body has been processed.  The handler function is called with the same arguments as it would have been - for example:\n\n```js\nvar handler = jsonRequest(function(req, res, opts, cb){\n\n  // opts and cb are arguments populated by whatever router you are using\n\n})\n```\n\n\n## error handler\n\nIf there is an error processing the JSON body - a statusCode `500` will be written and the error written as the response body.\n\nSetting the `errorfn` function means the automatic error handling is disabled and the error (along with the other arguments) is passed in.\n\nvar handler = jsonRequest(function(req, res, opts, cb){\n}, function(err, req, res, opts, cb){\n  // here we handle the error manually\n})\n\n## Licence\n\nMIT\n","created":"2016-01-24T20:03:13.964Z","modified":"2016-11-01T18:24:36.791Z","lastPublisher":{"name":"jenca-cloud","email":"connor@jenca.io"},"owners":[{"name":"px3l","email":"px3l@tuta.io"}],"other":{"_attachments":{},"_from":".","_id":"json-request-handler","_nodeVersion":"5.4.0","_npmUser":{"name":"jenca-cloud","email":"connor@jenca.io"},"_npmVersion":"3.3.12","_rev":"2-c03d6b95b7e244079f0a9a79925bc913","_shasum":"6ee6fb4a5404707d5f63dc579f6c8f8140162dfd","author":{"name":"Jenca Cloud"},"bugs":{"url":"https://github.com/jenca-cloud/json-request-handler/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"6ee6fb4a5404707d5f63dc579f6c8f8140162dfd","tarball":"http://registry.npmjs.org/json-request-handler/-/json-request-handler-1.0.1.tgz"},"maintainers":[{"name":"px3l","email":"px3l@tuta.io"}],"readmeFilename":"README.md","time":{"modified":"2016-11-01T18:24:36.791Z","created":"2016-01-24T20:03:13.964Z","1.0.0":"2016-01-24T20:03:13.964Z","1.0.1":"2016-01-24T20:40:34.437Z"}}}