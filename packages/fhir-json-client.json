{"name":"fhir-json-client","version":"1.3.0","description":"A minimal JSON client for FHIR HTTP servers.","license":"BSD-3-Clause","main":"lib/client.js","repository":"https://github.com/bausmeier/fhir-json-client","scripts":{"lint":"standard","test":"tap --cov -J \"test/**/*.js\"","codecov":"tap --coverage-report=lcov && codecov"},"dependencies":{"media-typer":"^0.3.0"},"devDependencies":{"codecov":"^2.2.0","standard":"^10.0.2","tap":"^10.3.3"},"gitHead":"ed8b919bc67d295448e9be4b01a480729930cdd6","homepage":"https://github.com/bausmeier/fhir-json-client#readme","versions":[{"number":"1.0.0","date":"2017-05-01T15:05:56.856Z"},{"number":"1.1.0","date":"2017-05-02T17:06:51.276Z"},{"number":"1.1.1","date":"2017-05-02T17:13:15.015Z"},{"number":"1.1.2","date":"2017-05-10T17:27:34.173Z"},{"number":"1.2.0","date":"2017-05-18T17:44:55.094Z"},{"number":"1.3.0","date":"2017-06-07T15:12:10.902Z"}],"readme":"# FHIR JSON Client\n[![Build Status](https://travis-ci.org/bausmeier/fhir-json-client.svg?branch=master)](https://travis-ci.org/bausmeier/fhir-json-client)\n[![codecov](https://codecov.io/gh/bausmeier/fhir-json-client/branch/master/graph/badge.svg)](https://codecov.io/gh/bausmeier/fhir-json-client)\n\n# Example usage\n\n```js\nconst Client = require('fhir-json-client')\n\nconst client = new Client('https://example.com:8080/fhir/')\n\nclient.read('Patient', '1', (err, response, patient) => {\n  ...\n})\n```\n\n# Client(options)\n\nArguments:\n\n* `options` - A URL string or object\n\n# Callbacks\n\nThe arguments passed to all of the callback functions are:\n\n1. An error object or `null` if no error occurred.\n2. A response object containing the `statusCode` and `headers` properties.\n3. The response body as string or an object if the response contained JSON content.\n\n# Methods\n\n## read(resourceType, id[, options], callback)\n\nRead the current state of a resource.\n\nArguments:\n\n* `resourceType` - The type of resource to read.\n* `id` - The id of the resource to read.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## vread(resourceType, id, versionId[, options], callback)\n\nRead the state of a specific version of a resource.\n\nArguments:\n\n* `resourceType` - The type of resource to read.\n* `id` - The id of the resource to read.\n* `versionId` - The specific version of the resource to read.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## create(resource[, options], callback)\n\nCreate a new resource with a server assigned id.\n\nArguments:\n\n* `resource` - The resource object to create.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## update(resource[, options], callback)\n\nUpdate an existing resource by its id (or create it if it is new).\n\nArguments:\n\n* `resource` - The resource object to update.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## delete(resourceType, id[, options], callback)\n\nDelete a resource.\n\nArguments:\n\n* `resourceType` - The type of resource to delete.\n* `id` - The id of the resource to delete.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## transaction(bundle[, options], callback)\n\nUpdate, create or delete a set of resources as a single transaction.\n\nArguments:\n\n* `bundle` - The bundle object to submit.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n\n## search(resourceType, query[, options], callback)\n\nSearch the resource type based on some filter criteria.\n\nArguments:\n\n* `resourceType` - The type of resource to search for.\n* `query` - The filter criteria as an object.\n* `options` - An optional object containing options to merge into the request options. This can be used to set custom headers on the request.\n* `callback` - The function to call once the interaction has completed.\n","created":"2017-05-01T15:05:56.856Z","modified":"2017-06-07T15:12:10.902Z","lastPublisher":{"name":"bausmeier","email":"brett@ausmeier.co.za"},"owners":[{"name":"bausmeier","email":"brett@ausmeier.co.za"}],"other":{"_attachments":{},"_from":".","_id":"fhir-json-client","_nodeVersion":"7.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/fhir-json-client-1.3.0.tgz_1496848330778_0.5855650857556611"},"_npmUser":{"name":"bausmeier","email":"brett@ausmeier.co.za"},"_npmVersion":"4.6.1","_rev":"6-56d505d7c19bfca50bc50c72d75a1c40","_shasum":"751ac9850d3ae9ff655d41adb6d1ff712a5968ba","author":{"name":"Brett Ausmeier","email":"brett@ausmeier.co.za"},"bugs":{"url":"https://github.com/bausmeier/fhir-json-client/issues"},"directories":{},"dist-tags":{"latest":"1.3.0"},"dist":{"shasum":"751ac9850d3ae9ff655d41adb6d1ff712a5968ba","tarball":"https://registry.npmjs.org/fhir-json-client/-/fhir-json-client-1.3.0.tgz"},"maintainers":[{"name":"bausmeier","email":"brett@ausmeier.co.za"}],"readmeFilename":"README.md","time":{"modified":"2017-06-07T15:12:10.902Z","created":"2017-05-01T15:05:56.856Z","1.0.0":"2017-05-01T15:05:56.856Z","1.1.0":"2017-05-02T17:06:51.276Z","1.1.1":"2017-05-02T17:13:15.015Z","1.1.2":"2017-05-10T17:27:34.173Z","1.2.0":"2017-05-18T17:44:55.094Z","1.3.0":"2017-06-07T15:12:10.902Z"}}}