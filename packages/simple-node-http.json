{"name":"simple-node-http","version":"1.0.1","description":"A simple wrapper around node.js http to simplify basic requests/add promise API","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":"https://github.com/codan84/simple-node-http","license":"ISC","homepage":"https://github.com/codan84/simple-node-http","gitHead":"1c8526e9c83addefc2d6bdd8cc53d08601191c19","versions":[{"number":"1.0.0","date":"2015-07-17T15:55:24.164Z"},{"number":"1.0.1","date":"2015-07-17T16:39:03.603Z"}],"readme":"#simple-node-http\n\nSimple wrapper around node.js http to make basic requests easier and add promises API.  \n  \nMost of the time when using native node.js http to make a request, I would end up with the same code:  \n\n## Native node.js http post request:\n\tvar options = {\n\t\thostname: 'some-url.com',\n\t\tport: 3000,\n\t\tpath: 'some/path.json',\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'a': 'b',\n\t\t\t'c': 'd'\n\t\t}\n\t};\n\tvar postData = \"some data in whatever form you want...\";\n\tvar processResponse = function(res) {\n\t\tvar body = \"\";\n\t\tres.on('data', function(chunk) {\n\t\t\tbody += chunk.toString();\n\t\t});\n\t\tres.on('end', function() {\n\t\t\tvar responseBody = JSON.parse(responseBody);\n\t\t\thandleResponse(responseBody);\n\t\t});\n\t};\n\tvar req = http.request(options, processResponse)\n\t\t\t\t  .on('error', handleError);\n\treq.write(body);\n\treq.end();\n##\n\nThis is a lot of boilerplate for something so simple!  \nI wanted to just write a line or two and handle anything with Promises rather than callbacks!  \nI have made the wrapper as simple as I could, it still uses the same structure for _options_ as the [native implementation of http \nrequest](https://nodejs.org/api/http.html#http_http_request_options_callback), but automaticaly puts the body together from chunks and parses it to JSON if that's the response content-type. It also returns a promise rather than taking/calling callbacks.  \n\n## The same code with simple-node-http:\n\tvar simpleHttp = require('simple-node-http');\n\tvar options = {\n\t\thostname: 'some-url.com',\n\t\tport: 3000,\n\t\tpath: 'some/path.json',\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'a': 'b',\n\t\t\t'c': 'd'\n\t\t}\n\t};\n\tvar postData = \"some data in whatever form you want...\";\n\tsimpleHttp(options, postData)\n\t\t.then(handleResponse)\n\t\t.catch(handleError);\n## \n\nAs you can see the setup is exactly the same, but the logic of making the request and handling response/error is greatly simplified.  \n_postData_ is optional and can be omitted if no data is to be written to the request body.  \nI am aware this is not suitable for every single scenario, bot it will for majority of simple requests.","created":"2015-07-17T15:55:24.164Z","modified":"2015-07-17T16:39:03.603Z","lastPublisher":{"name":"codan84","email":"daniel.gruszczyk@live.com"},"owners":[{"name":"codan84","email":"daniel.gruszczyk@live.com"}],"other":{"_attachments":{},"_from":".","_id":"simple-node-http","_nodeVersion":"0.12.2","_npmUser":{"name":"codan84","email":"daniel.gruszczyk@live.com"},"_npmVersion":"2.7.5","_rev":"1-9f6d3a543e172f8dc4bc70f06db06518","_shasum":"865eb71112486fed46ff496833d6a2d40a1e29b7","author":{"name":"Daniel Gruszczyk"},"bugs":{"url":"https://github.com/codan84/simple-node-http/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"865eb71112486fed46ff496833d6a2d40a1e29b7","tarball":"http://registry.npmjs.org/simple-node-http/-/simple-node-http-1.0.1.tgz"},"maintainers":[{"name":"codan84","email":"daniel.gruszczyk@live.com"}],"readmeFilename":"README.md","time":{"modified":"2015-07-17T16:39:03.603Z","created":"2015-07-17T15:55:24.164Z","1.0.0":"2015-07-17T15:55:24.164Z","1.0.1":"2015-07-17T16:39:03.603Z"}}}