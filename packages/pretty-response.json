{"name":"pretty-response","version":"1.0.1","description":"Express middleware that exposes functions to work with HTTP status codes","main":"./index","scripts":{"test":"npm run lint && npm run mocha","coveralls":"istanbul cover ./node_modules/mocha/bin/_mocha -- --opts mocha.opts --report lcovonly && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage","coverage":"istanbul cover ./node_modules/.bin/_mocha -- --opts mocha.opts","mocha":"_mocha --opts mocha.opts","lint":"jshint --reporter=node_modules/jshint-stylish lib test; jscs lib test; exit 0"},"repository":"https://github.com/brenolf/pretty-response","keywords":["express","middleware","responses","response","http","methods","handler","helpers","codes","status"],"license":"MIT","homepage":"https://github.com/brenolf/pretty-response","devDependencies":{"chai":"^3.2.0","coveralls":"^2.11.4","jscs":"^2.0.0","jshint":"^2.8.0","jshint-stylish":"^2.0.1","mocha":"^2.2.5","mocha-lcov-reporter":"^1.0.0","sinon":"^1.17.2","sinon-chai":"^2.8.0"},"dependencies":{},"gitHead":"79a6030dbfb0421b51dd30d1bdd2ebeb1f6d9349","versions":[{"number":"1.0.0","date":"2015-10-23T18:50:48.711Z"},{"number":"1.0.1","date":"2015-10-23T19:41:30.087Z"}],"readme":"# Pretty Response\n\n[![Build Status](https://travis-ci.org/brenolf/pretty-response.svg)](https://travis-ci.org/brenolf/pretty-response)\n[![Coverage Status](https://coveralls.io/repos/brenolf/pretty-response/badge.svg?branch=master&service=github)](https://coveralls.io/github/brenolf/pretty-response?branch=master)\n[![Code Climate](https://codeclimate.com/github/brenolf/pretty-response/badges/gpa.svg)](https://codeclimate.com/github/brenolf/pretty-response)\n[![npm version](https://badge.fury.io/js/pretty-response.svg)](http://badge.fury.io/js/pretty-response)\n> Express middleware that exposes functions to work with HTTP status codes\n\nPretty Response exposes all HTTP codes as functions on response as a middleware. So you can plug it wherever you want to and have a more expressive code than using standard `response.status(CODE)`.\n\n## Install\n`$ npm install --save-dev pretty-response`\n\n## Usage\n```js\nvar express = require('express')\nvar pretty = require('pretty-response')\n\nvar app = express()\n\t.use(pretty)\n```\n\nOr you can use specifically on the routes you want to.\n\nThen you can use descriptive names as functions to create [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html) specific response:\n\n```js\napp\n.get('/', function (req, res, next) {\n\tres.ok().send()\n})\n```\n\nAll functions are using camel-cased names. For instance `notFound`, `internalServerError` and `created`. It's easier if you take a look at the [the codes file](./lib/pretty-response/codes.js).\n\n## License\nMIT\n","created":"2015-10-23T18:50:48.711Z","modified":"2015-10-23T19:41:30.087Z","lastPublisher":{"name":"brenolf","email":"brenolimadefreitas@gmail.com"},"owners":[{"name":"brenolf","email":"brenolimadefreitas@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"pretty-response","_nodeVersion":"4.2.1","_npmUser":{"name":"brenolf","email":"brenolimadefreitas@gmail.com"},"_npmVersion":"2.14.7","_rev":"1-63ff57a3b6d416f57d6c94f29916b8fd","_shasum":"e747e3de355241d5fedea2ce32578c057a256ff3","author":{"name":"Breno Lima de Freitas","email":"brenolimadefreitas@gmail.com","url":"https://breno.io/"},"bugs":{"url":"https://github.com/brenolf/pretty-response/issues"},"directories":{},"dist-tags":{"latest":"1.0.1"},"dist":{"shasum":"e747e3de355241d5fedea2ce32578c057a256ff3","tarball":"http://registry.npmjs.org/pretty-response/-/pretty-response-1.0.1.tgz"},"maintainers":[{"name":"brenolf","email":"brenolimadefreitas@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2015-10-23T19:41:30.087Z","created":"2015-10-23T18:50:48.711Z","1.0.0":"2015-10-23T18:50:48.711Z","1.0.1":"2015-10-23T19:41:30.087Z"}}}