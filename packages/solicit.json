{"name":"solicit","version":"1.0.3","description":"a declarative http client for node and browser","repository":"https://github.com/jkroso/solicit","dependencies":{"base64-encode":"github:forbeslindesay/base64-encode#2.0.2","mime-component":"github:component/mime#0.0.2","path":"github:jkroso/path#1.1.0","xhr":"github:yields/xhr#1.0.0","@jkroso/emitter":"1","setter-method":"0","lazy-property":"0","@jkroso/type":"2","parse-mime":"0","result":"2","qs":"6"},"devDependencies":{"markdown-middleware":"~0.1.3","assert":"github:jkroso/assert","basic-auth-connect":"*","url-to-screenshot":"*","express":"^4.4.1","serve-static":"*","errorhandler":"*","serve-index":"*","body-parser":"*","future-node":"0","hydro-focus":"*","hydro-html":"*","hydro-chai":"*","hydro-dot":"*","hydro-bdd":"*","serve-js":"0","hydro":"*","chai":"*"},"main":"./node.js","browser":"./client.js","transpile":[["*.js","!sourcegraph/babel->js",{"stage":0}]],"files":["common.js","client.js","node.js"],"license":"MIT","gitHead":"053857d02369ebfa861dec6a6297401a33bd5493","homepage":"https://github.com/jkroso/solicit#readme","scripts":{},"versions":[{"number":"0.0.0","date":"2013-09-08T22:35:19.427Z"},{"number":"0.0.1","date":"2013-09-09T21:47:10.161Z"},{"number":"0.0.3","date":"2013-10-26T22:43:22.027Z"},{"number":"0.0.4","date":"2013-11-16T09:17:51.460Z"},{"number":"0.0.5","date":"2013-11-30T20:47:13.612Z"},{"number":"0.0.6","date":"2013-12-24T01:07:55.754Z"},{"number":"0.0.7","date":"2014-02-16T17:08:40.588Z"},{"number":"0.0.9","date":"2014-11-08T20:03:27.298Z"},{"number":"0.0.10","date":"2015-08-09T05:46:15.646Z"},{"number":"0.0.11","date":"2015-08-09T06:10:58.416Z"},{"number":"1.0.0","date":"2015-12-21T00:13:26.207Z"},{"number":"1.0.1","date":"2016-01-12T21:44:53.502Z"},{"number":"1.0.2","date":"2016-01-12T22:19:35.116Z"},{"number":"1.0.3","date":"2016-05-22T11:36:19.846Z"}],"readme":"# solicit\n\nA declarative http client based off [superagent](//github.com/visionmedia/superagent). Versions available for both the browser and node with the same API and shared test suite.\n\n## Installation\n\n`npm install solicit`\n\nthen in your app:\n\n```js\nimport {get,post,del} from 'solicit'\n```\n\n### Example\n\n```js\nget('component.io/components/all').read(console.log) // => a whole lot of JSON\n```\n\n## API\n\nEach http verb has a corresponding helper function for making that type of request. Each function will return a `Request`. Requests are [deferred results](//github.com/jkroso/result) so you are free to configure them as much as you like with the methods mentioned below then call `read()` or `then()` to actually send the request and read the response. The main verbs you will be using are:\n\n- get\n- post\n- put\n- head\n- del (`delete` is a reserved word in JS)\n\n### Request.set(field:String|Object, val:String)\n\n  Set header `field` to `val`, or multiple fields with one object.\n\n  Examples:\n\n```js\nget('/')\n  .set('Accept', 'application/json')\n  .set('X-API-Key', 'foobar')\n  .read(callback)\n```\n\n```js\nget('/')\n  .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n  .read(callback)\n```\n\n### Request.get(field)\n\n  Get request header `field`.\n\n### Request.query(val:Object|String)\n\n  Add query-string `val`.\n\n  Examples:\n\n```js\nget('/shoes')\n  .query('size=10')\n  .query({ color: 'blue' })\n```\n\n### Request.type(type)\n\n  Set the \"Content-Type\" header. Common `type`s can\n  be set with a shorthand string:\n\n```js\npost('/')\n  .type('application/json')\n  .send(jsonstring)\n  .read(callback)\n```\n\n```js\npost('/')\n  .type('json')\n  .send(jsonstring)\n  .read(callback)\n```\n\n### Request.accept(type)\n\n  Set the \"Accept\" header. As with `Request.type()`\n  shorthand strings are allowed\n\n### Request.timeout(ms)\n\n  Set timeout to `ms`.\n\n### Request.clearTimeout()\n\n  Clear previous timeout.\n\n### Request.abort()\n\n  Abort and clear timeout.\n\n### Request.agent(agent:http.Agent)\n\n  Gets/sets the `Agent` to use for this HTTP request.\n  The default (if this function is not called) is to\n  opt out of connection pooling (`agent: false`).\n\n### Request.send(data:String|Object)\n\n  Send `data`, defaulting the `.type()` to \"json\" when\n  an object is given.\n\n  Examples:\n\n```js\n// manual json\npost('/user')\n  .type('json')\n  .send('{\"name\":\"tj\"}')\n  .read(callback)\n```\n\n```js\n// auto json\npost('/user')\n  .send({ name: 'tj' })\n  .read(callback)\n```\n\n```js\n// manual x-www-form-urlencoded\npost('/user')\n  .type('form')\n  .send('name=tj')\n  .read(callback)\n```\n\n```js\n// auto x-www-form-urlencoded\npost('/user')\n  .type('form')\n  .send({ name: 'tj' })\n  .read(callback)\n```\n\n```js\n// string defaults to x-www-form-urlencoded\npost('/user')\n  .send('name=tj')\n  .send('foo=bar')\n  .send('bar=baz')\n  .read(callback)\n```\n\n### Request.auth(user, pass)\n\n  Set Authorization field value with `user` and `pass`\n\n### Request.maxRedirects(n)\n\n  Set the max redirects to `n`.\n\n### Request.path(...)\n\n  Set the path. `arguments` is joined to form the path:\n\n```js\nget('https://api.github.com')\n  .path('repos', user, repo, 'tags')\n  .read(callback)\n```\n\n### Request.write(data:Buffer|String, [encoding='utf8'])\n\n  Write `data` to the socket.\n\n### Request.end([data]:Buffer|String, [encoding='utf8'])\n\n  send request\n\n### Request.pipe(stream, options)\n\n  Pipe the request body to `stream`\n","created":"2013-09-08T22:35:14.491Z","modified":"2016-05-22T11:36:19.846Z","lastPublisher":{"name":"jkroso","email":"jkroso@gmail.com"},"owners":[{"name":"jkroso","email":"jkroso@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"solicit","_nodeVersion":"5.6.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/solicit-1.0.3.tgz_1463916977829_0.7953460933640599"},"_npmUser":{"name":"jkroso","email":"jkroso@gmail.com"},"_npmVersion":"3.6.0","_rev":"1-7a3aa6316f50d5497d83d1eb5819a77f","_shasum":"cdd0d7250b72f68650aa68e8920429a0e9c29a1d","bugs":{"url":"https://github.com/jkroso/solicit/issues"},"directories":{},"dist-tags":{"latest":"1.0.3"},"dist":{"shasum":"cdd0d7250b72f68650aa68e8920429a0e9c29a1d","tarball":"http://registry.npmjs.org/solicit/-/solicit-1.0.3.tgz"},"maintainers":[{"name":"jkroso","email":"jkroso@gmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2016-05-22T11:36:19.846Z","created":"2013-09-08T22:35:14.491Z","0.0.0":"2013-09-08T22:35:19.427Z","0.0.1":"2013-09-09T21:47:10.161Z","0.0.3":"2013-10-26T22:43:22.027Z","0.0.4":"2013-11-16T09:17:51.460Z","0.0.5":"2013-11-30T20:47:13.612Z","0.0.6":"2013-12-24T01:07:55.754Z","0.0.7":"2014-02-16T17:08:40.588Z","0.0.9":"2014-11-08T20:03:27.298Z","0.0.10":"2015-08-09T05:46:15.646Z","0.0.11":"2015-08-09T06:10:58.416Z","1.0.0":"2015-12-21T00:13:26.207Z","1.0.1":"2016-01-12T21:44:53.502Z","1.0.2":"2016-01-12T22:19:35.116Z","1.0.3":"2016-05-22T11:36:19.846Z"}}}