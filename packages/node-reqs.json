{"name":"node-reqs","version":"4.2.2","description":"REQuest jSon interface for WebSockets, HTTP and any other protocols","main":"reqs.js","scripts":{"test":"node ./test/test.js","build":"coffee -b -m -c ./dev/*.coffee && cd dev && node build","b":"coffee -b -m -c ./dev/*.coffee && cd dev && node build","watch":"./dev/node_modules/nano-watcher/bin/nano-watcher -c ./dev","w":"./dev/node_modules/nano-watcher/bin/nano-watcher -c ./dev","patch":"git status && npm version patch","minor":"git status && npm version minor"},"repository":"https://github.com/VoidVolker/reqs","keywords":["reqs","request","json","websockets","API","WS API","HTTP API","Web API"],"license":"MIT","homepage":"https://github.com/VoidVolker/reqs#readme","gitHead":"f54bcb7318d009bf740c4d8fefbc411074cc90f3","versions":[{"number":"4.0.0","date":"2016-05-24T05:59:09.366Z"},{"number":"4.1.0","date":"2016-05-27T18:33:14.019Z"},{"number":"4.1.1","date":"2016-05-27T18:38:16.340Z"},{"number":"4.1.2","date":"2016-05-27T18:48:11.181Z"},{"number":"4.1.3","date":"2016-05-27T21:50:03.508Z"},{"number":"4.2.0","date":"2016-05-30T17:02:04.818Z"},{"number":"4.2.1","date":"2016-05-30T17:35:32.547Z"},{"number":"4.2.2","date":"2016-05-31T12:04:19.636Z"}],"readme":"[![Join the chat at https://gitter.im/VoidVolker/reqs](https://badges.gitter.im/VoidVolker/reqs.svg)](https://gitter.im/VoidVolker/reqs?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# Reqs\n\nJSON interface library for HTTP, Web Sockets, Sockets and any other interfaces.\n\nInstall:\n\n    npm install node-reqs\n\nServer code:\n\n```JavaScript\nvar Reqs = require('../../reqs.js');\n\nvar api = new Reqs({\n    server: {\n        // this = {\n        //     reqs: <reqs instance>\n        //     conn: <connection object>\n        //     [cb: <callback>]\n        // }\n        ping: function(time){\n            var t1 = time ? Date.now()-time : 0 ;\n            console.log('ping from client:', t1);\n            if( this.cb ){\n                this.cb(t1, Date.now());\n            }\n        },\n        callScreen: function(){ // Emulate server call of client server API from client\n            var conn = this.conn;\n            api.client.screen.call(conn, function(w, h){\n                console.log('Retrieve screen size from client:', w, h);\n            });\n        }\n    }\n    , client: ['screen'] // Client server API list\n    , send: function(data){\n        this.sendText(data);\n    }\n    , isValid: 'secret'\n});\n\nfunction rootHandle(str) {\n    try{\n        console.info('    parsing string:', str);\n        api.parse(str, this); // this - is connection object\n    } catch(e){\n        console.log('Reqs error: ', e);\n    }\n}\n\nexports.root = rootHandle;\n```\n\nEach request from client can be validated via option `isValid`.\n\nIf `isValid` is string: search it in request property `validation`\n\nIf `isValid` is function: execute it and check returned value. If `true` - request is valid, in other case - not valid and call function `invalid`.\n\nExample:\n\n```\nfunction isValid(o, conn){\n    if( o.hasOwnProperty('validation') ){\n        return o.validation === isValid;\n    } else {\n        return false;\n    }\n};\n```\n\nAnd client:\n\n```JavaScript\nvar api = new new Reqs({\n    validate: 'secret', // Simple request validation via secret toket\n    send: function(d) {\n        if (APP.WS.readyState === 1) {\n            APP.WS.send(d);\n        }\n    },\n    server: {\n        screen: function() {\n            if (this.cb) {\n                this.cb(window.outerWidth, window.outerHeight);\n            }\n        }\n    },\n    client: {\n        ping: function(pingxt) {\n            pingxt(Date.now(), function(ping1, time) {\n                var ping2;\n                ping2 = Date.now() - time;\n                console.log(\n                    'ping to server:', ping1,\n                    '/ ping from server:', ping2,\n                    '/ total:', ping1 + ping2\n                );\n            });\n        }\n    }\n});\n```\n\nEach request to server can be validated via option `validate`.\n\nIf `validate` is string: add property `validation` in request with this value\n\nIf `validate` is function: execute it with request object and send returned value as request object.\n\nExample:\n\n```\nfunction validate(o){\n    o.validation = validate;\n    return o;\n};\n\n```\n\n## Develop\n\nModule contain `dev` directory with simple example of `client <-> server` interface via WebSockets. `dev` - is simple submodule with all dependencies to develop and build library.\n\nInstall node-inspector to debug server code from browser:\n\n    npm install -g node-inspector\n\nYou can use any other debug tool you like. You can configure it in [nano-watcher](https://github.com/VoidVolker/nano-watcher) config file `dev/nano-watcher.json`.\n\nNext you need install dev dependecies:\n\n    cd ./dev\n    npm install\n\nTo build library:\n\n    npm run build\n\nTo watch files and automatically rebuild library and restart server:\n\n    npm run watch\n","starsCount":1,"created":"2016-05-24T05:59:09.366Z","modified":"2016-05-31T12:04:19.636Z","lastPublisher":{"name":"voidvolker","email":"vvr@tutanota.com"},"owners":[{"name":"voidvolker","email":"vvr@tutanota.com"}],"other":{"_attachments":{},"_from":".","_id":"node-reqs","_nodeVersion":"5.10.0","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/node-reqs-4.2.2.tgz_1464696256952_0.16705351998098195"},"_npmUser":{"name":"voidvolker","email":"vvr@tutanota.com"},"_npmVersion":"3.9.3","_rev":"1-8c3aa42b79846d4af348d45a8b6c31a0","_shasum":"a0f8a616350afb2b6c7a050c93587d9a3901c767","author":{"name":"Void Volker","email":"vvr@tutanota.com","url":"https://github.com/VoidVolker"},"bugs":{"url":"https://github.com/VoidVolker/reqs/issues"},"directories":{},"dist-tags":{"latest":"4.2.2"},"dist":{"shasum":"a0f8a616350afb2b6c7a050c93587d9a3901c767","tarball":"http://registry.npmjs.org/node-reqs/-/node-reqs-4.2.2.tgz"},"maintainers":[{"name":"voidvolker","email":"vvr@tutanota.com"}],"readmeFilename":"README.md","time":{"modified":"2016-05-31T12:04:19.636Z","created":"2016-05-24T05:59:09.366Z","4.0.0":"2016-05-24T05:59:09.366Z","4.1.0":"2016-05-27T18:33:14.019Z","4.1.1":"2016-05-27T18:38:16.340Z","4.1.2":"2016-05-27T18:48:11.181Z","4.1.3":"2016-05-27T21:50:03.508Z","4.2.0":"2016-05-30T17:02:04.818Z","4.2.1":"2016-05-30T17:35:32.547Z","4.2.2":"2016-05-31T12:04:19.636Z"},"users":{"voidvolker":true}}}