{"name":"find-my-way","version":"0.2.4","description":"Crazy fast http radix based router","main":"index.js","scripts":{"bench":"node bench.js","test":"standard && tap test/*.test.js","coveralls":"tap test/*.test.js --cov --coverage-report=text-lcov | coveralls"},"repository":"https://github.com/delvedor/find-my-way","keywords":["http","router","radix","fast","speed"],"license":"MIT","homepage":"https://github.com/delvedor/find-my-way#readme","devDependencies":{"benchmark":"^2.1.4","coveralls":"^2.13.1","request":"^2.81.0","standard":"^10.0.2","tap":"^10.3.2"},"gitHead":"eef84693e2b5be59e5e0a953f10f228a51464cbe","versions":[{"number":"0.0.1","date":"2017-04-16T19:55:20.118Z"},{"number":"0.1.0","date":"2017-04-18T13:21:24.064Z"},{"number":"0.2.0","date":"2017-04-19T14:04:34.581Z"},{"number":"0.2.1","date":"2017-04-21T12:41:11.242Z"},{"number":"0.2.2","date":"2017-04-29T10:53:48.508Z"},{"number":"0.2.3","date":"2017-05-08T12:58:04.970Z"},{"number":"0.2.4","date":"2017-05-20T13:31:57.240Z"}],"readme":"# find-my-way\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat)](http://standardjs.com/)  [![Build Status](https://travis-ci.org/delvedor/find-my-way.svg?branch=master)](https://travis-ci.org/delvedor/find-my-way) [![Coverage Status](https://coveralls.io/repos/github/delvedor/find-my-way/badge.svg?branch=master)](https://coveralls.io/github/delvedor/find-my-way?branch=master)\n\nA crazy fast HTTP router, internally uses an highly performant [Radix Tree](https://en.wikipedia.com/wiki/Radix_tree) (aka compact [Prefix Tree](https://en.wikipedia.com/wiki/Trie)), supports route params, wildcards, and it's framework independent.  \nIt is inspired by the [echo](https://github.com/labstack/echo) router, some parts have been extracted from [trekjs](https://github.com/trekjs) router.\n\n<a name=\"install\"></a>\n## Install\n```\nnpm i find-my-way --save\n```\n\n<a name=\"usage\"></a>\n## Usage\n```js\nconst http = require('http')\nconst router = require('find-my-way')()\n\nrouter.on('GET', '/', (req, res, params) => {\n  res.end('{\"hello\":\"world\"}')\n})\n\nconst server = http.createServer((req, res) => {\n  router.lookup(req, res)\n})\n\nserver.listen(3000, err => {\n  if (err) throw err\n  console.log('Server listening on: http://localost:3000')\n})\n```\n\n<a name=\"api\"></a>\n## API\n<a name=\"constructor\"></a>\n#### FindMyway([options])\nInstance a new router.  \nYou can pass a default route with the option `defaultRoute`.\n```js\nconst router = require('find-my-way')({\n  defaultRoute: (req, res) => {\n    res.statusCode = 404\n    res.end()\n  }\n})\n```\n\n<a name=\"on\"></a>\n#### on(method, path, handler, [store])\nRegister a new route, `store` is an object that you can access later inside the handler function.  \n```js\nrouter.on('GET', '/', (req, res, params) => {\n  // your code\n})\n\n// with store\nrouter.on('GET', '/store', (req, res, params, store) => {\n  // the store can be updated\n  assert.equal(store, { hello: 'world' })\n}, { hello: 'world' })\n```\nIf you want to register a **parametric** path, just use the *colon* before the parameter name, if you need a **wildcard** use the *star*.\n```js\n// parametric\nrouter.on('GET', '/example/:name', () => {}))\n// wildcard\nrouter.on('GET', '/other-example/*', () => {}))\n```\n<a name=\"lookup\"></a>\n#### lookup(request, response)\nStart a new search, `request` and `response` are the server req/res objects.  \nIf a route is found it will automatically called the handler, otherwise the default route will be called.  \nThe url is sanitized internally, all the parameters and wildcards are decoded automatically.\n```js\nrouter.lookup(req, res)\n```\n\n<a name=\"find\"></a>\n#### find(method, path)\nReturn (if present) the route registered in *method:path*.  \nThe path must be sanitized, all the parameters and wildcards are decoded automatically.\n```js\nrouter.find('GET', '/example')\n// => { handler: Function, params: Object, store: Object}\n// => null\n```\n\n<a name=\"acknowledgements\"></a>\n## Acknowledgements\n\nThis project is kindly sponsored by [LetzDoIt](http://www.letzdoitapp.com/).\n\n<a name=\"license\"></a>\n## License\n**[find-my-way - MIT](https://github.com/delvedor/find-my-way/blob/master/LICENSE)**  \n**[trekjs/router - MIT](https://github.com/trekjs/router/blob/master/LICENSE)**\n\n*The software is provided \"as is\", without warranty of any kind, express or implied, including but not limited to the warranties of merchantability, fitness for a particular purpose and non infringement. In no event shall the authors or copyright holders be liable for any claim, damages or other liability, whether in an action of contract, tort or otherwise, arising from, out of or in connection with the software or the use or other dealings in the software.*\n\nCopyright Â© 2017 Tomas Della Vedova\n","created":"2017-04-16T19:55:20.118Z","modified":"2017-05-20T13:31:57.240Z","lastPublisher":{"name":"delvedor","email":"tommydelved@gmail.com"},"owners":[{"name":"delvedor","email":"tommydelved@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"find-my-way","_nodeVersion":"6.10.0","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/find-my-way-0.2.4.tgz_1495287116291_0.5787457749247551"},"_npmUser":{"name":"delvedor","email":"tommydelved@gmail.com"},"_npmVersion":"3.10.10","_rev":"7-9f53902121b39b337051ed16a6faab9c","_shasum":"1c5209c4bf9ab377305fc26be8d7232b0106e850","author":{"name":"Tomas Della Vedova - @delvedor","url":"http://delved.org"},"bugs":{"url":"https://github.com/delvedor/find-my-way/issues"},"directories":{},"dist-tags":{"latest":"0.2.4"},"dist":{"shasum":"1c5209c4bf9ab377305fc26be8d7232b0106e850","tarball":"https://registry.npmjs.org/find-my-way/-/find-my-way-0.2.4.tgz"},"maintainers":[{"name":"delvedor","email":"tommydelved@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-05-20T13:31:57.240Z","created":"2017-04-16T19:55:20.118Z","0.0.1":"2017-04-16T19:55:20.118Z","0.1.0":"2017-04-18T13:21:24.064Z","0.2.0":"2017-04-19T14:04:34.581Z","0.2.1":"2017-04-21T12:41:11.242Z","0.2.2":"2017-04-29T10:53:48.508Z","0.2.3":"2017-05-08T12:58:04.970Z","0.2.4":"2017-05-20T13:31:57.240Z"}}}