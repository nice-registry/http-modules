{"name":"organic-express-server","version":"0.1.0","description":"Organelle constructing expressjs app and opening http server listening port","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 0","preversion":"npm test","release-patch":"npm version patch && npm publish","release-minor":"npm version minor && npm publish","postversion":"git push origin master && git push origin master --tags"},"peerDependencies":{"express":"4.x.x"},"license":"MIT","repository":"https://github.com/outbounder/organic-express-server","homepage":"https://github.com/outbounder/organic-express-server","gitHead":"b893e0a169d8b76015ff5c553d120951593bf719","versions":[{"number":"0.0.1","date":"2014-07-10T12:28:33.097Z"},{"number":"0.0.2","date":"2014-10-20T13:26:13.623Z"},{"number":"0.1.0","date":"2017-06-13T11:41:06.305Z"}],"readme":"# organic-express-server\n\nOrganelle constructing expressjs app and opening http server listening port\n\n## dna\n\n    \"organic-express-server\": {\n      \"source\": \"node_modules/organic-express-server\",\n      \"port\": 1337,\n      \"host\": \"127.0.0.1\", // (String) if not defined = listen to all interfaces. https://nodejs.org/api/http.html#http_server_listen_port_hostname_backlog_callback\n      \"backlog\": 511, // (Number) maximum length of the queue of pending connections. The actual length will be determined by the OS through sysctl settings such as `tcp_max_syn_backlog` and `somaxconn` on Linux. The default value of this parameter is 511 (not 512). https://nodejs.org/api/http.html#http_server_listen_port_hostname_backlog_callback\n      \"logRunning\": true,\n      \"initScript\": \"init-express-app\",\n      \"emitReady\": \"ExpressServer\",\n      \"closeOn\": \"kill\",\n      \"forceConnectionsDestroyOnClose\": false\n    }\n\n### `initScript` property\n\nOptional, if provided will `require` given module using `process.cwd`+`initScript` as path.\nExample module:\n\n    module.exports = function(plasma, dna, next) {\n      var app = express()\n      next(err, app)\n    }\n\nInvoking `next(err, app)` will complete express server initialization by start listening for incoming requests and emit ready chemical.\n\n### `logRunning` property\n\nOptional, if provided will `console.log` when express server is listening for incoming requests.\n\n### `forceConnectionsDestroyOnClose` property\n\nOptional, if enabled on `kill` chemical all opened connections will be destroyed and server closed, otherwise the server will close when there are no longer open connections.\n\n## `emitReady` chemical\nEmitted once express server is listening for incoming requests\n\n    {\n      type: `emitReady value`,\n      data: expressApplication,\n      server: httpServer\n    }\n\n## `kill` chemical\nOnce received will close underlaying httpServer","created":"2014-07-10T12:28:30.545Z","modified":"2017-06-13T11:41:06.305Z","lastPublisher":{"name":"outbounder","email":"obiwonn@gmail.com"},"owners":[{"name":"outbounder","email":"obiwonn@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"organic-express-server","_nodeVersion":"4.2.3","_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/organic-express-server-0.1.0.tgz_1497354065264_0.016179184429347515"},"_npmUser":{"name":"outbounder","email":"obiwonn@gmail.com"},"_npmVersion":"2.14.7","_rev":"2-aa18e2f6f51b028fde685be69e9c6df1","_shasum":"50e2357c000e9959a0ee8cfbf51927a7dd8578e9","author":{"name":"Boris Filipov"},"bugs":{"url":"https://github.com/outbounder/organic-express-server/issues"},"directories":{},"dist-tags":{"latest":"0.1.0"},"dist":{"shasum":"50e2357c000e9959a0ee8cfbf51927a7dd8578e9","tarball":"https://registry.npmjs.org/organic-express-server/-/organic-express-server-0.1.0.tgz"},"maintainers":[{"name":"outbounder","email":"obiwonn@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2017-06-13T11:41:06.305Z","created":"2014-07-10T12:28:30.545Z","0.0.1":"2014-07-10T12:28:33.097Z","0.0.2":"2014-10-20T13:26:13.623Z","0.1.0":"2017-06-13T11:41:06.305Z"}}}