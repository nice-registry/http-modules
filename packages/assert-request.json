{"name":"assert-request","version":"1.0.6","description":"Assert responses to HTTP requests","main":"lib/index.js","scripts":{"test":"mocha $(find test -name '*.js')","test-cov":"istanbul cover ./node_modules/.bin/_mocha $(find test -name '*.js')"},"repository":"https://github.com/PlasmaPower/assert-request","keywords":["http","request","assert","testing"],"license":"MIT","homepage":"https://github.com/PlasmaPower/assert-request#readme","dependencies":{"methods":"^1.1.2","request-promise":"^2.0.1"},"devDependencies":{"istanbul":"^0.4.2","mocha":"^2.4.5"},"gitHead":"19a750fda6fd4df05a507160baf8167b0f4aa5f7","versions":[{"number":"1.0.0","date":"2016-03-28T22:30:12.622Z"},{"number":"1.0.1","date":"2016-03-29T00:18:20.979Z"},{"number":"1.0.2","date":"2016-03-29T03:17:32.511Z"},{"number":"1.0.3","date":"2016-03-29T03:19:41.243Z"},{"number":"1.0.4","date":"2016-03-29T21:36:14.434Z"},{"number":"1.0.5","date":"2016-04-25T19:14:39.806Z"},{"number":"1.0.6","date":"2016-05-26T22:06:18.684Z"}],"readme":"# Assert Request\n\nThis is a tool to assert properties of responses to requests, such as the body, headers, and status code.\nThis returns a promise with additional assertion methods builtin to it.\nIt requires node 4 or higher to run (that's by design, and will not be changed even if you have a PR).\n\n## Example\n\nThis example uses [Mocha](https://mochajs.org/) tests, which natively support promises.\nHowever, `assert-request` is not limited to Mocha.\n\n```js\nlet AssertRequest = require('assert-request');\nlet request = AssertRequest(app.listen()); // You can use a server or protocol and host\n\ndescribe('/example', function () {\n  it('should return HTML', function () {\n    return request('/example')\n      .type('text/html')\n      .okay();\n  });\n});\n\ndescribe('/api', function () {\n  it('should return the correct JSON', function () {\n    return request.post('/api')\n      .type('application/json')\n      .status(200)\n      .json(json => json.foo && json.bar);\n  });\n});\n```\n\n## Return Type\n\nThe returned value is a Promise.\nBecause of that, you can use `.then` and `.catch`.\n`.then` will be passed the response object.\nMany Node.JS utilities such as Mocha will support promises.\n\n## Mixin Documentation\n\nNote: most mixins simply return `this.then(res => assert(...))`.\nThis means that assertions are guaranteed to run in order.\nWhile technically `Promise.all` should be used here, this makes for a much simpler code base.\nIn addition, this should be the faster way as no mixins created so far return a Promise (i.e. do an asynchronous operation).\n\n### .assert(function)\n\nCalls the function with the response object, and asserts that the return value is truthy.\n\n### .status(expected)\n\nAsserts that the response status is equal to the one specified.\nExpected can be a String, Number, Function, or RegExp.\nStrings and Numbers will be checked without strict matching (`==` not `===`) so the status will be cast to a String.\n\n### .okay()\n\nAsserts that the response status is 200. Equivalent to `.status(200)`\n\n### .header(header, value, someHeaders)\n\nAsserts that the header is present, and if value is specified, asserts that it is equal to the value.\nIn some edge cases like `Set-Cookie`, the header value is an array.\nIn this case, by default all headers must match the value.\nHowever, if someHeaders is true, then only one must match the value.\nValue can be a String, Function, or RegExp.\n\n### .body(expected)\n\nAsserts that the body is equal to the one specified.\nExpected can be a String, Function, or RegExp.\n\n### .json(expected)\n\nAsserts that the body is JSON and is equal to the JSON specified.\nIf expected is a function, then it is passed the parsed JSON.\nExpected can be a String, Function, or RegExp.\n\n\n### .type(expected)\n\nThis is a general mixin to check `Content-Type`.\nIf the expected type is a string, it checkes if any part of the Content-Type is equal.\nAll of the following will match `text/html; charset=utf-8`\n\n- 'text/html; charset=utf-8'\n- 'text/html'\n- 'charset=utf-8'\n- /html/\n- /^text\\/html; charset=utf-8$/\n- type => type.includes('html')\n\nThe following will NOT match that type:\n\n- /^text\\/html$/\n- type => type === 'text/html'\n\nExpected can be a String, Function, or RegExp.\nHowever, partial matching is only applied to strings as specified above.\n\n## Inspiration\n\nThis was made as a replacement for [supertest](https://github.com/visionmedia/supertest).\nInspiration was taken from that API.\nHowever, using it also showed how it could be improved, and pitfalls to avoid.\n","starsCount":2,"created":"2016-03-28T22:30:12.622Z","modified":"2016-11-24T17:01:53.594Z","lastPublisher":{"name":"plasmapower","email":"ljbousfield@gmail.com"},"owners":[{"name":"plasmapower","email":"ljbousfield@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"assert-request","_nodeVersion":"6.2.0","_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/assert-request-1.0.6.tgz_1464300375634_0.8983300805557519"},"_npmUser":{"name":"plasmapower","email":"ljbousfield@gmail.com"},"_npmVersion":"3.9.2","_rev":"2-fb19d612d6af403e33f63d7e42cf9a43","_shasum":"650e7d1238ceae8f78af8685e7f3d45d41f2fda2","bugs":{"url":"https://github.com/PlasmaPower/assert-request/issues"},"directories":{},"dist-tags":{"latest":"1.0.6"},"dist":{"shasum":"650e7d1238ceae8f78af8685e7f3d45d41f2fda2","tarball":"http://registry.npmjs.org/assert-request/-/assert-request-1.0.6.tgz"},"maintainers":[{"name":"plasmapower","email":"ljbousfield@gmail.com"}],"readmeFilename":"Readme.md","time":{"modified":"2016-11-24T17:01:53.594Z","created":"2016-03-28T22:30:12.622Z","1.0.0":"2016-03-28T22:30:12.622Z","1.0.1":"2016-03-29T00:18:20.979Z","1.0.2":"2016-03-29T03:17:32.511Z","1.0.3":"2016-03-29T03:19:41.243Z","1.0.4":"2016-03-29T21:36:14.434Z","1.0.5":"2016-04-25T19:14:39.806Z","1.0.6":"2016-05-26T22:06:18.684Z"},"users":{"soc":true,"laggingreflex":true}}}