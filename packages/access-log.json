{"name":"access-log","description":"Add simple access logs to any http or https server","version":"0.3.9","repository":"https://github.com/bahamas10/node-access-log","scripts":{"test":"for f in test/*; do echo \"\n$f\"; node \"$f\" || exit 1; done; echo Passed; exit 0"},"main":"./index.js","dependencies":{"strftime":"~0.6.2"},"bin":{},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"keywords":["access","apache","clf","logs"],"homepage":"https://github.com/bahamas10/node-access-log","versions":[{"number":"0.0.0","date":"2012-11-03T02:54:32.217Z"},{"number":"0.0.1","date":"2012-11-03T03:07:13.363Z"},{"number":"0.1.0","date":"2012-11-03T03:13:54.128Z"},{"number":"0.1.1","date":"2012-11-04T02:30:19.480Z"},{"number":"0.1.2","date":"2013-04-19T17:34:49.817Z"},{"number":"0.2.0","date":"2013-09-13T05:40:14.297Z"},{"number":"0.2.1","date":"2013-09-13T05:40:57.264Z"},{"number":"0.2.2","date":"2013-09-13T05:53:12.230Z"},{"number":"0.2.3","date":"2013-10-05T16:08:31.653Z"},{"number":"0.3.0","date":"2013-11-12T00:47:36.190Z"},{"number":"0.3.1","date":"2013-11-12T00:51:50.641Z"},{"number":"0.3.2","date":"2013-11-12T02:37:06.930Z"},{"number":"0.3.3","date":"2013-11-12T05:29:59.654Z"},{"number":"0.3.4","date":"2013-11-15T16:51:21.549Z"},{"number":"0.3.5","date":"2013-12-04T01:51:26.458Z"},{"number":"0.3.8","date":"2014-03-12T16:44:21.497Z"},{"number":"0.3.9","date":"2014-06-25T22:46:31.796Z"}],"readme":"access-log\n==========\n\nAdd simple access logs to any http or https server\n\nUsage\n-----\n\n``` js\nvar http = require('http');\nvar accesslog = require('access-log');\n\nhttp.createServer(function(req, res) {\n  accesslog(req, res);\n  res.end();\n}).listen(80, '0.0.0.0');\n```\n\nThis will automatically log requests as they come in to the\nweb server that look like...\n\n```\n127.0.0.1 - - [13/Sep/2013:01:38:09 -0400] \"GET / HTTP/1.1\" 200 - \"-\" \"-\"\n127.0.0.1 - - [13/Sep/2013:01:38:09 -0400] \"GET /testing HTTP/1.1\" 200 - \"-\" \"-\"\n127.0.0.1 - - [13/Sep/2013:01:38:10 -0400] \"GET /index.html HTTP/1.1\" 200 - \"-\" \"-\"\n```\n\nCustomization\n-------------\n\n### accesslog(req, res, [format], [function])\n\n#### format\n\nYou can pass in a format string, the default is Apache Common Log Format\nhttp://en.wikipedia.org/wiki/Common_Log_Format\n\n```\n:ip - :userID [:clfDate] \":method :url :protocol/:httpVersion\" :statusCode :contentLength \":referer\" \":userAgent\"\n```\n\n- `clfDate`: The date of the end of the response in Apache Common Log format\n- `contentLength`: The response `Content-Length` header, or `-` if unset\n- `delta`: The time in ms from request to response\n- `endDate`: The ISO formatted string when the response was ended\n- `endTime`: The epoch time when the response was ended\n- `host`: The host header from the request if set\n- `httpVersion`: The HTTP version used (ie. `1.0`, `1.1`)\n- `ip`: The remote IP\n- `Xip`: The remote IP, using `X-Forwarded-For` if set\n- `method`: The HTTP method\n- `protocol`: `HTTP` or `HTTPS`\n- `referer`: The request `Referer` header, or `-` if unset\n- `startDate`: The ISO formatted string when the request was received\n- `startTime`: The epoch time when the request was received\n- `statusCode`: The response status code sent from the server\n- `url`: The requested URL\n- `urlDecoded`: The decoded request URL (ie. `%20` => ` `)\n- `userID`: The username if applicable\n- `userAgent`: The request `User-Agent` header, or `-` if unset\n\n**NOTE:** Wrap variables in `{}` to protect against unwanted interpolation.\n\nex:\n\n```\nrequest to :url took :{delta}ms\n```\n\n#### function\n\nYou can also pass in your own custom callback, the default is `console.log`.\nThe only argument passed is the access log string\n\nExample\n-------\n\n``` js\nvar format = 'url=\":url\" method=\":method\" statusCode=\":statusCode\" delta=\":delta\" ip=\":ip\"';\n\naccesslog(req, res, format, function(s) {\n  console.log(s);\n});\n```\n\nyields\n\n```\nurl=\"/projects\" method=\"GET\" statusCode=\"200\" delta=\"0\" ip=\"127.0.0.1\"\nurl=\"/testing\" method=\"GET\" statusCode=\"200\" delta=\"1\" ip=\"127.0.0.1\"\nurl=\"/index.html\" method=\"GET\" statusCode=\"200\" delta=\"0\" ip=\"127.0.0.1\"\n```\n\nInstallation\n------------\n\n    npm install access-log\n\nExtend\n------\n\nConsider further customizing the access logs by using the [log-timestamp]\n(https://github.com/bahamas10/node-log-timestamp) module to prepend a timestamp\nautomatically.\n\nLicense\n-------\n\nMIT Licensed\n","starsCount":1,"created":"2012-11-03T02:54:31.260Z","modified":"2014-06-25T22:46:31.796Z","lastPublisher":{"name":"bahamas10","email":"dave@daveeddy.com"},"owners":[{"name":"bahamas10","email":"dave@daveeddy.com"}],"other":{"_attachments":{},"_from":".","_id":"access-log","_npmUser":{"name":"bahamas10","email":"dave@daveeddy.com"},"_npmVersion":"1.4.4","_rev":"1-8e0c7c808f3cf35e686a761838b81104","author":{"name":"Dave Eddy","email":"dave@daveeddy.com","url":"http://www.daveeddy.com"},"bugs":{"url":"https://github.com/bahamas10/node-access-log/issues"},"contributors":[],"directories":{},"dist-tags":{"latest":"0.3.9"},"dist":{"shasum":"01c2695ba7e7d32db5288ef3f14e64d6719f3ad1","tarball":"http://registry.npmjs.org/access-log/-/access-log-0.3.9.tgz"},"maintainers":[{"name":"bahamas10","email":"dave@daveeddy.com"}],"readmeFilename":"README.md","time":{"modified":"2014-06-25T22:46:31.796Z","created":"2012-11-03T02:54:31.260Z","0.0.0":"2012-11-03T02:54:32.217Z","0.0.1":"2012-11-03T03:07:13.363Z","0.1.0":"2012-11-03T03:13:54.128Z","0.1.1":"2012-11-04T02:30:19.480Z","0.1.2":"2013-04-19T17:34:49.817Z","0.2.0":"2013-09-13T05:40:14.297Z","0.2.1":"2013-09-13T05:40:57.264Z","0.2.2":"2013-09-13T05:53:12.230Z","0.2.3":"2013-10-05T16:08:31.653Z","0.3.0":"2013-11-12T00:47:36.190Z","0.3.1":"2013-11-12T00:51:50.641Z","0.3.2":"2013-11-12T02:37:06.930Z","0.3.3":"2013-11-12T05:29:59.654Z","0.3.4":"2013-11-15T16:51:21.549Z","0.3.5":"2013-12-04T01:51:26.458Z","0.3.8":"2014-03-12T16:44:21.497Z","0.3.9":"2014-06-25T22:46:31.796Z"},"users":{"klipsil":true}}}