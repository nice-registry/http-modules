{"name":"crummy","version":"1.0.2","description":"A middleware to simply attach a logger to the request context of your http server of choice","main":"index.js","files":["index.js","express.js","koa.js","LICENSE"],"scripts":{"lint":"eslint . --ignore-path .gitignore","check-cov":"istanbul check-coverage --statements 100 --functions 100 --branches 100 --lines 100","pretest":"npm run lint","test":"istanbul cover _mocha","posttest":"npm run check-cov","codeclimate":"cat ./coverage/lcov.info | codeclimate-test-reporter"},"engines":{"node":">=4.x"},"repository":"https://github.com/ksmithut/crummy","keywords":["bunyan","logger","middleware"],"license":"MIT","homepage":"https://github.com/ksmithut/crummy#readme","devDependencies":{"bunyan":"^1.8.0","chai":"^3.5.0","chai-as-promised":"^5.3.0","chai-spies":"^0.7.1","codeclimate-test-reporter":"^0.3.1","eslint":"^2.8.0","eslint-config-ksmithut":"^2.1.0","eslint-plugin-mocha":"^2.2.0","espree":"^3.1.3","express":"^4.13.4","istanbul":"^0.4.3","koa":"^1.2.0","mocha":"^2.4.5","mocha-lcov-reporter":"^1.2.0","restify":"^4.0.4","supertest":"^1.2.0","supertest-as-promised":"^3.1.0","supertest-koa-agent":"^0.2.1"},"gitHead":"2d6b7eb74f244834dd3e3e8de7e0d7f41031c374","versions":[{"number":"1.0.0","date":"2016-03-18T20:50:04.620Z"},{"number":"1.0.1","date":"2016-03-18T21:03:04.857Z"},{"number":"1.0.2","date":"2016-04-17T20:55:36.642Z"}],"readme":"# `crummy`\n\n\n[![NPM version](http://img.shields.io/npm/v/crummy.svg?style=flat)](https://www.npmjs.org/package/crummy)\n[![Dependency Status](http://img.shields.io/david/ksmithut/crummy.svg?style=flat)](https://david-dm.org/ksmithut/crummy)\n[![Dev Dependency Status](http://img.shields.io/david/dev/ksmithut/crummy.svg?style=flat)](https://david-dm.org/ksmithut/crummy#info=devDependencies&view=table)\n[![Code Climate](http://img.shields.io/codeclimate/github/ksmithut/crummy.svg?style=flat)](https://codeclimate.com/github/ksmithut/crummy)\n[![Build Status](http://img.shields.io/travis/ksmithut/crummy/master.svg?style=flat)](https://travis-ci.org/ksmithut/crummy)\n[![Coverage Status](http://img.shields.io/codeclimate/coverage/github/ksmithut/crummy.svg?style=flat)](https://codeclimate.com/github/ksmithut/crummy)\n\n> **Crummy**\n>\n> A logger's bus. Also an adjective meaning \"no good\" or \"undesirable\"\n>\n> \\- [http://pacificforestfoundation.org/glossary.html][logger-terms]\n\n`crummy` is middleware to simply attach a [bunyan][bunyan] logger to the request\ncontext of your http server of choice. Below is a list of supported http server\nmodules:\n\n* [`express`](http://expressjs.com/)\n* [`koa`](http://koajs.com/)\n\nIf you don't see yours above, feel free to request it in the issues section of\nthis repository, or use the adapter module to adapt it to your own.\n\nThe reason `bunyan` is required is because it is the one popular logging module\nthat I could find that made it really easy to make a copy of a logger with all\nof the different logging transports that the original had. If winston or other\nloggers support this, I would be willing to support multiple logging modules.\n\n# Usage with `express`\n\n```js\nconst express = require('express')\nconst crummy = require('crummy/express')\nconst uuid = require('uuid')\nconst log = require('./lib/log')\n\nconst app = express()\n\napp.use(crummy({\n  path: 'log', // will attach to `req.log`\n  logger: log, // The bunyan logger to use. `.child()` will be called on it\n  meta: (req, res) => { // attaches returned object to metadata of each log in the request\n    return {\n      reqId: return uuid.v4()\n    }\n  }\n}))\napp.use((req, res, next) => {\n  req.log.info(req.method, req.path) // Will log the path requested, as well as any default meta data\n})\n\n// ... routes, other middleware, app.listen(), etc.\n```\n\n# Usage with `koa`\n\n```js\nconst koa = require('koa')\nconst crummy = require('crummy/koa')\nconst uuid = require('uuid')\nconst log = require('./lib/log')\n\nconst app = koa()\n\napp.use(crummy({\n  path: 'log', // will attach to `req.log`\n  logger: log, // The bunyan logger to use. `.child()` will be called on it\n  meta: (req, res) => { // attaches returned object to metadata of each log in the request\n    return {\n      reqId: return uuid.v4()\n    }\n  }\n}))\napp.use(function *(next) {\n  this.log.info(req.method, req.path);\n  let start = Date.now()\n  yield next\n  let responseTime = Date.now() - start\n  this.log.info(`${responseTime}ms`)\n})\n\n// ... other koa setup stuff\n```\n\n# Usage on your own\n\nThis really isn't a lot of code. It just has some sensible defaults. The core\npiece of this module might make more sense if there were different adapters to\nutilize. Below is an example of what this module is doing without actually using\nthis module:\n\n```js\nconst express = require('express')\nconst uuid = require('uuid')\nconst log = require('./lib/log')\n\nconst app = express()\n\napp.use((req, res, next) => {\n  req.log = log.child({ reqId: uuid.v4() })\n  next()\n})\n\napp.use((req, res, next) => {\n  req.log.info(req.method, res.path)\n})\n\n// ... routes, other middleware, app.listen(), etc.\n```\n\nAfter reading that, you will probably just opt to just roll your own, which is\ntotally fine. I wrote this because I don't like to have any miscellaneous\nmodules lying around. I like most of my middleware stack to be declarative. For\nwhat it's worth, there are tests around the functionality described above, which\nmight be a bit overkill.\n\n[logger-terms]: http://pacificforestfoundation.org/glossary.html\n[bunyan]: https://github.com/trentm/node-bunyan\n","created":"2016-03-18T20:50:04.620Z","modified":"2016-04-17T20:55:36.642Z","lastPublisher":{"name":"ksmithut","email":"ksmith.ut@gmail.com"},"owners":[{"name":"ksmithut","email":"ksmith.ut@gmail.com"}],"other":{"_attachments":{},"_from":".","_id":"crummy","_nodeVersion":"5.10.1","_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/crummy-1.0.2.tgz_1460926536254_0.002356713404878974"},"_npmUser":{"name":"ksmithut","email":"ksmith.ut@gmail.com"},"_npmVersion":"3.8.3","_rev":"1-1d480463cf6b8fde5d68ee329dff4b2e","_shasum":"7f41f7db93d176b08453a28121e20129474acd7c","author":{"name":"ksmithut"},"bugs":{"url":"https://github.com/ksmithut/crummy/issues"},"directories":{},"dist-tags":{"latest":"1.0.2"},"dist":{"shasum":"7f41f7db93d176b08453a28121e20129474acd7c","tarball":"http://registry.npmjs.org/crummy/-/crummy-1.0.2.tgz"},"maintainers":[{"name":"ksmithut","email":"ksmith.ut@gmail.com"}],"readmeFilename":"README.md","time":{"modified":"2016-04-17T20:55:36.642Z","created":"2016-03-18T20:50:04.620Z","1.0.0":"2016-03-18T20:50:04.620Z","1.0.1":"2016-03-18T21:03:04.857Z","1.0.2":"2016-04-17T20:55:36.642Z"}}}